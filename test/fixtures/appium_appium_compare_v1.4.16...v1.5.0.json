{
  "url": "https://api.github.com/repos/appium/appium/compare/v1.4.16...v1.5.0",
  "html_url": "https://github.com/appium/appium/compare/v1.4.16...v1.5.0",
  "permalink_url": "https://github.com/appium/appium/compare/appium:ae6877e...appium:93004e1",
  "diff_url": "https://github.com/appium/appium/compare/v1.4.16...v1.5.0.diff",
  "patch_url": "https://github.com/appium/appium/compare/v1.4.16...v1.5.0.patch",
  "base_commit": {
    "sha": "ae6877eff263066b26328d457bd285c0cc62430d",
    "commit": {
      "author": {
        "name": "moizjv",
        "email": "moizjv@gmail.com",
        "date": "2015-11-20T05:05:13Z"
      },
      "committer": {
        "name": "moizjv",
        "email": "moizjv@gmail.com",
        "date": "2015-11-20T18:55:50Z"
      },
      "message": "Bumping to 1.4.16 and updating changelog",
      "tree": {
        "sha": "85516c966af6caa89216777dbf8dba18259853be",
        "url": "https://api.github.com/repos/appium/appium/git/trees/85516c966af6caa89216777dbf8dba18259853be"
      },
      "url": "https://api.github.com/repos/appium/appium/git/commits/ae6877eff263066b26328d457bd285c0cc62430d",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/appium/appium/commits/ae6877eff263066b26328d457bd285c0cc62430d",
    "html_url": "https://github.com/appium/appium/commit/ae6877eff263066b26328d457bd285c0cc62430d",
    "comments_url": "https://api.github.com/repos/appium/appium/commits/ae6877eff263066b26328d457bd285c0cc62430d/comments",
    "author": {
      "login": "moizjv",
      "id": 1308607,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1308607?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/moizjv",
      "html_url": "https://github.com/moizjv",
      "followers_url": "https://api.github.com/users/moizjv/followers",
      "following_url": "https://api.github.com/users/moizjv/following{/other_user}",
      "gists_url": "https://api.github.com/users/moizjv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/moizjv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/moizjv/subscriptions",
      "organizations_url": "https://api.github.com/users/moizjv/orgs",
      "repos_url": "https://api.github.com/users/moizjv/repos",
      "events_url": "https://api.github.com/users/moizjv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/moizjv/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "moizjv",
      "id": 1308607,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1308607?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/moizjv",
      "html_url": "https://github.com/moizjv",
      "followers_url": "https://api.github.com/users/moizjv/followers",
      "following_url": "https://api.github.com/users/moizjv/following{/other_user}",
      "gists_url": "https://api.github.com/users/moizjv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/moizjv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/moizjv/subscriptions",
      "organizations_url": "https://api.github.com/users/moizjv/orgs",
      "repos_url": "https://api.github.com/users/moizjv/repos",
      "events_url": "https://api.github.com/users/moizjv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/moizjv/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c6e3d77935fe8be9ffb2173710f49e1ea0729e5f",
        "url": "https://api.github.com/repos/appium/appium/commits/c6e3d77935fe8be9ffb2173710f49e1ea0729e5f",
        "html_url": "https://github.com/appium/appium/commit/c6e3d77935fe8be9ffb2173710f49e1ea0729e5f"
      }
    ]
  },
  "merge_base_commit": {
    "sha": "7ae8f99c7ea75a5af84960f63819580726892b75",
    "commit": {
      "author": {
        "name": "moizjv",
        "email": "moizjv@gmail.com",
        "date": "2015-04-24T18:51:35Z"
      },
      "committer": {
        "name": "moizjv",
        "email": "moizjv@gmail.com",
        "date": "2015-04-24T18:53:50Z"
      },
      "message": "bump to 1.4.0-beta",
      "tree": {
        "sha": "5889890f20f59a5d736dac0ba57d82fb916100cf",
        "url": "https://api.github.com/repos/appium/appium/git/trees/5889890f20f59a5d736dac0ba57d82fb916100cf"
      },
      "url": "https://api.github.com/repos/appium/appium/git/commits/7ae8f99c7ea75a5af84960f63819580726892b75",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/appium/appium/commits/7ae8f99c7ea75a5af84960f63819580726892b75",
    "html_url": "https://github.com/appium/appium/commit/7ae8f99c7ea75a5af84960f63819580726892b75",
    "comments_url": "https://api.github.com/repos/appium/appium/commits/7ae8f99c7ea75a5af84960f63819580726892b75/comments",
    "author": {
      "login": "moizjv",
      "id": 1308607,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1308607?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/moizjv",
      "html_url": "https://github.com/moizjv",
      "followers_url": "https://api.github.com/users/moizjv/followers",
      "following_url": "https://api.github.com/users/moizjv/following{/other_user}",
      "gists_url": "https://api.github.com/users/moizjv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/moizjv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/moizjv/subscriptions",
      "organizations_url": "https://api.github.com/users/moizjv/orgs",
      "repos_url": "https://api.github.com/users/moizjv/repos",
      "events_url": "https://api.github.com/users/moizjv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/moizjv/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "moizjv",
      "id": 1308607,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1308607?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/moizjv",
      "html_url": "https://github.com/moizjv",
      "followers_url": "https://api.github.com/users/moizjv/followers",
      "following_url": "https://api.github.com/users/moizjv/following{/other_user}",
      "gists_url": "https://api.github.com/users/moizjv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/moizjv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/moizjv/subscriptions",
      "organizations_url": "https://api.github.com/users/moizjv/orgs",
      "repos_url": "https://api.github.com/users/moizjv/repos",
      "events_url": "https://api.github.com/users/moizjv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/moizjv/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "46078a18c4041d065db5b39f392c9c561517343e",
        "url": "https://api.github.com/repos/appium/appium/commits/46078a18c4041d065db5b39f392c9c561517343e",
        "html_url": "https://github.com/appium/appium/commit/46078a18c4041d065db5b39f392c9c561517343e"
      }
    ]
  },
  "status": "diverged",
  "ahead_by": 346,
  "behind_by": 117,
  "total_commits": 346,
  "commits": [
    {
      "sha": "05028271f94460d1a0fb7db28e5a7ac25957d8e6",
      "commit": {
        "author": {
          "name": "sebv",
          "email": "seb.vincent@gmail.com",
          "date": "2015-05-14T08:24:58Z"
        },
        "committer": {
          "name": "sebv",
          "email": "seb.vincent@gmail.com",
          "date": "2015-05-14T08:24:58Z"
        },
        "message": "splitting keyboard tests",
        "tree": {
          "sha": "352de51db78081f724b53de2b3e122b3b871541b",
          "url": "https://api.github.com/repos/appium/appium/git/trees/352de51db78081f724b53de2b3e122b3b871541b"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/05028271f94460d1a0fb7db28e5a7ac25957d8e6",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/05028271f94460d1a0fb7db28e5a7ac25957d8e6",
      "html_url": "https://github.com/appium/appium/commit/05028271f94460d1a0fb7db28e5a7ac25957d8e6",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/05028271f94460d1a0fb7db28e5a7ac25957d8e6/comments",
      "author": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "130cfbd028d1b305ca28b2bf17bfd0577f6d7ff0",
          "url": "https://api.github.com/repos/appium/appium/commits/130cfbd028d1b305ca28b2bf17bfd0577f6d7ff0",
          "html_url": "https://github.com/appium/appium/commit/130cfbd028d1b305ca28b2bf17bfd0577f6d7ff0"
        }
      ]
    },
    {
      "sha": "9aff66289e7e23568d18e6149fa523905394a3e2",
      "commit": {
        "author": {
          "name": "sebv",
          "email": "seb.vincent@gmail.com",
          "date": "2015-05-14T08:27:26Z"
        },
        "committer": {
          "name": "sebv",
          "email": "seb.vincent@gmail.com",
          "date": "2015-05-14T08:27:26Z"
        },
        "message": "bumping appium-ci-gulper",
        "tree": {
          "sha": "1f395fe48a1df2550e16c830100c22a8e66e9604",
          "url": "https://api.github.com/repos/appium/appium/git/trees/1f395fe48a1df2550e16c830100c22a8e66e9604"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/9aff66289e7e23568d18e6149fa523905394a3e2",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/9aff66289e7e23568d18e6149fa523905394a3e2",
      "html_url": "https://github.com/appium/appium/commit/9aff66289e7e23568d18e6149fa523905394a3e2",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/9aff66289e7e23568d18e6149fa523905394a3e2/comments",
      "author": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "05028271f94460d1a0fb7db28e5a7ac25957d8e6",
          "url": "https://api.github.com/repos/appium/appium/commits/05028271f94460d1a0fb7db28e5a7ac25957d8e6",
          "html_url": "https://github.com/appium/appium/commit/05028271f94460d1a0fb7db28e5a7ac25957d8e6"
        }
      ]
    },
    {
      "sha": "29dfe1f6f8221645fdb969b682c4f7c870a201c3",
      "commit": {
        "author": {
          "name": "sebv",
          "email": "seb.vincent@gmail.com",
          "date": "2015-05-14T08:39:42Z"
        },
        "committer": {
          "name": "sebv",
          "email": "seb.vincent@gmail.com",
          "date": "2015-05-14T08:39:42Z"
        },
        "message": "text fix",
        "tree": {
          "sha": "f5793a8bc3da371927fee419a3a9f90f4883c77e",
          "url": "https://api.github.com/repos/appium/appium/git/trees/f5793a8bc3da371927fee419a3a9f90f4883c77e"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/29dfe1f6f8221645fdb969b682c4f7c870a201c3",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/29dfe1f6f8221645fdb969b682c4f7c870a201c3",
      "html_url": "https://github.com/appium/appium/commit/29dfe1f6f8221645fdb969b682c4f7c870a201c3",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/29dfe1f6f8221645fdb969b682c4f7c870a201c3/comments",
      "author": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "9aff66289e7e23568d18e6149fa523905394a3e2",
          "url": "https://api.github.com/repos/appium/appium/commits/9aff66289e7e23568d18e6149fa523905394a3e2",
          "html_url": "https://github.com/appium/appium/commit/9aff66289e7e23568d18e6149fa523905394a3e2"
        }
      ]
    },
    {
      "sha": "4e2da502dc6f8fc81b9aa156f99fc9d021587894",
      "commit": {
        "author": {
          "name": "sebv",
          "email": "seb.vincent@gmail.com",
          "date": "2015-05-14T08:48:24Z"
        },
        "committer": {
          "name": "sebv",
          "email": "seb.vincent@gmail.com",
          "date": "2015-05-14T08:48:24Z"
        },
        "message": "spreading keyboard tests",
        "tree": {
          "sha": "12a4960390498beb97fe56a7aec30b19c0849b7c",
          "url": "https://api.github.com/repos/appium/appium/git/trees/12a4960390498beb97fe56a7aec30b19c0849b7c"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/4e2da502dc6f8fc81b9aa156f99fc9d021587894",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/4e2da502dc6f8fc81b9aa156f99fc9d021587894",
      "html_url": "https://github.com/appium/appium/commit/4e2da502dc6f8fc81b9aa156f99fc9d021587894",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/4e2da502dc6f8fc81b9aa156f99fc9d021587894/comments",
      "author": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "29dfe1f6f8221645fdb969b682c4f7c870a201c3",
          "url": "https://api.github.com/repos/appium/appium/commits/29dfe1f6f8221645fdb969b682c4f7c870a201c3",
          "html_url": "https://github.com/appium/appium/commit/29dfe1f6f8221645fdb969b682c4f7c870a201c3"
        }
      ]
    },
    {
      "sha": "a9fc4524392a6dafd2b99014fe6c2e73065eb069",
      "commit": {
        "author": {
          "name": "sebv",
          "email": "seb.vincent@gmail.com",
          "date": "2015-05-14T11:57:51Z"
        },
        "committer": {
          "name": "sebv",
          "email": "seb.vincent@gmail.com",
          "date": "2015-05-14T11:57:51Z"
        },
        "message": "android test fix",
        "tree": {
          "sha": "dc2b3c56414a3f5a3c46461f4cadfd04eaae3a6b",
          "url": "https://api.github.com/repos/appium/appium/git/trees/dc2b3c56414a3f5a3c46461f4cadfd04eaae3a6b"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/a9fc4524392a6dafd2b99014fe6c2e73065eb069",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/a9fc4524392a6dafd2b99014fe6c2e73065eb069",
      "html_url": "https://github.com/appium/appium/commit/a9fc4524392a6dafd2b99014fe6c2e73065eb069",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/a9fc4524392a6dafd2b99014fe6c2e73065eb069/comments",
      "author": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "4e2da502dc6f8fc81b9aa156f99fc9d021587894",
          "url": "https://api.github.com/repos/appium/appium/commits/4e2da502dc6f8fc81b9aa156f99fc9d021587894",
          "html_url": "https://github.com/appium/appium/commit/4e2da502dc6f8fc81b9aa156f99fc9d021587894"
        }
      ]
    },
    {
      "sha": "9b0b4d12ff53b7bdf04ac7d22df472c6d632808f",
      "commit": {
        "author": {
          "name": "sebv",
          "email": "seb.vincent@gmail.com",
          "date": "2015-05-14T12:10:27Z"
        },
        "committer": {
          "name": "sebv",
          "email": "seb.vincent@gmail.com",
          "date": "2015-05-14T12:10:27Z"
        },
        "message": "atttempting to make android lock tests less flaky",
        "tree": {
          "sha": "3a9b19315a910f4dd3f7b855a35d574e37369e49",
          "url": "https://api.github.com/repos/appium/appium/git/trees/3a9b19315a910f4dd3f7b855a35d574e37369e49"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/9b0b4d12ff53b7bdf04ac7d22df472c6d632808f",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/9b0b4d12ff53b7bdf04ac7d22df472c6d632808f",
      "html_url": "https://github.com/appium/appium/commit/9b0b4d12ff53b7bdf04ac7d22df472c6d632808f",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/9b0b4d12ff53b7bdf04ac7d22df472c6d632808f/comments",
      "author": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "a9fc4524392a6dafd2b99014fe6c2e73065eb069",
          "url": "https://api.github.com/repos/appium/appium/commits/a9fc4524392a6dafd2b99014fe6c2e73065eb069",
          "html_url": "https://github.com/appium/appium/commit/a9fc4524392a6dafd2b99014fe6c2e73065eb069"
        }
      ]
    },
    {
      "sha": "2af5d506e232499523150dc2fcba30e041e64e0d",
      "commit": {
        "author": {
          "name": "sebv",
          "email": "seb.vincent@gmail.com",
          "date": "2015-05-14T13:21:17Z"
        },
        "committer": {
          "name": "sebv",
          "email": "seb.vincent@gmail.com",
          "date": "2015-05-14T13:21:17Z"
        },
        "message": "skipping flaky test",
        "tree": {
          "sha": "aa721c6af2848544f4f47b8f0bdb78b6580891e4",
          "url": "https://api.github.com/repos/appium/appium/git/trees/aa721c6af2848544f4f47b8f0bdb78b6580891e4"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/2af5d506e232499523150dc2fcba30e041e64e0d",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/2af5d506e232499523150dc2fcba30e041e64e0d",
      "html_url": "https://github.com/appium/appium/commit/2af5d506e232499523150dc2fcba30e041e64e0d",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/2af5d506e232499523150dc2fcba30e041e64e0d/comments",
      "author": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "9b0b4d12ff53b7bdf04ac7d22df472c6d632808f",
          "url": "https://api.github.com/repos/appium/appium/commits/9b0b4d12ff53b7bdf04ac7d22df472c6d632808f",
          "html_url": "https://github.com/appium/appium/commit/9b0b4d12ff53b7bdf04ac7d22df472c6d632808f"
        }
      ]
    },
    {
      "sha": "011215111a4aa33029a1a33ea0417688a9359a72",
      "commit": {
        "author": {
          "name": "sebv",
          "email": "seb.vincent@gmail.com",
          "date": "2015-05-14T14:06:41Z"
        },
        "committer": {
          "name": "sebv",
          "email": "seb.vincent@gmail.com",
          "date": "2015-05-14T14:06:41Z"
        },
        "message": "bumping appium-ci-gulper",
        "tree": {
          "sha": "9c05dfd6662619013d1ccfbeb30e604c62bd2e6c",
          "url": "https://api.github.com/repos/appium/appium/git/trees/9c05dfd6662619013d1ccfbeb30e604c62bd2e6c"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/011215111a4aa33029a1a33ea0417688a9359a72",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/011215111a4aa33029a1a33ea0417688a9359a72",
      "html_url": "https://github.com/appium/appium/commit/011215111a4aa33029a1a33ea0417688a9359a72",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/011215111a4aa33029a1a33ea0417688a9359a72/comments",
      "author": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "2af5d506e232499523150dc2fcba30e041e64e0d",
          "url": "https://api.github.com/repos/appium/appium/commits/2af5d506e232499523150dc2fcba30e041e64e0d",
          "html_url": "https://github.com/appium/appium/commit/2af5d506e232499523150dc2fcba30e041e64e0d"
        }
      ]
    },
    {
      "sha": "386014a29fa22ca1607ac5553c29fef96b00a8b0",
      "commit": {
        "author": {
          "name": "sebv",
          "email": "seb.vincent@gmail.com",
          "date": "2015-05-15T09:20:03Z"
        },
        "committer": {
          "name": "sebv",
          "email": "seb.vincent@gmail.com",
          "date": "2015-05-15T09:20:03Z"
        },
        "message": "skips failing input test",
        "tree": {
          "sha": "a94c67579337c1ae037c74c42c66f24d4ffc75ae",
          "url": "https://api.github.com/repos/appium/appium/git/trees/a94c67579337c1ae037c74c42c66f24d4ffc75ae"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/386014a29fa22ca1607ac5553c29fef96b00a8b0",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/386014a29fa22ca1607ac5553c29fef96b00a8b0",
      "html_url": "https://github.com/appium/appium/commit/386014a29fa22ca1607ac5553c29fef96b00a8b0",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/386014a29fa22ca1607ac5553c29fef96b00a8b0/comments",
      "author": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "011215111a4aa33029a1a33ea0417688a9359a72",
          "url": "https://api.github.com/repos/appium/appium/commits/011215111a4aa33029a1a33ea0417688a9359a72",
          "html_url": "https://github.com/appium/appium/commit/011215111a4aa33029a1a33ea0417688a9359a72"
        }
      ]
    },
    {
      "sha": "9ae4128f7227ba3c6f0d39e9e498b7999cc0de5d",
      "commit": {
        "author": {
          "name": "sebv",
          "email": "seb.vincent@gmail.com",
          "date": "2015-05-15T09:58:48Z"
        },
        "committer": {
          "name": "sebv",
          "email": "seb.vincent@gmail.com",
          "date": "2015-05-15T09:58:48Z"
        },
        "message": "bumping appium-ci-gulper",
        "tree": {
          "sha": "fea60ae661853dc9745f250ccd89c2fcd341e6d0",
          "url": "https://api.github.com/repos/appium/appium/git/trees/fea60ae661853dc9745f250ccd89c2fcd341e6d0"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/9ae4128f7227ba3c6f0d39e9e498b7999cc0de5d",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/9ae4128f7227ba3c6f0d39e9e498b7999cc0de5d",
      "html_url": "https://github.com/appium/appium/commit/9ae4128f7227ba3c6f0d39e9e498b7999cc0de5d",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/9ae4128f7227ba3c6f0d39e9e498b7999cc0de5d/comments",
      "author": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "386014a29fa22ca1607ac5553c29fef96b00a8b0",
          "url": "https://api.github.com/repos/appium/appium/commits/386014a29fa22ca1607ac5553c29fef96b00a8b0",
          "html_url": "https://github.com/appium/appium/commit/386014a29fa22ca1607ac5553c29fef96b00a8b0"
        }
      ]
    },
    {
      "sha": "d015b5a771fe522ab9a94406d5eb00b9be742df3",
      "commit": {
        "author": {
          "name": "sebv",
          "email": "seb.vincent@gmail.com",
          "date": "2015-05-15T11:53:03Z"
        },
        "committer": {
          "name": "sebv",
          "email": "seb.vincent@gmail.com",
          "date": "2015-05-15T11:53:03Z"
        },
        "message": "skipping failing iOS tests, investigate later",
        "tree": {
          "sha": "bbad40ca6b21d09911e8caa00de2e5f715bd3c9f",
          "url": "https://api.github.com/repos/appium/appium/git/trees/bbad40ca6b21d09911e8caa00de2e5f715bd3c9f"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/d015b5a771fe522ab9a94406d5eb00b9be742df3",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/d015b5a771fe522ab9a94406d5eb00b9be742df3",
      "html_url": "https://github.com/appium/appium/commit/d015b5a771fe522ab9a94406d5eb00b9be742df3",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/d015b5a771fe522ab9a94406d5eb00b9be742df3/comments",
      "author": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "9ae4128f7227ba3c6f0d39e9e498b7999cc0de5d",
          "url": "https://api.github.com/repos/appium/appium/commits/9ae4128f7227ba3c6f0d39e9e498b7999cc0de5d",
          "html_url": "https://github.com/appium/appium/commit/9ae4128f7227ba3c6f0d39e9e498b7999cc0de5d"
        }
      ]
    },
    {
      "sha": "126dcdadd9e1c15df86a87a48ee6cbcf8e6d5e11",
      "commit": {
        "author": {
          "name": "sebv",
          "email": "seb.vincent@gmail.com",
          "date": "2015-05-15T12:13:12Z"
        },
        "committer": {
          "name": "sebv",
          "email": "seb.vincent@gmail.com",
          "date": "2015-05-15T12:13:12Z"
        },
        "message": "skipping flaky gps test",
        "tree": {
          "sha": "03a5c835af99c87435adba758551ede54925439d",
          "url": "https://api.github.com/repos/appium/appium/git/trees/03a5c835af99c87435adba758551ede54925439d"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/126dcdadd9e1c15df86a87a48ee6cbcf8e6d5e11",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/126dcdadd9e1c15df86a87a48ee6cbcf8e6d5e11",
      "html_url": "https://github.com/appium/appium/commit/126dcdadd9e1c15df86a87a48ee6cbcf8e6d5e11",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/126dcdadd9e1c15df86a87a48ee6cbcf8e6d5e11/comments",
      "author": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "d015b5a771fe522ab9a94406d5eb00b9be742df3",
          "url": "https://api.github.com/repos/appium/appium/commits/d015b5a771fe522ab9a94406d5eb00b9be742df3",
          "html_url": "https://github.com/appium/appium/commit/d015b5a771fe522ab9a94406d5eb00b9be742df3"
        }
      ]
    },
    {
      "sha": "3688d2df4690bde323dd2e753f00c9a86246162b",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-05-15T21:15:48Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-05-15T21:15:48Z"
        },
        "message": "add packweb json file for use with npm dep ownership and other tools",
        "tree": {
          "sha": "87d86938ae25d63f61cdda297e5ce1a7c470bd8d",
          "url": "https://api.github.com/repos/appium/appium/git/trees/87d86938ae25d63f61cdda297e5ce1a7c470bd8d"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/3688d2df4690bde323dd2e753f00c9a86246162b",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/3688d2df4690bde323dd2e753f00c9a86246162b",
      "html_url": "https://github.com/appium/appium/commit/3688d2df4690bde323dd2e753f00c9a86246162b",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/3688d2df4690bde323dd2e753f00c9a86246162b/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "126dcdadd9e1c15df86a87a48ee6cbcf8e6d5e11",
          "url": "https://api.github.com/repos/appium/appium/commits/126dcdadd9e1c15df86a87a48ee6cbcf8e6d5e11",
          "html_url": "https://github.com/appium/appium/commit/126dcdadd9e1c15df86a87a48ee6cbcf8e6d5e11"
        }
      ]
    },
    {
      "sha": "4b011b19eb0752f55c195c2923cab6875e8e3c2c",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-05-15T22:22:49Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-05-15T22:22:49Z"
        },
        "message": "Merge pull request #5118 from yaphatak/master\n\nAdding support for chrome browser rotation",
        "tree": {
          "sha": "a618f56bc214e5b3c05e125b47c2b4d71de272a5",
          "url": "https://api.github.com/repos/appium/appium/git/trees/a618f56bc214e5b3c05e125b47c2b4d71de272a5"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/4b011b19eb0752f55c195c2923cab6875e8e3c2c",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/4b011b19eb0752f55c195c2923cab6875e8e3c2c",
      "html_url": "https://github.com/appium/appium/commit/4b011b19eb0752f55c195c2923cab6875e8e3c2c",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/4b011b19eb0752f55c195c2923cab6875e8e3c2c/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "3688d2df4690bde323dd2e753f00c9a86246162b",
          "url": "https://api.github.com/repos/appium/appium/commits/3688d2df4690bde323dd2e753f00c9a86246162b",
          "html_url": "https://github.com/appium/appium/commit/3688d2df4690bde323dd2e753f00c9a86246162b"
        },
        {
          "sha": "aa57ccccd09bd7bf474b90a1ba2ea594e00a1a6d",
          "url": "https://api.github.com/repos/appium/appium/commits/aa57ccccd09bd7bf474b90a1ba2ea594e00a1a6d",
          "html_url": "https://github.com/appium/appium/commit/aa57ccccd09bd7bf474b90a1ba2ea594e00a1a6d"
        }
      ]
    },
    {
      "sha": "dd8f597774f0fab3950addc0684ca3a95538e7c6",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-05-19T15:45:55Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-05-19T15:45:55Z"
        },
        "message": "fix name for jsonwp proxy in packweb",
        "tree": {
          "sha": "03ae186c2b5f10d405a5e52f83dffd11f4a6a07d",
          "url": "https://api.github.com/repos/appium/appium/git/trees/03ae186c2b5f10d405a5e52f83dffd11f4a6a07d"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/dd8f597774f0fab3950addc0684ca3a95538e7c6",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/dd8f597774f0fab3950addc0684ca3a95538e7c6",
      "html_url": "https://github.com/appium/appium/commit/dd8f597774f0fab3950addc0684ca3a95538e7c6",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/dd8f597774f0fab3950addc0684ca3a95538e7c6/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "4b011b19eb0752f55c195c2923cab6875e8e3c2c",
          "url": "https://api.github.com/repos/appium/appium/commits/4b011b19eb0752f55c195c2923cab6875e8e3c2c",
          "html_url": "https://github.com/appium/appium/commit/4b011b19eb0752f55c195c2923cab6875e8e3c2c"
        }
      ]
    },
    {
      "sha": "dc30dae9e8fe8c85eeea707dbdbd60350fdff55b",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-05-19T17:08:06Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-05-19T17:08:06Z"
        },
        "message": "update packweb and start working on style guide 2.0",
        "tree": {
          "sha": "6986cc4a6883f5bb2f57a63221af918b45e656c7",
          "url": "https://api.github.com/repos/appium/appium/git/trees/6986cc4a6883f5bb2f57a63221af918b45e656c7"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/dc30dae9e8fe8c85eeea707dbdbd60350fdff55b",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/dc30dae9e8fe8c85eeea707dbdbd60350fdff55b",
      "html_url": "https://github.com/appium/appium/commit/dc30dae9e8fe8c85eeea707dbdbd60350fdff55b",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/dc30dae9e8fe8c85eeea707dbdbd60350fdff55b/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "dd8f597774f0fab3950addc0684ca3a95538e7c6",
          "url": "https://api.github.com/repos/appium/appium/commits/dd8f597774f0fab3950addc0684ca3a95538e7c6",
          "html_url": "https://github.com/appium/appium/commit/dd8f597774f0fab3950addc0684ca3a95538e7c6"
        }
      ]
    },
    {
      "sha": "fbbb1261cb07854aff71e7e8fafd56abc4a06ada",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-05-22T03:36:49Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-05-22T03:36:49Z"
        },
        "message": "add appium-base-driver to packweb",
        "tree": {
          "sha": "014aef92ebf9ff97abf7ae2e0ada9a8eecc92b18",
          "url": "https://api.github.com/repos/appium/appium/git/trees/014aef92ebf9ff97abf7ae2e0ada9a8eecc92b18"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/fbbb1261cb07854aff71e7e8fafd56abc4a06ada",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/fbbb1261cb07854aff71e7e8fafd56abc4a06ada",
      "html_url": "https://github.com/appium/appium/commit/fbbb1261cb07854aff71e7e8fafd56abc4a06ada",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/fbbb1261cb07854aff71e7e8fafd56abc4a06ada/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "dc30dae9e8fe8c85eeea707dbdbd60350fdff55b",
          "url": "https://api.github.com/repos/appium/appium/commits/dc30dae9e8fe8c85eeea707dbdbd60350fdff55b",
          "html_url": "https://github.com/appium/appium/commit/dc30dae9e8fe8c85eeea707dbdbd60350fdff55b"
        }
      ]
    },
    {
      "sha": "3da51d05cf6aa8a29e11ed94b0495d1d510dabf2",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-05-22T03:50:36Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-05-22T03:50:36Z"
        },
        "message": "move all old code out of git",
        "tree": {
          "sha": "051000b2a08f74fe95eff833d3ae3a18bb5185b9",
          "url": "https://api.github.com/repos/appium/appium/git/trees/051000b2a08f74fe95eff833d3ae3a18bb5185b9"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/3da51d05cf6aa8a29e11ed94b0495d1d510dabf2",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/3da51d05cf6aa8a29e11ed94b0495d1d510dabf2",
      "html_url": "https://github.com/appium/appium/commit/3da51d05cf6aa8a29e11ed94b0495d1d510dabf2",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/3da51d05cf6aa8a29e11ed94b0495d1d510dabf2/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "fbbb1261cb07854aff71e7e8fafd56abc4a06ada",
          "url": "https://api.github.com/repos/appium/appium/commits/fbbb1261cb07854aff71e7e8fafd56abc4a06ada",
          "html_url": "https://github.com/appium/appium/commit/fbbb1261cb07854aff71e7e8fafd56abc4a06ada"
        }
      ]
    },
    {
      "sha": "8bb9972878da218d232673ae60b2bb27d228409f",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-05-22T04:31:56Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-05-22T04:31:56Z"
        },
        "message": "set up babel/gulp code and update deps",
        "tree": {
          "sha": "29c5786a7bac029880a3e8dc8ea83fa4998c4ac9",
          "url": "https://api.github.com/repos/appium/appium/git/trees/29c5786a7bac029880a3e8dc8ea83fa4998c4ac9"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/8bb9972878da218d232673ae60b2bb27d228409f",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/8bb9972878da218d232673ae60b2bb27d228409f",
      "html_url": "https://github.com/appium/appium/commit/8bb9972878da218d232673ae60b2bb27d228409f",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/8bb9972878da218d232673ae60b2bb27d228409f/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "3da51d05cf6aa8a29e11ed94b0495d1d510dabf2",
          "url": "https://api.github.com/repos/appium/appium/commits/3da51d05cf6aa8a29e11ed94b0495d1d510dabf2",
          "html_url": "https://github.com/appium/appium/commit/3da51d05cf6aa8a29e11ed94b0495d1d510dabf2"
        }
      ]
    },
    {
      "sha": "b0bf4bbd5130fe09b279f6e8bb466bae2016e0eb",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-05-22T04:33:06Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-05-22T04:33:06Z"
        },
        "message": "get rid of old tests as well",
        "tree": {
          "sha": "e6b330dbb7f07f0549d32b46c857818ea8a91cdf",
          "url": "https://api.github.com/repos/appium/appium/git/trees/e6b330dbb7f07f0549d32b46c857818ea8a91cdf"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/b0bf4bbd5130fe09b279f6e8bb466bae2016e0eb",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/b0bf4bbd5130fe09b279f6e8bb466bae2016e0eb",
      "html_url": "https://github.com/appium/appium/commit/b0bf4bbd5130fe09b279f6e8bb466bae2016e0eb",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/b0bf4bbd5130fe09b279f6e8bb466bae2016e0eb/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "8bb9972878da218d232673ae60b2bb27d228409f",
          "url": "https://api.github.com/repos/appium/appium/commits/8bb9972878da218d232673ae60b2bb27d228409f",
          "html_url": "https://github.com/appium/appium/commit/8bb9972878da218d232673ae60b2bb27d228409f"
        }
      ]
    },
    {
      "sha": "0ee6fd11ab7b341eaebf784afa7d79b117499724",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-05-22T04:39:36Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-05-22T04:39:36Z"
        },
        "message": "delete all submodules",
        "tree": {
          "sha": "461925b30b87783a35900183813366e3d0afc7e2",
          "url": "https://api.github.com/repos/appium/appium/git/trees/461925b30b87783a35900183813366e3d0afc7e2"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/0ee6fd11ab7b341eaebf784afa7d79b117499724",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/0ee6fd11ab7b341eaebf784afa7d79b117499724",
      "html_url": "https://github.com/appium/appium/commit/0ee6fd11ab7b341eaebf784afa7d79b117499724",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/0ee6fd11ab7b341eaebf784afa7d79b117499724/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "b0bf4bbd5130fe09b279f6e8bb466bae2016e0eb",
          "url": "https://api.github.com/repos/appium/appium/commits/b0bf4bbd5130fe09b279f6e8bb466bae2016e0eb",
          "html_url": "https://github.com/appium/appium/commit/b0bf4bbd5130fe09b279f6e8bb466bae2016e0eb"
        }
      ]
    },
    {
      "sha": "f925f761f932dcc0760ca5ca991629ba1cbe52df",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-05-22T06:43:31Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-05-22T06:43:31Z"
        },
        "message": "port parser, server startup, config, and express",
        "tree": {
          "sha": "e13e9a0aa9930c14c39dc89f6267bd1e09cf466b",
          "url": "https://api.github.com/repos/appium/appium/git/trees/e13e9a0aa9930c14c39dc89f6267bd1e09cf466b"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/f925f761f932dcc0760ca5ca991629ba1cbe52df",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/f925f761f932dcc0760ca5ca991629ba1cbe52df",
      "html_url": "https://github.com/appium/appium/commit/f925f761f932dcc0760ca5ca991629ba1cbe52df",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/f925f761f932dcc0760ca5ca991629ba1cbe52df/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "0ee6fd11ab7b341eaebf784afa7d79b117499724",
          "url": "https://api.github.com/repos/appium/appium/commits/0ee6fd11ab7b341eaebf784afa7d79b117499724",
          "html_url": "https://github.com/appium/appium/commit/0ee6fd11ab7b341eaebf784afa7d79b117499724"
        }
      ]
    },
    {
      "sha": "efa6e02fe7981852081a660f220235223be3b0a2",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-05-22T16:18:17Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-05-22T16:18:17Z"
        },
        "message": "move assets to old as well",
        "tree": {
          "sha": "acf557b82c9911ccb79bcb94abb40790fa309398",
          "url": "https://api.github.com/repos/appium/appium/git/trees/acf557b82c9911ccb79bcb94abb40790fa309398"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/efa6e02fe7981852081a660f220235223be3b0a2",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/efa6e02fe7981852081a660f220235223be3b0a2",
      "html_url": "https://github.com/appium/appium/commit/efa6e02fe7981852081a660f220235223be3b0a2",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/efa6e02fe7981852081a660f220235223be3b0a2/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "f925f761f932dcc0760ca5ca991629ba1cbe52df",
          "url": "https://api.github.com/repos/appium/appium/commits/f925f761f932dcc0760ca5ca991629ba1cbe52df",
          "html_url": "https://github.com/appium/appium/commit/f925f761f932dcc0760ca5ca991629ba1cbe52df"
        }
      ]
    },
    {
      "sha": "9c836ad0815986cda3d4497135cb20a0ebc7b5ce",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-05-22T16:49:05Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-05-22T16:49:05Z"
        },
        "message": "stub out more of appium session handling logic",
        "tree": {
          "sha": "9483f0577fd74ddd11bbd2005dea526dda3c756d",
          "url": "https://api.github.com/repos/appium/appium/git/trees/9483f0577fd74ddd11bbd2005dea526dda3c756d"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/9c836ad0815986cda3d4497135cb20a0ebc7b5ce",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/9c836ad0815986cda3d4497135cb20a0ebc7b5ce",
      "html_url": "https://github.com/appium/appium/commit/9c836ad0815986cda3d4497135cb20a0ebc7b5ce",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/9c836ad0815986cda3d4497135cb20a0ebc7b5ce/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "efa6e02fe7981852081a660f220235223be3b0a2",
          "url": "https://api.github.com/repos/appium/appium/commits/efa6e02fe7981852081a660f220235223be3b0a2",
          "html_url": "https://github.com/appium/appium/commit/efa6e02fe7981852081a660f220235223be3b0a2"
        }
      ]
    },
    {
      "sha": "f4cd02446b4293f00203499191ad5f9db87b16c0",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-05-23T15:11:42Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-05-26T16:30:31Z"
        },
        "message": "Add tests for config",
        "tree": {
          "sha": "4f17664c2fa63f9938ca5d59621dd9cbfd593f85",
          "url": "https://api.github.com/repos/appium/appium/git/trees/4f17664c2fa63f9938ca5d59621dd9cbfd593f85"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/f4cd02446b4293f00203499191ad5f9db87b16c0",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/f4cd02446b4293f00203499191ad5f9db87b16c0",
      "html_url": "https://github.com/appium/appium/commit/f4cd02446b4293f00203499191ad5f9db87b16c0",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/f4cd02446b4293f00203499191ad5f9db87b16c0/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "9c836ad0815986cda3d4497135cb20a0ebc7b5ce",
          "url": "https://api.github.com/repos/appium/appium/commits/9c836ad0815986cda3d4497135cb20a0ebc7b5ce",
          "html_url": "https://github.com/appium/appium/commit/9c836ad0815986cda3d4497135cb20a0ebc7b5ce"
        }
      ]
    },
    {
      "sha": "1061c43e616ca13d212e434a8cd9a3b55bfffe8c",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-05-26T17:13:39Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-05-26T17:13:39Z"
        },
        "message": "Merge pull request #5163 from imurchie/isaac-config-tests\n\nAdd tests for config",
        "tree": {
          "sha": "4f17664c2fa63f9938ca5d59621dd9cbfd593f85",
          "url": "https://api.github.com/repos/appium/appium/git/trees/4f17664c2fa63f9938ca5d59621dd9cbfd593f85"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/1061c43e616ca13d212e434a8cd9a3b55bfffe8c",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/1061c43e616ca13d212e434a8cd9a3b55bfffe8c",
      "html_url": "https://github.com/appium/appium/commit/1061c43e616ca13d212e434a8cd9a3b55bfffe8c",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/1061c43e616ca13d212e434a8cd9a3b55bfffe8c/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "9c836ad0815986cda3d4497135cb20a0ebc7b5ce",
          "url": "https://api.github.com/repos/appium/appium/commits/9c836ad0815986cda3d4497135cb20a0ebc7b5ce",
          "html_url": "https://github.com/appium/appium/commit/9c836ad0815986cda3d4497135cb20a0ebc7b5ce"
        },
        {
          "sha": "f4cd02446b4293f00203499191ad5f9db87b16c0",
          "url": "https://api.github.com/repos/appium/appium/commits/f4cd02446b4293f00203499191ad5f9db87b16c0",
          "html_url": "https://github.com/appium/appium/commit/f4cd02446b4293f00203499191ad5f9db87b16c0"
        }
      ]
    },
    {
      "sha": "1c64bf06c8d1d9a8b9f81ad0e4cad6d264d1ed6d",
      "commit": {
        "author": {
          "name": "sebv",
          "email": "seb.vincent@gmail.com",
          "date": "2015-05-27T04:09:22Z"
        },
        "committer": {
          "name": "sebv",
          "email": "seb.vincent@gmail.com",
          "date": "2015-05-27T04:09:22Z"
        },
        "message": "logger + logsink",
        "tree": {
          "sha": "24c2b3e5b42979d1fbb6221b3b4a754dba929c59",
          "url": "https://api.github.com/repos/appium/appium/git/trees/24c2b3e5b42979d1fbb6221b3b4a754dba929c59"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/1c64bf06c8d1d9a8b9f81ad0e4cad6d264d1ed6d",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/1c64bf06c8d1d9a8b9f81ad0e4cad6d264d1ed6d",
      "html_url": "https://github.com/appium/appium/commit/1c64bf06c8d1d9a8b9f81ad0e4cad6d264d1ed6d",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/1c64bf06c8d1d9a8b9f81ad0e4cad6d264d1ed6d/comments",
      "author": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "1061c43e616ca13d212e434a8cd9a3b55bfffe8c",
          "url": "https://api.github.com/repos/appium/appium/commits/1061c43e616ca13d212e434a8cd9a3b55bfffe8c",
          "html_url": "https://github.com/appium/appium/commit/1061c43e616ca13d212e434a8cd9a3b55bfffe8c"
        }
      ]
    },
    {
      "sha": "981075ba34a46b8579378bd4ead7e9f4596612f3",
      "commit": {
        "author": {
          "name": "sebv",
          "email": "seb.vincent@gmail.com",
          "date": "2015-05-28T01:04:25Z"
        },
        "committer": {
          "name": "sebv",
          "email": "seb.vincent@gmail.com",
          "date": "2015-05-28T01:04:25Z"
        },
        "message": "fixes style issues",
        "tree": {
          "sha": "ac0a9b0967f0e84867bc05b10d134cb2975785c7",
          "url": "https://api.github.com/repos/appium/appium/git/trees/ac0a9b0967f0e84867bc05b10d134cb2975785c7"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/981075ba34a46b8579378bd4ead7e9f4596612f3",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/981075ba34a46b8579378bd4ead7e9f4596612f3",
      "html_url": "https://github.com/appium/appium/commit/981075ba34a46b8579378bd4ead7e9f4596612f3",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/981075ba34a46b8579378bd4ead7e9f4596612f3/comments",
      "author": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "1c64bf06c8d1d9a8b9f81ad0e4cad6d264d1ed6d",
          "url": "https://api.github.com/repos/appium/appium/commits/1c64bf06c8d1d9a8b9f81ad0e4cad6d264d1ed6d",
          "html_url": "https://github.com/appium/appium/commit/1c64bf06c8d1d9a8b9f81ad0e4cad6d264d1ed6d"
        }
      ]
    },
    {
      "sha": "440c4a883e40b332cb69eb3bb7672bc407092bff",
      "commit": {
        "author": {
          "name": "seb vincent",
          "email": "seb.vincent@gmail.com",
          "date": "2015-05-28T01:10:27Z"
        },
        "committer": {
          "name": "seb vincent",
          "email": "seb.vincent@gmail.com",
          "date": "2015-05-28T01:10:27Z"
        },
        "message": "Merge pull request #5168 from appium/sebv-1.5-logging\n\nlogger + logsink",
        "tree": {
          "sha": "ac0a9b0967f0e84867bc05b10d134cb2975785c7",
          "url": "https://api.github.com/repos/appium/appium/git/trees/ac0a9b0967f0e84867bc05b10d134cb2975785c7"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/440c4a883e40b332cb69eb3bb7672bc407092bff",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/440c4a883e40b332cb69eb3bb7672bc407092bff",
      "html_url": "https://github.com/appium/appium/commit/440c4a883e40b332cb69eb3bb7672bc407092bff",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/440c4a883e40b332cb69eb3bb7672bc407092bff/comments",
      "author": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "1061c43e616ca13d212e434a8cd9a3b55bfffe8c",
          "url": "https://api.github.com/repos/appium/appium/commits/1061c43e616ca13d212e434a8cd9a3b55bfffe8c",
          "html_url": "https://github.com/appium/appium/commit/1061c43e616ca13d212e434a8cd9a3b55bfffe8c"
        },
        {
          "sha": "981075ba34a46b8579378bd4ead7e9f4596612f3",
          "url": "https://api.github.com/repos/appium/appium/commits/981075ba34a46b8579378bd4ead7e9f4596612f3",
          "html_url": "https://github.com/appium/appium/commit/981075ba34a46b8579378bd4ead7e9f4596612f3"
        }
      ]
    },
    {
      "sha": "d03253432ed07d59ff5c5a7ead2e322552918744",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-05-28T15:39:10Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-05-28T15:43:04Z"
        },
        "message": "Allow for non-boolean deprecated server arguments",
        "tree": {
          "sha": "f60801efcd34e954b474e10828db64ce402363cf",
          "url": "https://api.github.com/repos/appium/appium/git/trees/f60801efcd34e954b474e10828db64ce402363cf"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/d03253432ed07d59ff5c5a7ead2e322552918744",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/d03253432ed07d59ff5c5a7ead2e322552918744",
      "html_url": "https://github.com/appium/appium/commit/d03253432ed07d59ff5c5a7ead2e322552918744",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/d03253432ed07d59ff5c5a7ead2e322552918744/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "440c4a883e40b332cb69eb3bb7672bc407092bff",
          "url": "https://api.github.com/repos/appium/appium/commits/440c4a883e40b332cb69eb3bb7672bc407092bff",
          "html_url": "https://github.com/appium/appium/commit/440c4a883e40b332cb69eb3bb7672bc407092bff"
        }
      ]
    },
    {
      "sha": "d13bfaf86405c2391d07077b8c835605c20b9552",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-05-28T16:17:56Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-05-28T16:17:56Z"
        },
        "message": "Merge pull request #5179 from imurchie/isaac-deprecation\n\nAllow for non-boolean deprecated server arguments",
        "tree": {
          "sha": "f60801efcd34e954b474e10828db64ce402363cf",
          "url": "https://api.github.com/repos/appium/appium/git/trees/f60801efcd34e954b474e10828db64ce402363cf"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/d13bfaf86405c2391d07077b8c835605c20b9552",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/d13bfaf86405c2391d07077b8c835605c20b9552",
      "html_url": "https://github.com/appium/appium/commit/d13bfaf86405c2391d07077b8c835605c20b9552",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/d13bfaf86405c2391d07077b8c835605c20b9552/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "440c4a883e40b332cb69eb3bb7672bc407092bff",
          "url": "https://api.github.com/repos/appium/appium/commits/440c4a883e40b332cb69eb3bb7672bc407092bff",
          "html_url": "https://github.com/appium/appium/commit/440c4a883e40b332cb69eb3bb7672bc407092bff"
        },
        {
          "sha": "d03253432ed07d59ff5c5a7ead2e322552918744",
          "url": "https://api.github.com/repos/appium/appium/commits/d03253432ed07d59ff5c5a7ead2e322552918744",
          "html_url": "https://github.com/appium/appium/commit/d03253432ed07d59ff5c5a7ead2e322552918744"
        }
      ]
    },
    {
      "sha": "37b006428cfdf527ce07ab36f486031d2d898585",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-05-28T21:25:13Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-05-28T21:25:13Z"
        },
        "message": "upgrade mjsonwp with error handling fix",
        "tree": {
          "sha": "0f1be7e78582b3a3ca38a2c2fc079588b1d11e84",
          "url": "https://api.github.com/repos/appium/appium/git/trees/0f1be7e78582b3a3ca38a2c2fc079588b1d11e84"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/37b006428cfdf527ce07ab36f486031d2d898585",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/37b006428cfdf527ce07ab36f486031d2d898585",
      "html_url": "https://github.com/appium/appium/commit/37b006428cfdf527ce07ab36f486031d2d898585",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/37b006428cfdf527ce07ab36f486031d2d898585/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "d13bfaf86405c2391d07077b8c835605c20b9552",
          "url": "https://api.github.com/repos/appium/appium/commits/d13bfaf86405c2391d07077b8c835605c20b9552",
          "html_url": "https://github.com/appium/appium/commit/d13bfaf86405c2391d07077b8c835605c20b9552"
        }
      ]
    },
    {
      "sha": "3a5df2778ecfb70732bb670a79b66a25d1542bdf",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-06-02T17:27:40Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-06-02T17:27:40Z"
        },
        "message": "Skip deprecated arg test that needs more deprecated args",
        "tree": {
          "sha": "7541dff714bdd528b326e1c12b03ff0c97f1d10f",
          "url": "https://api.github.com/repos/appium/appium/git/trees/7541dff714bdd528b326e1c12b03ff0c97f1d10f"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/3a5df2778ecfb70732bb670a79b66a25d1542bdf",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/3a5df2778ecfb70732bb670a79b66a25d1542bdf",
      "html_url": "https://github.com/appium/appium/commit/3a5df2778ecfb70732bb670a79b66a25d1542bdf",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/3a5df2778ecfb70732bb670a79b66a25d1542bdf/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "37b006428cfdf527ce07ab36f486031d2d898585",
          "url": "https://api.github.com/repos/appium/appium/commits/37b006428cfdf527ce07ab36f486031d2d898585",
          "html_url": "https://github.com/appium/appium/commit/37b006428cfdf527ce07ab36f486031d2d898585"
        }
      ]
    },
    {
      "sha": "84317aaf366a1489442bfed27c548799246155a5",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-05-30T01:25:13Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-06-02T17:41:18Z"
        },
        "message": "WIP integrating fakedriver for full e2e involving appium and a driver",
        "tree": {
          "sha": "f322458d96866814885f87306de0592a8a1aed2d",
          "url": "https://api.github.com/repos/appium/appium/git/trees/f322458d96866814885f87306de0592a8a1aed2d"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/84317aaf366a1489442bfed27c548799246155a5",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/84317aaf366a1489442bfed27c548799246155a5",
      "html_url": "https://github.com/appium/appium/commit/84317aaf366a1489442bfed27c548799246155a5",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/84317aaf366a1489442bfed27c548799246155a5/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "3a5df2778ecfb70732bb670a79b66a25d1542bdf",
          "url": "https://api.github.com/repos/appium/appium/commits/3a5df2778ecfb70732bb670a79b66a25d1542bdf",
          "html_url": "https://github.com/appium/appium/commit/3a5df2778ecfb70732bb670a79b66a25d1542bdf"
        }
      ]
    },
    {
      "sha": "39bca1ddd05786379b837d4a123e0071ae9aeef4",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-06-02T17:41:04Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-06-02T17:41:18Z"
        },
        "message": "fix up logging and make sure deleteSession isn't sent directly to inner execute",
        "tree": {
          "sha": "5d80586fa96f85d6aef711b6547cc09f0b851506",
          "url": "https://api.github.com/repos/appium/appium/git/trees/5d80586fa96f85d6aef711b6547cc09f0b851506"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/39bca1ddd05786379b837d4a123e0071ae9aeef4",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/39bca1ddd05786379b837d4a123e0071ae9aeef4",
      "html_url": "https://github.com/appium/appium/commit/39bca1ddd05786379b837d4a123e0071ae9aeef4",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/39bca1ddd05786379b837d4a123e0071ae9aeef4/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "84317aaf366a1489442bfed27c548799246155a5",
          "url": "https://api.github.com/repos/appium/appium/commits/84317aaf366a1489442bfed27c548799246155a5",
          "html_url": "https://github.com/appium/appium/commit/84317aaf366a1489442bfed27c548799246155a5"
        }
      ]
    },
    {
      "sha": "eeb4e67537012ea37f161461a5673bf09a0802e1",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-06-02T18:10:37Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-06-02T18:10:37Z"
        },
        "message": "update all deps, remove unused deps, stub out binfiles, and add valid license",
        "tree": {
          "sha": "ea3210c747b425f0e5809f6eca3e8ec5a5f07ae9",
          "url": "https://api.github.com/repos/appium/appium/git/trees/ea3210c747b425f0e5809f6eca3e8ec5a5f07ae9"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/eeb4e67537012ea37f161461a5673bf09a0802e1",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/eeb4e67537012ea37f161461a5673bf09a0802e1",
      "html_url": "https://github.com/appium/appium/commit/eeb4e67537012ea37f161461a5673bf09a0802e1",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/eeb4e67537012ea37f161461a5673bf09a0802e1/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "39bca1ddd05786379b837d4a123e0071ae9aeef4",
          "url": "https://api.github.com/repos/appium/appium/commits/39bca1ddd05786379b837d4a123e0071ae9aeef4",
          "html_url": "https://github.com/appium/appium/commit/39bca1ddd05786379b837d4a123e0071ae9aeef4"
        }
      ]
    },
    {
      "sha": "a8337c4fc750a6af1a0c73530291251310492da5",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-06-03T10:39:08Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-06-03T10:39:08Z"
        },
        "message": "bring over roadmap from master",
        "tree": {
          "sha": "e07dcddf14a069ec78119308b6ab4c3eca4c570d",
          "url": "https://api.github.com/repos/appium/appium/git/trees/e07dcddf14a069ec78119308b6ab4c3eca4c570d"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/a8337c4fc750a6af1a0c73530291251310492da5",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/a8337c4fc750a6af1a0c73530291251310492da5",
      "html_url": "https://github.com/appium/appium/commit/a8337c4fc750a6af1a0c73530291251310492da5",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/a8337c4fc750a6af1a0c73530291251310492da5/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "eeb4e67537012ea37f161461a5673bf09a0802e1",
          "url": "https://api.github.com/repos/appium/appium/commits/eeb4e67537012ea37f161461a5673bf09a0802e1",
          "html_url": "https://github.com/appium/appium/commit/eeb4e67537012ea37f161461a5673bf09a0802e1"
        }
      ]
    },
    {
      "sha": "0da9b02b72658292cbf496ce29a9763f09f15dc7",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-06-03T16:52:05Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-06-03T16:52:05Z"
        },
        "message": "Add a few dependencies back",
        "tree": {
          "sha": "e019eb85c0f79695dffc16058d1c5b774dd90b8d",
          "url": "https://api.github.com/repos/appium/appium/git/trees/e019eb85c0f79695dffc16058d1c5b774dd90b8d"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/0da9b02b72658292cbf496ce29a9763f09f15dc7",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/0da9b02b72658292cbf496ce29a9763f09f15dc7",
      "html_url": "https://github.com/appium/appium/commit/0da9b02b72658292cbf496ce29a9763f09f15dc7",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/0da9b02b72658292cbf496ce29a9763f09f15dc7/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "a8337c4fc750a6af1a0c73530291251310492da5",
          "url": "https://api.github.com/repos/appium/appium/commits/a8337c4fc750a6af1a0c73530291251310492da5",
          "html_url": "https://github.com/appium/appium/commit/a8337c4fc750a6af1a0c73530291251310492da5"
        }
      ]
    },
    {
      "sha": "8f5cec7b02ac4c0a6f2744e19149735e45916605",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-06-03T21:50:54Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-06-03T21:50:54Z"
        },
        "message": "Merge pull request #5205 from imurchie/isaac-deps\n\nAdd a few dependencies back",
        "tree": {
          "sha": "e019eb85c0f79695dffc16058d1c5b774dd90b8d",
          "url": "https://api.github.com/repos/appium/appium/git/trees/e019eb85c0f79695dffc16058d1c5b774dd90b8d"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/8f5cec7b02ac4c0a6f2744e19149735e45916605",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/8f5cec7b02ac4c0a6f2744e19149735e45916605",
      "html_url": "https://github.com/appium/appium/commit/8f5cec7b02ac4c0a6f2744e19149735e45916605",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/8f5cec7b02ac4c0a6f2744e19149735e45916605/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "a8337c4fc750a6af1a0c73530291251310492da5",
          "url": "https://api.github.com/repos/appium/appium/commits/a8337c4fc750a6af1a0c73530291251310492da5",
          "html_url": "https://github.com/appium/appium/commit/a8337c4fc750a6af1a0c73530291251310492da5"
        },
        {
          "sha": "0da9b02b72658292cbf496ce29a9763f09f15dc7",
          "url": "https://api.github.com/repos/appium/appium/commits/0da9b02b72658292cbf496ce29a9763f09f15dc7",
          "html_url": "https://github.com/appium/appium/commit/0da9b02b72658292cbf496ce29a9763f09f15dc7"
        }
      ]
    },
    {
      "sha": "0c788735898295561188bbbbcd1e350ae6eb8b21",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-06-04T07:00:36Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-06-04T07:00:36Z"
        },
        "message": "send set of current session data to subdrivers on new session so they can accept/reject based on available resources",
        "tree": {
          "sha": "b13b80c6ed17b2a7e1d4c95d173af6651c3aae9d",
          "url": "https://api.github.com/repos/appium/appium/git/trees/b13b80c6ed17b2a7e1d4c95d173af6651c3aae9d"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/0c788735898295561188bbbbcd1e350ae6eb8b21",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/0c788735898295561188bbbbcd1e350ae6eb8b21",
      "html_url": "https://github.com/appium/appium/commit/0c788735898295561188bbbbcd1e350ae6eb8b21",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/0c788735898295561188bbbbcd1e350ae6eb8b21/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "8f5cec7b02ac4c0a6f2744e19149735e45916605",
          "url": "https://api.github.com/repos/appium/appium/commits/8f5cec7b02ac4c0a6f2744e19149735e45916605",
          "html_url": "https://github.com/appium/appium/commit/8f5cec7b02ac4c0a6f2744e19149735e45916605"
        }
      ]
    },
    {
      "sha": "1c5c80f0842ba84a9248b4f126431b7a2beb8451",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-06-03T17:41:21Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-06-08T16:55:22Z"
        },
        "message": "Deprecate server args that are also desired caps",
        "tree": {
          "sha": "ebcc6418d59082c7fb34a649024c4c867d8fe540",
          "url": "https://api.github.com/repos/appium/appium/git/trees/ebcc6418d59082c7fb34a649024c4c867d8fe540"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/1c5c80f0842ba84a9248b4f126431b7a2beb8451",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/1c5c80f0842ba84a9248b4f126431b7a2beb8451",
      "html_url": "https://github.com/appium/appium/commit/1c5c80f0842ba84a9248b4f126431b7a2beb8451",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/1c5c80f0842ba84a9248b4f126431b7a2beb8451/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "0c788735898295561188bbbbcd1e350ae6eb8b21",
          "url": "https://api.github.com/repos/appium/appium/commits/0c788735898295561188bbbbcd1e350ae6eb8b21",
          "html_url": "https://github.com/appium/appium/commit/0c788735898295561188bbbbcd1e350ae6eb8b21"
        }
      ]
    },
    {
      "sha": "abe514415ef2b77ea03a68eeb98515666c0d9536",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-06-08T21:03:36Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-06-08T21:03:36Z"
        },
        "message": "Merge pull request #5217 from imurchie/isaac-deprecation\n\nDeprecate server args that are also desired caps",
        "tree": {
          "sha": "ebcc6418d59082c7fb34a649024c4c867d8fe540",
          "url": "https://api.github.com/repos/appium/appium/git/trees/ebcc6418d59082c7fb34a649024c4c867d8fe540"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/abe514415ef2b77ea03a68eeb98515666c0d9536",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/abe514415ef2b77ea03a68eeb98515666c0d9536",
      "html_url": "https://github.com/appium/appium/commit/abe514415ef2b77ea03a68eeb98515666c0d9536",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/abe514415ef2b77ea03a68eeb98515666c0d9536/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "0c788735898295561188bbbbcd1e350ae6eb8b21",
          "url": "https://api.github.com/repos/appium/appium/commits/0c788735898295561188bbbbcd1e350ae6eb8b21",
          "html_url": "https://github.com/appium/appium/commit/0c788735898295561188bbbbcd1e350ae6eb8b21"
        },
        {
          "sha": "1c5c80f0842ba84a9248b4f126431b7a2beb8451",
          "url": "https://api.github.com/repos/appium/appium/commits/1c5c80f0842ba84a9248b4f126431b7a2beb8451",
          "html_url": "https://github.com/appium/appium/commit/1c5c80f0842ba84a9248b4f126431b7a2beb8451"
        }
      ]
    },
    {
      "sha": "8c88d5c366cd4fedb747faa79b36f4018652298c",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-06-11T19:47:08Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-06-11T19:47:08Z"
        },
        "message": "Update command timeout server arg help text",
        "tree": {
          "sha": "5037a22f95b91321327b9c36a5f75e29c40143cf",
          "url": "https://api.github.com/repos/appium/appium/git/trees/5037a22f95b91321327b9c36a5f75e29c40143cf"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/8c88d5c366cd4fedb747faa79b36f4018652298c",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/8c88d5c366cd4fedb747faa79b36f4018652298c",
      "html_url": "https://github.com/appium/appium/commit/8c88d5c366cd4fedb747faa79b36f4018652298c",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/8c88d5c366cd4fedb747faa79b36f4018652298c/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "abe514415ef2b77ea03a68eeb98515666c0d9536",
          "url": "https://api.github.com/repos/appium/appium/commits/abe514415ef2b77ea03a68eeb98515666c0d9536",
          "html_url": "https://github.com/appium/appium/commit/abe514415ef2b77ea03a68eeb98515666c0d9536"
        }
      ]
    },
    {
      "sha": "1fd52f97d9d4a8c79f5aa5cc956472fc76b6fff6",
      "commit": {
        "author": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-06-11T19:48:24Z"
        },
        "committer": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-06-11T19:48:24Z"
        },
        "message": "Merge pull request #5248 from appium/isaac-parser-update\n\nUpdate command timeout server arg help text",
        "tree": {
          "sha": "5037a22f95b91321327b9c36a5f75e29c40143cf",
          "url": "https://api.github.com/repos/appium/appium/git/trees/5037a22f95b91321327b9c36a5f75e29c40143cf"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/1fd52f97d9d4a8c79f5aa5cc956472fc76b6fff6",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/1fd52f97d9d4a8c79f5aa5cc956472fc76b6fff6",
      "html_url": "https://github.com/appium/appium/commit/1fd52f97d9d4a8c79f5aa5cc956472fc76b6fff6",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/1fd52f97d9d4a8c79f5aa5cc956472fc76b6fff6/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "abe514415ef2b77ea03a68eeb98515666c0d9536",
          "url": "https://api.github.com/repos/appium/appium/commits/abe514415ef2b77ea03a68eeb98515666c0d9536",
          "html_url": "https://github.com/appium/appium/commit/abe514415ef2b77ea03a68eeb98515666c0d9536"
        },
        {
          "sha": "8c88d5c366cd4fedb747faa79b36f4018652298c",
          "url": "https://api.github.com/repos/appium/appium/commits/8c88d5c366cd4fedb747faa79b36f4018652298c",
          "html_url": "https://github.com/appium/appium/commit/8c88d5c366cd4fedb747faa79b36f4018652298c"
        }
      ]
    },
    {
      "sha": "bfcd32f9ad5e544cc03187734dfabe063c7ab4fd",
      "commit": {
        "author": {
          "name": "Jonah Stiennon",
          "email": "jonahss@gmail.com",
          "date": "2015-08-11T00:25:53Z"
        },
        "committer": {
          "name": "Jonah Stiennon",
          "email": "jonahss@gmail.com",
          "date": "2015-08-11T00:25:53Z"
        },
        "message": "add AndroidDriver",
        "tree": {
          "sha": "755d1d4e987a44cf68fc3b16e7270db0b8e6464e",
          "url": "https://api.github.com/repos/appium/appium/git/trees/755d1d4e987a44cf68fc3b16e7270db0b8e6464e"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/bfcd32f9ad5e544cc03187734dfabe063c7ab4fd",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/bfcd32f9ad5e544cc03187734dfabe063c7ab4fd",
      "html_url": "https://github.com/appium/appium/commit/bfcd32f9ad5e544cc03187734dfabe063c7ab4fd",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/bfcd32f9ad5e544cc03187734dfabe063c7ab4fd/comments",
      "author": {
        "login": "Jonahss",
        "id": 1521841,
        "avatar_url": "https://avatars1.githubusercontent.com/u/1521841?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Jonahss",
        "html_url": "https://github.com/Jonahss",
        "followers_url": "https://api.github.com/users/Jonahss/followers",
        "following_url": "https://api.github.com/users/Jonahss/following{/other_user}",
        "gists_url": "https://api.github.com/users/Jonahss/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Jonahss/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Jonahss/subscriptions",
        "organizations_url": "https://api.github.com/users/Jonahss/orgs",
        "repos_url": "https://api.github.com/users/Jonahss/repos",
        "events_url": "https://api.github.com/users/Jonahss/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Jonahss/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "Jonahss",
        "id": 1521841,
        "avatar_url": "https://avatars1.githubusercontent.com/u/1521841?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Jonahss",
        "html_url": "https://github.com/Jonahss",
        "followers_url": "https://api.github.com/users/Jonahss/followers",
        "following_url": "https://api.github.com/users/Jonahss/following{/other_user}",
        "gists_url": "https://api.github.com/users/Jonahss/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Jonahss/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Jonahss/subscriptions",
        "organizations_url": "https://api.github.com/users/Jonahss/orgs",
        "repos_url": "https://api.github.com/users/Jonahss/repos",
        "events_url": "https://api.github.com/users/Jonahss/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Jonahss/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "1fd52f97d9d4a8c79f5aa5cc956472fc76b6fff6",
          "url": "https://api.github.com/repos/appium/appium/commits/1fd52f97d9d4a8c79f5aa5cc956472fc76b6fff6",
          "html_url": "https://github.com/appium/appium/commit/1fd52f97d9d4a8c79f5aa5cc956472fc76b6fff6"
        }
      ]
    },
    {
      "sha": "091c8462935863380289460a95e77a5adc9c4961",
      "commit": {
        "author": {
          "name": "sebv",
          "email": "seb.vincent@gmail.com",
          "date": "2015-08-19T19:12:35Z"
        },
        "committer": {
          "name": "sebv",
          "email": "seb.vincent@gmail.com",
          "date": "2015-08-19T19:13:07Z"
        },
        "message": "prevents logsink from using null logger",
        "tree": {
          "sha": "9bfa2319181551c931a8bc99013b0888c72bffca",
          "url": "https://api.github.com/repos/appium/appium/git/trees/9bfa2319181551c931a8bc99013b0888c72bffca"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/091c8462935863380289460a95e77a5adc9c4961",
        "comment_count": 2
      },
      "url": "https://api.github.com/repos/appium/appium/commits/091c8462935863380289460a95e77a5adc9c4961",
      "html_url": "https://github.com/appium/appium/commit/091c8462935863380289460a95e77a5adc9c4961",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/091c8462935863380289460a95e77a5adc9c4961/comments",
      "author": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "bfcd32f9ad5e544cc03187734dfabe063c7ab4fd",
          "url": "https://api.github.com/repos/appium/appium/commits/bfcd32f9ad5e544cc03187734dfabe063c7ab4fd",
          "html_url": "https://github.com/appium/appium/commit/bfcd32f9ad5e544cc03187734dfabe063c7ab4fd"
        }
      ]
    },
    {
      "sha": "7a6a28a14da919b8f229139a559972a57a58bf94",
      "commit": {
        "author": {
          "name": "sebv",
          "email": "seb.vincent@gmail.com",
          "date": "2015-08-19T19:23:10Z"
        },
        "committer": {
          "name": "sebv",
          "email": "seb.vincent@gmail.com",
          "date": "2015-08-19T19:23:10Z"
        },
        "message": "adds deviceName cap to fix tests",
        "tree": {
          "sha": "5ff9c6dd0cc8cc5dd097d7851a17803f0b895714",
          "url": "https://api.github.com/repos/appium/appium/git/trees/5ff9c6dd0cc8cc5dd097d7851a17803f0b895714"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/7a6a28a14da919b8f229139a559972a57a58bf94",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/7a6a28a14da919b8f229139a559972a57a58bf94",
      "html_url": "https://github.com/appium/appium/commit/7a6a28a14da919b8f229139a559972a57a58bf94",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/7a6a28a14da919b8f229139a559972a57a58bf94/comments",
      "author": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "091c8462935863380289460a95e77a5adc9c4961",
          "url": "https://api.github.com/repos/appium/appium/commits/091c8462935863380289460a95e77a5adc9c4961",
          "html_url": "https://github.com/appium/appium/commit/091c8462935863380289460a95e77a5adc9c4961"
        }
      ]
    },
    {
      "sha": "2be1ef3838cf7ea8ddd9b255c05279c54142d21c",
      "commit": {
        "author": {
          "name": "sebv",
          "email": "seb.vincent@gmail.com",
          "date": "2015-08-19T18:21:24Z"
        },
        "committer": {
          "name": "sebv",
          "email": "seb.vincent@gmail.com",
          "date": "2015-08-19T19:26:54Z"
        },
        "message": "package upgrade",
        "tree": {
          "sha": "f58dc8b326ead02a5d5bb7852503df406b099747",
          "url": "https://api.github.com/repos/appium/appium/git/trees/f58dc8b326ead02a5d5bb7852503df406b099747"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/2be1ef3838cf7ea8ddd9b255c05279c54142d21c",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/2be1ef3838cf7ea8ddd9b255c05279c54142d21c",
      "html_url": "https://github.com/appium/appium/commit/2be1ef3838cf7ea8ddd9b255c05279c54142d21c",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/2be1ef3838cf7ea8ddd9b255c05279c54142d21c/comments",
      "author": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "7a6a28a14da919b8f229139a559972a57a58bf94",
          "url": "https://api.github.com/repos/appium/appium/commits/7a6a28a14da919b8f229139a559972a57a58bf94",
          "html_url": "https://github.com/appium/appium/commit/7a6a28a14da919b8f229139a559972a57a58bf94"
        }
      ]
    },
    {
      "sha": "ef383ead3efec0037124fe1f02c94af1645c6d04",
      "commit": {
        "author": {
          "name": "seb vincent",
          "email": "seb.vincent@gmail.com",
          "date": "2015-08-20T06:11:00Z"
        },
        "committer": {
          "name": "seb vincent",
          "email": "seb.vincent@gmail.com",
          "date": "2015-08-20T06:11:00Z"
        },
        "message": "Merge pull request #5515 from appium/sebv-1.5\n\npackage upgrade",
        "tree": {
          "sha": "f58dc8b326ead02a5d5bb7852503df406b099747",
          "url": "https://api.github.com/repos/appium/appium/git/trees/f58dc8b326ead02a5d5bb7852503df406b099747"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/ef383ead3efec0037124fe1f02c94af1645c6d04",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/ef383ead3efec0037124fe1f02c94af1645c6d04",
      "html_url": "https://github.com/appium/appium/commit/ef383ead3efec0037124fe1f02c94af1645c6d04",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/ef383ead3efec0037124fe1f02c94af1645c6d04/comments",
      "author": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "7a6a28a14da919b8f229139a559972a57a58bf94",
          "url": "https://api.github.com/repos/appium/appium/commits/7a6a28a14da919b8f229139a559972a57a58bf94",
          "html_url": "https://github.com/appium/appium/commit/7a6a28a14da919b8f229139a559972a57a58bf94"
        },
        {
          "sha": "2be1ef3838cf7ea8ddd9b255c05279c54142d21c",
          "url": "https://api.github.com/repos/appium/appium/commits/2be1ef3838cf7ea8ddd9b255c05279c54142d21c",
          "html_url": "https://github.com/appium/appium/commit/2be1ef3838cf7ea8ddd9b255c05279c54142d21c"
        }
      ]
    },
    {
      "sha": "78e85ab9f1480b9357a5b1eef26abf67e141f313",
      "commit": {
        "author": {
          "name": "sebv",
          "email": "seb.vincent@gmail.com",
          "date": "2015-08-20T06:47:30Z"
        },
        "committer": {
          "name": "sebv",
          "email": "seb.vincent@gmail.com",
          "date": "2015-08-20T06:47:30Z"
        },
        "message": "adds ios driver",
        "tree": {
          "sha": "7e0b5491663455ad7d77f13f256d9a471a458878",
          "url": "https://api.github.com/repos/appium/appium/git/trees/7e0b5491663455ad7d77f13f256d9a471a458878"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/78e85ab9f1480b9357a5b1eef26abf67e141f313",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/78e85ab9f1480b9357a5b1eef26abf67e141f313",
      "html_url": "https://github.com/appium/appium/commit/78e85ab9f1480b9357a5b1eef26abf67e141f313",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/78e85ab9f1480b9357a5b1eef26abf67e141f313/comments",
      "author": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "ef383ead3efec0037124fe1f02c94af1645c6d04",
          "url": "https://api.github.com/repos/appium/appium/commits/ef383ead3efec0037124fe1f02c94af1645c6d04",
          "html_url": "https://github.com/appium/appium/commit/ef383ead3efec0037124fe1f02c94af1645c6d04"
        }
      ]
    },
    {
      "sha": "bbfd5f47b1cd3b5221453aad851187b4b162ece5",
      "commit": {
        "author": {
          "name": "sebv",
          "email": "seb.vincent@gmail.com",
          "date": "2015-08-24T16:12:58Z"
        },
        "committer": {
          "name": "sebv",
          "email": "seb.vincent@gmail.com",
          "date": "2015-08-24T16:12:58Z"
        },
        "message": "switch to executeCommand",
        "tree": {
          "sha": "0bcf2101cc7a6fcba6c78dcd35b20343b6830aef",
          "url": "https://api.github.com/repos/appium/appium/git/trees/0bcf2101cc7a6fcba6c78dcd35b20343b6830aef"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/bbfd5f47b1cd3b5221453aad851187b4b162ece5",
        "comment_count": 1
      },
      "url": "https://api.github.com/repos/appium/appium/commits/bbfd5f47b1cd3b5221453aad851187b4b162ece5",
      "html_url": "https://github.com/appium/appium/commit/bbfd5f47b1cd3b5221453aad851187b4b162ece5",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/bbfd5f47b1cd3b5221453aad851187b4b162ece5/comments",
      "author": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "78e85ab9f1480b9357a5b1eef26abf67e141f313",
          "url": "https://api.github.com/repos/appium/appium/commits/78e85ab9f1480b9357a5b1eef26abf67e141f313",
          "html_url": "https://github.com/appium/appium/commit/78e85ab9f1480b9357a5b1eef26abf67e141f313"
        }
      ]
    },
    {
      "sha": "5b4bb89e9749865ea7dcdbf9115de449c8de40cb",
      "commit": {
        "author": {
          "name": "sebv",
          "email": "seb.vincent@gmail.com",
          "date": "2015-08-26T10:16:37Z"
        },
        "committer": {
          "name": "sebv",
          "email": "seb.vincent@gmail.com",
          "date": "2015-08-26T10:16:37Z"
        },
        "message": "clears rogue command timeout",
        "tree": {
          "sha": "6db6d5b7e3e65dedb603d61396b46a6e337755de",
          "url": "https://api.github.com/repos/appium/appium/git/trees/6db6d5b7e3e65dedb603d61396b46a6e337755de"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/5b4bb89e9749865ea7dcdbf9115de449c8de40cb",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/5b4bb89e9749865ea7dcdbf9115de449c8de40cb",
      "html_url": "https://github.com/appium/appium/commit/5b4bb89e9749865ea7dcdbf9115de449c8de40cb",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/5b4bb89e9749865ea7dcdbf9115de449c8de40cb/comments",
      "author": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "bbfd5f47b1cd3b5221453aad851187b4b162ece5",
          "url": "https://api.github.com/repos/appium/appium/commits/bbfd5f47b1cd3b5221453aad851187b4b162ece5",
          "html_url": "https://github.com/appium/appium/commit/bbfd5f47b1cd3b5221453aad851187b4b162ece5"
        }
      ]
    },
    {
      "sha": "5858897a0d1137c775529124ab61d85db27d6e0b",
      "commit": {
        "author": {
          "name": "sebv",
          "email": "seb.vincent@gmail.com",
          "date": "2015-08-26T15:19:01Z"
        },
        "committer": {
          "name": "sebv",
          "email": "seb.vincent@gmail.com",
          "date": "2015-08-26T15:28:32Z"
        },
        "message": "fixes session exists",
        "tree": {
          "sha": "54e533e8edde894dd3b1015020d78965fb5249a0",
          "url": "https://api.github.com/repos/appium/appium/git/trees/54e533e8edde894dd3b1015020d78965fb5249a0"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/5858897a0d1137c775529124ab61d85db27d6e0b",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/5858897a0d1137c775529124ab61d85db27d6e0b",
      "html_url": "https://github.com/appium/appium/commit/5858897a0d1137c775529124ab61d85db27d6e0b",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/5858897a0d1137c775529124ab61d85db27d6e0b/comments",
      "author": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "5b4bb89e9749865ea7dcdbf9115de449c8de40cb",
          "url": "https://api.github.com/repos/appium/appium/commits/5b4bb89e9749865ea7dcdbf9115de449c8de40cb",
          "html_url": "https://github.com/appium/appium/commit/5b4bb89e9749865ea7dcdbf9115de449c8de40cb"
        }
      ]
    },
    {
      "sha": "9a2842bbb17e7a54192913dabe314a8f536b0f92",
      "commit": {
        "author": {
          "name": "sebv",
          "email": "seb.vincent@gmail.com",
          "date": "2015-08-26T17:26:40Z"
        },
        "committer": {
          "name": "sebv",
          "email": "seb.vincent@gmail.com",
          "date": "2015-08-26T17:26:40Z"
        },
        "message": "added onUnexpectedShutdown logic",
        "tree": {
          "sha": "b743920551868129ef4d39cdba5814ec86271c09",
          "url": "https://api.github.com/repos/appium/appium/git/trees/b743920551868129ef4d39cdba5814ec86271c09"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/9a2842bbb17e7a54192913dabe314a8f536b0f92",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/9a2842bbb17e7a54192913dabe314a8f536b0f92",
      "html_url": "https://github.com/appium/appium/commit/9a2842bbb17e7a54192913dabe314a8f536b0f92",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/9a2842bbb17e7a54192913dabe314a8f536b0f92/comments",
      "author": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "5858897a0d1137c775529124ab61d85db27d6e0b",
          "url": "https://api.github.com/repos/appium/appium/commits/5858897a0d1137c775529124ab61d85db27d6e0b",
          "html_url": "https://github.com/appium/appium/commit/5858897a0d1137c775529124ab61d85db27d6e0b"
        }
      ]
    },
    {
      "sha": "006f3946aa6ce0cba819806a254a3d9e0c3dbe5f",
      "commit": {
        "author": {
          "name": "seb vincent",
          "email": "seb.vincent@gmail.com",
          "date": "2015-08-28T11:51:20Z"
        },
        "committer": {
          "name": "seb vincent",
          "email": "seb.vincent@gmail.com",
          "date": "2015-08-28T11:51:20Z"
        },
        "message": "Merge pull request #5535 from appium/sebv-1_5_-session-exists\n\nFixes sessionExists and command timeout issues.",
        "tree": {
          "sha": "b743920551868129ef4d39cdba5814ec86271c09",
          "url": "https://api.github.com/repos/appium/appium/git/trees/b743920551868129ef4d39cdba5814ec86271c09"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/006f3946aa6ce0cba819806a254a3d9e0c3dbe5f",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/006f3946aa6ce0cba819806a254a3d9e0c3dbe5f",
      "html_url": "https://github.com/appium/appium/commit/006f3946aa6ce0cba819806a254a3d9e0c3dbe5f",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/006f3946aa6ce0cba819806a254a3d9e0c3dbe5f/comments",
      "author": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "bbfd5f47b1cd3b5221453aad851187b4b162ece5",
          "url": "https://api.github.com/repos/appium/appium/commits/bbfd5f47b1cd3b5221453aad851187b4b162ece5",
          "html_url": "https://github.com/appium/appium/commit/bbfd5f47b1cd3b5221453aad851187b4b162ece5"
        },
        {
          "sha": "9a2842bbb17e7a54192913dabe314a8f536b0f92",
          "url": "https://api.github.com/repos/appium/appium/commits/9a2842bbb17e7a54192913dabe314a8f536b0f92",
          "html_url": "https://github.com/appium/appium/commit/9a2842bbb17e7a54192913dabe314a8f536b0f92"
        }
      ]
    },
    {
      "sha": "5f1743e2746da762165df06bc637d3c3feceb35f",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-09-08T18:39:02Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-09-08T18:39:02Z"
        },
        "message": "Publish 1.5.0-beta1",
        "tree": {
          "sha": "b51c6db78a2c6e82b1ddc1911a59da529e79287b",
          "url": "https://api.github.com/repos/appium/appium/git/trees/b51c6db78a2c6e82b1ddc1911a59da529e79287b"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/5f1743e2746da762165df06bc637d3c3feceb35f",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/5f1743e2746da762165df06bc637d3c3feceb35f",
      "html_url": "https://github.com/appium/appium/commit/5f1743e2746da762165df06bc637d3c3feceb35f",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/5f1743e2746da762165df06bc637d3c3feceb35f/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "006f3946aa6ce0cba819806a254a3d9e0c3dbe5f",
          "url": "https://api.github.com/repos/appium/appium/commits/006f3946aa6ce0cba819806a254a3d9e0c3dbe5f",
          "html_url": "https://github.com/appium/appium/commit/006f3946aa6ce0cba819806a254a3d9e0c3dbe5f"
        }
      ]
    },
    {
      "sha": "99551ca9a3f90821221eb4ae78cfe40e4cd93d89",
      "commit": {
        "author": {
          "name": "sebv",
          "email": "seb.vincent@gmail.com",
          "date": "2015-09-09T06:19:52Z"
        },
        "committer": {
          "name": "sebv",
          "email": "seb.vincent@gmail.com",
          "date": "2015-09-09T06:19:52Z"
        },
        "message": "fixes appium bin",
        "tree": {
          "sha": "6ce33bf41289d9ca7df791b34d36c5c2f73cf8cb",
          "url": "https://api.github.com/repos/appium/appium/git/trees/6ce33bf41289d9ca7df791b34d36c5c2f73cf8cb"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/99551ca9a3f90821221eb4ae78cfe40e4cd93d89",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/99551ca9a3f90821221eb4ae78cfe40e4cd93d89",
      "html_url": "https://github.com/appium/appium/commit/99551ca9a3f90821221eb4ae78cfe40e4cd93d89",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/99551ca9a3f90821221eb4ae78cfe40e4cd93d89/comments",
      "author": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "sebv",
        "id": 418288,
        "avatar_url": "https://avatars1.githubusercontent.com/u/418288?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sebv",
        "html_url": "https://github.com/sebv",
        "followers_url": "https://api.github.com/users/sebv/followers",
        "following_url": "https://api.github.com/users/sebv/following{/other_user}",
        "gists_url": "https://api.github.com/users/sebv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sebv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sebv/subscriptions",
        "organizations_url": "https://api.github.com/users/sebv/orgs",
        "repos_url": "https://api.github.com/users/sebv/repos",
        "events_url": "https://api.github.com/users/sebv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sebv/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "5f1743e2746da762165df06bc637d3c3feceb35f",
          "url": "https://api.github.com/repos/appium/appium/commits/5f1743e2746da762165df06bc637d3c3feceb35f",
          "html_url": "https://github.com/appium/appium/commit/5f1743e2746da762165df06bc637d3c3feceb35f"
        }
      ]
    },
    {
      "sha": "b53764cc0429c9f2004b1c11b30eefaa31b41ac6",
      "commit": {
        "author": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-09-09T15:08:37Z"
        },
        "committer": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-09-09T15:08:37Z"
        },
        "message": "Merge pull request #5580 from appium/sebv-1.5-bin-fix\n\nFixes appium bin",
        "tree": {
          "sha": "6ce33bf41289d9ca7df791b34d36c5c2f73cf8cb",
          "url": "https://api.github.com/repos/appium/appium/git/trees/6ce33bf41289d9ca7df791b34d36c5c2f73cf8cb"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/b53764cc0429c9f2004b1c11b30eefaa31b41ac6",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/b53764cc0429c9f2004b1c11b30eefaa31b41ac6",
      "html_url": "https://github.com/appium/appium/commit/b53764cc0429c9f2004b1c11b30eefaa31b41ac6",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/b53764cc0429c9f2004b1c11b30eefaa31b41ac6/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "5f1743e2746da762165df06bc637d3c3feceb35f",
          "url": "https://api.github.com/repos/appium/appium/commits/5f1743e2746da762165df06bc637d3c3feceb35f",
          "html_url": "https://github.com/appium/appium/commit/5f1743e2746da762165df06bc637d3c3feceb35f"
        },
        {
          "sha": "99551ca9a3f90821221eb4ae78cfe40e4cd93d89",
          "url": "https://api.github.com/repos/appium/appium/commits/99551ca9a3f90821221eb4ae78cfe40e4cd93d89",
          "html_url": "https://github.com/appium/appium/commit/99551ca9a3f90821221eb4ae78cfe40e4cd93d89"
        }
      ]
    },
    {
      "sha": "6e8f8090ff1214fdd39f99f0c586726f4e548669",
      "commit": {
        "author": {
          "name": "Scott Dixon",
          "email": "scott@howrefreshing.com.au",
          "date": "2015-09-11T18:53:28Z"
        },
        "committer": {
          "name": "Scott Dixon",
          "email": "scott@howrefreshing.com.au",
          "date": "2015-09-11T19:03:48Z"
        },
        "message": "Added recreateChromeDriverSessions to caps doc",
        "tree": {
          "sha": "6fa7b0bdff17f1408a14bcaa8223553a664e2619",
          "url": "https://api.github.com/repos/appium/appium/git/trees/6fa7b0bdff17f1408a14bcaa8223553a664e2619"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/6e8f8090ff1214fdd39f99f0c586726f4e548669",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/6e8f8090ff1214fdd39f99f0c586726f4e548669",
      "html_url": "https://github.com/appium/appium/commit/6e8f8090ff1214fdd39f99f0c586726f4e548669",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/6e8f8090ff1214fdd39f99f0c586726f4e548669/comments",
      "author": {
        "login": "scottdixon",
        "id": 4726068,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4726068?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottdixon",
        "html_url": "https://github.com/scottdixon",
        "followers_url": "https://api.github.com/users/scottdixon/followers",
        "following_url": "https://api.github.com/users/scottdixon/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottdixon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottdixon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottdixon/subscriptions",
        "organizations_url": "https://api.github.com/users/scottdixon/orgs",
        "repos_url": "https://api.github.com/users/scottdixon/repos",
        "events_url": "https://api.github.com/users/scottdixon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottdixon/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "scottdixon",
        "id": 4726068,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4726068?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottdixon",
        "html_url": "https://github.com/scottdixon",
        "followers_url": "https://api.github.com/users/scottdixon/followers",
        "following_url": "https://api.github.com/users/scottdixon/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottdixon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottdixon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottdixon/subscriptions",
        "organizations_url": "https://api.github.com/users/scottdixon/orgs",
        "repos_url": "https://api.github.com/users/scottdixon/repos",
        "events_url": "https://api.github.com/users/scottdixon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottdixon/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "b53764cc0429c9f2004b1c11b30eefaa31b41ac6",
          "url": "https://api.github.com/repos/appium/appium/commits/b53764cc0429c9f2004b1c11b30eefaa31b41ac6",
          "html_url": "https://github.com/appium/appium/commit/b53764cc0429c9f2004b1c11b30eefaa31b41ac6"
        }
      ]
    },
    {
      "sha": "86735bca7da643bc29c716b6d1794d6c174041bb",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-09-14T21:35:17Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-09-14T21:35:17Z"
        },
        "message": "bump beta version with fixes for install",
        "tree": {
          "sha": "12e0e52f536bac722032812557cf37109a247116",
          "url": "https://api.github.com/repos/appium/appium/git/trees/12e0e52f536bac722032812557cf37109a247116"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/86735bca7da643bc29c716b6d1794d6c174041bb",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/86735bca7da643bc29c716b6d1794d6c174041bb",
      "html_url": "https://github.com/appium/appium/commit/86735bca7da643bc29c716b6d1794d6c174041bb",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/86735bca7da643bc29c716b6d1794d6c174041bb/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "b53764cc0429c9f2004b1c11b30eefaa31b41ac6",
          "url": "https://api.github.com/repos/appium/appium/commits/b53764cc0429c9f2004b1c11b30eefaa31b41ac6",
          "html_url": "https://github.com/appium/appium/commit/b53764cc0429c9f2004b1c11b30eefaa31b41ac6"
        }
      ]
    },
    {
      "sha": "fed22450fb8751068dfac1e6e08557442f2d10aa",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-09-15T15:41:14Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-09-15T15:41:14Z"
        },
        "message": "Bump beta to 3",
        "tree": {
          "sha": "ecd80ef3028ee66654e690a7f427c556b105d946",
          "url": "https://api.github.com/repos/appium/appium/git/trees/ecd80ef3028ee66654e690a7f427c556b105d946"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/fed22450fb8751068dfac1e6e08557442f2d10aa",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/fed22450fb8751068dfac1e6e08557442f2d10aa",
      "html_url": "https://github.com/appium/appium/commit/fed22450fb8751068dfac1e6e08557442f2d10aa",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/fed22450fb8751068dfac1e6e08557442f2d10aa/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "86735bca7da643bc29c716b6d1794d6c174041bb",
          "url": "https://api.github.com/repos/appium/appium/commits/86735bca7da643bc29c716b6d1794d6c174041bb",
          "html_url": "https://github.com/appium/appium/commit/86735bca7da643bc29c716b6d1794d6c174041bb"
        }
      ]
    },
    {
      "sha": "49266ea3c5ba9a195f66a92cfda875a29057abd0",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-09-17T19:44:31Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-09-17T19:44:31Z"
        },
        "message": "Move to latest appium logger",
        "tree": {
          "sha": "67b268a38a47eb3e85308c506303c1a536e4ccdf",
          "url": "https://api.github.com/repos/appium/appium/git/trees/67b268a38a47eb3e85308c506303c1a536e4ccdf"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/49266ea3c5ba9a195f66a92cfda875a29057abd0",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/49266ea3c5ba9a195f66a92cfda875a29057abd0",
      "html_url": "https://github.com/appium/appium/commit/49266ea3c5ba9a195f66a92cfda875a29057abd0",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/49266ea3c5ba9a195f66a92cfda875a29057abd0/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "fed22450fb8751068dfac1e6e08557442f2d10aa",
          "url": "https://api.github.com/repos/appium/appium/commits/fed22450fb8751068dfac1e6e08557442f2d10aa",
          "html_url": "https://github.com/appium/appium/commit/fed22450fb8751068dfac1e6e08557442f2d10aa"
        }
      ]
    },
    {
      "sha": "00995fb49febf903e3e70e4746c45f41b387f3e0",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-09-17T19:52:29Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-09-17T19:52:29Z"
        },
        "message": "Bump beta to 1.5.0-beta4",
        "tree": {
          "sha": "aa2ba436772964d8d39d21b537539b4a22c4a4ce",
          "url": "https://api.github.com/repos/appium/appium/git/trees/aa2ba436772964d8d39d21b537539b4a22c4a4ce"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/00995fb49febf903e3e70e4746c45f41b387f3e0",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/00995fb49febf903e3e70e4746c45f41b387f3e0",
      "html_url": "https://github.com/appium/appium/commit/00995fb49febf903e3e70e4746c45f41b387f3e0",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/00995fb49febf903e3e70e4746c45f41b387f3e0/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "49266ea3c5ba9a195f66a92cfda875a29057abd0",
          "url": "https://api.github.com/repos/appium/appium/commits/49266ea3c5ba9a195f66a92cfda875a29057abd0",
          "html_url": "https://github.com/appium/appium/commit/49266ea3c5ba9a195f66a92cfda875a29057abd0"
        }
      ]
    },
    {
      "sha": "38bfba0acdcfbbe01dcf55f8aa05db7b0917e497",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-09-18T22:39:10Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-09-18T22:40:18Z"
        },
        "message": "Add authorize-ios binary",
        "tree": {
          "sha": "d0bcbb3aed1521d5f72ec7051170b0fe88e3ca70",
          "url": "https://api.github.com/repos/appium/appium/git/trees/d0bcbb3aed1521d5f72ec7051170b0fe88e3ca70"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/38bfba0acdcfbbe01dcf55f8aa05db7b0917e497",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/38bfba0acdcfbbe01dcf55f8aa05db7b0917e497",
      "html_url": "https://github.com/appium/appium/commit/38bfba0acdcfbbe01dcf55f8aa05db7b0917e497",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/38bfba0acdcfbbe01dcf55f8aa05db7b0917e497/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "00995fb49febf903e3e70e4746c45f41b387f3e0",
          "url": "https://api.github.com/repos/appium/appium/commits/00995fb49febf903e3e70e4746c45f41b387f3e0",
          "html_url": "https://github.com/appium/appium/commit/00995fb49febf903e3e70e4746c45f41b387f3e0"
        }
      ]
    },
    {
      "sha": "23a33a14e84f47fbd2d6e2b51a30cc79a24ee4c7",
      "commit": {
        "author": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-09-18T22:43:25Z"
        },
        "committer": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-09-18T22:43:25Z"
        },
        "message": "Merge pull request #5627 from appium/isaac-bins\n\nAdd authorize-ios binary",
        "tree": {
          "sha": "d0bcbb3aed1521d5f72ec7051170b0fe88e3ca70",
          "url": "https://api.github.com/repos/appium/appium/git/trees/d0bcbb3aed1521d5f72ec7051170b0fe88e3ca70"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/23a33a14e84f47fbd2d6e2b51a30cc79a24ee4c7",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/23a33a14e84f47fbd2d6e2b51a30cc79a24ee4c7",
      "html_url": "https://github.com/appium/appium/commit/23a33a14e84f47fbd2d6e2b51a30cc79a24ee4c7",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/23a33a14e84f47fbd2d6e2b51a30cc79a24ee4c7/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "00995fb49febf903e3e70e4746c45f41b387f3e0",
          "url": "https://api.github.com/repos/appium/appium/commits/00995fb49febf903e3e70e4746c45f41b387f3e0",
          "html_url": "https://github.com/appium/appium/commit/00995fb49febf903e3e70e4746c45f41b387f3e0"
        },
        {
          "sha": "38bfba0acdcfbbe01dcf55f8aa05db7b0917e497",
          "url": "https://api.github.com/repos/appium/appium/commits/38bfba0acdcfbbe01dcf55f8aa05db7b0917e497",
          "html_url": "https://github.com/appium/appium/commit/38bfba0acdcfbbe01dcf55f8aa05db7b0917e497"
        }
      ]
    },
    {
      "sha": "97e58601b4ec59ee47bd3f6e653f9851ff20362c",
      "commit": {
        "author": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-09-23T16:10:06Z"
        },
        "committer": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-09-23T16:10:06Z"
        },
        "message": "Merge pull request #5596 from scottdixon/scottdixon-1.5docs\n\nAdded recreateChromeDriverSessions to caps doc",
        "tree": {
          "sha": "c961a749222ab904aeaaef22f1fb8a2acdeb365b",
          "url": "https://api.github.com/repos/appium/appium/git/trees/c961a749222ab904aeaaef22f1fb8a2acdeb365b"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/97e58601b4ec59ee47bd3f6e653f9851ff20362c",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/97e58601b4ec59ee47bd3f6e653f9851ff20362c",
      "html_url": "https://github.com/appium/appium/commit/97e58601b4ec59ee47bd3f6e653f9851ff20362c",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/97e58601b4ec59ee47bd3f6e653f9851ff20362c/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "23a33a14e84f47fbd2d6e2b51a30cc79a24ee4c7",
          "url": "https://api.github.com/repos/appium/appium/commits/23a33a14e84f47fbd2d6e2b51a30cc79a24ee4c7",
          "html_url": "https://github.com/appium/appium/commit/23a33a14e84f47fbd2d6e2b51a30cc79a24ee4c7"
        },
        {
          "sha": "6e8f8090ff1214fdd39f99f0c586726f4e548669",
          "url": "https://api.github.com/repos/appium/appium/commits/6e8f8090ff1214fdd39f99f0c586726f4e548669",
          "html_url": "https://github.com/appium/appium/commit/6e8f8090ff1214fdd39f99f0c586726f4e548669"
        }
      ]
    },
    {
      "sha": "ece0eef10386051108434c47a7bee3b7a04afd8f",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-09-25T20:38:13Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-09-25T20:38:13Z"
        },
        "message": "v1.5.0-beta5",
        "tree": {
          "sha": "b96eab2e667bb08f309271f835e9458a5ad234b0",
          "url": "https://api.github.com/repos/appium/appium/git/trees/b96eab2e667bb08f309271f835e9458a5ad234b0"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/ece0eef10386051108434c47a7bee3b7a04afd8f",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/ece0eef10386051108434c47a7bee3b7a04afd8f",
      "html_url": "https://github.com/appium/appium/commit/ece0eef10386051108434c47a7bee3b7a04afd8f",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/ece0eef10386051108434c47a7bee3b7a04afd8f/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "97e58601b4ec59ee47bd3f6e653f9851ff20362c",
          "url": "https://api.github.com/repos/appium/appium/commits/97e58601b4ec59ee47bd3f6e653f9851ff20362c",
          "html_url": "https://github.com/appium/appium/commit/97e58601b4ec59ee47bd3f6e653f9851ff20362c"
        }
      ]
    },
    {
      "sha": "99fb98078a9079bfea7a5f7512c3ebc4fb915c16",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-09-28T15:16:24Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-09-28T15:16:24Z"
        },
        "message": "Add method to get a driver for a particular session",
        "tree": {
          "sha": "87cfd09c2ece291752896f04df41a9c94a10014c",
          "url": "https://api.github.com/repos/appium/appium/git/trees/87cfd09c2ece291752896f04df41a9c94a10014c"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/99fb98078a9079bfea7a5f7512c3ebc4fb915c16",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/99fb98078a9079bfea7a5f7512c3ebc4fb915c16",
      "html_url": "https://github.com/appium/appium/commit/99fb98078a9079bfea7a5f7512c3ebc4fb915c16",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/99fb98078a9079bfea7a5f7512c3ebc4fb915c16/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "ece0eef10386051108434c47a7bee3b7a04afd8f",
          "url": "https://api.github.com/repos/appium/appium/commits/ece0eef10386051108434c47a7bee3b7a04afd8f",
          "html_url": "https://github.com/appium/appium/commit/ece0eef10386051108434c47a7bee3b7a04afd8f"
        }
      ]
    },
    {
      "sha": "55273ff1f985e936c22bc4ad780b6c7c64665728",
      "commit": {
        "author": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-09-28T15:21:58Z"
        },
        "committer": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-09-28T15:21:58Z"
        },
        "message": "Merge pull request #5664 from appium/isaac-driver\n\nAdd method to get a driver for a particular session",
        "tree": {
          "sha": "87cfd09c2ece291752896f04df41a9c94a10014c",
          "url": "https://api.github.com/repos/appium/appium/git/trees/87cfd09c2ece291752896f04df41a9c94a10014c"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/55273ff1f985e936c22bc4ad780b6c7c64665728",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/55273ff1f985e936c22bc4ad780b6c7c64665728",
      "html_url": "https://github.com/appium/appium/commit/55273ff1f985e936c22bc4ad780b6c7c64665728",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/55273ff1f985e936c22bc4ad780b6c7c64665728/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "ece0eef10386051108434c47a7bee3b7a04afd8f",
          "url": "https://api.github.com/repos/appium/appium/commits/ece0eef10386051108434c47a7bee3b7a04afd8f",
          "html_url": "https://github.com/appium/appium/commit/ece0eef10386051108434c47a7bee3b7a04afd8f"
        },
        {
          "sha": "99fb98078a9079bfea7a5f7512c3ebc4fb915c16",
          "url": "https://api.github.com/repos/appium/appium/commits/99fb98078a9079bfea7a5f7512c3ebc4fb915c16",
          "html_url": "https://github.com/appium/appium/commit/99fb98078a9079bfea7a5f7512c3ebc4fb915c16"
        }
      ]
    },
    {
      "sha": "8a7a794322fc81dd988c72c48d479cfd3dbab3f2",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-09-30T16:34:29Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-09-30T16:34:29Z"
        },
        "message": "Fix an issue with session deletion",
        "tree": {
          "sha": "73a219a9e590caf0824cd5072d458eebf602b31a",
          "url": "https://api.github.com/repos/appium/appium/git/trees/73a219a9e590caf0824cd5072d458eebf602b31a"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/8a7a794322fc81dd988c72c48d479cfd3dbab3f2",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/8a7a794322fc81dd988c72c48d479cfd3dbab3f2",
      "html_url": "https://github.com/appium/appium/commit/8a7a794322fc81dd988c72c48d479cfd3dbab3f2",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/8a7a794322fc81dd988c72c48d479cfd3dbab3f2/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "55273ff1f985e936c22bc4ad780b6c7c64665728",
          "url": "https://api.github.com/repos/appium/appium/commits/55273ff1f985e936c22bc4ad780b6c7c64665728",
          "html_url": "https://github.com/appium/appium/commit/55273ff1f985e936c22bc4ad780b6c7c64665728"
        }
      ]
    },
    {
      "sha": "8c84af21e77f6312e422c09a506a882105aaaba7",
      "commit": {
        "author": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-09-30T16:37:05Z"
        },
        "committer": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-09-30T16:37:05Z"
        },
        "message": "Merge pull request #5679 from appium/isaac-session\n\nFix an issue with session deletion",
        "tree": {
          "sha": "73a219a9e590caf0824cd5072d458eebf602b31a",
          "url": "https://api.github.com/repos/appium/appium/git/trees/73a219a9e590caf0824cd5072d458eebf602b31a"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/8c84af21e77f6312e422c09a506a882105aaaba7",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/8c84af21e77f6312e422c09a506a882105aaaba7",
      "html_url": "https://github.com/appium/appium/commit/8c84af21e77f6312e422c09a506a882105aaaba7",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/8c84af21e77f6312e422c09a506a882105aaaba7/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "55273ff1f985e936c22bc4ad780b6c7c64665728",
          "url": "https://api.github.com/repos/appium/appium/commits/55273ff1f985e936c22bc4ad780b6c7c64665728",
          "html_url": "https://github.com/appium/appium/commit/55273ff1f985e936c22bc4ad780b6c7c64665728"
        },
        {
          "sha": "8a7a794322fc81dd988c72c48d479cfd3dbab3f2",
          "url": "https://api.github.com/repos/appium/appium/commits/8a7a794322fc81dd988c72c48d479cfd3dbab3f2",
          "html_url": "https://github.com/appium/appium/commit/8a7a794322fc81dd988c72c48d479cfd3dbab3f2"
        }
      ]
    },
    {
      "sha": "d1ebce883c11c946df5161717961f52018ce4d3b",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-09-30T17:05:38Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-09-30T17:05:38Z"
        },
        "message": "v1.5.0-beta6",
        "tree": {
          "sha": "fcf0acce8a59a26d51c0d01976b814245296ce7c",
          "url": "https://api.github.com/repos/appium/appium/git/trees/fcf0acce8a59a26d51c0d01976b814245296ce7c"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/d1ebce883c11c946df5161717961f52018ce4d3b",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/d1ebce883c11c946df5161717961f52018ce4d3b",
      "html_url": "https://github.com/appium/appium/commit/d1ebce883c11c946df5161717961f52018ce4d3b",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/d1ebce883c11c946df5161717961f52018ce4d3b/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "8c84af21e77f6312e422c09a506a882105aaaba7",
          "url": "https://api.github.com/repos/appium/appium/commits/8c84af21e77f6312e422c09a506a882105aaaba7",
          "html_url": "https://github.com/appium/appium/commit/8c84af21e77f6312e422c09a506a882105aaaba7"
        }
      ]
    },
    {
      "sha": "194f012b6c5f6e7415d77690e5cdcced5937cc1e",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-10-07T23:01:30Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-10-07T23:01:30Z"
        },
        "message": "Move to latest appium-express",
        "tree": {
          "sha": "9b39530899d1cf7016c63c36328c6f1804439add",
          "url": "https://api.github.com/repos/appium/appium/git/trees/9b39530899d1cf7016c63c36328c6f1804439add"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/194f012b6c5f6e7415d77690e5cdcced5937cc1e",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/194f012b6c5f6e7415d77690e5cdcced5937cc1e",
      "html_url": "https://github.com/appium/appium/commit/194f012b6c5f6e7415d77690e5cdcced5937cc1e",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/194f012b6c5f6e7415d77690e5cdcced5937cc1e/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "d1ebce883c11c946df5161717961f52018ce4d3b",
          "url": "https://api.github.com/repos/appium/appium/commits/d1ebce883c11c946df5161717961f52018ce4d3b",
          "html_url": "https://github.com/appium/appium/commit/d1ebce883c11c946df5161717961f52018ce4d3b"
        }
      ]
    },
    {
      "sha": "ca08eafa1ed3974cc8eba37c337e500a4eef87cb",
      "commit": {
        "author": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-10-07T23:02:54Z"
        },
        "committer": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-10-07T23:02:54Z"
        },
        "message": "Merge pull request #5695 from appium/isaac-express\n\nMove to latest appium-express",
        "tree": {
          "sha": "9b39530899d1cf7016c63c36328c6f1804439add",
          "url": "https://api.github.com/repos/appium/appium/git/trees/9b39530899d1cf7016c63c36328c6f1804439add"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/ca08eafa1ed3974cc8eba37c337e500a4eef87cb",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/ca08eafa1ed3974cc8eba37c337e500a4eef87cb",
      "html_url": "https://github.com/appium/appium/commit/ca08eafa1ed3974cc8eba37c337e500a4eef87cb",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/ca08eafa1ed3974cc8eba37c337e500a4eef87cb/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "d1ebce883c11c946df5161717961f52018ce4d3b",
          "url": "https://api.github.com/repos/appium/appium/commits/d1ebce883c11c946df5161717961f52018ce4d3b",
          "html_url": "https://github.com/appium/appium/commit/d1ebce883c11c946df5161717961f52018ce4d3b"
        },
        {
          "sha": "194f012b6c5f6e7415d77690e5cdcced5937cc1e",
          "url": "https://api.github.com/repos/appium/appium/commits/194f012b6c5f6e7415d77690e5cdcced5937cc1e",
          "html_url": "https://github.com/appium/appium/commit/194f012b6c5f6e7415d77690e5cdcced5937cc1e"
        }
      ]
    },
    {
      "sha": "f6af4d9fcdbed4d066f963c9e5300ae6e4208c1b",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-10-09T00:18:22Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-10-09T00:18:22Z"
        },
        "message": "v1.5.0-beta7",
        "tree": {
          "sha": "3470ec05e5f91237a8492981e8860f6ca764f36d",
          "url": "https://api.github.com/repos/appium/appium/git/trees/3470ec05e5f91237a8492981e8860f6ca764f36d"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/f6af4d9fcdbed4d066f963c9e5300ae6e4208c1b",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/f6af4d9fcdbed4d066f963c9e5300ae6e4208c1b",
      "html_url": "https://github.com/appium/appium/commit/f6af4d9fcdbed4d066f963c9e5300ae6e4208c1b",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/f6af4d9fcdbed4d066f963c9e5300ae6e4208c1b/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "ca08eafa1ed3974cc8eba37c337e500a4eef87cb",
          "url": "https://api.github.com/repos/appium/appium/commits/ca08eafa1ed3974cc8eba37c337e500a4eef87cb",
          "html_url": "https://github.com/appium/appium/commit/ca08eafa1ed3974cc8eba37c337e500a4eef87cb"
        }
      ]
    },
    {
      "sha": "58ee94564e3646d24d4e51234e119885f325bd73",
      "commit": {
        "author": {
          "name": "Scott Dixon",
          "email": "scott@howrefreshing.com.au",
          "date": "2015-10-15T16:08:38Z"
        },
        "committer": {
          "name": "Scott Dixon",
          "email": "scott@howrefreshing.com.au",
          "date": "2015-10-15T16:10:27Z"
        },
        "message": "appium-doctor CLI link",
        "tree": {
          "sha": "924a024afe9935bf4610bad72d58d897e5d3af70",
          "url": "https://api.github.com/repos/appium/appium/git/trees/924a024afe9935bf4610bad72d58d897e5d3af70"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/58ee94564e3646d24d4e51234e119885f325bd73",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/58ee94564e3646d24d4e51234e119885f325bd73",
      "html_url": "https://github.com/appium/appium/commit/58ee94564e3646d24d4e51234e119885f325bd73",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/58ee94564e3646d24d4e51234e119885f325bd73/comments",
      "author": {
        "login": "scottdixon",
        "id": 4726068,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4726068?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottdixon",
        "html_url": "https://github.com/scottdixon",
        "followers_url": "https://api.github.com/users/scottdixon/followers",
        "following_url": "https://api.github.com/users/scottdixon/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottdixon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottdixon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottdixon/subscriptions",
        "organizations_url": "https://api.github.com/users/scottdixon/orgs",
        "repos_url": "https://api.github.com/users/scottdixon/repos",
        "events_url": "https://api.github.com/users/scottdixon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottdixon/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "scottdixon",
        "id": 4726068,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4726068?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottdixon",
        "html_url": "https://github.com/scottdixon",
        "followers_url": "https://api.github.com/users/scottdixon/followers",
        "following_url": "https://api.github.com/users/scottdixon/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottdixon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottdixon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottdixon/subscriptions",
        "organizations_url": "https://api.github.com/users/scottdixon/orgs",
        "repos_url": "https://api.github.com/users/scottdixon/repos",
        "events_url": "https://api.github.com/users/scottdixon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottdixon/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "f6af4d9fcdbed4d066f963c9e5300ae6e4208c1b",
          "url": "https://api.github.com/repos/appium/appium/commits/f6af4d9fcdbed4d066f963c9e5300ae6e4208c1b",
          "html_url": "https://github.com/appium/appium/commit/f6af4d9fcdbed4d066f963c9e5300ae6e4208c1b"
        }
      ]
    },
    {
      "sha": "7ae3302dfe597bd67a5d7a06f288db51b5cff13e",
      "commit": {
        "author": {
          "name": "Scott Dixon",
          "email": "scottdixon@saucelabs.com",
          "date": "2015-10-15T19:49:33Z"
        },
        "committer": {
          "name": "Scott Dixon",
          "email": "scottdixon@saucelabs.com",
          "date": "2015-10-15T19:49:33Z"
        },
        "message": "Merge pull request #5729 from scottdixon/1.5-cli\n\nappium-doctor CLI link",
        "tree": {
          "sha": "924a024afe9935bf4610bad72d58d897e5d3af70",
          "url": "https://api.github.com/repos/appium/appium/git/trees/924a024afe9935bf4610bad72d58d897e5d3af70"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/7ae3302dfe597bd67a5d7a06f288db51b5cff13e",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/7ae3302dfe597bd67a5d7a06f288db51b5cff13e",
      "html_url": "https://github.com/appium/appium/commit/7ae3302dfe597bd67a5d7a06f288db51b5cff13e",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/7ae3302dfe597bd67a5d7a06f288db51b5cff13e/comments",
      "author": null,
      "committer": null,
      "parents": [
        {
          "sha": "f6af4d9fcdbed4d066f963c9e5300ae6e4208c1b",
          "url": "https://api.github.com/repos/appium/appium/commits/f6af4d9fcdbed4d066f963c9e5300ae6e4208c1b",
          "html_url": "https://github.com/appium/appium/commit/f6af4d9fcdbed4d066f963c9e5300ae6e4208c1b"
        },
        {
          "sha": "58ee94564e3646d24d4e51234e119885f325bd73",
          "url": "https://api.github.com/repos/appium/appium/commits/58ee94564e3646d24d4e51234e119885f325bd73",
          "html_url": "https://github.com/appium/appium/commit/58ee94564e3646d24d4e51234e119885f325bd73"
        }
      ]
    },
    {
      "sha": "6e921a9992ed0b597271201bace00c809debdaed",
      "commit": {
        "author": {
          "name": "Scott Dixon",
          "email": "scott@howrefreshing.com.au",
          "date": "2015-10-16T16:10:53Z"
        },
        "committer": {
          "name": "Scott Dixon",
          "email": "scott@howrefreshing.com.au",
          "date": "2015-10-16T16:10:53Z"
        },
        "message": "CLI: appium-doctor shortcut",
        "tree": {
          "sha": "cc58f4e91b19f2eaeadddb6539ad324b654648cb",
          "url": "https://api.github.com/repos/appium/appium/git/trees/cc58f4e91b19f2eaeadddb6539ad324b654648cb"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/6e921a9992ed0b597271201bace00c809debdaed",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/6e921a9992ed0b597271201bace00c809debdaed",
      "html_url": "https://github.com/appium/appium/commit/6e921a9992ed0b597271201bace00c809debdaed",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/6e921a9992ed0b597271201bace00c809debdaed/comments",
      "author": {
        "login": "scottdixon",
        "id": 4726068,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4726068?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottdixon",
        "html_url": "https://github.com/scottdixon",
        "followers_url": "https://api.github.com/users/scottdixon/followers",
        "following_url": "https://api.github.com/users/scottdixon/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottdixon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottdixon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottdixon/subscriptions",
        "organizations_url": "https://api.github.com/users/scottdixon/orgs",
        "repos_url": "https://api.github.com/users/scottdixon/repos",
        "events_url": "https://api.github.com/users/scottdixon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottdixon/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "scottdixon",
        "id": 4726068,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4726068?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottdixon",
        "html_url": "https://github.com/scottdixon",
        "followers_url": "https://api.github.com/users/scottdixon/followers",
        "following_url": "https://api.github.com/users/scottdixon/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottdixon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottdixon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottdixon/subscriptions",
        "organizations_url": "https://api.github.com/users/scottdixon/orgs",
        "repos_url": "https://api.github.com/users/scottdixon/repos",
        "events_url": "https://api.github.com/users/scottdixon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottdixon/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "58ee94564e3646d24d4e51234e119885f325bd73",
          "url": "https://api.github.com/repos/appium/appium/commits/58ee94564e3646d24d4e51234e119885f325bd73",
          "html_url": "https://github.com/appium/appium/commit/58ee94564e3646d24d4e51234e119885f325bd73"
        }
      ]
    },
    {
      "sha": "0c8c40883ffa05a00874922262a4615b5b3f6411",
      "commit": {
        "author": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-10-16T21:37:09Z"
        },
        "committer": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-10-16T21:37:09Z"
        },
        "message": "Merge pull request #5734 from scottdixon/1.5-cli\n\nCLI: appium-doctor shortcut",
        "tree": {
          "sha": "cc58f4e91b19f2eaeadddb6539ad324b654648cb",
          "url": "https://api.github.com/repos/appium/appium/git/trees/cc58f4e91b19f2eaeadddb6539ad324b654648cb"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/0c8c40883ffa05a00874922262a4615b5b3f6411",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/0c8c40883ffa05a00874922262a4615b5b3f6411",
      "html_url": "https://github.com/appium/appium/commit/0c8c40883ffa05a00874922262a4615b5b3f6411",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/0c8c40883ffa05a00874922262a4615b5b3f6411/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "7ae3302dfe597bd67a5d7a06f288db51b5cff13e",
          "url": "https://api.github.com/repos/appium/appium/commits/7ae3302dfe597bd67a5d7a06f288db51b5cff13e",
          "html_url": "https://github.com/appium/appium/commit/7ae3302dfe597bd67a5d7a06f288db51b5cff13e"
        },
        {
          "sha": "6e921a9992ed0b597271201bace00c809debdaed",
          "url": "https://api.github.com/repos/appium/appium/commits/6e921a9992ed0b597271201bace00c809debdaed",
          "html_url": "https://github.com/appium/appium/commit/6e921a9992ed0b597271201bace00c809debdaed"
        }
      ]
    },
    {
      "sha": "16fb228bd6206b55cc216021eb24c9dd1ac8050b",
      "commit": {
        "author": {
          "name": "Scott Dixon",
          "email": "scott@howrefreshing.com.au",
          "date": "2015-10-19T21:40:58Z"
        },
        "committer": {
          "name": "Scott Dixon",
          "email": "scott@howrefreshing.com.au",
          "date": "2015-10-19T21:40:58Z"
        },
        "message": "Updated dependency: appium-doctor",
        "tree": {
          "sha": "d39425f2979fe6fa28ec7585562872c3b38ae0a6",
          "url": "https://api.github.com/repos/appium/appium/git/trees/d39425f2979fe6fa28ec7585562872c3b38ae0a6"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/16fb228bd6206b55cc216021eb24c9dd1ac8050b",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/16fb228bd6206b55cc216021eb24c9dd1ac8050b",
      "html_url": "https://github.com/appium/appium/commit/16fb228bd6206b55cc216021eb24c9dd1ac8050b",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/16fb228bd6206b55cc216021eb24c9dd1ac8050b/comments",
      "author": {
        "login": "scottdixon",
        "id": 4726068,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4726068?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottdixon",
        "html_url": "https://github.com/scottdixon",
        "followers_url": "https://api.github.com/users/scottdixon/followers",
        "following_url": "https://api.github.com/users/scottdixon/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottdixon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottdixon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottdixon/subscriptions",
        "organizations_url": "https://api.github.com/users/scottdixon/orgs",
        "repos_url": "https://api.github.com/users/scottdixon/repos",
        "events_url": "https://api.github.com/users/scottdixon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottdixon/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "scottdixon",
        "id": 4726068,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4726068?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottdixon",
        "html_url": "https://github.com/scottdixon",
        "followers_url": "https://api.github.com/users/scottdixon/followers",
        "following_url": "https://api.github.com/users/scottdixon/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottdixon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottdixon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottdixon/subscriptions",
        "organizations_url": "https://api.github.com/users/scottdixon/orgs",
        "repos_url": "https://api.github.com/users/scottdixon/repos",
        "events_url": "https://api.github.com/users/scottdixon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottdixon/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "0c8c40883ffa05a00874922262a4615b5b3f6411",
          "url": "https://api.github.com/repos/appium/appium/commits/0c8c40883ffa05a00874922262a4615b5b3f6411",
          "html_url": "https://github.com/appium/appium/commit/0c8c40883ffa05a00874922262a4615b5b3f6411"
        }
      ]
    },
    {
      "sha": "2c87a61a3eb4b328f7508b614d67545516725f8c",
      "commit": {
        "author": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-10-19T22:04:48Z"
        },
        "committer": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-10-19T22:04:48Z"
        },
        "message": "Merge pull request #5742 from scottdixon/1.5-dep-appium-doctor\n\nUpdated dependency: appium-doctor",
        "tree": {
          "sha": "d39425f2979fe6fa28ec7585562872c3b38ae0a6",
          "url": "https://api.github.com/repos/appium/appium/git/trees/d39425f2979fe6fa28ec7585562872c3b38ae0a6"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/2c87a61a3eb4b328f7508b614d67545516725f8c",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/2c87a61a3eb4b328f7508b614d67545516725f8c",
      "html_url": "https://github.com/appium/appium/commit/2c87a61a3eb4b328f7508b614d67545516725f8c",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/2c87a61a3eb4b328f7508b614d67545516725f8c/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "0c8c40883ffa05a00874922262a4615b5b3f6411",
          "url": "https://api.github.com/repos/appium/appium/commits/0c8c40883ffa05a00874922262a4615b5b3f6411",
          "html_url": "https://github.com/appium/appium/commit/0c8c40883ffa05a00874922262a4615b5b3f6411"
        },
        {
          "sha": "16fb228bd6206b55cc216021eb24c9dd1ac8050b",
          "url": "https://api.github.com/repos/appium/appium/commits/16fb228bd6206b55cc216021eb24c9dd1ac8050b",
          "html_url": "https://github.com/appium/appium/commit/16fb228bd6206b55cc216021eb24c9dd1ac8050b"
        }
      ]
    },
    {
      "sha": "64d36041a9f8a828f42d1d7b80b92eb2300689ac",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-10-28T00:44:06Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-10-28T00:44:06Z"
        },
        "message": "don't let getDriverForCaps blow up mysteriously on forgotten platformName",
        "tree": {
          "sha": "7a2665b56929eb3c1b56e01072392437f74c8191",
          "url": "https://api.github.com/repos/appium/appium/git/trees/7a2665b56929eb3c1b56e01072392437f74c8191"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/64d36041a9f8a828f42d1d7b80b92eb2300689ac",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/64d36041a9f8a828f42d1d7b80b92eb2300689ac",
      "html_url": "https://github.com/appium/appium/commit/64d36041a9f8a828f42d1d7b80b92eb2300689ac",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/64d36041a9f8a828f42d1d7b80b92eb2300689ac/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "2c87a61a3eb4b328f7508b614d67545516725f8c",
          "url": "https://api.github.com/repos/appium/appium/commits/2c87a61a3eb4b328f7508b614d67545516725f8c",
          "html_url": "https://github.com/appium/appium/commit/2c87a61a3eb4b328f7508b614d67545516725f8c"
        }
      ]
    },
    {
      "sha": "cd07216fb62fb1be34da03f42aac887f8706391f",
      "commit": {
        "author": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-10-28T15:32:25Z"
        },
        "committer": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-10-28T15:32:25Z"
        },
        "message": "Merge pull request #5770 from jlipps/1.5\n\ndon't let getDriverForCaps blow up mysteriously on forgotten platformName",
        "tree": {
          "sha": "7a2665b56929eb3c1b56e01072392437f74c8191",
          "url": "https://api.github.com/repos/appium/appium/git/trees/7a2665b56929eb3c1b56e01072392437f74c8191"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/cd07216fb62fb1be34da03f42aac887f8706391f",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/cd07216fb62fb1be34da03f42aac887f8706391f",
      "html_url": "https://github.com/appium/appium/commit/cd07216fb62fb1be34da03f42aac887f8706391f",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/cd07216fb62fb1be34da03f42aac887f8706391f/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "2c87a61a3eb4b328f7508b614d67545516725f8c",
          "url": "https://api.github.com/repos/appium/appium/commits/2c87a61a3eb4b328f7508b614d67545516725f8c",
          "html_url": "https://github.com/appium/appium/commit/2c87a61a3eb4b328f7508b614d67545516725f8c"
        },
        {
          "sha": "64d36041a9f8a828f42d1d7b80b92eb2300689ac",
          "url": "https://api.github.com/repos/appium/appium/commits/64d36041a9f8a828f42d1d7b80b92eb2300689ac",
          "html_url": "https://github.com/appium/appium/commit/64d36041a9f8a828f42d1d7b80b92eb2300689ac"
        }
      ]
    },
    {
      "sha": "dbda2be7410e05e035f975214ffa1f0d6c205ce7",
      "commit": {
        "author": {
          "name": "christian-bromann",
          "email": "contact@christian-bromann.com",
          "date": "2015-10-29T01:05:25Z"
        },
        "committer": {
          "name": "christian-bromann",
          "email": "contact@christian-bromann.com",
          "date": "2015-10-29T15:54:11Z"
        },
        "message": "fixed npm commands to work with appium-gulp-plugins",
        "tree": {
          "sha": "9618fb02c3bec00ea9269e28b6ec921d1fa62dfb",
          "url": "https://api.github.com/repos/appium/appium/git/trees/9618fb02c3bec00ea9269e28b6ec921d1fa62dfb"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/dbda2be7410e05e035f975214ffa1f0d6c205ce7",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/dbda2be7410e05e035f975214ffa1f0d6c205ce7",
      "html_url": "https://github.com/appium/appium/commit/dbda2be7410e05e035f975214ffa1f0d6c205ce7",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/dbda2be7410e05e035f975214ffa1f0d6c205ce7/comments",
      "author": {
        "login": "christian-bromann",
        "id": 731337,
        "avatar_url": "https://avatars1.githubusercontent.com/u/731337?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/christian-bromann",
        "html_url": "https://github.com/christian-bromann",
        "followers_url": "https://api.github.com/users/christian-bromann/followers",
        "following_url": "https://api.github.com/users/christian-bromann/following{/other_user}",
        "gists_url": "https://api.github.com/users/christian-bromann/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/christian-bromann/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/christian-bromann/subscriptions",
        "organizations_url": "https://api.github.com/users/christian-bromann/orgs",
        "repos_url": "https://api.github.com/users/christian-bromann/repos",
        "events_url": "https://api.github.com/users/christian-bromann/events{/privacy}",
        "received_events_url": "https://api.github.com/users/christian-bromann/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "christian-bromann",
        "id": 731337,
        "avatar_url": "https://avatars1.githubusercontent.com/u/731337?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/christian-bromann",
        "html_url": "https://github.com/christian-bromann",
        "followers_url": "https://api.github.com/users/christian-bromann/followers",
        "following_url": "https://api.github.com/users/christian-bromann/following{/other_user}",
        "gists_url": "https://api.github.com/users/christian-bromann/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/christian-bromann/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/christian-bromann/subscriptions",
        "organizations_url": "https://api.github.com/users/christian-bromann/orgs",
        "repos_url": "https://api.github.com/users/christian-bromann/repos",
        "events_url": "https://api.github.com/users/christian-bromann/events{/privacy}",
        "received_events_url": "https://api.github.com/users/christian-bromann/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "cd07216fb62fb1be34da03f42aac887f8706391f",
          "url": "https://api.github.com/repos/appium/appium/commits/cd07216fb62fb1be34da03f42aac887f8706391f",
          "html_url": "https://github.com/appium/appium/commit/cd07216fb62fb1be34da03f42aac887f8706391f"
        }
      ]
    },
    {
      "sha": "2c457204f0a73cdd7719761e4b8d4d0a3e837029",
      "commit": {
        "author": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-10-29T16:18:16Z"
        },
        "committer": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-10-29T16:18:16Z"
        },
        "message": "Merge pull request #5776 from christian-bromann/npm-commands-fix\n\nfixed npm commands to work with appium-gulp-plugins",
        "tree": {
          "sha": "9618fb02c3bec00ea9269e28b6ec921d1fa62dfb",
          "url": "https://api.github.com/repos/appium/appium/git/trees/9618fb02c3bec00ea9269e28b6ec921d1fa62dfb"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/2c457204f0a73cdd7719761e4b8d4d0a3e837029",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/2c457204f0a73cdd7719761e4b8d4d0a3e837029",
      "html_url": "https://github.com/appium/appium/commit/2c457204f0a73cdd7719761e4b8d4d0a3e837029",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/2c457204f0a73cdd7719761e4b8d4d0a3e837029/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "cd07216fb62fb1be34da03f42aac887f8706391f",
          "url": "https://api.github.com/repos/appium/appium/commits/cd07216fb62fb1be34da03f42aac887f8706391f",
          "html_url": "https://github.com/appium/appium/commit/cd07216fb62fb1be34da03f42aac887f8706391f"
        },
        {
          "sha": "dbda2be7410e05e035f975214ffa1f0d6c205ce7",
          "url": "https://api.github.com/repos/appium/appium/commits/dbda2be7410e05e035f975214ffa1f0d6c205ce7",
          "html_url": "https://github.com/appium/appium/commit/dbda2be7410e05e035f975214ffa1f0d6c205ce7"
        }
      ]
    },
    {
      "sha": "7a85a4a3d7687a6b5e511565feeb10874c2f5610",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-10-29T17:41:33Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-10-29T17:41:33Z"
        },
        "message": "Add helpers for checking proxy status",
        "tree": {
          "sha": "9dbc849af63fcfa49206ded2c12054a0f14d39e6",
          "url": "https://api.github.com/repos/appium/appium/git/trees/9dbc849af63fcfa49206ded2c12054a0f14d39e6"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/7a85a4a3d7687a6b5e511565feeb10874c2f5610",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/7a85a4a3d7687a6b5e511565feeb10874c2f5610",
      "html_url": "https://github.com/appium/appium/commit/7a85a4a3d7687a6b5e511565feeb10874c2f5610",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/7a85a4a3d7687a6b5e511565feeb10874c2f5610/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "2c457204f0a73cdd7719761e4b8d4d0a3e837029",
          "url": "https://api.github.com/repos/appium/appium/commits/2c457204f0a73cdd7719761e4b8d4d0a3e837029",
          "html_url": "https://github.com/appium/appium/commit/2c457204f0a73cdd7719761e4b8d4d0a3e837029"
        }
      ]
    },
    {
      "sha": "ac892822efbbadd858c34cc4fad7d016d6fabad9",
      "commit": {
        "author": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-10-29T17:48:17Z"
        },
        "committer": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-10-29T17:48:17Z"
        },
        "message": "Merge pull request #5782 from appium/isaac-proxy\n\nAdd helpers for checking proxy status",
        "tree": {
          "sha": "9dbc849af63fcfa49206ded2c12054a0f14d39e6",
          "url": "https://api.github.com/repos/appium/appium/git/trees/9dbc849af63fcfa49206ded2c12054a0f14d39e6"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/ac892822efbbadd858c34cc4fad7d016d6fabad9",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/ac892822efbbadd858c34cc4fad7d016d6fabad9",
      "html_url": "https://github.com/appium/appium/commit/ac892822efbbadd858c34cc4fad7d016d6fabad9",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/ac892822efbbadd858c34cc4fad7d016d6fabad9/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "2c457204f0a73cdd7719761e4b8d4d0a3e837029",
          "url": "https://api.github.com/repos/appium/appium/commits/2c457204f0a73cdd7719761e4b8d4d0a3e837029",
          "html_url": "https://github.com/appium/appium/commit/2c457204f0a73cdd7719761e4b8d4d0a3e837029"
        },
        {
          "sha": "7a85a4a3d7687a6b5e511565feeb10874c2f5610",
          "url": "https://api.github.com/repos/appium/appium/commits/7a85a4a3d7687a6b5e511565feeb10874c2f5610",
          "html_url": "https://github.com/appium/appium/commit/7a85a4a3d7687a6b5e511565feeb10874c2f5610"
        }
      ]
    },
    {
      "sha": "f6693c1c8866253db95643405a3246902d44459c",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-11-03T16:55:01Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-11-09T17:18:48Z"
        },
        "message": "Wire selendroid into appium",
        "tree": {
          "sha": "df13be1dbe1f751984ba31b85e65ee41efa91ea4",
          "url": "https://api.github.com/repos/appium/appium/git/trees/df13be1dbe1f751984ba31b85e65ee41efa91ea4"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/f6693c1c8866253db95643405a3246902d44459c",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/f6693c1c8866253db95643405a3246902d44459c",
      "html_url": "https://github.com/appium/appium/commit/f6693c1c8866253db95643405a3246902d44459c",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/f6693c1c8866253db95643405a3246902d44459c/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "ac892822efbbadd858c34cc4fad7d016d6fabad9",
          "url": "https://api.github.com/repos/appium/appium/commits/ac892822efbbadd858c34cc4fad7d016d6fabad9",
          "html_url": "https://github.com/appium/appium/commit/ac892822efbbadd858c34cc4fad7d016d6fabad9"
        }
      ]
    },
    {
      "sha": "5e86e8539834907e4b81d7622405a8929020cd14",
      "commit": {
        "author": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-11-09T17:51:53Z"
        },
        "committer": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-11-09T17:51:53Z"
        },
        "message": "Merge pull request #5812 from appium/isaac-selendroid\n\nWire selendroid into appium",
        "tree": {
          "sha": "df13be1dbe1f751984ba31b85e65ee41efa91ea4",
          "url": "https://api.github.com/repos/appium/appium/git/trees/df13be1dbe1f751984ba31b85e65ee41efa91ea4"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/5e86e8539834907e4b81d7622405a8929020cd14",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/5e86e8539834907e4b81d7622405a8929020cd14",
      "html_url": "https://github.com/appium/appium/commit/5e86e8539834907e4b81d7622405a8929020cd14",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/5e86e8539834907e4b81d7622405a8929020cd14/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "ac892822efbbadd858c34cc4fad7d016d6fabad9",
          "url": "https://api.github.com/repos/appium/appium/commits/ac892822efbbadd858c34cc4fad7d016d6fabad9",
          "html_url": "https://github.com/appium/appium/commit/ac892822efbbadd858c34cc4fad7d016d6fabad9"
        },
        {
          "sha": "f6693c1c8866253db95643405a3246902d44459c",
          "url": "https://api.github.com/repos/appium/appium/commits/f6693c1c8866253db95643405a3246902d44459c",
          "html_url": "https://github.com/appium/appium/commit/f6693c1c8866253db95643405a3246902d44459c"
        }
      ]
    },
    {
      "sha": "8bd544b5b1b14edab8c9ac0a5e70ada7faeec794",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-11-03T19:16:42Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-11-10T21:04:56Z"
        },
        "message": "Check with individual drivers for proxy status",
        "tree": {
          "sha": "c646cedc791f09b38d7ae6115f0ab04b6c0e950a",
          "url": "https://api.github.com/repos/appium/appium/git/trees/c646cedc791f09b38d7ae6115f0ab04b6c0e950a"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/8bd544b5b1b14edab8c9ac0a5e70ada7faeec794",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/8bd544b5b1b14edab8c9ac0a5e70ada7faeec794",
      "html_url": "https://github.com/appium/appium/commit/8bd544b5b1b14edab8c9ac0a5e70ada7faeec794",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/8bd544b5b1b14edab8c9ac0a5e70ada7faeec794/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "ac892822efbbadd858c34cc4fad7d016d6fabad9",
          "url": "https://api.github.com/repos/appium/appium/commits/ac892822efbbadd858c34cc4fad7d016d6fabad9",
          "html_url": "https://github.com/appium/appium/commit/ac892822efbbadd858c34cc4fad7d016d6fabad9"
        }
      ]
    },
    {
      "sha": "464f03beea0ab4ac96ee1f9305900b32500da19c",
      "commit": {
        "author": {
          "name": "christian-bromann",
          "email": "contact@christian-bromann.com",
          "date": "2015-11-09T21:15:01Z"
        },
        "committer": {
          "name": "christian-bromann",
          "email": "contact@christian-bromann.com",
          "date": "2015-11-10T21:21:54Z"
        },
        "message": "added notes from on boarding",
        "tree": {
          "sha": "926113a868b8e3263c665b82e601ecb237bd2359",
          "url": "https://api.github.com/repos/appium/appium/git/trees/926113a868b8e3263c665b82e601ecb237bd2359"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/464f03beea0ab4ac96ee1f9305900b32500da19c",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/464f03beea0ab4ac96ee1f9305900b32500da19c",
      "html_url": "https://github.com/appium/appium/commit/464f03beea0ab4ac96ee1f9305900b32500da19c",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/464f03beea0ab4ac96ee1f9305900b32500da19c/comments",
      "author": {
        "login": "christian-bromann",
        "id": 731337,
        "avatar_url": "https://avatars1.githubusercontent.com/u/731337?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/christian-bromann",
        "html_url": "https://github.com/christian-bromann",
        "followers_url": "https://api.github.com/users/christian-bromann/followers",
        "following_url": "https://api.github.com/users/christian-bromann/following{/other_user}",
        "gists_url": "https://api.github.com/users/christian-bromann/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/christian-bromann/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/christian-bromann/subscriptions",
        "organizations_url": "https://api.github.com/users/christian-bromann/orgs",
        "repos_url": "https://api.github.com/users/christian-bromann/repos",
        "events_url": "https://api.github.com/users/christian-bromann/events{/privacy}",
        "received_events_url": "https://api.github.com/users/christian-bromann/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "christian-bromann",
        "id": 731337,
        "avatar_url": "https://avatars1.githubusercontent.com/u/731337?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/christian-bromann",
        "html_url": "https://github.com/christian-bromann",
        "followers_url": "https://api.github.com/users/christian-bromann/followers",
        "following_url": "https://api.github.com/users/christian-bromann/following{/other_user}",
        "gists_url": "https://api.github.com/users/christian-bromann/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/christian-bromann/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/christian-bromann/subscriptions",
        "organizations_url": "https://api.github.com/users/christian-bromann/orgs",
        "repos_url": "https://api.github.com/users/christian-bromann/repos",
        "events_url": "https://api.github.com/users/christian-bromann/events{/privacy}",
        "received_events_url": "https://api.github.com/users/christian-bromann/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "5e86e8539834907e4b81d7622405a8929020cd14",
          "url": "https://api.github.com/repos/appium/appium/commits/5e86e8539834907e4b81d7622405a8929020cd14",
          "html_url": "https://github.com/appium/appium/commit/5e86e8539834907e4b81d7622405a8929020cd14"
        }
      ]
    },
    {
      "sha": "72ef20a14295c5d4f04195f88fe6264da54fdc2b",
      "commit": {
        "author": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-11-10T21:45:40Z"
        },
        "committer": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-11-10T21:45:40Z"
        },
        "message": "Merge pull request #5818 from appium/isaac-proxy\n\nCheck with individual drivers for proxy status",
        "tree": {
          "sha": "510d9d5add79dff6371c3d4b8bcd6d705eca11e6",
          "url": "https://api.github.com/repos/appium/appium/git/trees/510d9d5add79dff6371c3d4b8bcd6d705eca11e6"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/72ef20a14295c5d4f04195f88fe6264da54fdc2b",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/72ef20a14295c5d4f04195f88fe6264da54fdc2b",
      "html_url": "https://github.com/appium/appium/commit/72ef20a14295c5d4f04195f88fe6264da54fdc2b",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/72ef20a14295c5d4f04195f88fe6264da54fdc2b/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "5e86e8539834907e4b81d7622405a8929020cd14",
          "url": "https://api.github.com/repos/appium/appium/commits/5e86e8539834907e4b81d7622405a8929020cd14",
          "html_url": "https://github.com/appium/appium/commit/5e86e8539834907e4b81d7622405a8929020cd14"
        },
        {
          "sha": "8bd544b5b1b14edab8c9ac0a5e70ada7faeec794",
          "url": "https://api.github.com/repos/appium/appium/commits/8bd544b5b1b14edab8c9ac0a5e70ada7faeec794",
          "html_url": "https://github.com/appium/appium/commit/8bd544b5b1b14edab8c9ac0a5e70ada7faeec794"
        }
      ]
    },
    {
      "sha": "2e3d354d6b910c0fa910689760af8c607e9b3834",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-11-10T20:56:59Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-11-10T21:47:41Z"
        },
        "message": "Fix some style stuff",
        "tree": {
          "sha": "8fb4084bad2f258936d653504650c4bbdf9950a0",
          "url": "https://api.github.com/repos/appium/appium/git/trees/8fb4084bad2f258936d653504650c4bbdf9950a0"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/2e3d354d6b910c0fa910689760af8c607e9b3834",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/2e3d354d6b910c0fa910689760af8c607e9b3834",
      "html_url": "https://github.com/appium/appium/commit/2e3d354d6b910c0fa910689760af8c607e9b3834",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/2e3d354d6b910c0fa910689760af8c607e9b3834/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "72ef20a14295c5d4f04195f88fe6264da54fdc2b",
          "url": "https://api.github.com/repos/appium/appium/commits/72ef20a14295c5d4f04195f88fe6264da54fdc2b",
          "html_url": "https://github.com/appium/appium/commit/72ef20a14295c5d4f04195f88fe6264da54fdc2b"
        }
      ]
    },
    {
      "sha": "6e4d9502f6887103310dc8cd56621d2ef338da55",
      "commit": {
        "author": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-11-11T16:05:39Z"
        },
        "committer": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-11-11T16:05:39Z"
        },
        "message": "Merge pull request #5813 from christian-bromann/nutshell\n\nOverview of all Appium packages",
        "tree": {
          "sha": "b201865ef53ef29dd837eaee6e9290c64a9fd242",
          "url": "https://api.github.com/repos/appium/appium/git/trees/b201865ef53ef29dd837eaee6e9290c64a9fd242"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/6e4d9502f6887103310dc8cd56621d2ef338da55",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/6e4d9502f6887103310dc8cd56621d2ef338da55",
      "html_url": "https://github.com/appium/appium/commit/6e4d9502f6887103310dc8cd56621d2ef338da55",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/6e4d9502f6887103310dc8cd56621d2ef338da55/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "72ef20a14295c5d4f04195f88fe6264da54fdc2b",
          "url": "https://api.github.com/repos/appium/appium/commits/72ef20a14295c5d4f04195f88fe6264da54fdc2b",
          "html_url": "https://github.com/appium/appium/commit/72ef20a14295c5d4f04195f88fe6264da54fdc2b"
        },
        {
          "sha": "464f03beea0ab4ac96ee1f9305900b32500da19c",
          "url": "https://api.github.com/repos/appium/appium/commits/464f03beea0ab4ac96ee1f9305900b32500da19c",
          "html_url": "https://github.com/appium/appium/commit/464f03beea0ab4ac96ee1f9305900b32500da19c"
        }
      ]
    },
    {
      "sha": "b31295a7d9fa4fc19879169a5d302eaba66d4676",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-11-11T18:47:31Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-11-11T18:47:31Z"
        },
        "message": "Clean up and fix sync",
        "tree": {
          "sha": "b013e213529318f29aab6652ec12043db80eb055",
          "url": "https://api.github.com/repos/appium/appium/git/trees/b013e213529318f29aab6652ec12043db80eb055"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/b31295a7d9fa4fc19879169a5d302eaba66d4676",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/b31295a7d9fa4fc19879169a5d302eaba66d4676",
      "html_url": "https://github.com/appium/appium/commit/b31295a7d9fa4fc19879169a5d302eaba66d4676",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/b31295a7d9fa4fc19879169a5d302eaba66d4676/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "2e3d354d6b910c0fa910689760af8c607e9b3834",
          "url": "https://api.github.com/repos/appium/appium/commits/2e3d354d6b910c0fa910689760af8c607e9b3834",
          "html_url": "https://github.com/appium/appium/commit/2e3d354d6b910c0fa910689760af8c607e9b3834"
        }
      ]
    },
    {
      "sha": "c4c7039f6ec4ef97ed6c9355a2d6614d27946b67",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-11-11T18:48:16Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-11-11T18:48:16Z"
        },
        "message": "Add grid registration",
        "tree": {
          "sha": "221e3bace72a1ed2dac987615bb9d7e97d219b89",
          "url": "https://api.github.com/repos/appium/appium/git/trees/221e3bace72a1ed2dac987615bb9d7e97d219b89"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/c4c7039f6ec4ef97ed6c9355a2d6614d27946b67",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/c4c7039f6ec4ef97ed6c9355a2d6614d27946b67",
      "html_url": "https://github.com/appium/appium/commit/c4c7039f6ec4ef97ed6c9355a2d6614d27946b67",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/c4c7039f6ec4ef97ed6c9355a2d6614d27946b67/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "b31295a7d9fa4fc19879169a5d302eaba66d4676",
          "url": "https://api.github.com/repos/appium/appium/commits/b31295a7d9fa4fc19879169a5d302eaba66d4676",
          "html_url": "https://github.com/appium/appium/commit/b31295a7d9fa4fc19879169a5d302eaba66d4676"
        }
      ]
    },
    {
      "sha": "533bc55bcbb71810aa0dc89f7464f40e93e0ed80",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-11-13T01:06:04Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-11-13T18:08:47Z"
        },
        "message": "beef up our contributing docs",
        "tree": {
          "sha": "ea132f7e0d9aa73f58371c52bb0be4e0ffb7af02",
          "url": "https://api.github.com/repos/appium/appium/git/trees/ea132f7e0d9aa73f58371c52bb0be4e0ffb7af02"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/533bc55bcbb71810aa0dc89f7464f40e93e0ed80",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/533bc55bcbb71810aa0dc89f7464f40e93e0ed80",
      "html_url": "https://github.com/appium/appium/commit/533bc55bcbb71810aa0dc89f7464f40e93e0ed80",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/533bc55bcbb71810aa0dc89f7464f40e93e0ed80/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "6e4d9502f6887103310dc8cd56621d2ef338da55",
          "url": "https://api.github.com/repos/appium/appium/commits/6e4d9502f6887103310dc8cd56621d2ef338da55",
          "html_url": "https://github.com/appium/appium/commit/6e4d9502f6887103310dc8cd56621d2ef338da55"
        }
      ]
    },
    {
      "sha": "269f23820c8b73b51d00dd4f1ec3d3bb3dcacf44",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-11-11T18:58:30Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-11-16T21:43:02Z"
        },
        "message": "Add coveralls to travis",
        "tree": {
          "sha": "3c02f8d3d4d13603d745922ef12880f1bd67975d",
          "url": "https://api.github.com/repos/appium/appium/git/trees/3c02f8d3d4d13603d745922ef12880f1bd67975d"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/269f23820c8b73b51d00dd4f1ec3d3bb3dcacf44",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/269f23820c8b73b51d00dd4f1ec3d3bb3dcacf44",
      "html_url": "https://github.com/appium/appium/commit/269f23820c8b73b51d00dd4f1ec3d3bb3dcacf44",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/269f23820c8b73b51d00dd4f1ec3d3bb3dcacf44/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "c4c7039f6ec4ef97ed6c9355a2d6614d27946b67",
          "url": "https://api.github.com/repos/appium/appium/commits/c4c7039f6ec4ef97ed6c9355a2d6614d27946b67",
          "html_url": "https://github.com/appium/appium/commit/c4c7039f6ec4ef97ed6c9355a2d6614d27946b67"
        }
      ]
    },
    {
      "sha": "050e756b6cface5ea677f5ad5881a711bee1c1bb",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-11-16T21:51:14Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-11-16T21:51:14Z"
        },
        "message": "Update license",
        "tree": {
          "sha": "5041f7c92084f8172a34850e13d9d5a67ee1b833",
          "url": "https://api.github.com/repos/appium/appium/git/trees/5041f7c92084f8172a34850e13d9d5a67ee1b833"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/050e756b6cface5ea677f5ad5881a711bee1c1bb",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/050e756b6cface5ea677f5ad5881a711bee1c1bb",
      "html_url": "https://github.com/appium/appium/commit/050e756b6cface5ea677f5ad5881a711bee1c1bb",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/050e756b6cface5ea677f5ad5881a711bee1c1bb/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "269f23820c8b73b51d00dd4f1ec3d3bb3dcacf44",
          "url": "https://api.github.com/repos/appium/appium/commits/269f23820c8b73b51d00dd4f1ec3d3bb3dcacf44",
          "html_url": "https://github.com/appium/appium/commit/269f23820c8b73b51d00dd4f1ec3d3bb3dcacf44"
        }
      ]
    },
    {
      "sha": "5eb61db0f92203686df2e27a2f591f3288088947",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-11-17T19:42:30Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-11-17T20:58:59Z"
        },
        "message": "Fix proxy handling",
        "tree": {
          "sha": "b2423073d41e42c4b3e24a9e54221f44d017de0b",
          "url": "https://api.github.com/repos/appium/appium/git/trees/b2423073d41e42c4b3e24a9e54221f44d017de0b"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/5eb61db0f92203686df2e27a2f591f3288088947",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/5eb61db0f92203686df2e27a2f591f3288088947",
      "html_url": "https://github.com/appium/appium/commit/5eb61db0f92203686df2e27a2f591f3288088947",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/5eb61db0f92203686df2e27a2f591f3288088947/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "533bc55bcbb71810aa0dc89f7464f40e93e0ed80",
          "url": "https://api.github.com/repos/appium/appium/commits/533bc55bcbb71810aa0dc89f7464f40e93e0ed80",
          "html_url": "https://github.com/appium/appium/commit/533bc55bcbb71810aa0dc89f7464f40e93e0ed80"
        }
      ]
    },
    {
      "sha": "708ae628026e298c7e261a642f2f815d3a63a7a7",
      "commit": {
        "author": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-11-17T21:06:03Z"
        },
        "committer": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-11-17T21:06:03Z"
        },
        "message": "Merge pull request #5843 from appium/isaac-proxy-fix\n\nFix proxy handling",
        "tree": {
          "sha": "b2423073d41e42c4b3e24a9e54221f44d017de0b",
          "url": "https://api.github.com/repos/appium/appium/git/trees/b2423073d41e42c4b3e24a9e54221f44d017de0b"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/708ae628026e298c7e261a642f2f815d3a63a7a7",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/708ae628026e298c7e261a642f2f815d3a63a7a7",
      "html_url": "https://github.com/appium/appium/commit/708ae628026e298c7e261a642f2f815d3a63a7a7",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/708ae628026e298c7e261a642f2f815d3a63a7a7/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "533bc55bcbb71810aa0dc89f7464f40e93e0ed80",
          "url": "https://api.github.com/repos/appium/appium/commits/533bc55bcbb71810aa0dc89f7464f40e93e0ed80",
          "html_url": "https://github.com/appium/appium/commit/533bc55bcbb71810aa0dc89f7464f40e93e0ed80"
        },
        {
          "sha": "5eb61db0f92203686df2e27a2f591f3288088947",
          "url": "https://api.github.com/repos/appium/appium/commits/5eb61db0f92203686df2e27a2f591f3288088947",
          "html_url": "https://github.com/appium/appium/commit/5eb61db0f92203686df2e27a2f591f3288088947"
        }
      ]
    },
    {
      "sha": "8dbcdd47bdab41327d1c3ebddeff5d77402786b2",
      "commit": {
        "author": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-11-17T21:43:41Z"
        },
        "committer": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-11-17T21:43:41Z"
        },
        "message": "Merge pull request #5822 from appium/isaac-cleanup\n\nCleanup",
        "tree": {
          "sha": "e00e044d31598713c3efa50855c0491f7ba1be1e",
          "url": "https://api.github.com/repos/appium/appium/git/trees/e00e044d31598713c3efa50855c0491f7ba1be1e"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/8dbcdd47bdab41327d1c3ebddeff5d77402786b2",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/8dbcdd47bdab41327d1c3ebddeff5d77402786b2",
      "html_url": "https://github.com/appium/appium/commit/8dbcdd47bdab41327d1c3ebddeff5d77402786b2",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/8dbcdd47bdab41327d1c3ebddeff5d77402786b2/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "708ae628026e298c7e261a642f2f815d3a63a7a7",
          "url": "https://api.github.com/repos/appium/appium/commits/708ae628026e298c7e261a642f2f815d3a63a7a7",
          "html_url": "https://github.com/appium/appium/commit/708ae628026e298c7e261a642f2f815d3a63a7a7"
        },
        {
          "sha": "050e756b6cface5ea677f5ad5881a711bee1c1bb",
          "url": "https://api.github.com/repos/appium/appium/commits/050e756b6cface5ea677f5ad5881a711bee1c1bb",
          "html_url": "https://github.com/appium/appium/commit/050e756b6cface5ea677f5ad5881a711bee1c1bb"
        }
      ]
    },
    {
      "sha": "ba4896dea0ff45e9761dd622b6c9f124d4afab2c",
      "commit": {
        "author": {
          "name": "christian-bromann",
          "email": "contact@christian-bromann.com",
          "date": "2015-11-19T22:41:24Z"
        },
        "committer": {
          "name": "christian-bromann",
          "email": "contact@christian-bromann.com",
          "date": "2015-11-19T22:41:24Z"
        },
        "message": "added link to roadmap in Readme",
        "tree": {
          "sha": "d1dcae8e4ff4a1a0312070e01df40bbd8564b537",
          "url": "https://api.github.com/repos/appium/appium/git/trees/d1dcae8e4ff4a1a0312070e01df40bbd8564b537"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/ba4896dea0ff45e9761dd622b6c9f124d4afab2c",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/ba4896dea0ff45e9761dd622b6c9f124d4afab2c",
      "html_url": "https://github.com/appium/appium/commit/ba4896dea0ff45e9761dd622b6c9f124d4afab2c",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/ba4896dea0ff45e9761dd622b6c9f124d4afab2c/comments",
      "author": {
        "login": "christian-bromann",
        "id": 731337,
        "avatar_url": "https://avatars1.githubusercontent.com/u/731337?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/christian-bromann",
        "html_url": "https://github.com/christian-bromann",
        "followers_url": "https://api.github.com/users/christian-bromann/followers",
        "following_url": "https://api.github.com/users/christian-bromann/following{/other_user}",
        "gists_url": "https://api.github.com/users/christian-bromann/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/christian-bromann/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/christian-bromann/subscriptions",
        "organizations_url": "https://api.github.com/users/christian-bromann/orgs",
        "repos_url": "https://api.github.com/users/christian-bromann/repos",
        "events_url": "https://api.github.com/users/christian-bromann/events{/privacy}",
        "received_events_url": "https://api.github.com/users/christian-bromann/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "christian-bromann",
        "id": 731337,
        "avatar_url": "https://avatars1.githubusercontent.com/u/731337?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/christian-bromann",
        "html_url": "https://github.com/christian-bromann",
        "followers_url": "https://api.github.com/users/christian-bromann/followers",
        "following_url": "https://api.github.com/users/christian-bromann/following{/other_user}",
        "gists_url": "https://api.github.com/users/christian-bromann/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/christian-bromann/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/christian-bromann/subscriptions",
        "organizations_url": "https://api.github.com/users/christian-bromann/orgs",
        "repos_url": "https://api.github.com/users/christian-bromann/repos",
        "events_url": "https://api.github.com/users/christian-bromann/events{/privacy}",
        "received_events_url": "https://api.github.com/users/christian-bromann/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "8dbcdd47bdab41327d1c3ebddeff5d77402786b2",
          "url": "https://api.github.com/repos/appium/appium/commits/8dbcdd47bdab41327d1c3ebddeff5d77402786b2",
          "html_url": "https://github.com/appium/appium/commit/8dbcdd47bdab41327d1c3ebddeff5d77402786b2"
        }
      ]
    },
    {
      "sha": "4796032ceba3f1ee8e849efce35ac7155a194cc3",
      "commit": {
        "author": {
          "name": "christian-bromann",
          "email": "contact@christian-bromann.com",
          "date": "2015-11-19T22:55:35Z"
        },
        "committer": {
          "name": "christian-bromann",
          "email": "contact@christian-bromann.com",
          "date": "2015-11-19T22:55:35Z"
        },
        "message": "Add ability to configure remote debugger connection retries",
        "tree": {
          "sha": "5d32ad3087f7a4465c93efcf5dd13b296ce03eba",
          "url": "https://api.github.com/repos/appium/appium/git/trees/5d32ad3087f7a4465c93efcf5dd13b296ce03eba"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/4796032ceba3f1ee8e849efce35ac7155a194cc3",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/4796032ceba3f1ee8e849efce35ac7155a194cc3",
      "html_url": "https://github.com/appium/appium/commit/4796032ceba3f1ee8e849efce35ac7155a194cc3",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/4796032ceba3f1ee8e849efce35ac7155a194cc3/comments",
      "author": {
        "login": "christian-bromann",
        "id": 731337,
        "avatar_url": "https://avatars1.githubusercontent.com/u/731337?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/christian-bromann",
        "html_url": "https://github.com/christian-bromann",
        "followers_url": "https://api.github.com/users/christian-bromann/followers",
        "following_url": "https://api.github.com/users/christian-bromann/following{/other_user}",
        "gists_url": "https://api.github.com/users/christian-bromann/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/christian-bromann/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/christian-bromann/subscriptions",
        "organizations_url": "https://api.github.com/users/christian-bromann/orgs",
        "repos_url": "https://api.github.com/users/christian-bromann/repos",
        "events_url": "https://api.github.com/users/christian-bromann/events{/privacy}",
        "received_events_url": "https://api.github.com/users/christian-bromann/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "christian-bromann",
        "id": 731337,
        "avatar_url": "https://avatars1.githubusercontent.com/u/731337?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/christian-bromann",
        "html_url": "https://github.com/christian-bromann",
        "followers_url": "https://api.github.com/users/christian-bromann/followers",
        "following_url": "https://api.github.com/users/christian-bromann/following{/other_user}",
        "gists_url": "https://api.github.com/users/christian-bromann/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/christian-bromann/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/christian-bromann/subscriptions",
        "organizations_url": "https://api.github.com/users/christian-bromann/orgs",
        "repos_url": "https://api.github.com/users/christian-bromann/repos",
        "events_url": "https://api.github.com/users/christian-bromann/events{/privacy}",
        "received_events_url": "https://api.github.com/users/christian-bromann/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "8dbcdd47bdab41327d1c3ebddeff5d77402786b2",
          "url": "https://api.github.com/repos/appium/appium/commits/8dbcdd47bdab41327d1c3ebddeff5d77402786b2",
          "html_url": "https://github.com/appium/appium/commit/8dbcdd47bdab41327d1c3ebddeff5d77402786b2"
        }
      ]
    },
    {
      "sha": "1aee15d951898b2569ba21d1c2b1f798db434007",
      "commit": {
        "author": {
          "name": "christian-bromann",
          "email": "contact@christian-bromann.com",
          "date": "2015-11-19T23:54:37Z"
        },
        "committer": {
          "name": "christian-bromann",
          "email": "contact@christian-bromann.com",
          "date": "2015-11-19T23:54:37Z"
        },
        "message": "Advise to enable UI Automation on a device",
        "tree": {
          "sha": "88afd0bb779fcc0eaa1ded4b0549041f871a63c6",
          "url": "https://api.github.com/repos/appium/appium/git/trees/88afd0bb779fcc0eaa1ded4b0549041f871a63c6"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/1aee15d951898b2569ba21d1c2b1f798db434007",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/1aee15d951898b2569ba21d1c2b1f798db434007",
      "html_url": "https://github.com/appium/appium/commit/1aee15d951898b2569ba21d1c2b1f798db434007",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/1aee15d951898b2569ba21d1c2b1f798db434007/comments",
      "author": {
        "login": "christian-bromann",
        "id": 731337,
        "avatar_url": "https://avatars1.githubusercontent.com/u/731337?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/christian-bromann",
        "html_url": "https://github.com/christian-bromann",
        "followers_url": "https://api.github.com/users/christian-bromann/followers",
        "following_url": "https://api.github.com/users/christian-bromann/following{/other_user}",
        "gists_url": "https://api.github.com/users/christian-bromann/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/christian-bromann/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/christian-bromann/subscriptions",
        "organizations_url": "https://api.github.com/users/christian-bromann/orgs",
        "repos_url": "https://api.github.com/users/christian-bromann/repos",
        "events_url": "https://api.github.com/users/christian-bromann/events{/privacy}",
        "received_events_url": "https://api.github.com/users/christian-bromann/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "christian-bromann",
        "id": 731337,
        "avatar_url": "https://avatars1.githubusercontent.com/u/731337?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/christian-bromann",
        "html_url": "https://github.com/christian-bromann",
        "followers_url": "https://api.github.com/users/christian-bromann/followers",
        "following_url": "https://api.github.com/users/christian-bromann/following{/other_user}",
        "gists_url": "https://api.github.com/users/christian-bromann/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/christian-bromann/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/christian-bromann/subscriptions",
        "organizations_url": "https://api.github.com/users/christian-bromann/orgs",
        "repos_url": "https://api.github.com/users/christian-bromann/repos",
        "events_url": "https://api.github.com/users/christian-bromann/events{/privacy}",
        "received_events_url": "https://api.github.com/users/christian-bromann/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "4796032ceba3f1ee8e849efce35ac7155a194cc3",
          "url": "https://api.github.com/repos/appium/appium/commits/4796032ceba3f1ee8e849efce35ac7155a194cc3",
          "html_url": "https://github.com/appium/appium/commit/4796032ceba3f1ee8e849efce35ac7155a194cc3"
        }
      ]
    },
    {
      "sha": "d5c02bb4060a5fc5a87ab0e7be60da9c93763d1c",
      "commit": {
        "author": {
          "name": "christian-bromann",
          "email": "contact@christian-bromann.com",
          "date": "2015-11-20T00:05:37Z"
        },
        "committer": {
          "name": "christian-bromann",
          "email": "contact@christian-bromann.com",
          "date": "2015-11-20T00:05:37Z"
        },
        "message": "docs: corrected 'testapp' test path",
        "tree": {
          "sha": "421051475948a0f98c32ce37b00dd3338ce82d0c",
          "url": "https://api.github.com/repos/appium/appium/git/trees/421051475948a0f98c32ce37b00dd3338ce82d0c"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/d5c02bb4060a5fc5a87ab0e7be60da9c93763d1c",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/d5c02bb4060a5fc5a87ab0e7be60da9c93763d1c",
      "html_url": "https://github.com/appium/appium/commit/d5c02bb4060a5fc5a87ab0e7be60da9c93763d1c",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/d5c02bb4060a5fc5a87ab0e7be60da9c93763d1c/comments",
      "author": {
        "login": "christian-bromann",
        "id": 731337,
        "avatar_url": "https://avatars1.githubusercontent.com/u/731337?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/christian-bromann",
        "html_url": "https://github.com/christian-bromann",
        "followers_url": "https://api.github.com/users/christian-bromann/followers",
        "following_url": "https://api.github.com/users/christian-bromann/following{/other_user}",
        "gists_url": "https://api.github.com/users/christian-bromann/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/christian-bromann/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/christian-bromann/subscriptions",
        "organizations_url": "https://api.github.com/users/christian-bromann/orgs",
        "repos_url": "https://api.github.com/users/christian-bromann/repos",
        "events_url": "https://api.github.com/users/christian-bromann/events{/privacy}",
        "received_events_url": "https://api.github.com/users/christian-bromann/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "christian-bromann",
        "id": 731337,
        "avatar_url": "https://avatars1.githubusercontent.com/u/731337?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/christian-bromann",
        "html_url": "https://github.com/christian-bromann",
        "followers_url": "https://api.github.com/users/christian-bromann/followers",
        "following_url": "https://api.github.com/users/christian-bromann/following{/other_user}",
        "gists_url": "https://api.github.com/users/christian-bromann/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/christian-bromann/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/christian-bromann/subscriptions",
        "organizations_url": "https://api.github.com/users/christian-bromann/orgs",
        "repos_url": "https://api.github.com/users/christian-bromann/repos",
        "events_url": "https://api.github.com/users/christian-bromann/events{/privacy}",
        "received_events_url": "https://api.github.com/users/christian-bromann/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "1aee15d951898b2569ba21d1c2b1f798db434007",
          "url": "https://api.github.com/repos/appium/appium/commits/1aee15d951898b2569ba21d1c2b1f798db434007",
          "html_url": "https://github.com/appium/appium/commit/1aee15d951898b2569ba21d1c2b1f798db434007"
        }
      ]
    },
    {
      "sha": "a1d050684a0aa26204a84051e017a40dc716d57f",
      "commit": {
        "author": {
          "name": "christian-bromann",
          "email": "contact@christian-bromann.com",
          "date": "2015-11-20T00:15:38Z"
        },
        "committer": {
          "name": "christian-bromann",
          "email": "contact@christian-bromann.com",
          "date": "2015-11-20T00:22:16Z"
        },
        "message": "added docs and option for webkitDebugProxyPort param",
        "tree": {
          "sha": "2a0dafe5391213743d7b1b6c586a6f3b3ae06fe4",
          "url": "https://api.github.com/repos/appium/appium/git/trees/2a0dafe5391213743d7b1b6c586a6f3b3ae06fe4"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/a1d050684a0aa26204a84051e017a40dc716d57f",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/a1d050684a0aa26204a84051e017a40dc716d57f",
      "html_url": "https://github.com/appium/appium/commit/a1d050684a0aa26204a84051e017a40dc716d57f",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/a1d050684a0aa26204a84051e017a40dc716d57f/comments",
      "author": {
        "login": "christian-bromann",
        "id": 731337,
        "avatar_url": "https://avatars1.githubusercontent.com/u/731337?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/christian-bromann",
        "html_url": "https://github.com/christian-bromann",
        "followers_url": "https://api.github.com/users/christian-bromann/followers",
        "following_url": "https://api.github.com/users/christian-bromann/following{/other_user}",
        "gists_url": "https://api.github.com/users/christian-bromann/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/christian-bromann/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/christian-bromann/subscriptions",
        "organizations_url": "https://api.github.com/users/christian-bromann/orgs",
        "repos_url": "https://api.github.com/users/christian-bromann/repos",
        "events_url": "https://api.github.com/users/christian-bromann/events{/privacy}",
        "received_events_url": "https://api.github.com/users/christian-bromann/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "christian-bromann",
        "id": 731337,
        "avatar_url": "https://avatars1.githubusercontent.com/u/731337?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/christian-bromann",
        "html_url": "https://github.com/christian-bromann",
        "followers_url": "https://api.github.com/users/christian-bromann/followers",
        "following_url": "https://api.github.com/users/christian-bromann/following{/other_user}",
        "gists_url": "https://api.github.com/users/christian-bromann/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/christian-bromann/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/christian-bromann/subscriptions",
        "organizations_url": "https://api.github.com/users/christian-bromann/orgs",
        "repos_url": "https://api.github.com/users/christian-bromann/repos",
        "events_url": "https://api.github.com/users/christian-bromann/events{/privacy}",
        "received_events_url": "https://api.github.com/users/christian-bromann/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "d5c02bb4060a5fc5a87ab0e7be60da9c93763d1c",
          "url": "https://api.github.com/repos/appium/appium/commits/d5c02bb4060a5fc5a87ab0e7be60da9c93763d1c",
          "html_url": "https://github.com/appium/appium/commit/d5c02bb4060a5fc5a87ab0e7be60da9c93763d1c"
        }
      ]
    },
    {
      "sha": "5634b6fec14d7646f861f2dd56a3f41ba1f9972c",
      "commit": {
        "author": {
          "name": "christian-bromann",
          "email": "contact@christian-bromann.com",
          "date": "2015-11-20T00:33:48Z"
        },
        "committer": {
          "name": "christian-bromann",
          "email": "contact@christian-bromann.com",
          "date": "2015-11-20T00:33:48Z"
        },
        "message": "Adding xcode_iwd.sh and documentation",
        "tree": {
          "sha": "1cd8cd17d76d13f9b4b31db731d9d60b155d19e2",
          "url": "https://api.github.com/repos/appium/appium/git/trees/1cd8cd17d76d13f9b4b31db731d9d60b155d19e2"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/5634b6fec14d7646f861f2dd56a3f41ba1f9972c",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/5634b6fec14d7646f861f2dd56a3f41ba1f9972c",
      "html_url": "https://github.com/appium/appium/commit/5634b6fec14d7646f861f2dd56a3f41ba1f9972c",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/5634b6fec14d7646f861f2dd56a3f41ba1f9972c/comments",
      "author": {
        "login": "christian-bromann",
        "id": 731337,
        "avatar_url": "https://avatars1.githubusercontent.com/u/731337?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/christian-bromann",
        "html_url": "https://github.com/christian-bromann",
        "followers_url": "https://api.github.com/users/christian-bromann/followers",
        "following_url": "https://api.github.com/users/christian-bromann/following{/other_user}",
        "gists_url": "https://api.github.com/users/christian-bromann/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/christian-bromann/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/christian-bromann/subscriptions",
        "organizations_url": "https://api.github.com/users/christian-bromann/orgs",
        "repos_url": "https://api.github.com/users/christian-bromann/repos",
        "events_url": "https://api.github.com/users/christian-bromann/events{/privacy}",
        "received_events_url": "https://api.github.com/users/christian-bromann/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "christian-bromann",
        "id": 731337,
        "avatar_url": "https://avatars1.githubusercontent.com/u/731337?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/christian-bromann",
        "html_url": "https://github.com/christian-bromann",
        "followers_url": "https://api.github.com/users/christian-bromann/followers",
        "following_url": "https://api.github.com/users/christian-bromann/following{/other_user}",
        "gists_url": "https://api.github.com/users/christian-bromann/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/christian-bromann/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/christian-bromann/subscriptions",
        "organizations_url": "https://api.github.com/users/christian-bromann/orgs",
        "repos_url": "https://api.github.com/users/christian-bromann/repos",
        "events_url": "https://api.github.com/users/christian-bromann/events{/privacy}",
        "received_events_url": "https://api.github.com/users/christian-bromann/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "a1d050684a0aa26204a84051e017a40dc716d57f",
          "url": "https://api.github.com/repos/appium/appium/commits/a1d050684a0aa26204a84051e017a40dc716d57f",
          "html_url": "https://github.com/appium/appium/commit/a1d050684a0aa26204a84051e017a40dc716d57f"
        }
      ]
    },
    {
      "sha": "ef2fa10bbafcf9d63650c07234d0ace46621fce0",
      "commit": {
        "author": {
          "name": "christian-bromann",
          "email": "contact@christian-bromann.com",
          "date": "2015-11-20T00:39:38Z"
        },
        "committer": {
          "name": "christian-bromann",
          "email": "contact@christian-bromann.com",
          "date": "2015-11-20T00:39:38Z"
        },
        "message": "Add code of conduct document",
        "tree": {
          "sha": "b3f5f371fd5d115531a200254d19caef77948002",
          "url": "https://api.github.com/repos/appium/appium/git/trees/b3f5f371fd5d115531a200254d19caef77948002"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/ef2fa10bbafcf9d63650c07234d0ace46621fce0",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/ef2fa10bbafcf9d63650c07234d0ace46621fce0",
      "html_url": "https://github.com/appium/appium/commit/ef2fa10bbafcf9d63650c07234d0ace46621fce0",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/ef2fa10bbafcf9d63650c07234d0ace46621fce0/comments",
      "author": {
        "login": "christian-bromann",
        "id": 731337,
        "avatar_url": "https://avatars1.githubusercontent.com/u/731337?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/christian-bromann",
        "html_url": "https://github.com/christian-bromann",
        "followers_url": "https://api.github.com/users/christian-bromann/followers",
        "following_url": "https://api.github.com/users/christian-bromann/following{/other_user}",
        "gists_url": "https://api.github.com/users/christian-bromann/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/christian-bromann/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/christian-bromann/subscriptions",
        "organizations_url": "https://api.github.com/users/christian-bromann/orgs",
        "repos_url": "https://api.github.com/users/christian-bromann/repos",
        "events_url": "https://api.github.com/users/christian-bromann/events{/privacy}",
        "received_events_url": "https://api.github.com/users/christian-bromann/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "christian-bromann",
        "id": 731337,
        "avatar_url": "https://avatars1.githubusercontent.com/u/731337?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/christian-bromann",
        "html_url": "https://github.com/christian-bromann",
        "followers_url": "https://api.github.com/users/christian-bromann/followers",
        "following_url": "https://api.github.com/users/christian-bromann/following{/other_user}",
        "gists_url": "https://api.github.com/users/christian-bromann/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/christian-bromann/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/christian-bromann/subscriptions",
        "organizations_url": "https://api.github.com/users/christian-bromann/orgs",
        "repos_url": "https://api.github.com/users/christian-bromann/repos",
        "events_url": "https://api.github.com/users/christian-bromann/events{/privacy}",
        "received_events_url": "https://api.github.com/users/christian-bromann/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "5634b6fec14d7646f861f2dd56a3f41ba1f9972c",
          "url": "https://api.github.com/repos/appium/appium/commits/5634b6fec14d7646f861f2dd56a3f41ba1f9972c",
          "html_url": "https://github.com/appium/appium/commit/5634b6fec14d7646f861f2dd56a3f41ba1f9972c"
        }
      ]
    },
    {
      "sha": "bb6189a35df4dc4edb38bc1fdcb68ce7f786a02f",
      "commit": {
        "author": {
          "name": "christian-bromann",
          "email": "contact@christian-bromann.com",
          "date": "2015-11-20T01:52:10Z"
        },
        "committer": {
          "name": "christian-bromann",
          "email": "contact@christian-bromann.com",
          "date": "2015-11-20T01:52:10Z"
        },
        "message": "added changelog changes from v1.4.x",
        "tree": {
          "sha": "c41be23512b78bfb69ad02b3158a774722370847",
          "url": "https://api.github.com/repos/appium/appium/git/trees/c41be23512b78bfb69ad02b3158a774722370847"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/bb6189a35df4dc4edb38bc1fdcb68ce7f786a02f",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/bb6189a35df4dc4edb38bc1fdcb68ce7f786a02f",
      "html_url": "https://github.com/appium/appium/commit/bb6189a35df4dc4edb38bc1fdcb68ce7f786a02f",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/bb6189a35df4dc4edb38bc1fdcb68ce7f786a02f/comments",
      "author": {
        "login": "christian-bromann",
        "id": 731337,
        "avatar_url": "https://avatars1.githubusercontent.com/u/731337?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/christian-bromann",
        "html_url": "https://github.com/christian-bromann",
        "followers_url": "https://api.github.com/users/christian-bromann/followers",
        "following_url": "https://api.github.com/users/christian-bromann/following{/other_user}",
        "gists_url": "https://api.github.com/users/christian-bromann/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/christian-bromann/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/christian-bromann/subscriptions",
        "organizations_url": "https://api.github.com/users/christian-bromann/orgs",
        "repos_url": "https://api.github.com/users/christian-bromann/repos",
        "events_url": "https://api.github.com/users/christian-bromann/events{/privacy}",
        "received_events_url": "https://api.github.com/users/christian-bromann/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "christian-bromann",
        "id": 731337,
        "avatar_url": "https://avatars1.githubusercontent.com/u/731337?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/christian-bromann",
        "html_url": "https://github.com/christian-bromann",
        "followers_url": "https://api.github.com/users/christian-bromann/followers",
        "following_url": "https://api.github.com/users/christian-bromann/following{/other_user}",
        "gists_url": "https://api.github.com/users/christian-bromann/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/christian-bromann/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/christian-bromann/subscriptions",
        "organizations_url": "https://api.github.com/users/christian-bromann/orgs",
        "repos_url": "https://api.github.com/users/christian-bromann/repos",
        "events_url": "https://api.github.com/users/christian-bromann/events{/privacy}",
        "received_events_url": "https://api.github.com/users/christian-bromann/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "ef2fa10bbafcf9d63650c07234d0ace46621fce0",
          "url": "https://api.github.com/repos/appium/appium/commits/ef2fa10bbafcf9d63650c07234d0ace46621fce0",
          "html_url": "https://github.com/appium/appium/commit/ef2fa10bbafcf9d63650c07234d0ace46621fce0"
        }
      ]
    },
    {
      "sha": "700f754173c1bb0d556fce52f63c5024113152f4",
      "commit": {
        "author": {
          "name": "christian-bromann",
          "email": "contact@christian-bromann.com",
          "date": "2015-11-20T01:54:54Z"
        },
        "committer": {
          "name": "christian-bromann",
          "email": "contact@christian-bromann.com",
          "date": "2015-11-20T01:54:54Z"
        },
        "message": "added myself to the author list",
        "tree": {
          "sha": "1f661ffa9b0dc9e8e03b968db6e45c054d597760",
          "url": "https://api.github.com/repos/appium/appium/git/trees/1f661ffa9b0dc9e8e03b968db6e45c054d597760"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/700f754173c1bb0d556fce52f63c5024113152f4",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/700f754173c1bb0d556fce52f63c5024113152f4",
      "html_url": "https://github.com/appium/appium/commit/700f754173c1bb0d556fce52f63c5024113152f4",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/700f754173c1bb0d556fce52f63c5024113152f4/comments",
      "author": {
        "login": "christian-bromann",
        "id": 731337,
        "avatar_url": "https://avatars1.githubusercontent.com/u/731337?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/christian-bromann",
        "html_url": "https://github.com/christian-bromann",
        "followers_url": "https://api.github.com/users/christian-bromann/followers",
        "following_url": "https://api.github.com/users/christian-bromann/following{/other_user}",
        "gists_url": "https://api.github.com/users/christian-bromann/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/christian-bromann/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/christian-bromann/subscriptions",
        "organizations_url": "https://api.github.com/users/christian-bromann/orgs",
        "repos_url": "https://api.github.com/users/christian-bromann/repos",
        "events_url": "https://api.github.com/users/christian-bromann/events{/privacy}",
        "received_events_url": "https://api.github.com/users/christian-bromann/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "christian-bromann",
        "id": 731337,
        "avatar_url": "https://avatars1.githubusercontent.com/u/731337?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/christian-bromann",
        "html_url": "https://github.com/christian-bromann",
        "followers_url": "https://api.github.com/users/christian-bromann/followers",
        "following_url": "https://api.github.com/users/christian-bromann/following{/other_user}",
        "gists_url": "https://api.github.com/users/christian-bromann/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/christian-bromann/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/christian-bromann/subscriptions",
        "organizations_url": "https://api.github.com/users/christian-bromann/orgs",
        "repos_url": "https://api.github.com/users/christian-bromann/repos",
        "events_url": "https://api.github.com/users/christian-bromann/events{/privacy}",
        "received_events_url": "https://api.github.com/users/christian-bromann/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "bb6189a35df4dc4edb38bc1fdcb68ce7f786a02f",
          "url": "https://api.github.com/repos/appium/appium/commits/bb6189a35df4dc4edb38bc1fdcb68ce7f786a02f",
          "html_url": "https://github.com/appium/appium/commit/bb6189a35df4dc4edb38bc1fdcb68ce7f786a02f"
        }
      ]
    },
    {
      "sha": "8e1eed2c51ad192194661d2a607eeda964e3aedf",
      "commit": {
        "author": {
          "name": "christian-bromann",
          "email": "contact@christian-bromann.com",
          "date": "2015-11-20T02:03:22Z"
        },
        "committer": {
          "name": "christian-bromann",
          "email": "contact@christian-bromann.com",
          "date": "2015-11-20T02:03:22Z"
        },
        "message": "fixed syntax error",
        "tree": {
          "sha": "1069bb066da3a2428215d662c7e434a14fc3f1e8",
          "url": "https://api.github.com/repos/appium/appium/git/trees/1069bb066da3a2428215d662c7e434a14fc3f1e8"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/8e1eed2c51ad192194661d2a607eeda964e3aedf",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/8e1eed2c51ad192194661d2a607eeda964e3aedf",
      "html_url": "https://github.com/appium/appium/commit/8e1eed2c51ad192194661d2a607eeda964e3aedf",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/8e1eed2c51ad192194661d2a607eeda964e3aedf/comments",
      "author": {
        "login": "christian-bromann",
        "id": 731337,
        "avatar_url": "https://avatars1.githubusercontent.com/u/731337?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/christian-bromann",
        "html_url": "https://github.com/christian-bromann",
        "followers_url": "https://api.github.com/users/christian-bromann/followers",
        "following_url": "https://api.github.com/users/christian-bromann/following{/other_user}",
        "gists_url": "https://api.github.com/users/christian-bromann/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/christian-bromann/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/christian-bromann/subscriptions",
        "organizations_url": "https://api.github.com/users/christian-bromann/orgs",
        "repos_url": "https://api.github.com/users/christian-bromann/repos",
        "events_url": "https://api.github.com/users/christian-bromann/events{/privacy}",
        "received_events_url": "https://api.github.com/users/christian-bromann/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "christian-bromann",
        "id": 731337,
        "avatar_url": "https://avatars1.githubusercontent.com/u/731337?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/christian-bromann",
        "html_url": "https://github.com/christian-bromann",
        "followers_url": "https://api.github.com/users/christian-bromann/followers",
        "following_url": "https://api.github.com/users/christian-bromann/following{/other_user}",
        "gists_url": "https://api.github.com/users/christian-bromann/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/christian-bromann/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/christian-bromann/subscriptions",
        "organizations_url": "https://api.github.com/users/christian-bromann/orgs",
        "repos_url": "https://api.github.com/users/christian-bromann/repos",
        "events_url": "https://api.github.com/users/christian-bromann/events{/privacy}",
        "received_events_url": "https://api.github.com/users/christian-bromann/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "700f754173c1bb0d556fce52f63c5024113152f4",
          "url": "https://api.github.com/repos/appium/appium/commits/700f754173c1bb0d556fce52f63c5024113152f4",
          "html_url": "https://github.com/appium/appium/commit/700f754173c1bb0d556fce52f63c5024113152f4"
        }
      ]
    },
    {
      "sha": "0a84fd73959c1f113ac6bfe2fae80d54a15f7ef9",
      "commit": {
        "author": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-11-20T16:56:18Z"
        },
        "committer": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-11-20T16:56:18Z"
        },
        "message": "Merge pull request #5854 from appium/broman-docs-caps\n\nport docs stuff from master branch",
        "tree": {
          "sha": "1069bb066da3a2428215d662c7e434a14fc3f1e8",
          "url": "https://api.github.com/repos/appium/appium/git/trees/1069bb066da3a2428215d662c7e434a14fc3f1e8"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/0a84fd73959c1f113ac6bfe2fae80d54a15f7ef9",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/0a84fd73959c1f113ac6bfe2fae80d54a15f7ef9",
      "html_url": "https://github.com/appium/appium/commit/0a84fd73959c1f113ac6bfe2fae80d54a15f7ef9",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/0a84fd73959c1f113ac6bfe2fae80d54a15f7ef9/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "8dbcdd47bdab41327d1c3ebddeff5d77402786b2",
          "url": "https://api.github.com/repos/appium/appium/commits/8dbcdd47bdab41327d1c3ebddeff5d77402786b2",
          "html_url": "https://github.com/appium/appium/commit/8dbcdd47bdab41327d1c3ebddeff5d77402786b2"
        },
        {
          "sha": "8e1eed2c51ad192194661d2a607eeda964e3aedf",
          "url": "https://api.github.com/repos/appium/appium/commits/8e1eed2c51ad192194661d2a607eeda964e3aedf",
          "html_url": "https://github.com/appium/appium/commit/8e1eed2c51ad192194661d2a607eeda964e3aedf"
        }
      ]
    },
    {
      "sha": "6de0caba8a6f41936c30a095ce39083ecfbc6101",
      "commit": {
        "author": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-11-23T16:17:31Z"
        },
        "committer": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-11-23T16:17:31Z"
        },
        "message": "Merge pull request #5853 from appium/broman-roadmap-link\n\nadded link to roadmap in Readme",
        "tree": {
          "sha": "7e5296db09fb7ab615c6270b191d739e3ffcb83a",
          "url": "https://api.github.com/repos/appium/appium/git/trees/7e5296db09fb7ab615c6270b191d739e3ffcb83a"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/6de0caba8a6f41936c30a095ce39083ecfbc6101",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/6de0caba8a6f41936c30a095ce39083ecfbc6101",
      "html_url": "https://github.com/appium/appium/commit/6de0caba8a6f41936c30a095ce39083ecfbc6101",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/6de0caba8a6f41936c30a095ce39083ecfbc6101/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "0a84fd73959c1f113ac6bfe2fae80d54a15f7ef9",
          "url": "https://api.github.com/repos/appium/appium/commits/0a84fd73959c1f113ac6bfe2fae80d54a15f7ef9",
          "html_url": "https://github.com/appium/appium/commit/0a84fd73959c1f113ac6bfe2fae80d54a15f7ef9"
        },
        {
          "sha": "ba4896dea0ff45e9761dd622b6c9f124d4afab2c",
          "url": "https://api.github.com/repos/appium/appium/commits/ba4896dea0ff45e9761dd622b6c9f124d4afab2c",
          "html_url": "https://github.com/appium/appium/commit/ba4896dea0ff45e9761dd622b6c9f124d4afab2c"
        }
      ]
    },
    {
      "sha": "dd6ac81118ada458b01a369ed02156787adbbf71",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-11-25T18:43:45Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-11-25T18:43:45Z"
        },
        "message": "Update driver deps",
        "tree": {
          "sha": "c6e58cdeb17f4dde78a422b2b09dab2dea91e095",
          "url": "https://api.github.com/repos/appium/appium/git/trees/c6e58cdeb17f4dde78a422b2b09dab2dea91e095"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/dd6ac81118ada458b01a369ed02156787adbbf71",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/dd6ac81118ada458b01a369ed02156787adbbf71",
      "html_url": "https://github.com/appium/appium/commit/dd6ac81118ada458b01a369ed02156787adbbf71",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/dd6ac81118ada458b01a369ed02156787adbbf71/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "0a84fd73959c1f113ac6bfe2fae80d54a15f7ef9",
          "url": "https://api.github.com/repos/appium/appium/commits/0a84fd73959c1f113ac6bfe2fae80d54a15f7ef9",
          "html_url": "https://github.com/appium/appium/commit/0a84fd73959c1f113ac6bfe2fae80d54a15f7ef9"
        }
      ]
    },
    {
      "sha": "2ce8a8d27519fe54dbc86ad5f09c8ffcccf890db",
      "commit": {
        "author": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-11-25T19:02:55Z"
        },
        "committer": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-11-25T19:02:55Z"
        },
        "message": "Merge pull request #5874 from appium/isaac-deps\n\nUpdate driver deps",
        "tree": {
          "sha": "bbd948b46b93952a798975fb6f56184d84dfa162",
          "url": "https://api.github.com/repos/appium/appium/git/trees/bbd948b46b93952a798975fb6f56184d84dfa162"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/2ce8a8d27519fe54dbc86ad5f09c8ffcccf890db",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/2ce8a8d27519fe54dbc86ad5f09c8ffcccf890db",
      "html_url": "https://github.com/appium/appium/commit/2ce8a8d27519fe54dbc86ad5f09c8ffcccf890db",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/2ce8a8d27519fe54dbc86ad5f09c8ffcccf890db/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "6de0caba8a6f41936c30a095ce39083ecfbc6101",
          "url": "https://api.github.com/repos/appium/appium/commits/6de0caba8a6f41936c30a095ce39083ecfbc6101",
          "html_url": "https://github.com/appium/appium/commit/6de0caba8a6f41936c30a095ce39083ecfbc6101"
        },
        {
          "sha": "dd6ac81118ada458b01a369ed02156787adbbf71",
          "url": "https://api.github.com/repos/appium/appium/commits/dd6ac81118ada458b01a369ed02156787adbbf71",
          "html_url": "https://github.com/appium/appium/commit/dd6ac81118ada458b01a369ed02156787adbbf71"
        }
      ]
    },
    {
      "sha": "053a62bf595a2e2e9de3650dbb2e529e81b9678b",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-12-02T19:33:36Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-12-02T19:33:36Z"
        },
        "message": "--show-config should not log.info so it can be JSON parseable",
        "tree": {
          "sha": "2c7be329f1536900b675d804efe0cbd2bb4f3c0e",
          "url": "https://api.github.com/repos/appium/appium/git/trees/2c7be329f1536900b675d804efe0cbd2bb4f3c0e"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/053a62bf595a2e2e9de3650dbb2e529e81b9678b",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/053a62bf595a2e2e9de3650dbb2e529e81b9678b",
      "html_url": "https://github.com/appium/appium/commit/053a62bf595a2e2e9de3650dbb2e529e81b9678b",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/053a62bf595a2e2e9de3650dbb2e529e81b9678b/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "2ce8a8d27519fe54dbc86ad5f09c8ffcccf890db",
          "url": "https://api.github.com/repos/appium/appium/commits/2ce8a8d27519fe54dbc86ad5f09c8ffcccf890db",
          "html_url": "https://github.com/appium/appium/commit/2ce8a8d27519fe54dbc86ad5f09c8ffcccf890db"
        }
      ]
    },
    {
      "sha": "843c380fda4c4c20477c7f05e931e6f042514620",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-12-02T19:37:57Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-12-02T19:37:57Z"
        },
        "message": "add version to --show-config so it is easily parseable",
        "tree": {
          "sha": "73a2a7b26cc9c8063cc091931896163b967576ca",
          "url": "https://api.github.com/repos/appium/appium/git/trees/73a2a7b26cc9c8063cc091931896163b967576ca"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/843c380fda4c4c20477c7f05e931e6f042514620",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/843c380fda4c4c20477c7f05e931e6f042514620",
      "html_url": "https://github.com/appium/appium/commit/843c380fda4c4c20477c7f05e931e6f042514620",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/843c380fda4c4c20477c7f05e931e6f042514620/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "053a62bf595a2e2e9de3650dbb2e529e81b9678b",
          "url": "https://api.github.com/repos/appium/appium/commits/053a62bf595a2e2e9de3650dbb2e529e81b9678b",
          "html_url": "https://github.com/appium/appium/commit/053a62bf595a2e2e9de3650dbb2e529e81b9678b"
        }
      ]
    },
    {
      "sha": "a9aead3c3551f7d16da61895d13b15a4de4a0acb",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-12-02T19:52:32Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-12-02T19:52:32Z"
        },
        "message": "Merge pull request #5897 from jlipps/1.5\n\n--show-config should not log.info so it can be JSON parseable",
        "tree": {
          "sha": "73a2a7b26cc9c8063cc091931896163b967576ca",
          "url": "https://api.github.com/repos/appium/appium/git/trees/73a2a7b26cc9c8063cc091931896163b967576ca"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/a9aead3c3551f7d16da61895d13b15a4de4a0acb",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/a9aead3c3551f7d16da61895d13b15a4de4a0acb",
      "html_url": "https://github.com/appium/appium/commit/a9aead3c3551f7d16da61895d13b15a4de4a0acb",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/a9aead3c3551f7d16da61895d13b15a4de4a0acb/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "2ce8a8d27519fe54dbc86ad5f09c8ffcccf890db",
          "url": "https://api.github.com/repos/appium/appium/commits/2ce8a8d27519fe54dbc86ad5f09c8ffcccf890db",
          "html_url": "https://github.com/appium/appium/commit/2ce8a8d27519fe54dbc86ad5f09c8ffcccf890db"
        },
        {
          "sha": "843c380fda4c4c20477c7f05e931e6f042514620",
          "url": "https://api.github.com/repos/appium/appium/commits/843c380fda4c4c20477c7f05e931e6f042514620",
          "html_url": "https://github.com/appium/appium/commit/843c380fda4c4c20477c7f05e931e6f042514620"
        }
      ]
    },
    {
      "sha": "ee3f12591895d1c08dff3bb464162afd3742d9d1",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-11-25T21:10:36Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-12-03T17:48:50Z"
        },
        "message": "Update docs for 1.5",
        "tree": {
          "sha": "fa30f4e5294757740996bb2c1128935e91c94b8d",
          "url": "https://api.github.com/repos/appium/appium/git/trees/fa30f4e5294757740996bb2c1128935e91c94b8d"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/ee3f12591895d1c08dff3bb464162afd3742d9d1",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/ee3f12591895d1c08dff3bb464162afd3742d9d1",
      "html_url": "https://github.com/appium/appium/commit/ee3f12591895d1c08dff3bb464162afd3742d9d1",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/ee3f12591895d1c08dff3bb464162afd3742d9d1/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "2ce8a8d27519fe54dbc86ad5f09c8ffcccf890db",
          "url": "https://api.github.com/repos/appium/appium/commits/2ce8a8d27519fe54dbc86ad5f09c8ffcccf890db",
          "html_url": "https://github.com/appium/appium/commit/2ce8a8d27519fe54dbc86ad5f09c8ffcccf890db"
        }
      ]
    },
    {
      "sha": "98dfac5ee98477ccf8c06ff1b5835028f0d91a4a",
      "commit": {
        "author": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-12-14T16:31:37Z"
        },
        "committer": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-12-14T16:31:37Z"
        },
        "message": "Fix link to image",
        "tree": {
          "sha": "52f4a0855d74b0a0eb3467411095feb7ec4e95e3",
          "url": "https://api.github.com/repos/appium/appium/git/trees/52f4a0855d74b0a0eb3467411095feb7ec4e95e3"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/98dfac5ee98477ccf8c06ff1b5835028f0d91a4a",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/98dfac5ee98477ccf8c06ff1b5835028f0d91a4a",
      "html_url": "https://github.com/appium/appium/commit/98dfac5ee98477ccf8c06ff1b5835028f0d91a4a",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/98dfac5ee98477ccf8c06ff1b5835028f0d91a4a/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "a9aead3c3551f7d16da61895d13b15a4de4a0acb",
          "url": "https://api.github.com/repos/appium/appium/commits/a9aead3c3551f7d16da61895d13b15a4de4a0acb",
          "html_url": "https://github.com/appium/appium/commit/a9aead3c3551f7d16da61895d13b15a4de4a0acb"
        }
      ]
    },
    {
      "sha": "d9d5f76beff64492c3e92197ce27a3a30f3056cf",
      "commit": {
        "author": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-12-14T16:59:52Z"
        },
        "committer": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-12-14T16:59:52Z"
        },
        "message": "Merge pull request #5916 from appium/imurchie-package-image\n\nFix link to image",
        "tree": {
          "sha": "52f4a0855d74b0a0eb3467411095feb7ec4e95e3",
          "url": "https://api.github.com/repos/appium/appium/git/trees/52f4a0855d74b0a0eb3467411095feb7ec4e95e3"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/d9d5f76beff64492c3e92197ce27a3a30f3056cf",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/d9d5f76beff64492c3e92197ce27a3a30f3056cf",
      "html_url": "https://github.com/appium/appium/commit/d9d5f76beff64492c3e92197ce27a3a30f3056cf",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/d9d5f76beff64492c3e92197ce27a3a30f3056cf/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "a9aead3c3551f7d16da61895d13b15a4de4a0acb",
          "url": "https://api.github.com/repos/appium/appium/commits/a9aead3c3551f7d16da61895d13b15a4de4a0acb",
          "html_url": "https://github.com/appium/appium/commit/a9aead3c3551f7d16da61895d13b15a4de4a0acb"
        },
        {
          "sha": "98dfac5ee98477ccf8c06ff1b5835028f0d91a4a",
          "url": "https://api.github.com/repos/appium/appium/commits/98dfac5ee98477ccf8c06ff1b5835028f0d91a4a",
          "html_url": "https://github.com/appium/appium/commit/98dfac5ee98477ccf8c06ff1b5835028f0d91a4a"
        }
      ]
    },
    {
      "sha": "4effad22ece80e69c559caa52ffbd41cc6756ca0",
      "commit": {
        "author": {
          "name": "Scott Dixon",
          "email": "scott@howrefreshing.com.au",
          "date": "2015-12-14T18:39:33Z"
        },
        "committer": {
          "name": "Scott Dixon",
          "email": "scott@howrefreshing.com.au",
          "date": "2015-12-14T18:39:33Z"
        },
        "message": "Porting binaries: xcode-iwd & ios-webkit-debug-proxy-launcher",
        "tree": {
          "sha": "25f6d12162b82a738dbb7c75a03c7e33f02fdc2f",
          "url": "https://api.github.com/repos/appium/appium/git/trees/25f6d12162b82a738dbb7c75a03c7e33f02fdc2f"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/4effad22ece80e69c559caa52ffbd41cc6756ca0",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/4effad22ece80e69c559caa52ffbd41cc6756ca0",
      "html_url": "https://github.com/appium/appium/commit/4effad22ece80e69c559caa52ffbd41cc6756ca0",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/4effad22ece80e69c559caa52ffbd41cc6756ca0/comments",
      "author": {
        "login": "scottdixon",
        "id": 4726068,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4726068?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottdixon",
        "html_url": "https://github.com/scottdixon",
        "followers_url": "https://api.github.com/users/scottdixon/followers",
        "following_url": "https://api.github.com/users/scottdixon/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottdixon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottdixon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottdixon/subscriptions",
        "organizations_url": "https://api.github.com/users/scottdixon/orgs",
        "repos_url": "https://api.github.com/users/scottdixon/repos",
        "events_url": "https://api.github.com/users/scottdixon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottdixon/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "scottdixon",
        "id": 4726068,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4726068?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottdixon",
        "html_url": "https://github.com/scottdixon",
        "followers_url": "https://api.github.com/users/scottdixon/followers",
        "following_url": "https://api.github.com/users/scottdixon/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottdixon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottdixon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottdixon/subscriptions",
        "organizations_url": "https://api.github.com/users/scottdixon/orgs",
        "repos_url": "https://api.github.com/users/scottdixon/repos",
        "events_url": "https://api.github.com/users/scottdixon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottdixon/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "d9d5f76beff64492c3e92197ce27a3a30f3056cf",
          "url": "https://api.github.com/repos/appium/appium/commits/d9d5f76beff64492c3e92197ce27a3a30f3056cf",
          "html_url": "https://github.com/appium/appium/commit/d9d5f76beff64492c3e92197ce27a3a30f3056cf"
        }
      ]
    },
    {
      "sha": "cc2e1bba4bb2b63f4620ba83a62c7a83a622b8c6",
      "commit": {
        "author": {
          "name": "Scott Dixon",
          "email": "scottdixon@saucelabs.com",
          "date": "2015-12-14T18:54:08Z"
        },
        "committer": {
          "name": "Scott Dixon",
          "email": "scottdixon@saucelabs.com",
          "date": "2015-12-14T18:54:08Z"
        },
        "message": "Merge pull request #5918 from scottdixon/port-binaries\n\nPorting binaries: xcode-iwd & ios-webkit-debug-proxy-launcher",
        "tree": {
          "sha": "25f6d12162b82a738dbb7c75a03c7e33f02fdc2f",
          "url": "https://api.github.com/repos/appium/appium/git/trees/25f6d12162b82a738dbb7c75a03c7e33f02fdc2f"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/cc2e1bba4bb2b63f4620ba83a62c7a83a622b8c6",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/cc2e1bba4bb2b63f4620ba83a62c7a83a622b8c6",
      "html_url": "https://github.com/appium/appium/commit/cc2e1bba4bb2b63f4620ba83a62c7a83a622b8c6",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/cc2e1bba4bb2b63f4620ba83a62c7a83a622b8c6/comments",
      "author": null,
      "committer": null,
      "parents": [
        {
          "sha": "d9d5f76beff64492c3e92197ce27a3a30f3056cf",
          "url": "https://api.github.com/repos/appium/appium/commits/d9d5f76beff64492c3e92197ce27a3a30f3056cf",
          "html_url": "https://github.com/appium/appium/commit/d9d5f76beff64492c3e92197ce27a3a30f3056cf"
        },
        {
          "sha": "4effad22ece80e69c559caa52ffbd41cc6756ca0",
          "url": "https://api.github.com/repos/appium/appium/commits/4effad22ece80e69c559caa52ffbd41cc6756ca0",
          "html_url": "https://github.com/appium/appium/commit/4effad22ece80e69c559caa52ffbd41cc6756ca0"
        }
      ]
    },
    {
      "sha": "88fb51b9f289f13b1ba4f15ffb3a509e550e40c1",
      "commit": {
        "author": {
          "name": "Jonah Stiennon",
          "email": "jonahss@gmail.com",
          "date": "2015-12-14T22:19:11Z"
        },
        "committer": {
          "name": "Jonah Stiennon",
          "email": "jonahss@gmail.com",
          "date": "2015-12-14T22:19:11Z"
        },
        "message": "v1.5.0-beta8",
        "tree": {
          "sha": "9d55cd152ba79379922984cbf28e485facfc7fb2",
          "url": "https://api.github.com/repos/appium/appium/git/trees/9d55cd152ba79379922984cbf28e485facfc7fb2"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/88fb51b9f289f13b1ba4f15ffb3a509e550e40c1",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/88fb51b9f289f13b1ba4f15ffb3a509e550e40c1",
      "html_url": "https://github.com/appium/appium/commit/88fb51b9f289f13b1ba4f15ffb3a509e550e40c1",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/88fb51b9f289f13b1ba4f15ffb3a509e550e40c1/comments",
      "author": {
        "login": "Jonahss",
        "id": 1521841,
        "avatar_url": "https://avatars1.githubusercontent.com/u/1521841?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Jonahss",
        "html_url": "https://github.com/Jonahss",
        "followers_url": "https://api.github.com/users/Jonahss/followers",
        "following_url": "https://api.github.com/users/Jonahss/following{/other_user}",
        "gists_url": "https://api.github.com/users/Jonahss/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Jonahss/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Jonahss/subscriptions",
        "organizations_url": "https://api.github.com/users/Jonahss/orgs",
        "repos_url": "https://api.github.com/users/Jonahss/repos",
        "events_url": "https://api.github.com/users/Jonahss/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Jonahss/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "Jonahss",
        "id": 1521841,
        "avatar_url": "https://avatars1.githubusercontent.com/u/1521841?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Jonahss",
        "html_url": "https://github.com/Jonahss",
        "followers_url": "https://api.github.com/users/Jonahss/followers",
        "following_url": "https://api.github.com/users/Jonahss/following{/other_user}",
        "gists_url": "https://api.github.com/users/Jonahss/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Jonahss/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Jonahss/subscriptions",
        "organizations_url": "https://api.github.com/users/Jonahss/orgs",
        "repos_url": "https://api.github.com/users/Jonahss/repos",
        "events_url": "https://api.github.com/users/Jonahss/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Jonahss/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "cc2e1bba4bb2b63f4620ba83a62c7a83a622b8c6",
          "url": "https://api.github.com/repos/appium/appium/commits/cc2e1bba4bb2b63f4620ba83a62c7a83a622b8c6",
          "html_url": "https://github.com/appium/appium/commit/cc2e1bba4bb2b63f4620ba83a62c7a83a622b8c6"
        }
      ]
    },
    {
      "sha": "db4defb822caa21a48020c3efe0c5e531c651661",
      "commit": {
        "author": {
          "name": "Scott Dixon",
          "email": "scott@howrefreshing.com.au",
          "date": "2015-12-14T19:54:15Z"
        },
        "committer": {
          "name": "Scott Dixon",
          "email": "scott@howrefreshing.com.au",
          "date": "2015-12-14T23:35:38Z"
        },
        "message": "Gulp task: docs, deprecated server arguments, doc updates",
        "tree": {
          "sha": "862475f86f1d3b416fc2c52c63745fef2e32806d",
          "url": "https://api.github.com/repos/appium/appium/git/trees/862475f86f1d3b416fc2c52c63745fef2e32806d"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/db4defb822caa21a48020c3efe0c5e531c651661",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/db4defb822caa21a48020c3efe0c5e531c651661",
      "html_url": "https://github.com/appium/appium/commit/db4defb822caa21a48020c3efe0c5e531c651661",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/db4defb822caa21a48020c3efe0c5e531c651661/comments",
      "author": {
        "login": "scottdixon",
        "id": 4726068,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4726068?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottdixon",
        "html_url": "https://github.com/scottdixon",
        "followers_url": "https://api.github.com/users/scottdixon/followers",
        "following_url": "https://api.github.com/users/scottdixon/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottdixon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottdixon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottdixon/subscriptions",
        "organizations_url": "https://api.github.com/users/scottdixon/orgs",
        "repos_url": "https://api.github.com/users/scottdixon/repos",
        "events_url": "https://api.github.com/users/scottdixon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottdixon/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "scottdixon",
        "id": 4726068,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4726068?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottdixon",
        "html_url": "https://github.com/scottdixon",
        "followers_url": "https://api.github.com/users/scottdixon/followers",
        "following_url": "https://api.github.com/users/scottdixon/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottdixon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottdixon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottdixon/subscriptions",
        "organizations_url": "https://api.github.com/users/scottdixon/orgs",
        "repos_url": "https://api.github.com/users/scottdixon/repos",
        "events_url": "https://api.github.com/users/scottdixon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottdixon/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "d9d5f76beff64492c3e92197ce27a3a30f3056cf",
          "url": "https://api.github.com/repos/appium/appium/commits/d9d5f76beff64492c3e92197ce27a3a30f3056cf",
          "html_url": "https://github.com/appium/appium/commit/d9d5f76beff64492c3e92197ce27a3a30f3056cf"
        }
      ]
    },
    {
      "sha": "d82635dbc69e5d9496e3ba63066dd23359e5e14c",
      "commit": {
        "author": {
          "name": "Scott Dixon",
          "email": "scott@howrefreshing.com.au",
          "date": "2015-12-14T23:36:24Z"
        },
        "committer": {
          "name": "Scott Dixon",
          "email": "scott@howrefreshing.com.au",
          "date": "2015-12-14T23:36:24Z"
        },
        "message": "grunt docs: handles empty objects and --keystore-path user path",
        "tree": {
          "sha": "111a3af67f9cee72f30ab5a732b63ba651b1e68b",
          "url": "https://api.github.com/repos/appium/appium/git/trees/111a3af67f9cee72f30ab5a732b63ba651b1e68b"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/d82635dbc69e5d9496e3ba63066dd23359e5e14c",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/d82635dbc69e5d9496e3ba63066dd23359e5e14c",
      "html_url": "https://github.com/appium/appium/commit/d82635dbc69e5d9496e3ba63066dd23359e5e14c",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/d82635dbc69e5d9496e3ba63066dd23359e5e14c/comments",
      "author": {
        "login": "scottdixon",
        "id": 4726068,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4726068?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottdixon",
        "html_url": "https://github.com/scottdixon",
        "followers_url": "https://api.github.com/users/scottdixon/followers",
        "following_url": "https://api.github.com/users/scottdixon/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottdixon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottdixon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottdixon/subscriptions",
        "organizations_url": "https://api.github.com/users/scottdixon/orgs",
        "repos_url": "https://api.github.com/users/scottdixon/repos",
        "events_url": "https://api.github.com/users/scottdixon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottdixon/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "scottdixon",
        "id": 4726068,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4726068?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottdixon",
        "html_url": "https://github.com/scottdixon",
        "followers_url": "https://api.github.com/users/scottdixon/followers",
        "following_url": "https://api.github.com/users/scottdixon/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottdixon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottdixon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottdixon/subscriptions",
        "organizations_url": "https://api.github.com/users/scottdixon/orgs",
        "repos_url": "https://api.github.com/users/scottdixon/repos",
        "events_url": "https://api.github.com/users/scottdixon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottdixon/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "db4defb822caa21a48020c3efe0c5e531c651661",
          "url": "https://api.github.com/repos/appium/appium/commits/db4defb822caa21a48020c3efe0c5e531c651661",
          "html_url": "https://github.com/appium/appium/commit/db4defb822caa21a48020c3efe0c5e531c651661"
        }
      ]
    },
    {
      "sha": "21c0ad3cf26eb1d325360ae8f0aa41b1e0e13db1",
      "commit": {
        "author": {
          "name": "Scott Dixon",
          "email": "scott@howrefreshing.com.au",
          "date": "2015-12-15T00:21:15Z"
        },
        "committer": {
          "name": "Scott Dixon",
          "email": "scott@howrefreshing.com.au",
          "date": "2015-12-15T00:21:15Z"
        },
        "message": "Doc updates: running on OSX, platform support",
        "tree": {
          "sha": "1b5f30e16561747d86982a2972f670f0054be851",
          "url": "https://api.github.com/repos/appium/appium/git/trees/1b5f30e16561747d86982a2972f670f0054be851"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/21c0ad3cf26eb1d325360ae8f0aa41b1e0e13db1",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/21c0ad3cf26eb1d325360ae8f0aa41b1e0e13db1",
      "html_url": "https://github.com/appium/appium/commit/21c0ad3cf26eb1d325360ae8f0aa41b1e0e13db1",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/21c0ad3cf26eb1d325360ae8f0aa41b1e0e13db1/comments",
      "author": {
        "login": "scottdixon",
        "id": 4726068,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4726068?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottdixon",
        "html_url": "https://github.com/scottdixon",
        "followers_url": "https://api.github.com/users/scottdixon/followers",
        "following_url": "https://api.github.com/users/scottdixon/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottdixon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottdixon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottdixon/subscriptions",
        "organizations_url": "https://api.github.com/users/scottdixon/orgs",
        "repos_url": "https://api.github.com/users/scottdixon/repos",
        "events_url": "https://api.github.com/users/scottdixon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottdixon/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "scottdixon",
        "id": 4726068,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4726068?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottdixon",
        "html_url": "https://github.com/scottdixon",
        "followers_url": "https://api.github.com/users/scottdixon/followers",
        "following_url": "https://api.github.com/users/scottdixon/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottdixon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottdixon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottdixon/subscriptions",
        "organizations_url": "https://api.github.com/users/scottdixon/orgs",
        "repos_url": "https://api.github.com/users/scottdixon/repos",
        "events_url": "https://api.github.com/users/scottdixon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottdixon/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "d82635dbc69e5d9496e3ba63066dd23359e5e14c",
          "url": "https://api.github.com/repos/appium/appium/commits/d82635dbc69e5d9496e3ba63066dd23359e5e14c",
          "html_url": "https://github.com/appium/appium/commit/d82635dbc69e5d9496e3ba63066dd23359e5e14c"
        }
      ]
    },
    {
      "sha": "d3793b6e23ca1d32c989319cdd5304b861a8dec7",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-12-15T17:31:26Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-12-15T17:31:26Z"
        },
        "message": "Update ios driver version",
        "tree": {
          "sha": "f84ff1200a5f091e57eb754d64a2373976b01554",
          "url": "https://api.github.com/repos/appium/appium/git/trees/f84ff1200a5f091e57eb754d64a2373976b01554"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/d3793b6e23ca1d32c989319cdd5304b861a8dec7",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/d3793b6e23ca1d32c989319cdd5304b861a8dec7",
      "html_url": "https://github.com/appium/appium/commit/d3793b6e23ca1d32c989319cdd5304b861a8dec7",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/d3793b6e23ca1d32c989319cdd5304b861a8dec7/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "88fb51b9f289f13b1ba4f15ffb3a509e550e40c1",
          "url": "https://api.github.com/repos/appium/appium/commits/88fb51b9f289f13b1ba4f15ffb3a509e550e40c1",
          "html_url": "https://github.com/appium/appium/commit/88fb51b9f289f13b1ba4f15ffb3a509e550e40c1"
        }
      ]
    },
    {
      "sha": "43201687a5121c5c55c656248c96b4766317c0f2",
      "commit": {
        "author": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-12-15T17:38:47Z"
        },
        "committer": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-12-15T17:38:47Z"
        },
        "message": "Merge pull request #5922 from appium/isaac-ios\n\nUpdate ios driver version",
        "tree": {
          "sha": "f84ff1200a5f091e57eb754d64a2373976b01554",
          "url": "https://api.github.com/repos/appium/appium/git/trees/f84ff1200a5f091e57eb754d64a2373976b01554"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/43201687a5121c5c55c656248c96b4766317c0f2",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/43201687a5121c5c55c656248c96b4766317c0f2",
      "html_url": "https://github.com/appium/appium/commit/43201687a5121c5c55c656248c96b4766317c0f2",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/43201687a5121c5c55c656248c96b4766317c0f2/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "88fb51b9f289f13b1ba4f15ffb3a509e550e40c1",
          "url": "https://api.github.com/repos/appium/appium/commits/88fb51b9f289f13b1ba4f15ffb3a509e550e40c1",
          "html_url": "https://github.com/appium/appium/commit/88fb51b9f289f13b1ba4f15ffb3a509e550e40c1"
        },
        {
          "sha": "d3793b6e23ca1d32c989319cdd5304b861a8dec7",
          "url": "https://api.github.com/repos/appium/appium/commits/d3793b6e23ca1d32c989319cdd5304b861a8dec7",
          "html_url": "https://github.com/appium/appium/commit/d3793b6e23ca1d32c989319cdd5304b861a8dec7"
        }
      ]
    },
    {
      "sha": "fafdb3ece009f2b3c9160f76e14d7a773cb0fc74",
      "commit": {
        "author": {
          "name": "Scott Dixon",
          "email": "scottdixon@saucelabs.com",
          "date": "2015-12-16T18:33:06Z"
        },
        "committer": {
          "name": "Scott Dixon",
          "email": "scottdixon@saucelabs.com",
          "date": "2015-12-16T18:33:06Z"
        },
        "message": "Merge pull request #5919 from scottdixon/grunt-docs\n\n'Gulp docs', deprecated server arguments, doc updates",
        "tree": {
          "sha": "29267d8de5f972df506de000b413d1672f940da7",
          "url": "https://api.github.com/repos/appium/appium/git/trees/29267d8de5f972df506de000b413d1672f940da7"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/fafdb3ece009f2b3c9160f76e14d7a773cb0fc74",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/fafdb3ece009f2b3c9160f76e14d7a773cb0fc74",
      "html_url": "https://github.com/appium/appium/commit/fafdb3ece009f2b3c9160f76e14d7a773cb0fc74",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/fafdb3ece009f2b3c9160f76e14d7a773cb0fc74/comments",
      "author": null,
      "committer": null,
      "parents": [
        {
          "sha": "43201687a5121c5c55c656248c96b4766317c0f2",
          "url": "https://api.github.com/repos/appium/appium/commits/43201687a5121c5c55c656248c96b4766317c0f2",
          "html_url": "https://github.com/appium/appium/commit/43201687a5121c5c55c656248c96b4766317c0f2"
        },
        {
          "sha": "21c0ad3cf26eb1d325360ae8f0aa41b1e0e13db1",
          "url": "https://api.github.com/repos/appium/appium/commits/21c0ad3cf26eb1d325360ae8f0aa41b1e0e13db1",
          "html_url": "https://github.com/appium/appium/commit/21c0ad3cf26eb1d325360ae8f0aa41b1e0e13db1"
        }
      ]
    },
    {
      "sha": "9238ac2ed99eda908e5e56263a1da1e35b12985c",
      "commit": {
        "author": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-12-17T17:03:17Z"
        },
        "committer": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-12-17T17:03:17Z"
        },
        "message": "Merge pull request #5900 from appium/isaac-docs\n\nUpdate docs for 1.5",
        "tree": {
          "sha": "293e60fe9cda5404498fdf4de9d68897f7c02688",
          "url": "https://api.github.com/repos/appium/appium/git/trees/293e60fe9cda5404498fdf4de9d68897f7c02688"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/9238ac2ed99eda908e5e56263a1da1e35b12985c",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/9238ac2ed99eda908e5e56263a1da1e35b12985c",
      "html_url": "https://github.com/appium/appium/commit/9238ac2ed99eda908e5e56263a1da1e35b12985c",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/9238ac2ed99eda908e5e56263a1da1e35b12985c/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "fafdb3ece009f2b3c9160f76e14d7a773cb0fc74",
          "url": "https://api.github.com/repos/appium/appium/commits/fafdb3ece009f2b3c9160f76e14d7a773cb0fc74",
          "html_url": "https://github.com/appium/appium/commit/fafdb3ece009f2b3c9160f76e14d7a773cb0fc74"
        },
        {
          "sha": "ee3f12591895d1c08dff3bb464162afd3742d9d1",
          "url": "https://api.github.com/repos/appium/appium/commits/ee3f12591895d1c08dff3bb464162afd3742d9d1",
          "html_url": "https://github.com/appium/appium/commit/ee3f12591895d1c08dff3bb464162afd3742d9d1"
        }
      ]
    },
    {
      "sha": "004b57eb94cf0c8f51033f5cebb0f7754fa8f101",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-12-17T17:26:27Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-12-17T17:26:27Z"
        },
        "message": "Bump ios version",
        "tree": {
          "sha": "9d9a54f39969c322438a7d92d56c1ebfea0a9e57",
          "url": "https://api.github.com/repos/appium/appium/git/trees/9d9a54f39969c322438a7d92d56c1ebfea0a9e57"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/004b57eb94cf0c8f51033f5cebb0f7754fa8f101",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/004b57eb94cf0c8f51033f5cebb0f7754fa8f101",
      "html_url": "https://github.com/appium/appium/commit/004b57eb94cf0c8f51033f5cebb0f7754fa8f101",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/004b57eb94cf0c8f51033f5cebb0f7754fa8f101/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "fafdb3ece009f2b3c9160f76e14d7a773cb0fc74",
          "url": "https://api.github.com/repos/appium/appium/commits/fafdb3ece009f2b3c9160f76e14d7a773cb0fc74",
          "html_url": "https://github.com/appium/appium/commit/fafdb3ece009f2b3c9160f76e14d7a773cb0fc74"
        }
      ]
    },
    {
      "sha": "a9dbc6d826f17c01a8e93e72d1a792659d34a7c5",
      "commit": {
        "author": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-12-17T18:06:56Z"
        },
        "committer": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-12-17T18:06:56Z"
        },
        "message": "Merge pull request #5932 from appium/isaac-ios\n\nBump ios version",
        "tree": {
          "sha": "a47305377303bbce6b89f838357844f1ba956976",
          "url": "https://api.github.com/repos/appium/appium/git/trees/a47305377303bbce6b89f838357844f1ba956976"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/a9dbc6d826f17c01a8e93e72d1a792659d34a7c5",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/a9dbc6d826f17c01a8e93e72d1a792659d34a7c5",
      "html_url": "https://github.com/appium/appium/commit/a9dbc6d826f17c01a8e93e72d1a792659d34a7c5",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/a9dbc6d826f17c01a8e93e72d1a792659d34a7c5/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "9238ac2ed99eda908e5e56263a1da1e35b12985c",
          "url": "https://api.github.com/repos/appium/appium/commits/9238ac2ed99eda908e5e56263a1da1e35b12985c",
          "html_url": "https://github.com/appium/appium/commit/9238ac2ed99eda908e5e56263a1da1e35b12985c"
        },
        {
          "sha": "004b57eb94cf0c8f51033f5cebb0f7754fa8f101",
          "url": "https://api.github.com/repos/appium/appium/commits/004b57eb94cf0c8f51033f5cebb0f7754fa8f101",
          "html_url": "https://github.com/appium/appium/commit/004b57eb94cf0c8f51033f5cebb0f7754fa8f101"
        }
      ]
    },
    {
      "sha": "40ab45db1bdec4c3d4ae498a34469a4efa4a4c27",
      "commit": {
        "author": {
          "name": "Scott Dixon",
          "email": "scott@howrefreshing.com.au",
          "date": "2015-12-17T22:09:45Z"
        },
        "committer": {
          "name": "Scott Dixon",
          "email": "scott@howrefreshing.com.au",
          "date": "2015-12-17T22:14:00Z"
        },
        "message": "basic --default-capabilities doc",
        "tree": {
          "sha": "3e5cc56cad2a49523a17ec78e450b3b55046c056",
          "url": "https://api.github.com/repos/appium/appium/git/trees/3e5cc56cad2a49523a17ec78e450b3b55046c056"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/40ab45db1bdec4c3d4ae498a34469a4efa4a4c27",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/40ab45db1bdec4c3d4ae498a34469a4efa4a4c27",
      "html_url": "https://github.com/appium/appium/commit/40ab45db1bdec4c3d4ae498a34469a4efa4a4c27",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/40ab45db1bdec4c3d4ae498a34469a4efa4a4c27/comments",
      "author": {
        "login": "scottdixon",
        "id": 4726068,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4726068?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottdixon",
        "html_url": "https://github.com/scottdixon",
        "followers_url": "https://api.github.com/users/scottdixon/followers",
        "following_url": "https://api.github.com/users/scottdixon/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottdixon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottdixon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottdixon/subscriptions",
        "organizations_url": "https://api.github.com/users/scottdixon/orgs",
        "repos_url": "https://api.github.com/users/scottdixon/repos",
        "events_url": "https://api.github.com/users/scottdixon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottdixon/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "scottdixon",
        "id": 4726068,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4726068?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottdixon",
        "html_url": "https://github.com/scottdixon",
        "followers_url": "https://api.github.com/users/scottdixon/followers",
        "following_url": "https://api.github.com/users/scottdixon/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottdixon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottdixon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottdixon/subscriptions",
        "organizations_url": "https://api.github.com/users/scottdixon/orgs",
        "repos_url": "https://api.github.com/users/scottdixon/repos",
        "events_url": "https://api.github.com/users/scottdixon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottdixon/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "a9dbc6d826f17c01a8e93e72d1a792659d34a7c5",
          "url": "https://api.github.com/repos/appium/appium/commits/a9dbc6d826f17c01a8e93e72d1a792659d34a7c5",
          "html_url": "https://github.com/appium/appium/commit/a9dbc6d826f17c01a8e93e72d1a792659d34a7c5"
        }
      ]
    },
    {
      "sha": "c8387db58a9302948049843704381e3a4ddac6d4",
      "commit": {
        "author": {
          "name": "Scott Dixon",
          "email": "scott@howrefreshing.com.au",
          "date": "2015-12-17T22:19:00Z"
        },
        "committer": {
          "name": "Scott Dixon",
          "email": "scott@howrefreshing.com.au",
          "date": "2015-12-17T22:19:00Z"
        },
        "message": "Fixed doc typo",
        "tree": {
          "sha": "da816b249cb231c54bb6df158b8456154847e6d9",
          "url": "https://api.github.com/repos/appium/appium/git/trees/da816b249cb231c54bb6df158b8456154847e6d9"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/c8387db58a9302948049843704381e3a4ddac6d4",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/c8387db58a9302948049843704381e3a4ddac6d4",
      "html_url": "https://github.com/appium/appium/commit/c8387db58a9302948049843704381e3a4ddac6d4",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/c8387db58a9302948049843704381e3a4ddac6d4/comments",
      "author": {
        "login": "scottdixon",
        "id": 4726068,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4726068?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottdixon",
        "html_url": "https://github.com/scottdixon",
        "followers_url": "https://api.github.com/users/scottdixon/followers",
        "following_url": "https://api.github.com/users/scottdixon/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottdixon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottdixon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottdixon/subscriptions",
        "organizations_url": "https://api.github.com/users/scottdixon/orgs",
        "repos_url": "https://api.github.com/users/scottdixon/repos",
        "events_url": "https://api.github.com/users/scottdixon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottdixon/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "scottdixon",
        "id": 4726068,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4726068?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottdixon",
        "html_url": "https://github.com/scottdixon",
        "followers_url": "https://api.github.com/users/scottdixon/followers",
        "following_url": "https://api.github.com/users/scottdixon/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottdixon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottdixon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottdixon/subscriptions",
        "organizations_url": "https://api.github.com/users/scottdixon/orgs",
        "repos_url": "https://api.github.com/users/scottdixon/repos",
        "events_url": "https://api.github.com/users/scottdixon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottdixon/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "40ab45db1bdec4c3d4ae498a34469a4efa4a4c27",
          "url": "https://api.github.com/repos/appium/appium/commits/40ab45db1bdec4c3d4ae498a34469a4efa4a4c27",
          "html_url": "https://github.com/appium/appium/commit/40ab45db1bdec4c3d4ae498a34469a4efa4a4c27"
        }
      ]
    },
    {
      "sha": "39467a41d762a12fb1f668ae0c36048173fd2dcb",
      "commit": {
        "author": {
          "name": "Scott Dixon",
          "email": "scott@howrefreshing.com.au",
          "date": "2015-12-17T22:28:27Z"
        },
        "committer": {
          "name": "Scott Dixon",
          "email": "scott@howrefreshing.com.au",
          "date": "2015-12-17T22:34:00Z"
        },
        "message": "Linking to --default-caps doc",
        "tree": {
          "sha": "173195bacb21e01c03b3cef6377663a6c5774128",
          "url": "https://api.github.com/repos/appium/appium/git/trees/173195bacb21e01c03b3cef6377663a6c5774128"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/39467a41d762a12fb1f668ae0c36048173fd2dcb",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/39467a41d762a12fb1f668ae0c36048173fd2dcb",
      "html_url": "https://github.com/appium/appium/commit/39467a41d762a12fb1f668ae0c36048173fd2dcb",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/39467a41d762a12fb1f668ae0c36048173fd2dcb/comments",
      "author": {
        "login": "scottdixon",
        "id": 4726068,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4726068?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottdixon",
        "html_url": "https://github.com/scottdixon",
        "followers_url": "https://api.github.com/users/scottdixon/followers",
        "following_url": "https://api.github.com/users/scottdixon/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottdixon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottdixon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottdixon/subscriptions",
        "organizations_url": "https://api.github.com/users/scottdixon/orgs",
        "repos_url": "https://api.github.com/users/scottdixon/repos",
        "events_url": "https://api.github.com/users/scottdixon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottdixon/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "scottdixon",
        "id": 4726068,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4726068?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottdixon",
        "html_url": "https://github.com/scottdixon",
        "followers_url": "https://api.github.com/users/scottdixon/followers",
        "following_url": "https://api.github.com/users/scottdixon/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottdixon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottdixon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottdixon/subscriptions",
        "organizations_url": "https://api.github.com/users/scottdixon/orgs",
        "repos_url": "https://api.github.com/users/scottdixon/repos",
        "events_url": "https://api.github.com/users/scottdixon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottdixon/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "c8387db58a9302948049843704381e3a4ddac6d4",
          "url": "https://api.github.com/repos/appium/appium/commits/c8387db58a9302948049843704381e3a4ddac6d4",
          "html_url": "https://github.com/appium/appium/commit/c8387db58a9302948049843704381e3a4ddac6d4"
        }
      ]
    },
    {
      "sha": "5d0ee808cf3c3799cf9b52f55cdc7d236432e898",
      "commit": {
        "author": {
          "name": "Scott Dixon",
          "email": "scottdixon@saucelabs.com",
          "date": "2015-12-18T19:04:49Z"
        },
        "committer": {
          "name": "Scott Dixon",
          "email": "scottdixon@saucelabs.com",
          "date": "2015-12-18T19:04:49Z"
        },
        "message": "Merge pull request #5933 from scottdixon/1.5docs\n\n1.5 doc tweaks",
        "tree": {
          "sha": "173195bacb21e01c03b3cef6377663a6c5774128",
          "url": "https://api.github.com/repos/appium/appium/git/trees/173195bacb21e01c03b3cef6377663a6c5774128"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/5d0ee808cf3c3799cf9b52f55cdc7d236432e898",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/5d0ee808cf3c3799cf9b52f55cdc7d236432e898",
      "html_url": "https://github.com/appium/appium/commit/5d0ee808cf3c3799cf9b52f55cdc7d236432e898",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/5d0ee808cf3c3799cf9b52f55cdc7d236432e898/comments",
      "author": null,
      "committer": null,
      "parents": [
        {
          "sha": "a9dbc6d826f17c01a8e93e72d1a792659d34a7c5",
          "url": "https://api.github.com/repos/appium/appium/commits/a9dbc6d826f17c01a8e93e72d1a792659d34a7c5",
          "html_url": "https://github.com/appium/appium/commit/a9dbc6d826f17c01a8e93e72d1a792659d34a7c5"
        },
        {
          "sha": "39467a41d762a12fb1f668ae0c36048173fd2dcb",
          "url": "https://api.github.com/repos/appium/appium/commits/39467a41d762a12fb1f668ae0c36048173fd2dcb",
          "html_url": "https://github.com/appium/appium/commit/39467a41d762a12fb1f668ae0c36048173fd2dcb"
        }
      ]
    },
    {
      "sha": "f6240cd1576ffda859befa3be0b84aa64b7d39ed",
      "commit": {
        "author": {
          "name": "Scott Dixon",
          "email": "scott@howrefreshing.com.au",
          "date": "2015-12-19T00:12:55Z"
        },
        "committer": {
          "name": "Scott Dixon",
          "email": "scott@howrefreshing.com.au",
          "date": "2015-12-19T00:12:55Z"
        },
        "message": "Doc link tweaked so Middleman generator behaves",
        "tree": {
          "sha": "f4f5337cd4c317cd03faae030d87564b0c8603fb",
          "url": "https://api.github.com/repos/appium/appium/git/trees/f4f5337cd4c317cd03faae030d87564b0c8603fb"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/f6240cd1576ffda859befa3be0b84aa64b7d39ed",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/f6240cd1576ffda859befa3be0b84aa64b7d39ed",
      "html_url": "https://github.com/appium/appium/commit/f6240cd1576ffda859befa3be0b84aa64b7d39ed",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/f6240cd1576ffda859befa3be0b84aa64b7d39ed/comments",
      "author": {
        "login": "scottdixon",
        "id": 4726068,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4726068?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottdixon",
        "html_url": "https://github.com/scottdixon",
        "followers_url": "https://api.github.com/users/scottdixon/followers",
        "following_url": "https://api.github.com/users/scottdixon/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottdixon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottdixon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottdixon/subscriptions",
        "organizations_url": "https://api.github.com/users/scottdixon/orgs",
        "repos_url": "https://api.github.com/users/scottdixon/repos",
        "events_url": "https://api.github.com/users/scottdixon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottdixon/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "scottdixon",
        "id": 4726068,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4726068?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottdixon",
        "html_url": "https://github.com/scottdixon",
        "followers_url": "https://api.github.com/users/scottdixon/followers",
        "following_url": "https://api.github.com/users/scottdixon/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottdixon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottdixon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottdixon/subscriptions",
        "organizations_url": "https://api.github.com/users/scottdixon/orgs",
        "repos_url": "https://api.github.com/users/scottdixon/repos",
        "events_url": "https://api.github.com/users/scottdixon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottdixon/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "5d0ee808cf3c3799cf9b52f55cdc7d236432e898",
          "url": "https://api.github.com/repos/appium/appium/commits/5d0ee808cf3c3799cf9b52f55cdc7d236432e898",
          "html_url": "https://github.com/appium/appium/commit/5d0ee808cf3c3799cf9b52f55cdc7d236432e898"
        }
      ]
    },
    {
      "sha": "f002ddb39fd5b4c2ef95a05d5f3bb38843ca4cbe",
      "commit": {
        "author": {
          "name": "Scott Dixon",
          "email": "scottdixon@saucelabs.com",
          "date": "2015-12-19T00:14:20Z"
        },
        "committer": {
          "name": "Scott Dixon",
          "email": "scottdixon@saucelabs.com",
          "date": "2015-12-19T00:14:20Z"
        },
        "message": "Merge pull request #5940 from scottdixon/1.5docs-middleman\n\nDoc link tweaked so Middleman generator behaves",
        "tree": {
          "sha": "f4f5337cd4c317cd03faae030d87564b0c8603fb",
          "url": "https://api.github.com/repos/appium/appium/git/trees/f4f5337cd4c317cd03faae030d87564b0c8603fb"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/f002ddb39fd5b4c2ef95a05d5f3bb38843ca4cbe",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/f002ddb39fd5b4c2ef95a05d5f3bb38843ca4cbe",
      "html_url": "https://github.com/appium/appium/commit/f002ddb39fd5b4c2ef95a05d5f3bb38843ca4cbe",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/f002ddb39fd5b4c2ef95a05d5f3bb38843ca4cbe/comments",
      "author": null,
      "committer": null,
      "parents": [
        {
          "sha": "5d0ee808cf3c3799cf9b52f55cdc7d236432e898",
          "url": "https://api.github.com/repos/appium/appium/commits/5d0ee808cf3c3799cf9b52f55cdc7d236432e898",
          "html_url": "https://github.com/appium/appium/commit/5d0ee808cf3c3799cf9b52f55cdc7d236432e898"
        },
        {
          "sha": "f6240cd1576ffda859befa3be0b84aa64b7d39ed",
          "url": "https://api.github.com/repos/appium/appium/commits/f6240cd1576ffda859befa3be0b84aa64b7d39ed",
          "html_url": "https://github.com/appium/appium/commit/f6240cd1576ffda859befa3be0b84aa64b7d39ed"
        }
      ]
    },
    {
      "sha": "663289de3ed8a5e6e95e194f2b912b360d7aec3a",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-12-18T00:04:23Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-12-19T01:11:21Z"
        },
        "message": "update with android url capability and bump for new beta",
        "tree": {
          "sha": "819444272559ac8727bc2ee654c23c1c331adc5f",
          "url": "https://api.github.com/repos/appium/appium/git/trees/819444272559ac8727bc2ee654c23c1c331adc5f"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/663289de3ed8a5e6e95e194f2b912b360d7aec3a",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/663289de3ed8a5e6e95e194f2b912b360d7aec3a",
      "html_url": "https://github.com/appium/appium/commit/663289de3ed8a5e6e95e194f2b912b360d7aec3a",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/663289de3ed8a5e6e95e194f2b912b360d7aec3a/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "f002ddb39fd5b4c2ef95a05d5f3bb38843ca4cbe",
          "url": "https://api.github.com/repos/appium/appium/commits/f002ddb39fd5b4c2ef95a05d5f3bb38843ca4cbe",
          "html_url": "https://github.com/appium/appium/commit/f002ddb39fd5b4c2ef95a05d5f3bb38843ca4cbe"
        }
      ]
    },
    {
      "sha": "5cf5d8b4c7d1d4eaf1f1b22aa611e62385bffbca",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-12-18T01:13:37Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-12-19T01:11:21Z"
        },
        "message": "beta9",
        "tree": {
          "sha": "c364c13121315cfeecf07284fd5f15b0808c9f23",
          "url": "https://api.github.com/repos/appium/appium/git/trees/c364c13121315cfeecf07284fd5f15b0808c9f23"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/5cf5d8b4c7d1d4eaf1f1b22aa611e62385bffbca",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/5cf5d8b4c7d1d4eaf1f1b22aa611e62385bffbca",
      "html_url": "https://github.com/appium/appium/commit/5cf5d8b4c7d1d4eaf1f1b22aa611e62385bffbca",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/5cf5d8b4c7d1d4eaf1f1b22aa611e62385bffbca/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "663289de3ed8a5e6e95e194f2b912b360d7aec3a",
          "url": "https://api.github.com/repos/appium/appium/commits/663289de3ed8a5e6e95e194f2b912b360d7aec3a",
          "html_url": "https://github.com/appium/appium/commit/663289de3ed8a5e6e95e194f2b912b360d7aec3a"
        }
      ]
    },
    {
      "sha": "e7f89e43705060a0bfb122765ea141844861dfd3",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-12-19T01:10:33Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-12-19T01:11:21Z"
        },
        "message": "get started on the 1.5 changelog",
        "tree": {
          "sha": "fa48949069817cfee751061a3092adfb90a07481",
          "url": "https://api.github.com/repos/appium/appium/git/trees/fa48949069817cfee751061a3092adfb90a07481"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/e7f89e43705060a0bfb122765ea141844861dfd3",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/e7f89e43705060a0bfb122765ea141844861dfd3",
      "html_url": "https://github.com/appium/appium/commit/e7f89e43705060a0bfb122765ea141844861dfd3",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/e7f89e43705060a0bfb122765ea141844861dfd3/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "5cf5d8b4c7d1d4eaf1f1b22aa611e62385bffbca",
          "url": "https://api.github.com/repos/appium/appium/commits/5cf5d8b4c7d1d4eaf1f1b22aa611e62385bffbca",
          "html_url": "https://github.com/appium/appium/commit/5cf5d8b4c7d1d4eaf1f1b22aa611e62385bffbca"
        }
      ]
    },
    {
      "sha": "58941c3324e49b425365c081b88a1e9690153dfc",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-12-22T00:10:22Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-12-22T00:10:22Z"
        },
        "message": "fill out more changelog and update packweb",
        "tree": {
          "sha": "98a6f3eefca538c1263f1d7f63807815d0d23a67",
          "url": "https://api.github.com/repos/appium/appium/git/trees/98a6f3eefca538c1263f1d7f63807815d0d23a67"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/58941c3324e49b425365c081b88a1e9690153dfc",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/58941c3324e49b425365c081b88a1e9690153dfc",
      "html_url": "https://github.com/appium/appium/commit/58941c3324e49b425365c081b88a1e9690153dfc",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/58941c3324e49b425365c081b88a1e9690153dfc/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "e7f89e43705060a0bfb122765ea141844861dfd3",
          "url": "https://api.github.com/repos/appium/appium/commits/e7f89e43705060a0bfb122765ea141844861dfd3",
          "html_url": "https://github.com/appium/appium/commit/e7f89e43705060a0bfb122765ea141844861dfd3"
        }
      ]
    },
    {
      "sha": "aefb669efb8dd638156e71b0228d7a2aa5ea0d09",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-12-22T20:18:30Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-12-22T20:18:30Z"
        },
        "message": "remove appium-doctor as a dep, and other unused deps",
        "tree": {
          "sha": "75fc1746b5fa733f06bc5b6599dfb4d7f557ec29",
          "url": "https://api.github.com/repos/appium/appium/git/trees/75fc1746b5fa733f06bc5b6599dfb4d7f557ec29"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/aefb669efb8dd638156e71b0228d7a2aa5ea0d09",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/aefb669efb8dd638156e71b0228d7a2aa5ea0d09",
      "html_url": "https://github.com/appium/appium/commit/aefb669efb8dd638156e71b0228d7a2aa5ea0d09",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/aefb669efb8dd638156e71b0228d7a2aa5ea0d09/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "58941c3324e49b425365c081b88a1e9690153dfc",
          "url": "https://api.github.com/repos/appium/appium/commits/58941c3324e49b425365c081b88a1e9690153dfc",
          "html_url": "https://github.com/appium/appium/commit/58941c3324e49b425365c081b88a1e9690153dfc"
        }
      ]
    },
    {
      "sha": "d863b2f1c5233cb0e2ef9ee5592f7288ad17a2c2",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-12-22T22:20:23Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-12-22T22:20:23Z"
        },
        "message": "use a real version of fakedriver",
        "tree": {
          "sha": "923b968737e1e1d98401863b03f6ba48ef12e3e0",
          "url": "https://api.github.com/repos/appium/appium/git/trees/923b968737e1e1d98401863b03f6ba48ef12e3e0"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/d863b2f1c5233cb0e2ef9ee5592f7288ad17a2c2",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/d863b2f1c5233cb0e2ef9ee5592f7288ad17a2c2",
      "html_url": "https://github.com/appium/appium/commit/d863b2f1c5233cb0e2ef9ee5592f7288ad17a2c2",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/d863b2f1c5233cb0e2ef9ee5592f7288ad17a2c2/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "aefb669efb8dd638156e71b0228d7a2aa5ea0d09",
          "url": "https://api.github.com/repos/appium/appium/commits/aefb669efb8dd638156e71b0228d7a2aa5ea0d09",
          "html_url": "https://github.com/appium/appium/commit/aefb669efb8dd638156e71b0228d7a2aa5ea0d09"
        }
      ]
    },
    {
      "sha": "b228b8552132d2b3615bca68cd22287a428e2a96",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-12-22T23:44:13Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-12-22T23:44:13Z"
        },
        "message": "add webdriveragent to packweb",
        "tree": {
          "sha": "d15ee75eeafcd77d471b4146d4bc0b4dd4595100",
          "url": "https://api.github.com/repos/appium/appium/git/trees/d15ee75eeafcd77d471b4146d4bc0b4dd4595100"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/b228b8552132d2b3615bca68cd22287a428e2a96",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/b228b8552132d2b3615bca68cd22287a428e2a96",
      "html_url": "https://github.com/appium/appium/commit/b228b8552132d2b3615bca68cd22287a428e2a96",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/b228b8552132d2b3615bca68cd22287a428e2a96/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "d863b2f1c5233cb0e2ef9ee5592f7288ad17a2c2",
          "url": "https://api.github.com/repos/appium/appium/commits/d863b2f1c5233cb0e2ef9ee5592f7288ad17a2c2",
          "html_url": "https://github.com/appium/appium/commit/d863b2f1c5233cb0e2ef9ee5592f7288ad17a2c2"
        }
      ]
    },
    {
      "sha": "baddea73bb626756d3a5da2965a8e873969a405f",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-12-23T17:51:33Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-12-23T17:51:33Z"
        },
        "message": "add safari driver to packweb",
        "tree": {
          "sha": "a098ebaed5014b0f9c0500f5dd08e6b4d0e0d797",
          "url": "https://api.github.com/repos/appium/appium/git/trees/a098ebaed5014b0f9c0500f5dd08e6b4d0e0d797"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/baddea73bb626756d3a5da2965a8e873969a405f",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/baddea73bb626756d3a5da2965a8e873969a405f",
      "html_url": "https://github.com/appium/appium/commit/baddea73bb626756d3a5da2965a8e873969a405f",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/baddea73bb626756d3a5da2965a8e873969a405f/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "b228b8552132d2b3615bca68cd22287a428e2a96",
          "url": "https://api.github.com/repos/appium/appium/commits/b228b8552132d2b3615bca68cd22287a428e2a96",
          "html_url": "https://github.com/appium/appium/commit/b228b8552132d2b3615bca68cd22287a428e2a96"
        }
      ]
    },
    {
      "sha": "8807782508ca8d3f16d70225139893a927295bf7",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-12-28T18:20:44Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-12-28T19:20:15Z"
        },
        "message": "Add appium-doctor and update bins",
        "tree": {
          "sha": "e66e784249afee17719f477bf2ca9836944709f6",
          "url": "https://api.github.com/repos/appium/appium/git/trees/e66e784249afee17719f477bf2ca9836944709f6"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/8807782508ca8d3f16d70225139893a927295bf7",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/8807782508ca8d3f16d70225139893a927295bf7",
      "html_url": "https://github.com/appium/appium/commit/8807782508ca8d3f16d70225139893a927295bf7",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/8807782508ca8d3f16d70225139893a927295bf7/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "baddea73bb626756d3a5da2965a8e873969a405f",
          "url": "https://api.github.com/repos/appium/appium/commits/baddea73bb626756d3a5da2965a8e873969a405f",
          "html_url": "https://github.com/appium/appium/commit/baddea73bb626756d3a5da2965a8e873969a405f"
        }
      ]
    },
    {
      "sha": "ad48a826c92314d5ce1b8b83f11aabf46a9613ea",
      "commit": {
        "author": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-12-28T19:26:41Z"
        },
        "committer": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-12-28T19:26:41Z"
        },
        "message": "Merge pull request #5963 from appium/isaac-bin\n\nAdd appium-doctor and update bins",
        "tree": {
          "sha": "e66e784249afee17719f477bf2ca9836944709f6",
          "url": "https://api.github.com/repos/appium/appium/git/trees/e66e784249afee17719f477bf2ca9836944709f6"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/ad48a826c92314d5ce1b8b83f11aabf46a9613ea",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/ad48a826c92314d5ce1b8b83f11aabf46a9613ea",
      "html_url": "https://github.com/appium/appium/commit/ad48a826c92314d5ce1b8b83f11aabf46a9613ea",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/ad48a826c92314d5ce1b8b83f11aabf46a9613ea/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "baddea73bb626756d3a5da2965a8e873969a405f",
          "url": "https://api.github.com/repos/appium/appium/commits/baddea73bb626756d3a5da2965a8e873969a405f",
          "html_url": "https://github.com/appium/appium/commit/baddea73bb626756d3a5da2965a8e873969a405f"
        },
        {
          "sha": "8807782508ca8d3f16d70225139893a927295bf7",
          "url": "https://api.github.com/repos/appium/appium/commits/8807782508ca8d3f16d70225139893a927295bf7",
          "html_url": "https://github.com/appium/appium/commit/8807782508ca8d3f16d70225139893a927295bf7"
        }
      ]
    },
    {
      "sha": "abb7b543aa2bbb03a3fff476cabdaf7b35bec5eb",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-12-29T23:14:30Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2015-12-30T16:34:28Z"
        },
        "message": "Add handling of boolean caps",
        "tree": {
          "sha": "70dbdb4767fadb1906ed0cbc90a205b13474bba4",
          "url": "https://api.github.com/repos/appium/appium/git/trees/70dbdb4767fadb1906ed0cbc90a205b13474bba4"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/abb7b543aa2bbb03a3fff476cabdaf7b35bec5eb",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/abb7b543aa2bbb03a3fff476cabdaf7b35bec5eb",
      "html_url": "https://github.com/appium/appium/commit/abb7b543aa2bbb03a3fff476cabdaf7b35bec5eb",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/abb7b543aa2bbb03a3fff476cabdaf7b35bec5eb/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "ad48a826c92314d5ce1b8b83f11aabf46a9613ea",
          "url": "https://api.github.com/repos/appium/appium/commits/ad48a826c92314d5ce1b8b83f11aabf46a9613ea",
          "html_url": "https://github.com/appium/appium/commit/ad48a826c92314d5ce1b8b83f11aabf46a9613ea"
        }
      ]
    },
    {
      "sha": "7a6b16365a7d5abb12403c8e91ba842c202a0f31",
      "commit": {
        "author": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-12-30T16:44:26Z"
        },
        "committer": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2015-12-30T16:44:26Z"
        },
        "message": "Merge pull request #5965 from appium/isaac-caps\n\nAdd handling of boolean caps",
        "tree": {
          "sha": "70dbdb4767fadb1906ed0cbc90a205b13474bba4",
          "url": "https://api.github.com/repos/appium/appium/git/trees/70dbdb4767fadb1906ed0cbc90a205b13474bba4"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/7a6b16365a7d5abb12403c8e91ba842c202a0f31",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/7a6b16365a7d5abb12403c8e91ba842c202a0f31",
      "html_url": "https://github.com/appium/appium/commit/7a6b16365a7d5abb12403c8e91ba842c202a0f31",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/7a6b16365a7d5abb12403c8e91ba842c202a0f31/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "ad48a826c92314d5ce1b8b83f11aabf46a9613ea",
          "url": "https://api.github.com/repos/appium/appium/commits/ad48a826c92314d5ce1b8b83f11aabf46a9613ea",
          "html_url": "https://github.com/appium/appium/commit/ad48a826c92314d5ce1b8b83f11aabf46a9613ea"
        },
        {
          "sha": "abb7b543aa2bbb03a3fff476cabdaf7b35bec5eb",
          "url": "https://api.github.com/repos/appium/appium/commits/abb7b543aa2bbb03a3fff476cabdaf7b35bec5eb",
          "html_url": "https://github.com/appium/appium/commit/abb7b543aa2bbb03a3fff476cabdaf7b35bec5eb"
        }
      ]
    },
    {
      "sha": "11d51a602cc0eadc0cd3a9f62df6d6527986697e",
      "commit": {
        "author": {
          "name": "Scott Dixon",
          "email": "scott@howrefreshing.com.au",
          "date": "2016-01-05T19:10:12Z"
        },
        "committer": {
          "name": "Scott Dixon",
          "email": "scott@howrefreshing.com.au",
          "date": "2016-01-05T19:10:12Z"
        },
        "message": "docs: minimum node version 0.12",
        "tree": {
          "sha": "b59e1eaf9c5ae507f65df1252bcfc9005f89d13f",
          "url": "https://api.github.com/repos/appium/appium/git/trees/b59e1eaf9c5ae507f65df1252bcfc9005f89d13f"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/11d51a602cc0eadc0cd3a9f62df6d6527986697e",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/11d51a602cc0eadc0cd3a9f62df6d6527986697e",
      "html_url": "https://github.com/appium/appium/commit/11d51a602cc0eadc0cd3a9f62df6d6527986697e",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/11d51a602cc0eadc0cd3a9f62df6d6527986697e/comments",
      "author": {
        "login": "scottdixon",
        "id": 4726068,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4726068?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottdixon",
        "html_url": "https://github.com/scottdixon",
        "followers_url": "https://api.github.com/users/scottdixon/followers",
        "following_url": "https://api.github.com/users/scottdixon/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottdixon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottdixon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottdixon/subscriptions",
        "organizations_url": "https://api.github.com/users/scottdixon/orgs",
        "repos_url": "https://api.github.com/users/scottdixon/repos",
        "events_url": "https://api.github.com/users/scottdixon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottdixon/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "scottdixon",
        "id": 4726068,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4726068?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottdixon",
        "html_url": "https://github.com/scottdixon",
        "followers_url": "https://api.github.com/users/scottdixon/followers",
        "following_url": "https://api.github.com/users/scottdixon/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottdixon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottdixon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottdixon/subscriptions",
        "organizations_url": "https://api.github.com/users/scottdixon/orgs",
        "repos_url": "https://api.github.com/users/scottdixon/repos",
        "events_url": "https://api.github.com/users/scottdixon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottdixon/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "7a6b16365a7d5abb12403c8e91ba842c202a0f31",
          "url": "https://api.github.com/repos/appium/appium/commits/7a6b16365a7d5abb12403c8e91ba842c202a0f31",
          "html_url": "https://github.com/appium/appium/commit/7a6b16365a7d5abb12403c8e91ba842c202a0f31"
        }
      ]
    },
    {
      "sha": "e78ca4d28cc5ce4cb07e05ee9a4557e0096f64cb",
      "commit": {
        "author": {
          "name": "Scott Dixon",
          "email": "scott@howrefreshing.com.au",
          "date": "2016-01-05T19:44:02Z"
        },
        "committer": {
          "name": "Scott Dixon",
          "email": "scott@howrefreshing.com.au",
          "date": "2016-01-05T19:59:07Z"
        },
        "message": "docs: generator formatting adjustments",
        "tree": {
          "sha": "02e617736b372e5177b7d44c134ebc4848c418bc",
          "url": "https://api.github.com/repos/appium/appium/git/trees/02e617736b372e5177b7d44c134ebc4848c418bc"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/e78ca4d28cc5ce4cb07e05ee9a4557e0096f64cb",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/e78ca4d28cc5ce4cb07e05ee9a4557e0096f64cb",
      "html_url": "https://github.com/appium/appium/commit/e78ca4d28cc5ce4cb07e05ee9a4557e0096f64cb",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/e78ca4d28cc5ce4cb07e05ee9a4557e0096f64cb/comments",
      "author": {
        "login": "scottdixon",
        "id": 4726068,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4726068?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottdixon",
        "html_url": "https://github.com/scottdixon",
        "followers_url": "https://api.github.com/users/scottdixon/followers",
        "following_url": "https://api.github.com/users/scottdixon/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottdixon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottdixon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottdixon/subscriptions",
        "organizations_url": "https://api.github.com/users/scottdixon/orgs",
        "repos_url": "https://api.github.com/users/scottdixon/repos",
        "events_url": "https://api.github.com/users/scottdixon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottdixon/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "scottdixon",
        "id": 4726068,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4726068?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottdixon",
        "html_url": "https://github.com/scottdixon",
        "followers_url": "https://api.github.com/users/scottdixon/followers",
        "following_url": "https://api.github.com/users/scottdixon/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottdixon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottdixon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottdixon/subscriptions",
        "organizations_url": "https://api.github.com/users/scottdixon/orgs",
        "repos_url": "https://api.github.com/users/scottdixon/repos",
        "events_url": "https://api.github.com/users/scottdixon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottdixon/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "11d51a602cc0eadc0cd3a9f62df6d6527986697e",
          "url": "https://api.github.com/repos/appium/appium/commits/11d51a602cc0eadc0cd3a9f62df6d6527986697e",
          "html_url": "https://github.com/appium/appium/commit/11d51a602cc0eadc0cd3a9f62df6d6527986697e"
        }
      ]
    },
    {
      "sha": "67c7e935ef9f0af76bbfb6251b5dbb433c7ce124",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2016-01-05T17:06:57Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2016-01-05T21:17:46Z"
        },
        "message": "Fix logging of args and caps",
        "tree": {
          "sha": "3a487d638cc1db9928c634baf8fd395d90e98275",
          "url": "https://api.github.com/repos/appium/appium/git/trees/3a487d638cc1db9928c634baf8fd395d90e98275"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/67c7e935ef9f0af76bbfb6251b5dbb433c7ce124",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/67c7e935ef9f0af76bbfb6251b5dbb433c7ce124",
      "html_url": "https://github.com/appium/appium/commit/67c7e935ef9f0af76bbfb6251b5dbb433c7ce124",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/67c7e935ef9f0af76bbfb6251b5dbb433c7ce124/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "7a6b16365a7d5abb12403c8e91ba842c202a0f31",
          "url": "https://api.github.com/repos/appium/appium/commits/7a6b16365a7d5abb12403c8e91ba842c202a0f31",
          "html_url": "https://github.com/appium/appium/commit/7a6b16365a7d5abb12403c8e91ba842c202a0f31"
        }
      ]
    },
    {
      "sha": "2974cdfc2d5358433a2cd86fc1708380e01e310d",
      "commit": {
        "author": {
          "name": "Scott Dixon",
          "email": "scott@howrefreshing.com.au",
          "date": "2016-01-05T21:20:15Z"
        },
        "committer": {
          "name": "Scott Dixon",
          "email": "scott@howrefreshing.com.au",
          "date": "2016-01-05T21:20:15Z"
        },
        "message": "docs: specific chromedriver version without reset.sh",
        "tree": {
          "sha": "8a9b6c774a133fc5b9d44d53379853517dd79e05",
          "url": "https://api.github.com/repos/appium/appium/git/trees/8a9b6c774a133fc5b9d44d53379853517dd79e05"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/2974cdfc2d5358433a2cd86fc1708380e01e310d",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/2974cdfc2d5358433a2cd86fc1708380e01e310d",
      "html_url": "https://github.com/appium/appium/commit/2974cdfc2d5358433a2cd86fc1708380e01e310d",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/2974cdfc2d5358433a2cd86fc1708380e01e310d/comments",
      "author": {
        "login": "scottdixon",
        "id": 4726068,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4726068?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottdixon",
        "html_url": "https://github.com/scottdixon",
        "followers_url": "https://api.github.com/users/scottdixon/followers",
        "following_url": "https://api.github.com/users/scottdixon/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottdixon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottdixon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottdixon/subscriptions",
        "organizations_url": "https://api.github.com/users/scottdixon/orgs",
        "repos_url": "https://api.github.com/users/scottdixon/repos",
        "events_url": "https://api.github.com/users/scottdixon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottdixon/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "scottdixon",
        "id": 4726068,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4726068?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottdixon",
        "html_url": "https://github.com/scottdixon",
        "followers_url": "https://api.github.com/users/scottdixon/followers",
        "following_url": "https://api.github.com/users/scottdixon/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottdixon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottdixon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottdixon/subscriptions",
        "organizations_url": "https://api.github.com/users/scottdixon/orgs",
        "repos_url": "https://api.github.com/users/scottdixon/repos",
        "events_url": "https://api.github.com/users/scottdixon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottdixon/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "e78ca4d28cc5ce4cb07e05ee9a4557e0096f64cb",
          "url": "https://api.github.com/repos/appium/appium/commits/e78ca4d28cc5ce4cb07e05ee9a4557e0096f64cb",
          "html_url": "https://github.com/appium/appium/commit/e78ca4d28cc5ce4cb07e05ee9a4557e0096f64cb"
        }
      ]
    },
    {
      "sha": "38a69327a65dc272f9794319ea0dc35ed5e7f927",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2016-01-05T21:23:44Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2016-01-05T21:23:44Z"
        },
        "message": "Remove appium-doctor dependency",
        "tree": {
          "sha": "3298814797315e1c7861068873218ebb24423bf2",
          "url": "https://api.github.com/repos/appium/appium/git/trees/3298814797315e1c7861068873218ebb24423bf2"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/38a69327a65dc272f9794319ea0dc35ed5e7f927",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/38a69327a65dc272f9794319ea0dc35ed5e7f927",
      "html_url": "https://github.com/appium/appium/commit/38a69327a65dc272f9794319ea0dc35ed5e7f927",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/38a69327a65dc272f9794319ea0dc35ed5e7f927/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "7a6b16365a7d5abb12403c8e91ba842c202a0f31",
          "url": "https://api.github.com/repos/appium/appium/commits/7a6b16365a7d5abb12403c8e91ba842c202a0f31",
          "html_url": "https://github.com/appium/appium/commit/7a6b16365a7d5abb12403c8e91ba842c202a0f31"
        }
      ]
    },
    {
      "sha": "51509babff5809b23af1a3245da099b5df99a911",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-01-05T22:12:35Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-01-05T22:12:35Z"
        },
        "message": "Merge pull request #5979 from appium/isaac-doctor\n\nRemove appium-doctor dependency",
        "tree": {
          "sha": "3298814797315e1c7861068873218ebb24423bf2",
          "url": "https://api.github.com/repos/appium/appium/git/trees/3298814797315e1c7861068873218ebb24423bf2"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/51509babff5809b23af1a3245da099b5df99a911",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/51509babff5809b23af1a3245da099b5df99a911",
      "html_url": "https://github.com/appium/appium/commit/51509babff5809b23af1a3245da099b5df99a911",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/51509babff5809b23af1a3245da099b5df99a911/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "7a6b16365a7d5abb12403c8e91ba842c202a0f31",
          "url": "https://api.github.com/repos/appium/appium/commits/7a6b16365a7d5abb12403c8e91ba842c202a0f31",
          "html_url": "https://github.com/appium/appium/commit/7a6b16365a7d5abb12403c8e91ba842c202a0f31"
        },
        {
          "sha": "38a69327a65dc272f9794319ea0dc35ed5e7f927",
          "url": "https://api.github.com/repos/appium/appium/commits/38a69327a65dc272f9794319ea0dc35ed5e7f927",
          "html_url": "https://github.com/appium/appium/commit/38a69327a65dc272f9794319ea0dc35ed5e7f927"
        }
      ]
    },
    {
      "sha": "41bb4843345e5e62bdede79971a3df29cec116e0",
      "commit": {
        "author": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2016-01-05T22:15:54Z"
        },
        "committer": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2016-01-05T22:15:54Z"
        },
        "message": "Merge pull request #5975 from appium/isaac-logs\n\nFix logging of args and caps",
        "tree": {
          "sha": "422fb1c667ff2e24320846150b39b814ac05a996",
          "url": "https://api.github.com/repos/appium/appium/git/trees/422fb1c667ff2e24320846150b39b814ac05a996"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/41bb4843345e5e62bdede79971a3df29cec116e0",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/41bb4843345e5e62bdede79971a3df29cec116e0",
      "html_url": "https://github.com/appium/appium/commit/41bb4843345e5e62bdede79971a3df29cec116e0",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/41bb4843345e5e62bdede79971a3df29cec116e0/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "51509babff5809b23af1a3245da099b5df99a911",
          "url": "https://api.github.com/repos/appium/appium/commits/51509babff5809b23af1a3245da099b5df99a911",
          "html_url": "https://github.com/appium/appium/commit/51509babff5809b23af1a3245da099b5df99a911"
        },
        {
          "sha": "67c7e935ef9f0af76bbfb6251b5dbb433c7ce124",
          "url": "https://api.github.com/repos/appium/appium/commits/67c7e935ef9f0af76bbfb6251b5dbb433c7ce124",
          "html_url": "https://github.com/appium/appium/commit/67c7e935ef9f0af76bbfb6251b5dbb433c7ce124"
        }
      ]
    },
    {
      "sha": "c35875cc1a25b29862ed8777f1a4f1588d762be9",
      "commit": {
        "author": {
          "name": "Jonah Stiennon",
          "email": "jonahss@gmail.com",
          "date": "2016-01-06T00:15:53Z"
        },
        "committer": {
          "name": "Jonah Stiennon",
          "email": "jonahss@gmail.com",
          "date": "2016-01-06T00:15:53Z"
        },
        "message": "log server information before listening on port.",
        "tree": {
          "sha": "fb4fde88f96c516dc39728f395c09a5cb4d2732e",
          "url": "https://api.github.com/repos/appium/appium/git/trees/fb4fde88f96c516dc39728f395c09a5cb4d2732e"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/c35875cc1a25b29862ed8777f1a4f1588d762be9",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/c35875cc1a25b29862ed8777f1a4f1588d762be9",
      "html_url": "https://github.com/appium/appium/commit/c35875cc1a25b29862ed8777f1a4f1588d762be9",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/c35875cc1a25b29862ed8777f1a4f1588d762be9/comments",
      "author": {
        "login": "Jonahss",
        "id": 1521841,
        "avatar_url": "https://avatars1.githubusercontent.com/u/1521841?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Jonahss",
        "html_url": "https://github.com/Jonahss",
        "followers_url": "https://api.github.com/users/Jonahss/followers",
        "following_url": "https://api.github.com/users/Jonahss/following{/other_user}",
        "gists_url": "https://api.github.com/users/Jonahss/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Jonahss/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Jonahss/subscriptions",
        "organizations_url": "https://api.github.com/users/Jonahss/orgs",
        "repos_url": "https://api.github.com/users/Jonahss/repos",
        "events_url": "https://api.github.com/users/Jonahss/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Jonahss/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "Jonahss",
        "id": 1521841,
        "avatar_url": "https://avatars1.githubusercontent.com/u/1521841?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Jonahss",
        "html_url": "https://github.com/Jonahss",
        "followers_url": "https://api.github.com/users/Jonahss/followers",
        "following_url": "https://api.github.com/users/Jonahss/following{/other_user}",
        "gists_url": "https://api.github.com/users/Jonahss/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Jonahss/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Jonahss/subscriptions",
        "organizations_url": "https://api.github.com/users/Jonahss/orgs",
        "repos_url": "https://api.github.com/users/Jonahss/repos",
        "events_url": "https://api.github.com/users/Jonahss/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Jonahss/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "41bb4843345e5e62bdede79971a3df29cec116e0",
          "url": "https://api.github.com/repos/appium/appium/commits/41bb4843345e5e62bdede79971a3df29cec116e0",
          "html_url": "https://github.com/appium/appium/commit/41bb4843345e5e62bdede79971a3df29cec116e0"
        }
      ]
    },
    {
      "sha": "13f2449f8e5fd06fc25ea15f4f7744c7e82eb595",
      "commit": {
        "author": {
          "name": "Srinivasan Sekar",
          "email": "srinivasan.sekar1990@gmail.com",
          "date": "2016-01-06T14:30:42Z"
        },
        "committer": {
          "name": "Srinivasan Sekar",
          "email": "srinivasan.sekar1990@gmail.com",
          "date": "2016-01-06T14:30:42Z"
        },
        "message": "updated node version",
        "tree": {
          "sha": "093cfb2f488d3b5eb4e47326cbcb9675b2539a5d",
          "url": "https://api.github.com/repos/appium/appium/git/trees/093cfb2f488d3b5eb4e47326cbcb9675b2539a5d"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/13f2449f8e5fd06fc25ea15f4f7744c7e82eb595",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/13f2449f8e5fd06fc25ea15f4f7744c7e82eb595",
      "html_url": "https://github.com/appium/appium/commit/13f2449f8e5fd06fc25ea15f4f7744c7e82eb595",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/13f2449f8e5fd06fc25ea15f4f7744c7e82eb595/comments",
      "author": {
        "login": "SrinivasanTarget",
        "id": 8896549,
        "avatar_url": "https://avatars1.githubusercontent.com/u/8896549?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/SrinivasanTarget",
        "html_url": "https://github.com/SrinivasanTarget",
        "followers_url": "https://api.github.com/users/SrinivasanTarget/followers",
        "following_url": "https://api.github.com/users/SrinivasanTarget/following{/other_user}",
        "gists_url": "https://api.github.com/users/SrinivasanTarget/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/SrinivasanTarget/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/SrinivasanTarget/subscriptions",
        "organizations_url": "https://api.github.com/users/SrinivasanTarget/orgs",
        "repos_url": "https://api.github.com/users/SrinivasanTarget/repos",
        "events_url": "https://api.github.com/users/SrinivasanTarget/events{/privacy}",
        "received_events_url": "https://api.github.com/users/SrinivasanTarget/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "SrinivasanTarget",
        "id": 8896549,
        "avatar_url": "https://avatars1.githubusercontent.com/u/8896549?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/SrinivasanTarget",
        "html_url": "https://github.com/SrinivasanTarget",
        "followers_url": "https://api.github.com/users/SrinivasanTarget/followers",
        "following_url": "https://api.github.com/users/SrinivasanTarget/following{/other_user}",
        "gists_url": "https://api.github.com/users/SrinivasanTarget/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/SrinivasanTarget/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/SrinivasanTarget/subscriptions",
        "organizations_url": "https://api.github.com/users/SrinivasanTarget/orgs",
        "repos_url": "https://api.github.com/users/SrinivasanTarget/repos",
        "events_url": "https://api.github.com/users/SrinivasanTarget/events{/privacy}",
        "received_events_url": "https://api.github.com/users/SrinivasanTarget/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "41bb4843345e5e62bdede79971a3df29cec116e0",
          "url": "https://api.github.com/repos/appium/appium/commits/41bb4843345e5e62bdede79971a3df29cec116e0",
          "html_url": "https://github.com/appium/appium/commit/41bb4843345e5e62bdede79971a3df29cec116e0"
        }
      ]
    },
    {
      "sha": "7548f8c4f90c6f1dcea1bfa0abeb505c5534a71b",
      "commit": {
        "author": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2016-01-06T16:24:31Z"
        },
        "committer": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2016-01-06T16:24:31Z"
        },
        "message": "Merge pull request #5981 from Jonahss/initialLogging\n\nlog server information before listening on port.",
        "tree": {
          "sha": "fb4fde88f96c516dc39728f395c09a5cb4d2732e",
          "url": "https://api.github.com/repos/appium/appium/git/trees/fb4fde88f96c516dc39728f395c09a5cb4d2732e"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/7548f8c4f90c6f1dcea1bfa0abeb505c5534a71b",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/7548f8c4f90c6f1dcea1bfa0abeb505c5534a71b",
      "html_url": "https://github.com/appium/appium/commit/7548f8c4f90c6f1dcea1bfa0abeb505c5534a71b",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/7548f8c4f90c6f1dcea1bfa0abeb505c5534a71b/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "41bb4843345e5e62bdede79971a3df29cec116e0",
          "url": "https://api.github.com/repos/appium/appium/commits/41bb4843345e5e62bdede79971a3df29cec116e0",
          "html_url": "https://github.com/appium/appium/commit/41bb4843345e5e62bdede79971a3df29cec116e0"
        },
        {
          "sha": "c35875cc1a25b29862ed8777f1a4f1588d762be9",
          "url": "https://api.github.com/repos/appium/appium/commits/c35875cc1a25b29862ed8777f1a4f1588d762be9",
          "html_url": "https://github.com/appium/appium/commit/c35875cc1a25b29862ed8777f1a4f1588d762be9"
        }
      ]
    },
    {
      "sha": "d363040a3fbfb08843ce197784fefe035dadb78b",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-01-06T17:39:16Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-01-06T17:39:16Z"
        },
        "message": "Merge pull request #5985 from SrinivasanTarget/1.5\n\nupdated node version",
        "tree": {
          "sha": "3c06b9e313aea6b6d0864abc777fe5833b1088e7",
          "url": "https://api.github.com/repos/appium/appium/git/trees/3c06b9e313aea6b6d0864abc777fe5833b1088e7"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/d363040a3fbfb08843ce197784fefe035dadb78b",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/d363040a3fbfb08843ce197784fefe035dadb78b",
      "html_url": "https://github.com/appium/appium/commit/d363040a3fbfb08843ce197784fefe035dadb78b",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/d363040a3fbfb08843ce197784fefe035dadb78b/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "7548f8c4f90c6f1dcea1bfa0abeb505c5534a71b",
          "url": "https://api.github.com/repos/appium/appium/commits/7548f8c4f90c6f1dcea1bfa0abeb505c5534a71b",
          "html_url": "https://github.com/appium/appium/commit/7548f8c4f90c6f1dcea1bfa0abeb505c5534a71b"
        },
        {
          "sha": "13f2449f8e5fd06fc25ea15f4f7744c7e82eb595",
          "url": "https://api.github.com/repos/appium/appium/commits/13f2449f8e5fd06fc25ea15f4f7744c7e82eb595",
          "html_url": "https://github.com/appium/appium/commit/13f2449f8e5fd06fc25ea15f4f7744c7e82eb595"
        }
      ]
    },
    {
      "sha": "8c1fc8e1e869fdcbfc32c02f473c293bd47db6ef",
      "commit": {
        "author": {
          "name": "Scott Dixon",
          "email": "scott@howrefreshing.com.au",
          "date": "2016-01-06T01:15:59Z"
        },
        "committer": {
          "name": "Scott Dixon",
          "email": "scott@howrefreshing.com.au",
          "date": "2016-01-06T18:23:15Z"
        },
        "message": "docs: updated realSafari info",
        "tree": {
          "sha": "2d7a73e6759d0ef6a5a16282a43fd0d9e3a31f75",
          "url": "https://api.github.com/repos/appium/appium/git/trees/2d7a73e6759d0ef6a5a16282a43fd0d9e3a31f75"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/8c1fc8e1e869fdcbfc32c02f473c293bd47db6ef",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/8c1fc8e1e869fdcbfc32c02f473c293bd47db6ef",
      "html_url": "https://github.com/appium/appium/commit/8c1fc8e1e869fdcbfc32c02f473c293bd47db6ef",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/8c1fc8e1e869fdcbfc32c02f473c293bd47db6ef/comments",
      "author": {
        "login": "scottdixon",
        "id": 4726068,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4726068?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottdixon",
        "html_url": "https://github.com/scottdixon",
        "followers_url": "https://api.github.com/users/scottdixon/followers",
        "following_url": "https://api.github.com/users/scottdixon/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottdixon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottdixon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottdixon/subscriptions",
        "organizations_url": "https://api.github.com/users/scottdixon/orgs",
        "repos_url": "https://api.github.com/users/scottdixon/repos",
        "events_url": "https://api.github.com/users/scottdixon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottdixon/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "scottdixon",
        "id": 4726068,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4726068?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottdixon",
        "html_url": "https://github.com/scottdixon",
        "followers_url": "https://api.github.com/users/scottdixon/followers",
        "following_url": "https://api.github.com/users/scottdixon/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottdixon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottdixon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottdixon/subscriptions",
        "organizations_url": "https://api.github.com/users/scottdixon/orgs",
        "repos_url": "https://api.github.com/users/scottdixon/repos",
        "events_url": "https://api.github.com/users/scottdixon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottdixon/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "2974cdfc2d5358433a2cd86fc1708380e01e310d",
          "url": "https://api.github.com/repos/appium/appium/commits/2974cdfc2d5358433a2cd86fc1708380e01e310d",
          "html_url": "https://github.com/appium/appium/commit/2974cdfc2d5358433a2cd86fc1708380e01e310d"
        }
      ]
    },
    {
      "sha": "fae72425d184dd56d2cbf3db10adb09125de1bbc",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2016-01-08T00:11:59Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2016-01-08T00:11:59Z"
        },
        "message": "Add appName cap to docs",
        "tree": {
          "sha": "11555a89e71b2887aff8dc36f82155393ff2c21b",
          "url": "https://api.github.com/repos/appium/appium/git/trees/11555a89e71b2887aff8dc36f82155393ff2c21b"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/fae72425d184dd56d2cbf3db10adb09125de1bbc",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/fae72425d184dd56d2cbf3db10adb09125de1bbc",
      "html_url": "https://github.com/appium/appium/commit/fae72425d184dd56d2cbf3db10adb09125de1bbc",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/fae72425d184dd56d2cbf3db10adb09125de1bbc/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "d363040a3fbfb08843ce197784fefe035dadb78b",
          "url": "https://api.github.com/repos/appium/appium/commits/d363040a3fbfb08843ce197784fefe035dadb78b",
          "html_url": "https://github.com/appium/appium/commit/d363040a3fbfb08843ce197784fefe035dadb78b"
        }
      ]
    },
    {
      "sha": "efa1bf2b5d7d5020a4d3b5ba7ab2fd7119c0cd33",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-01-08T18:43:24Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-01-08T18:43:24Z"
        },
        "message": "bump to beta10",
        "tree": {
          "sha": "cb23c92458fc5b8409f44b1cc4afc88323397316",
          "url": "https://api.github.com/repos/appium/appium/git/trees/cb23c92458fc5b8409f44b1cc4afc88323397316"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/efa1bf2b5d7d5020a4d3b5ba7ab2fd7119c0cd33",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/efa1bf2b5d7d5020a4d3b5ba7ab2fd7119c0cd33",
      "html_url": "https://github.com/appium/appium/commit/efa1bf2b5d7d5020a4d3b5ba7ab2fd7119c0cd33",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/efa1bf2b5d7d5020a4d3b5ba7ab2fd7119c0cd33/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "d363040a3fbfb08843ce197784fefe035dadb78b",
          "url": "https://api.github.com/repos/appium/appium/commits/d363040a3fbfb08843ce197784fefe035dadb78b",
          "html_url": "https://github.com/appium/appium/commit/d363040a3fbfb08843ce197784fefe035dadb78b"
        }
      ]
    },
    {
      "sha": "e579024fb24b90fafebf381a6c8d4e8c0eadd5d9",
      "commit": {
        "author": {
          "name": "Scott Dixon",
          "email": "scott@howrefreshing.com.au",
          "date": "2016-01-08T22:39:33Z"
        },
        "committer": {
          "name": "Scott Dixon",
          "email": "scott@howrefreshing.com.au",
          "date": "2016-01-08T22:39:33Z"
        },
        "message": "Implemented missing getStatus method",
        "tree": {
          "sha": "0d9d0a0df7dfe63e227e7f8e544670d41facaff4",
          "url": "https://api.github.com/repos/appium/appium/git/trees/0d9d0a0df7dfe63e227e7f8e544670d41facaff4"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/e579024fb24b90fafebf381a6c8d4e8c0eadd5d9",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/e579024fb24b90fafebf381a6c8d4e8c0eadd5d9",
      "html_url": "https://github.com/appium/appium/commit/e579024fb24b90fafebf381a6c8d4e8c0eadd5d9",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/e579024fb24b90fafebf381a6c8d4e8c0eadd5d9/comments",
      "author": {
        "login": "scottdixon",
        "id": 4726068,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4726068?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottdixon",
        "html_url": "https://github.com/scottdixon",
        "followers_url": "https://api.github.com/users/scottdixon/followers",
        "following_url": "https://api.github.com/users/scottdixon/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottdixon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottdixon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottdixon/subscriptions",
        "organizations_url": "https://api.github.com/users/scottdixon/orgs",
        "repos_url": "https://api.github.com/users/scottdixon/repos",
        "events_url": "https://api.github.com/users/scottdixon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottdixon/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "scottdixon",
        "id": 4726068,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4726068?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottdixon",
        "html_url": "https://github.com/scottdixon",
        "followers_url": "https://api.github.com/users/scottdixon/followers",
        "following_url": "https://api.github.com/users/scottdixon/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottdixon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottdixon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottdixon/subscriptions",
        "organizations_url": "https://api.github.com/users/scottdixon/orgs",
        "repos_url": "https://api.github.com/users/scottdixon/repos",
        "events_url": "https://api.github.com/users/scottdixon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottdixon/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "efa1bf2b5d7d5020a4d3b5ba7ab2fd7119c0cd33",
          "url": "https://api.github.com/repos/appium/appium/commits/efa1bf2b5d7d5020a4d3b5ba7ab2fd7119c0cd33",
          "html_url": "https://github.com/appium/appium/commit/efa1bf2b5d7d5020a4d3b5ba7ab2fd7119c0cd33"
        }
      ]
    },
    {
      "sha": "eec2ebd1fc7dfd4ee84d502fb6ef68d95a41594e",
      "commit": {
        "author": {
          "name": "Scott Dixon",
          "email": "scott@howrefreshing.com.au",
          "date": "2016-01-08T22:40:39Z"
        },
        "committer": {
          "name": "Scott Dixon",
          "email": "scott@howrefreshing.com.au",
          "date": "2016-01-08T22:40:39Z"
        },
        "message": "Selenium grid fix: resolves 5902",
        "tree": {
          "sha": "1aa3cb332ed9d9f5f7e02dac5b6b3a3b1414c669",
          "url": "https://api.github.com/repos/appium/appium/git/trees/1aa3cb332ed9d9f5f7e02dac5b6b3a3b1414c669"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/eec2ebd1fc7dfd4ee84d502fb6ef68d95a41594e",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/eec2ebd1fc7dfd4ee84d502fb6ef68d95a41594e",
      "html_url": "https://github.com/appium/appium/commit/eec2ebd1fc7dfd4ee84d502fb6ef68d95a41594e",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/eec2ebd1fc7dfd4ee84d502fb6ef68d95a41594e/comments",
      "author": {
        "login": "scottdixon",
        "id": 4726068,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4726068?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottdixon",
        "html_url": "https://github.com/scottdixon",
        "followers_url": "https://api.github.com/users/scottdixon/followers",
        "following_url": "https://api.github.com/users/scottdixon/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottdixon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottdixon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottdixon/subscriptions",
        "organizations_url": "https://api.github.com/users/scottdixon/orgs",
        "repos_url": "https://api.github.com/users/scottdixon/repos",
        "events_url": "https://api.github.com/users/scottdixon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottdixon/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "scottdixon",
        "id": 4726068,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4726068?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottdixon",
        "html_url": "https://github.com/scottdixon",
        "followers_url": "https://api.github.com/users/scottdixon/followers",
        "following_url": "https://api.github.com/users/scottdixon/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottdixon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottdixon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottdixon/subscriptions",
        "organizations_url": "https://api.github.com/users/scottdixon/orgs",
        "repos_url": "https://api.github.com/users/scottdixon/repos",
        "events_url": "https://api.github.com/users/scottdixon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottdixon/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "e579024fb24b90fafebf381a6c8d4e8c0eadd5d9",
          "url": "https://api.github.com/repos/appium/appium/commits/e579024fb24b90fafebf381a6c8d4e8c0eadd5d9",
          "html_url": "https://github.com/appium/appium/commit/e579024fb24b90fafebf381a6c8d4e8c0eadd5d9"
        }
      ]
    },
    {
      "sha": "7c2aa5c98c65ee706ecaee46a954ebe1dc30209a",
      "commit": {
        "author": {
          "name": "Scott Dixon",
          "email": "scottdixon@saucelabs.com",
          "date": "2016-01-08T23:05:53Z"
        },
        "committer": {
          "name": "Scott Dixon",
          "email": "scottdixon@saucelabs.com",
          "date": "2016-01-08T23:05:53Z"
        },
        "message": "Merge pull request #5996 from scottdixon/selenium-grid\n\nSelenium grid fix",
        "tree": {
          "sha": "1aa3cb332ed9d9f5f7e02dac5b6b3a3b1414c669",
          "url": "https://api.github.com/repos/appium/appium/git/trees/1aa3cb332ed9d9f5f7e02dac5b6b3a3b1414c669"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/7c2aa5c98c65ee706ecaee46a954ebe1dc30209a",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/7c2aa5c98c65ee706ecaee46a954ebe1dc30209a",
      "html_url": "https://github.com/appium/appium/commit/7c2aa5c98c65ee706ecaee46a954ebe1dc30209a",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/7c2aa5c98c65ee706ecaee46a954ebe1dc30209a/comments",
      "author": null,
      "committer": null,
      "parents": [
        {
          "sha": "efa1bf2b5d7d5020a4d3b5ba7ab2fd7119c0cd33",
          "url": "https://api.github.com/repos/appium/appium/commits/efa1bf2b5d7d5020a4d3b5ba7ab2fd7119c0cd33",
          "html_url": "https://github.com/appium/appium/commit/efa1bf2b5d7d5020a4d3b5ba7ab2fd7119c0cd33"
        },
        {
          "sha": "eec2ebd1fc7dfd4ee84d502fb6ef68d95a41594e",
          "url": "https://api.github.com/repos/appium/appium/commits/eec2ebd1fc7dfd4ee84d502fb6ef68d95a41594e",
          "html_url": "https://github.com/appium/appium/commit/eec2ebd1fc7dfd4ee84d502fb6ef68d95a41594e"
        }
      ]
    },
    {
      "sha": "78ffd4a35cd9e78a6e3f9297cbfa25ccb9644aa2",
      "commit": {
        "author": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2016-01-11T16:50:55Z"
        },
        "committer": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2016-01-11T16:50:55Z"
        },
        "message": "Merge pull request #5988 from appium/isaac-docs\n\nAdd appName cap to docs",
        "tree": {
          "sha": "40b22c9b859475e3591699437cd7f061f5b44dee",
          "url": "https://api.github.com/repos/appium/appium/git/trees/40b22c9b859475e3591699437cd7f061f5b44dee"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/78ffd4a35cd9e78a6e3f9297cbfa25ccb9644aa2",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/78ffd4a35cd9e78a6e3f9297cbfa25ccb9644aa2",
      "html_url": "https://github.com/appium/appium/commit/78ffd4a35cd9e78a6e3f9297cbfa25ccb9644aa2",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/78ffd4a35cd9e78a6e3f9297cbfa25ccb9644aa2/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "7c2aa5c98c65ee706ecaee46a954ebe1dc30209a",
          "url": "https://api.github.com/repos/appium/appium/commits/7c2aa5c98c65ee706ecaee46a954ebe1dc30209a",
          "html_url": "https://github.com/appium/appium/commit/7c2aa5c98c65ee706ecaee46a954ebe1dc30209a"
        },
        {
          "sha": "fae72425d184dd56d2cbf3db10adb09125de1bbc",
          "url": "https://api.github.com/repos/appium/appium/commits/fae72425d184dd56d2cbf3db10adb09125de1bbc",
          "html_url": "https://github.com/appium/appium/commit/fae72425d184dd56d2cbf3db10adb09125de1bbc"
        }
      ]
    },
    {
      "sha": "78f9744349f9f7619b1a782508e6ab34c2e8977c",
      "commit": {
        "author": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2016-01-11T16:56:17Z"
        },
        "committer": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2016-01-11T16:56:17Z"
        },
        "message": "Merge pull request #5986 from scottdixon/1.5-doctweaks\n\n1.5 doctweaks",
        "tree": {
          "sha": "e86574e8e42fba2d2947c32b5a0f1baf8f61658c",
          "url": "https://api.github.com/repos/appium/appium/git/trees/e86574e8e42fba2d2947c32b5a0f1baf8f61658c"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/78f9744349f9f7619b1a782508e6ab34c2e8977c",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/78f9744349f9f7619b1a782508e6ab34c2e8977c",
      "html_url": "https://github.com/appium/appium/commit/78f9744349f9f7619b1a782508e6ab34c2e8977c",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/78f9744349f9f7619b1a782508e6ab34c2e8977c/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "78ffd4a35cd9e78a6e3f9297cbfa25ccb9644aa2",
          "url": "https://api.github.com/repos/appium/appium/commits/78ffd4a35cd9e78a6e3f9297cbfa25ccb9644aa2",
          "html_url": "https://github.com/appium/appium/commit/78ffd4a35cd9e78a6e3f9297cbfa25ccb9644aa2"
        },
        {
          "sha": "8c1fc8e1e869fdcbfc32c02f473c293bd47db6ef",
          "url": "https://api.github.com/repos/appium/appium/commits/8c1fc8e1e869fdcbfc32c02f473c293bd47db6ef",
          "html_url": "https://github.com/appium/appium/commit/8c1fc8e1e869fdcbfc32c02f473c293bd47db6ef"
        }
      ]
    },
    {
      "sha": "39f42814f84714c2c0baadadbe01bfb70e1bd367",
      "commit": {
        "author": {
          "name": "Srinivasan Sekar",
          "email": "srinivasan.sekar1990@gmail.com",
          "date": "2016-01-11T17:41:16Z"
        },
        "committer": {
          "name": "Srinivasan Sekar",
          "email": "srinivasan.sekar1990@gmail.com",
          "date": "2016-01-11T17:41:16Z"
        },
        "message": "updated homebrew location in docs",
        "tree": {
          "sha": "6f5371caf8025458036894fb6d16887792ae05ef",
          "url": "https://api.github.com/repos/appium/appium/git/trees/6f5371caf8025458036894fb6d16887792ae05ef"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/39f42814f84714c2c0baadadbe01bfb70e1bd367",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/39f42814f84714c2c0baadadbe01bfb70e1bd367",
      "html_url": "https://github.com/appium/appium/commit/39f42814f84714c2c0baadadbe01bfb70e1bd367",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/39f42814f84714c2c0baadadbe01bfb70e1bd367/comments",
      "author": {
        "login": "SrinivasanTarget",
        "id": 8896549,
        "avatar_url": "https://avatars1.githubusercontent.com/u/8896549?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/SrinivasanTarget",
        "html_url": "https://github.com/SrinivasanTarget",
        "followers_url": "https://api.github.com/users/SrinivasanTarget/followers",
        "following_url": "https://api.github.com/users/SrinivasanTarget/following{/other_user}",
        "gists_url": "https://api.github.com/users/SrinivasanTarget/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/SrinivasanTarget/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/SrinivasanTarget/subscriptions",
        "organizations_url": "https://api.github.com/users/SrinivasanTarget/orgs",
        "repos_url": "https://api.github.com/users/SrinivasanTarget/repos",
        "events_url": "https://api.github.com/users/SrinivasanTarget/events{/privacy}",
        "received_events_url": "https://api.github.com/users/SrinivasanTarget/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "SrinivasanTarget",
        "id": 8896549,
        "avatar_url": "https://avatars1.githubusercontent.com/u/8896549?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/SrinivasanTarget",
        "html_url": "https://github.com/SrinivasanTarget",
        "followers_url": "https://api.github.com/users/SrinivasanTarget/followers",
        "following_url": "https://api.github.com/users/SrinivasanTarget/following{/other_user}",
        "gists_url": "https://api.github.com/users/SrinivasanTarget/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/SrinivasanTarget/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/SrinivasanTarget/subscriptions",
        "organizations_url": "https://api.github.com/users/SrinivasanTarget/orgs",
        "repos_url": "https://api.github.com/users/SrinivasanTarget/repos",
        "events_url": "https://api.github.com/users/SrinivasanTarget/events{/privacy}",
        "received_events_url": "https://api.github.com/users/SrinivasanTarget/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "78f9744349f9f7619b1a782508e6ab34c2e8977c",
          "url": "https://api.github.com/repos/appium/appium/commits/78f9744349f9f7619b1a782508e6ab34c2e8977c",
          "html_url": "https://github.com/appium/appium/commit/78f9744349f9f7619b1a782508e6ab34c2e8977c"
        }
      ]
    },
    {
      "sha": "c5e779d1722e525c13cf1f8ee20fc03a64c12737",
      "commit": {
        "author": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2016-01-11T18:11:13Z"
        },
        "committer": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2016-01-11T18:11:13Z"
        },
        "message": "Merge pull request #6003 from SrinivasanTarget/1.5\n\nupdated homebrew location in docs",
        "tree": {
          "sha": "6f5371caf8025458036894fb6d16887792ae05ef",
          "url": "https://api.github.com/repos/appium/appium/git/trees/6f5371caf8025458036894fb6d16887792ae05ef"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/c5e779d1722e525c13cf1f8ee20fc03a64c12737",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/c5e779d1722e525c13cf1f8ee20fc03a64c12737",
      "html_url": "https://github.com/appium/appium/commit/c5e779d1722e525c13cf1f8ee20fc03a64c12737",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/c5e779d1722e525c13cf1f8ee20fc03a64c12737/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "78f9744349f9f7619b1a782508e6ab34c2e8977c",
          "url": "https://api.github.com/repos/appium/appium/commits/78f9744349f9f7619b1a782508e6ab34c2e8977c",
          "html_url": "https://github.com/appium/appium/commit/78f9744349f9f7619b1a782508e6ab34c2e8977c"
        },
        {
          "sha": "39f42814f84714c2c0baadadbe01bfb70e1bd367",
          "url": "https://api.github.com/repos/appium/appium/commits/39f42814f84714c2c0baadadbe01bfb70e1bd367",
          "html_url": "https://github.com/appium/appium/commit/39f42814f84714c2c0baadadbe01bfb70e1bd367"
        }
      ]
    },
    {
      "sha": "2f1574e01c1a855c6fab18b94eb8704b1018283d",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-01-11T20:05:03Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-01-11T20:05:03Z"
        },
        "message": "bump to beta11",
        "tree": {
          "sha": "449955ea4630fa7a454c0298c62233fd794cc1fe",
          "url": "https://api.github.com/repos/appium/appium/git/trees/449955ea4630fa7a454c0298c62233fd794cc1fe"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/2f1574e01c1a855c6fab18b94eb8704b1018283d",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/2f1574e01c1a855c6fab18b94eb8704b1018283d",
      "html_url": "https://github.com/appium/appium/commit/2f1574e01c1a855c6fab18b94eb8704b1018283d",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/2f1574e01c1a855c6fab18b94eb8704b1018283d/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "c5e779d1722e525c13cf1f8ee20fc03a64c12737",
          "url": "https://api.github.com/repos/appium/appium/commits/c5e779d1722e525c13cf1f8ee20fc03a64c12737",
          "html_url": "https://github.com/appium/appium/commit/c5e779d1722e525c13cf1f8ee20fc03a64c12737"
        }
      ]
    },
    {
      "sha": "501d2ca27b704f1a212cba02a0eb79c7b93b3f12",
      "commit": {
        "author": {
          "name": "Jonah Stiennon",
          "email": "jonahss@gmail.com",
          "date": "2016-01-12T00:51:48Z"
        },
        "committer": {
          "name": "Jonah Stiennon",
          "email": "jonahss@gmail.com",
          "date": "2016-01-12T00:51:48Z"
        },
        "message": "add shrinkwrap. remove fsevents and move it into optionalDependencies. see https://github.com/npm/npm/issues/2679",
        "tree": {
          "sha": "042ce95e351fde33e4f7f9d2e6646147beafe11d",
          "url": "https://api.github.com/repos/appium/appium/git/trees/042ce95e351fde33e4f7f9d2e6646147beafe11d"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/501d2ca27b704f1a212cba02a0eb79c7b93b3f12",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/501d2ca27b704f1a212cba02a0eb79c7b93b3f12",
      "html_url": "https://github.com/appium/appium/commit/501d2ca27b704f1a212cba02a0eb79c7b93b3f12",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/501d2ca27b704f1a212cba02a0eb79c7b93b3f12/comments",
      "author": {
        "login": "Jonahss",
        "id": 1521841,
        "avatar_url": "https://avatars1.githubusercontent.com/u/1521841?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Jonahss",
        "html_url": "https://github.com/Jonahss",
        "followers_url": "https://api.github.com/users/Jonahss/followers",
        "following_url": "https://api.github.com/users/Jonahss/following{/other_user}",
        "gists_url": "https://api.github.com/users/Jonahss/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Jonahss/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Jonahss/subscriptions",
        "organizations_url": "https://api.github.com/users/Jonahss/orgs",
        "repos_url": "https://api.github.com/users/Jonahss/repos",
        "events_url": "https://api.github.com/users/Jonahss/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Jonahss/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "Jonahss",
        "id": 1521841,
        "avatar_url": "https://avatars1.githubusercontent.com/u/1521841?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Jonahss",
        "html_url": "https://github.com/Jonahss",
        "followers_url": "https://api.github.com/users/Jonahss/followers",
        "following_url": "https://api.github.com/users/Jonahss/following{/other_user}",
        "gists_url": "https://api.github.com/users/Jonahss/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Jonahss/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Jonahss/subscriptions",
        "organizations_url": "https://api.github.com/users/Jonahss/orgs",
        "repos_url": "https://api.github.com/users/Jonahss/repos",
        "events_url": "https://api.github.com/users/Jonahss/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Jonahss/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "2f1574e01c1a855c6fab18b94eb8704b1018283d",
          "url": "https://api.github.com/repos/appium/appium/commits/2f1574e01c1a855c6fab18b94eb8704b1018283d",
          "html_url": "https://github.com/appium/appium/commit/2f1574e01c1a855c6fab18b94eb8704b1018283d"
        }
      ]
    },
    {
      "sha": "2f7a371fad65bc0734fe9dfa865f90812664a1ef",
      "commit": {
        "author": {
          "name": "Scott Dixon",
          "email": "scott@howrefreshing.com.au",
          "date": "2016-01-12T19:16:12Z"
        },
        "committer": {
          "name": "Scott Dixon",
          "email": "scott@howrefreshing.com.au",
          "date": "2016-01-12T19:16:12Z"
        },
        "message": "Clarified auto accept/dismiss alert docs",
        "tree": {
          "sha": "aadb24b77192eb24363ee28798c7006f1a9c25bd",
          "url": "https://api.github.com/repos/appium/appium/git/trees/aadb24b77192eb24363ee28798c7006f1a9c25bd"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/2f7a371fad65bc0734fe9dfa865f90812664a1ef",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/2f7a371fad65bc0734fe9dfa865f90812664a1ef",
      "html_url": "https://github.com/appium/appium/commit/2f7a371fad65bc0734fe9dfa865f90812664a1ef",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/2f7a371fad65bc0734fe9dfa865f90812664a1ef/comments",
      "author": {
        "login": "scottdixon",
        "id": 4726068,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4726068?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottdixon",
        "html_url": "https://github.com/scottdixon",
        "followers_url": "https://api.github.com/users/scottdixon/followers",
        "following_url": "https://api.github.com/users/scottdixon/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottdixon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottdixon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottdixon/subscriptions",
        "organizations_url": "https://api.github.com/users/scottdixon/orgs",
        "repos_url": "https://api.github.com/users/scottdixon/repos",
        "events_url": "https://api.github.com/users/scottdixon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottdixon/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "scottdixon",
        "id": 4726068,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4726068?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottdixon",
        "html_url": "https://github.com/scottdixon",
        "followers_url": "https://api.github.com/users/scottdixon/followers",
        "following_url": "https://api.github.com/users/scottdixon/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottdixon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottdixon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottdixon/subscriptions",
        "organizations_url": "https://api.github.com/users/scottdixon/orgs",
        "repos_url": "https://api.github.com/users/scottdixon/repos",
        "events_url": "https://api.github.com/users/scottdixon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottdixon/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "7c2aa5c98c65ee706ecaee46a954ebe1dc30209a",
          "url": "https://api.github.com/repos/appium/appium/commits/7c2aa5c98c65ee706ecaee46a954ebe1dc30209a",
          "html_url": "https://github.com/appium/appium/commit/7c2aa5c98c65ee706ecaee46a954ebe1dc30209a"
        }
      ]
    },
    {
      "sha": "86e3685083e2b22f46ec4ef0d53eacb579d4e5fc",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-01-12T19:21:25Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-01-12T19:21:25Z"
        },
        "message": "include gulp installation instructions for appium dev, and remove outdated test running info",
        "tree": {
          "sha": "dd306623879f3d3095397581a2c68e60b7ed418c",
          "url": "https://api.github.com/repos/appium/appium/git/trees/dd306623879f3d3095397581a2c68e60b7ed418c"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/86e3685083e2b22f46ec4ef0d53eacb579d4e5fc",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/86e3685083e2b22f46ec4ef0d53eacb579d4e5fc",
      "html_url": "https://github.com/appium/appium/commit/86e3685083e2b22f46ec4ef0d53eacb579d4e5fc",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/86e3685083e2b22f46ec4ef0d53eacb579d4e5fc/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "2f1574e01c1a855c6fab18b94eb8704b1018283d",
          "url": "https://api.github.com/repos/appium/appium/commits/2f1574e01c1a855c6fab18b94eb8704b1018283d",
          "html_url": "https://github.com/appium/appium/commit/2f1574e01c1a855c6fab18b94eb8704b1018283d"
        }
      ]
    },
    {
      "sha": "504450bed1dcfa4e973336a81d0b1765e9f035ca",
      "commit": {
        "author": {
          "name": "Scott Dixon",
          "email": "scottdixon@saucelabs.com",
          "date": "2016-01-12T19:29:03Z"
        },
        "committer": {
          "name": "Scott Dixon",
          "email": "scottdixon@saucelabs.com",
          "date": "2016-01-12T19:29:03Z"
        },
        "message": "Merge pull request #6014 from scottdixon/auto-accept-alert-docs\n\nClarified auto accept/dismiss alert docs",
        "tree": {
          "sha": "bbf2d4511f2b46743f3ae30b65972006c5a1cb99",
          "url": "https://api.github.com/repos/appium/appium/git/trees/bbf2d4511f2b46743f3ae30b65972006c5a1cb99"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/504450bed1dcfa4e973336a81d0b1765e9f035ca",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/504450bed1dcfa4e973336a81d0b1765e9f035ca",
      "html_url": "https://github.com/appium/appium/commit/504450bed1dcfa4e973336a81d0b1765e9f035ca",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/504450bed1dcfa4e973336a81d0b1765e9f035ca/comments",
      "author": null,
      "committer": null,
      "parents": [
        {
          "sha": "86e3685083e2b22f46ec4ef0d53eacb579d4e5fc",
          "url": "https://api.github.com/repos/appium/appium/commits/86e3685083e2b22f46ec4ef0d53eacb579d4e5fc",
          "html_url": "https://github.com/appium/appium/commit/86e3685083e2b22f46ec4ef0d53eacb579d4e5fc"
        },
        {
          "sha": "2f7a371fad65bc0734fe9dfa865f90812664a1ef",
          "url": "https://api.github.com/repos/appium/appium/commits/2f7a371fad65bc0734fe9dfa865f90812664a1ef",
          "html_url": "https://github.com/appium/appium/commit/2f7a371fad65bc0734fe9dfa865f90812664a1ef"
        }
      ]
    },
    {
      "sha": "0fa6cb8a2d54aa74065fc025d68ddb90e403791f",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-01-12T20:42:20Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-01-12T20:42:50Z"
        },
        "message": "add node requirement to changelog",
        "tree": {
          "sha": "74fc73f461f33b2aec925ced4a6717b21e38ecee",
          "url": "https://api.github.com/repos/appium/appium/git/trees/74fc73f461f33b2aec925ced4a6717b21e38ecee"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/0fa6cb8a2d54aa74065fc025d68ddb90e403791f",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/0fa6cb8a2d54aa74065fc025d68ddb90e403791f",
      "html_url": "https://github.com/appium/appium/commit/0fa6cb8a2d54aa74065fc025d68ddb90e403791f",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/0fa6cb8a2d54aa74065fc025d68ddb90e403791f/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "504450bed1dcfa4e973336a81d0b1765e9f035ca",
          "url": "https://api.github.com/repos/appium/appium/commits/504450bed1dcfa4e973336a81d0b1765e9f035ca",
          "html_url": "https://github.com/appium/appium/commit/504450bed1dcfa4e973336a81d0b1765e9f035ca"
        }
      ]
    },
    {
      "sha": "7af030c6f4f251e63a664f00120d5c9eb3782897",
      "commit": {
        "author": {
          "name": "Jonah Stiennon",
          "email": "jonahss@gmail.com",
          "date": "2016-01-12T19:43:45Z"
        },
        "committer": {
          "name": "Jonah Stiennon",
          "email": "jonahss@gmail.com",
          "date": "2016-01-12T21:14:39Z"
        },
        "message": "remove 'fsevents' from shrinkwrap during prepublish, add a test",
        "tree": {
          "sha": "a6953b39e84365480f4295ed4b8625942995b931",
          "url": "https://api.github.com/repos/appium/appium/git/trees/a6953b39e84365480f4295ed4b8625942995b931"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/7af030c6f4f251e63a664f00120d5c9eb3782897",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/7af030c6f4f251e63a664f00120d5c9eb3782897",
      "html_url": "https://github.com/appium/appium/commit/7af030c6f4f251e63a664f00120d5c9eb3782897",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/7af030c6f4f251e63a664f00120d5c9eb3782897/comments",
      "author": {
        "login": "Jonahss",
        "id": 1521841,
        "avatar_url": "https://avatars1.githubusercontent.com/u/1521841?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Jonahss",
        "html_url": "https://github.com/Jonahss",
        "followers_url": "https://api.github.com/users/Jonahss/followers",
        "following_url": "https://api.github.com/users/Jonahss/following{/other_user}",
        "gists_url": "https://api.github.com/users/Jonahss/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Jonahss/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Jonahss/subscriptions",
        "organizations_url": "https://api.github.com/users/Jonahss/orgs",
        "repos_url": "https://api.github.com/users/Jonahss/repos",
        "events_url": "https://api.github.com/users/Jonahss/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Jonahss/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "Jonahss",
        "id": 1521841,
        "avatar_url": "https://avatars1.githubusercontent.com/u/1521841?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Jonahss",
        "html_url": "https://github.com/Jonahss",
        "followers_url": "https://api.github.com/users/Jonahss/followers",
        "following_url": "https://api.github.com/users/Jonahss/following{/other_user}",
        "gists_url": "https://api.github.com/users/Jonahss/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Jonahss/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Jonahss/subscriptions",
        "organizations_url": "https://api.github.com/users/Jonahss/orgs",
        "repos_url": "https://api.github.com/users/Jonahss/repos",
        "events_url": "https://api.github.com/users/Jonahss/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Jonahss/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "501d2ca27b704f1a212cba02a0eb79c7b93b3f12",
          "url": "https://api.github.com/repos/appium/appium/commits/501d2ca27b704f1a212cba02a0eb79c7b93b3f12",
          "html_url": "https://github.com/appium/appium/commit/501d2ca27b704f1a212cba02a0eb79c7b93b3f12"
        }
      ]
    },
    {
      "sha": "647d2dafe0592e49752f9ae58ad26c3c9f666a88",
      "commit": {
        "author": {
          "name": "Jonah",
          "email": "jonahss@gmail.com",
          "date": "2016-01-12T22:05:30Z"
        },
        "committer": {
          "name": "Jonah",
          "email": "jonahss@gmail.com",
          "date": "2016-01-12T22:05:30Z"
        },
        "message": "Merge pull request #6006 from Jonahss/shrinkwrap4\n\nadd shrinkwrap. remove fsevents and move it into optionalDependencies…",
        "tree": {
          "sha": "53f272b10d1993992c8a61b132a498710bf46a8e",
          "url": "https://api.github.com/repos/appium/appium/git/trees/53f272b10d1993992c8a61b132a498710bf46a8e"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/647d2dafe0592e49752f9ae58ad26c3c9f666a88",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/647d2dafe0592e49752f9ae58ad26c3c9f666a88",
      "html_url": "https://github.com/appium/appium/commit/647d2dafe0592e49752f9ae58ad26c3c9f666a88",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/647d2dafe0592e49752f9ae58ad26c3c9f666a88/comments",
      "author": {
        "login": "Jonahss",
        "id": 1521841,
        "avatar_url": "https://avatars1.githubusercontent.com/u/1521841?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Jonahss",
        "html_url": "https://github.com/Jonahss",
        "followers_url": "https://api.github.com/users/Jonahss/followers",
        "following_url": "https://api.github.com/users/Jonahss/following{/other_user}",
        "gists_url": "https://api.github.com/users/Jonahss/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Jonahss/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Jonahss/subscriptions",
        "organizations_url": "https://api.github.com/users/Jonahss/orgs",
        "repos_url": "https://api.github.com/users/Jonahss/repos",
        "events_url": "https://api.github.com/users/Jonahss/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Jonahss/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "Jonahss",
        "id": 1521841,
        "avatar_url": "https://avatars1.githubusercontent.com/u/1521841?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Jonahss",
        "html_url": "https://github.com/Jonahss",
        "followers_url": "https://api.github.com/users/Jonahss/followers",
        "following_url": "https://api.github.com/users/Jonahss/following{/other_user}",
        "gists_url": "https://api.github.com/users/Jonahss/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Jonahss/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Jonahss/subscriptions",
        "organizations_url": "https://api.github.com/users/Jonahss/orgs",
        "repos_url": "https://api.github.com/users/Jonahss/repos",
        "events_url": "https://api.github.com/users/Jonahss/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Jonahss/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "0fa6cb8a2d54aa74065fc025d68ddb90e403791f",
          "url": "https://api.github.com/repos/appium/appium/commits/0fa6cb8a2d54aa74065fc025d68ddb90e403791f",
          "html_url": "https://github.com/appium/appium/commit/0fa6cb8a2d54aa74065fc025d68ddb90e403791f"
        },
        {
          "sha": "7af030c6f4f251e63a664f00120d5c9eb3782897",
          "url": "https://api.github.com/repos/appium/appium/commits/7af030c6f4f251e63a664f00120d5c9eb3782897",
          "html_url": "https://github.com/appium/appium/commit/7af030c6f4f251e63a664f00120d5c9eb3782897"
        }
      ]
    },
    {
      "sha": "52a30b9615f7d741e3eda3fbd7ac7ee6c334b474",
      "commit": {
        "author": {
          "name": "Srinivasan Sekar",
          "email": "srinivasan.sekar1990@gmail.com",
          "date": "2016-01-15T00:52:08Z"
        },
        "committer": {
          "name": "Srinivasan Sekar",
          "email": "srinivasan.sekar1990@gmail.com",
          "date": "2016-01-15T00:52:08Z"
        },
        "message": "updated ios-webkit-debug-proxy",
        "tree": {
          "sha": "1cbf09de8c9710584891053bde3416c013ae9a59",
          "url": "https://api.github.com/repos/appium/appium/git/trees/1cbf09de8c9710584891053bde3416c013ae9a59"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/52a30b9615f7d741e3eda3fbd7ac7ee6c334b474",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/52a30b9615f7d741e3eda3fbd7ac7ee6c334b474",
      "html_url": "https://github.com/appium/appium/commit/52a30b9615f7d741e3eda3fbd7ac7ee6c334b474",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/52a30b9615f7d741e3eda3fbd7ac7ee6c334b474/comments",
      "author": {
        "login": "SrinivasanTarget",
        "id": 8896549,
        "avatar_url": "https://avatars1.githubusercontent.com/u/8896549?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/SrinivasanTarget",
        "html_url": "https://github.com/SrinivasanTarget",
        "followers_url": "https://api.github.com/users/SrinivasanTarget/followers",
        "following_url": "https://api.github.com/users/SrinivasanTarget/following{/other_user}",
        "gists_url": "https://api.github.com/users/SrinivasanTarget/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/SrinivasanTarget/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/SrinivasanTarget/subscriptions",
        "organizations_url": "https://api.github.com/users/SrinivasanTarget/orgs",
        "repos_url": "https://api.github.com/users/SrinivasanTarget/repos",
        "events_url": "https://api.github.com/users/SrinivasanTarget/events{/privacy}",
        "received_events_url": "https://api.github.com/users/SrinivasanTarget/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "SrinivasanTarget",
        "id": 8896549,
        "avatar_url": "https://avatars1.githubusercontent.com/u/8896549?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/SrinivasanTarget",
        "html_url": "https://github.com/SrinivasanTarget",
        "followers_url": "https://api.github.com/users/SrinivasanTarget/followers",
        "following_url": "https://api.github.com/users/SrinivasanTarget/following{/other_user}",
        "gists_url": "https://api.github.com/users/SrinivasanTarget/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/SrinivasanTarget/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/SrinivasanTarget/subscriptions",
        "organizations_url": "https://api.github.com/users/SrinivasanTarget/orgs",
        "repos_url": "https://api.github.com/users/SrinivasanTarget/repos",
        "events_url": "https://api.github.com/users/SrinivasanTarget/events{/privacy}",
        "received_events_url": "https://api.github.com/users/SrinivasanTarget/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "647d2dafe0592e49752f9ae58ad26c3c9f666a88",
          "url": "https://api.github.com/repos/appium/appium/commits/647d2dafe0592e49752f9ae58ad26c3c9f666a88",
          "html_url": "https://github.com/appium/appium/commit/647d2dafe0592e49752f9ae58ad26c3c9f666a88"
        }
      ]
    },
    {
      "sha": "6c50e21d5e458e145cade7c17b903e0a38f41fc4",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2015-11-13T19:34:18Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-01-15T16:46:52Z"
        },
        "message": "Add a developer's guide to appium that describes how to be a dev and our dev processes",
        "tree": {
          "sha": "8213a1746c77ef3e16d3fc5fae2a95a684fc84d4",
          "url": "https://api.github.com/repos/appium/appium/git/trees/8213a1746c77ef3e16d3fc5fae2a95a684fc84d4"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/6c50e21d5e458e145cade7c17b903e0a38f41fc4",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/6c50e21d5e458e145cade7c17b903e0a38f41fc4",
      "html_url": "https://github.com/appium/appium/commit/6c50e21d5e458e145cade7c17b903e0a38f41fc4",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/6c50e21d5e458e145cade7c17b903e0a38f41fc4/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "647d2dafe0592e49752f9ae58ad26c3c9f666a88",
          "url": "https://api.github.com/repos/appium/appium/commits/647d2dafe0592e49752f9ae58ad26c3c9f666a88",
          "html_url": "https://github.com/appium/appium/commit/647d2dafe0592e49752f9ae58ad26c3c9f666a88"
        }
      ]
    },
    {
      "sha": "c5f85c167bbcbcd44de29f71da0bc447c4493c8b",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-01-15T17:02:46Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-01-15T17:02:46Z"
        },
        "message": "Merge pull request #6029 from appium/dev-overview\n\nAdd a developer's guide to appium",
        "tree": {
          "sha": "8213a1746c77ef3e16d3fc5fae2a95a684fc84d4",
          "url": "https://api.github.com/repos/appium/appium/git/trees/8213a1746c77ef3e16d3fc5fae2a95a684fc84d4"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/c5f85c167bbcbcd44de29f71da0bc447c4493c8b",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/c5f85c167bbcbcd44de29f71da0bc447c4493c8b",
      "html_url": "https://github.com/appium/appium/commit/c5f85c167bbcbcd44de29f71da0bc447c4493c8b",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/c5f85c167bbcbcd44de29f71da0bc447c4493c8b/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "647d2dafe0592e49752f9ae58ad26c3c9f666a88",
          "url": "https://api.github.com/repos/appium/appium/commits/647d2dafe0592e49752f9ae58ad26c3c9f666a88",
          "html_url": "https://github.com/appium/appium/commit/647d2dafe0592e49752f9ae58ad26c3c9f666a88"
        },
        {
          "sha": "6c50e21d5e458e145cade7c17b903e0a38f41fc4",
          "url": "https://api.github.com/repos/appium/appium/commits/6c50e21d5e458e145cade7c17b903e0a38f41fc4",
          "html_url": "https://github.com/appium/appium/commit/6c50e21d5e458e145cade7c17b903e0a38f41fc4"
        }
      ]
    },
    {
      "sha": "7b7aac5a3951a3c90ebfc8a72acbda348ff11eb9",
      "commit": {
        "author": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2016-01-15T17:20:38Z"
        },
        "committer": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2016-01-15T17:20:38Z"
        },
        "message": "Merge pull request #6031 from SrinivasanTarget/1.5\n\nupdated ios-webkit-debug-proxy",
        "tree": {
          "sha": "4b310dcea7bd91021f0be3f827242486dde500fc",
          "url": "https://api.github.com/repos/appium/appium/git/trees/4b310dcea7bd91021f0be3f827242486dde500fc"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/7b7aac5a3951a3c90ebfc8a72acbda348ff11eb9",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/7b7aac5a3951a3c90ebfc8a72acbda348ff11eb9",
      "html_url": "https://github.com/appium/appium/commit/7b7aac5a3951a3c90ebfc8a72acbda348ff11eb9",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/7b7aac5a3951a3c90ebfc8a72acbda348ff11eb9/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "c5f85c167bbcbcd44de29f71da0bc447c4493c8b",
          "url": "https://api.github.com/repos/appium/appium/commits/c5f85c167bbcbcd44de29f71da0bc447c4493c8b",
          "html_url": "https://github.com/appium/appium/commit/c5f85c167bbcbcd44de29f71da0bc447c4493c8b"
        },
        {
          "sha": "52a30b9615f7d741e3eda3fbd7ac7ee6c334b474",
          "url": "https://api.github.com/repos/appium/appium/commits/52a30b9615f7d741e3eda3fbd7ac7ee6c334b474",
          "html_url": "https://github.com/appium/appium/commit/52a30b9615f7d741e3eda3fbd7ac7ee6c334b474"
        }
      ]
    },
    {
      "sha": "bd2776ff67331f77c194affc0f331e6c47825e8d",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-01-15T00:29:41Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-01-15T17:55:19Z"
        },
        "message": "add governance doc that outlines project processes",
        "tree": {
          "sha": "8bf55468ffb79b7e85e913cb81dd29fadf54e2d6",
          "url": "https://api.github.com/repos/appium/appium/git/trees/8bf55468ffb79b7e85e913cb81dd29fadf54e2d6"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/bd2776ff67331f77c194affc0f331e6c47825e8d",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/bd2776ff67331f77c194affc0f331e6c47825e8d",
      "html_url": "https://github.com/appium/appium/commit/bd2776ff67331f77c194affc0f331e6c47825e8d",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/bd2776ff67331f77c194affc0f331e6c47825e8d/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "647d2dafe0592e49752f9ae58ad26c3c9f666a88",
          "url": "https://api.github.com/repos/appium/appium/commits/647d2dafe0592e49752f9ae58ad26c3c9f666a88",
          "html_url": "https://github.com/appium/appium/commit/647d2dafe0592e49752f9ae58ad26c3c9f666a88"
        }
      ]
    },
    {
      "sha": "ab2e83692ddca02e5f056bd658e8e86b7bda4e8a",
      "commit": {
        "author": {
          "name": "Srinivasan Sekar",
          "email": "srinivasan.sekar1990@gmail.com",
          "date": "2016-01-15T18:41:16Z"
        },
        "committer": {
          "name": "Srinivasan Sekar",
          "email": "srinivasan.sekar1990@gmail.com",
          "date": "2016-01-15T18:41:16Z"
        },
        "message": "Appium doctor nomore a depency",
        "tree": {
          "sha": "716db57862688133984cf7cf28ee5fe0119d008f",
          "url": "https://api.github.com/repos/appium/appium/git/trees/716db57862688133984cf7cf28ee5fe0119d008f"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/ab2e83692ddca02e5f056bd658e8e86b7bda4e8a",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/ab2e83692ddca02e5f056bd658e8e86b7bda4e8a",
      "html_url": "https://github.com/appium/appium/commit/ab2e83692ddca02e5f056bd658e8e86b7bda4e8a",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/ab2e83692ddca02e5f056bd658e8e86b7bda4e8a/comments",
      "author": {
        "login": "SrinivasanTarget",
        "id": 8896549,
        "avatar_url": "https://avatars1.githubusercontent.com/u/8896549?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/SrinivasanTarget",
        "html_url": "https://github.com/SrinivasanTarget",
        "followers_url": "https://api.github.com/users/SrinivasanTarget/followers",
        "following_url": "https://api.github.com/users/SrinivasanTarget/following{/other_user}",
        "gists_url": "https://api.github.com/users/SrinivasanTarget/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/SrinivasanTarget/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/SrinivasanTarget/subscriptions",
        "organizations_url": "https://api.github.com/users/SrinivasanTarget/orgs",
        "repos_url": "https://api.github.com/users/SrinivasanTarget/repos",
        "events_url": "https://api.github.com/users/SrinivasanTarget/events{/privacy}",
        "received_events_url": "https://api.github.com/users/SrinivasanTarget/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "SrinivasanTarget",
        "id": 8896549,
        "avatar_url": "https://avatars1.githubusercontent.com/u/8896549?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/SrinivasanTarget",
        "html_url": "https://github.com/SrinivasanTarget",
        "followers_url": "https://api.github.com/users/SrinivasanTarget/followers",
        "following_url": "https://api.github.com/users/SrinivasanTarget/following{/other_user}",
        "gists_url": "https://api.github.com/users/SrinivasanTarget/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/SrinivasanTarget/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/SrinivasanTarget/subscriptions",
        "organizations_url": "https://api.github.com/users/SrinivasanTarget/orgs",
        "repos_url": "https://api.github.com/users/SrinivasanTarget/repos",
        "events_url": "https://api.github.com/users/SrinivasanTarget/events{/privacy}",
        "received_events_url": "https://api.github.com/users/SrinivasanTarget/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "52a30b9615f7d741e3eda3fbd7ac7ee6c334b474",
          "url": "https://api.github.com/repos/appium/appium/commits/52a30b9615f7d741e3eda3fbd7ac7ee6c334b474",
          "html_url": "https://github.com/appium/appium/commit/52a30b9615f7d741e3eda3fbd7ac7ee6c334b474"
        }
      ]
    },
    {
      "sha": "c92ef4a7fe1ad2462bf3610f0dbc0e11f75d647c",
      "commit": {
        "author": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2016-01-15T19:13:36Z"
        },
        "committer": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2016-01-15T19:13:36Z"
        },
        "message": "Merge pull request #6035 from SrinivasanTarget/1.5\n\nAppium doctor nomore a dependency",
        "tree": {
          "sha": "8eb4dc0ff87c852b442f6af40229eafc05d9e4ef",
          "url": "https://api.github.com/repos/appium/appium/git/trees/8eb4dc0ff87c852b442f6af40229eafc05d9e4ef"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/c92ef4a7fe1ad2462bf3610f0dbc0e11f75d647c",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/c92ef4a7fe1ad2462bf3610f0dbc0e11f75d647c",
      "html_url": "https://github.com/appium/appium/commit/c92ef4a7fe1ad2462bf3610f0dbc0e11f75d647c",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/c92ef4a7fe1ad2462bf3610f0dbc0e11f75d647c/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "7b7aac5a3951a3c90ebfc8a72acbda348ff11eb9",
          "url": "https://api.github.com/repos/appium/appium/commits/7b7aac5a3951a3c90ebfc8a72acbda348ff11eb9",
          "html_url": "https://github.com/appium/appium/commit/7b7aac5a3951a3c90ebfc8a72acbda348ff11eb9"
        },
        {
          "sha": "ab2e83692ddca02e5f056bd658e8e86b7bda4e8a",
          "url": "https://api.github.com/repos/appium/appium/commits/ab2e83692ddca02e5f056bd658e8e86b7bda4e8a",
          "html_url": "https://github.com/appium/appium/commit/ab2e83692ddca02e5f056bd658e8e86b7bda4e8a"
        }
      ]
    },
    {
      "sha": "a7893c8554293b3d8dab07c09bf852881ac0793c",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-01-15T22:48:36Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-01-15T22:48:36Z"
        },
        "message": "update project roadmap",
        "tree": {
          "sha": "afb7cd3e9feb0c0e36978d2de03d7370f60cb485",
          "url": "https://api.github.com/repos/appium/appium/git/trees/afb7cd3e9feb0c0e36978d2de03d7370f60cb485"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/a7893c8554293b3d8dab07c09bf852881ac0793c",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/a7893c8554293b3d8dab07c09bf852881ac0793c",
      "html_url": "https://github.com/appium/appium/commit/a7893c8554293b3d8dab07c09bf852881ac0793c",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/a7893c8554293b3d8dab07c09bf852881ac0793c/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "7b7aac5a3951a3c90ebfc8a72acbda348ff11eb9",
          "url": "https://api.github.com/repos/appium/appium/commits/7b7aac5a3951a3c90ebfc8a72acbda348ff11eb9",
          "html_url": "https://github.com/appium/appium/commit/7b7aac5a3951a3c90ebfc8a72acbda348ff11eb9"
        }
      ]
    },
    {
      "sha": "17d512a21ef17c5b49e96899dd4c9cf0733cc7f6",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-01-16T00:26:00Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-01-16T00:26:00Z"
        },
        "message": "Merge pull request #6036 from jlipps/1.5\n\nupdate project roadmap",
        "tree": {
          "sha": "048b8784a5e309c2a4bd8155a9b2b4d6c6c590f3",
          "url": "https://api.github.com/repos/appium/appium/git/trees/048b8784a5e309c2a4bd8155a9b2b4d6c6c590f3"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/17d512a21ef17c5b49e96899dd4c9cf0733cc7f6",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/17d512a21ef17c5b49e96899dd4c9cf0733cc7f6",
      "html_url": "https://github.com/appium/appium/commit/17d512a21ef17c5b49e96899dd4c9cf0733cc7f6",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/17d512a21ef17c5b49e96899dd4c9cf0733cc7f6/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "c92ef4a7fe1ad2462bf3610f0dbc0e11f75d647c",
          "url": "https://api.github.com/repos/appium/appium/commits/c92ef4a7fe1ad2462bf3610f0dbc0e11f75d647c",
          "html_url": "https://github.com/appium/appium/commit/c92ef4a7fe1ad2462bf3610f0dbc0e11f75d647c"
        },
        {
          "sha": "a7893c8554293b3d8dab07c09bf852881ac0793c",
          "url": "https://api.github.com/repos/appium/appium/commits/a7893c8554293b3d8dab07c09bf852881ac0793c",
          "html_url": "https://github.com/appium/appium/commit/a7893c8554293b3d8dab07c09bf852881ac0793c"
        }
      ]
    },
    {
      "sha": "bdeea026851986e7a1804df714933cc6c3a8dbf8",
      "commit": {
        "author": {
          "name": "moizjv",
          "email": "moizjv@gmail.com",
          "date": "2016-01-20T00:01:55Z"
        },
        "committer": {
          "name": "moizjv",
          "email": "moizjv@gmail.com",
          "date": "2016-01-20T00:15:21Z"
        },
        "message": "Moving xcode-iwd.sh to appium-instruments and updating the docs",
        "tree": {
          "sha": "2d8f69da9361ddbfed6b4c26ba4e3d4f40368f17",
          "url": "https://api.github.com/repos/appium/appium/git/trees/2d8f69da9361ddbfed6b4c26ba4e3d4f40368f17"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/bdeea026851986e7a1804df714933cc6c3a8dbf8",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/bdeea026851986e7a1804df714933cc6c3a8dbf8",
      "html_url": "https://github.com/appium/appium/commit/bdeea026851986e7a1804df714933cc6c3a8dbf8",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/bdeea026851986e7a1804df714933cc6c3a8dbf8/comments",
      "author": {
        "login": "moizjv",
        "id": 1308607,
        "avatar_url": "https://avatars0.githubusercontent.com/u/1308607?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/moizjv",
        "html_url": "https://github.com/moizjv",
        "followers_url": "https://api.github.com/users/moizjv/followers",
        "following_url": "https://api.github.com/users/moizjv/following{/other_user}",
        "gists_url": "https://api.github.com/users/moizjv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/moizjv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/moizjv/subscriptions",
        "organizations_url": "https://api.github.com/users/moizjv/orgs",
        "repos_url": "https://api.github.com/users/moizjv/repos",
        "events_url": "https://api.github.com/users/moizjv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/moizjv/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "moizjv",
        "id": 1308607,
        "avatar_url": "https://avatars0.githubusercontent.com/u/1308607?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/moizjv",
        "html_url": "https://github.com/moizjv",
        "followers_url": "https://api.github.com/users/moizjv/followers",
        "following_url": "https://api.github.com/users/moizjv/following{/other_user}",
        "gists_url": "https://api.github.com/users/moizjv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/moizjv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/moizjv/subscriptions",
        "organizations_url": "https://api.github.com/users/moizjv/orgs",
        "repos_url": "https://api.github.com/users/moizjv/repos",
        "events_url": "https://api.github.com/users/moizjv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/moizjv/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "17d512a21ef17c5b49e96899dd4c9cf0733cc7f6",
          "url": "https://api.github.com/repos/appium/appium/commits/17d512a21ef17c5b49e96899dd4c9cf0733cc7f6",
          "html_url": "https://github.com/appium/appium/commit/17d512a21ef17c5b49e96899dd4c9cf0733cc7f6"
        }
      ]
    },
    {
      "sha": "72aeb807adfb078a1f634425941ac047d2382480",
      "commit": {
        "author": {
          "name": "Jonah Stiennon",
          "email": "jonahss@gmail.com",
          "date": "2016-01-20T19:50:09Z"
        },
        "committer": {
          "name": "Jonah Stiennon",
          "email": "jonahss@gmail.com",
          "date": "2016-01-20T19:51:35Z"
        },
        "message": "fix NewCommandTimeout handling for freshly created sessions",
        "tree": {
          "sha": "c5746039100e9412d3eb55bfccca67c35f928885",
          "url": "https://api.github.com/repos/appium/appium/git/trees/c5746039100e9412d3eb55bfccca67c35f928885"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/72aeb807adfb078a1f634425941ac047d2382480",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/72aeb807adfb078a1f634425941ac047d2382480",
      "html_url": "https://github.com/appium/appium/commit/72aeb807adfb078a1f634425941ac047d2382480",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/72aeb807adfb078a1f634425941ac047d2382480/comments",
      "author": {
        "login": "Jonahss",
        "id": 1521841,
        "avatar_url": "https://avatars1.githubusercontent.com/u/1521841?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Jonahss",
        "html_url": "https://github.com/Jonahss",
        "followers_url": "https://api.github.com/users/Jonahss/followers",
        "following_url": "https://api.github.com/users/Jonahss/following{/other_user}",
        "gists_url": "https://api.github.com/users/Jonahss/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Jonahss/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Jonahss/subscriptions",
        "organizations_url": "https://api.github.com/users/Jonahss/orgs",
        "repos_url": "https://api.github.com/users/Jonahss/repos",
        "events_url": "https://api.github.com/users/Jonahss/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Jonahss/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "Jonahss",
        "id": 1521841,
        "avatar_url": "https://avatars1.githubusercontent.com/u/1521841?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Jonahss",
        "html_url": "https://github.com/Jonahss",
        "followers_url": "https://api.github.com/users/Jonahss/followers",
        "following_url": "https://api.github.com/users/Jonahss/following{/other_user}",
        "gists_url": "https://api.github.com/users/Jonahss/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Jonahss/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Jonahss/subscriptions",
        "organizations_url": "https://api.github.com/users/Jonahss/orgs",
        "repos_url": "https://api.github.com/users/Jonahss/repos",
        "events_url": "https://api.github.com/users/Jonahss/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Jonahss/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "17d512a21ef17c5b49e96899dd4c9cf0733cc7f6",
          "url": "https://api.github.com/repos/appium/appium/commits/17d512a21ef17c5b49e96899dd4c9cf0733cc7f6",
          "html_url": "https://github.com/appium/appium/commit/17d512a21ef17c5b49e96899dd4c9cf0733cc7f6"
        }
      ]
    },
    {
      "sha": "8063ef1fad91a411e583d1acb72baec9be025b19",
      "commit": {
        "author": {
          "name": "Jonah",
          "email": "jonahss@gmail.com",
          "date": "2016-01-20T21:58:34Z"
        },
        "committer": {
          "name": "Jonah",
          "email": "jonahss@gmail.com",
          "date": "2016-01-20T21:58:34Z"
        },
        "message": "Merge pull request #6052 from Jonahss/newCommandtimeout3\n\nfix NewCommandTimeout handling for freshly created sessions",
        "tree": {
          "sha": "c5746039100e9412d3eb55bfccca67c35f928885",
          "url": "https://api.github.com/repos/appium/appium/git/trees/c5746039100e9412d3eb55bfccca67c35f928885"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/8063ef1fad91a411e583d1acb72baec9be025b19",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/8063ef1fad91a411e583d1acb72baec9be025b19",
      "html_url": "https://github.com/appium/appium/commit/8063ef1fad91a411e583d1acb72baec9be025b19",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/8063ef1fad91a411e583d1acb72baec9be025b19/comments",
      "author": {
        "login": "Jonahss",
        "id": 1521841,
        "avatar_url": "https://avatars1.githubusercontent.com/u/1521841?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Jonahss",
        "html_url": "https://github.com/Jonahss",
        "followers_url": "https://api.github.com/users/Jonahss/followers",
        "following_url": "https://api.github.com/users/Jonahss/following{/other_user}",
        "gists_url": "https://api.github.com/users/Jonahss/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Jonahss/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Jonahss/subscriptions",
        "organizations_url": "https://api.github.com/users/Jonahss/orgs",
        "repos_url": "https://api.github.com/users/Jonahss/repos",
        "events_url": "https://api.github.com/users/Jonahss/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Jonahss/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "Jonahss",
        "id": 1521841,
        "avatar_url": "https://avatars1.githubusercontent.com/u/1521841?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Jonahss",
        "html_url": "https://github.com/Jonahss",
        "followers_url": "https://api.github.com/users/Jonahss/followers",
        "following_url": "https://api.github.com/users/Jonahss/following{/other_user}",
        "gists_url": "https://api.github.com/users/Jonahss/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Jonahss/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Jonahss/subscriptions",
        "organizations_url": "https://api.github.com/users/Jonahss/orgs",
        "repos_url": "https://api.github.com/users/Jonahss/repos",
        "events_url": "https://api.github.com/users/Jonahss/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Jonahss/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "17d512a21ef17c5b49e96899dd4c9cf0733cc7f6",
          "url": "https://api.github.com/repos/appium/appium/commits/17d512a21ef17c5b49e96899dd4c9cf0733cc7f6",
          "html_url": "https://github.com/appium/appium/commit/17d512a21ef17c5b49e96899dd4c9cf0733cc7f6"
        },
        {
          "sha": "72aeb807adfb078a1f634425941ac047d2382480",
          "url": "https://api.github.com/repos/appium/appium/commits/72aeb807adfb078a1f634425941ac047d2382480",
          "html_url": "https://github.com/appium/appium/commit/72aeb807adfb078a1f634425941ac047d2382480"
        }
      ]
    },
    {
      "sha": "7056360b4846bba1d0bb797c9af24ff5f54b1343",
      "commit": {
        "author": {
          "name": "Moiz Virani",
          "email": "moizjv@gmail.com",
          "date": "2016-01-20T22:53:19Z"
        },
        "committer": {
          "name": "Moiz Virani",
          "email": "moizjv@gmail.com",
          "date": "2016-01-20T22:53:19Z"
        },
        "message": "Merge pull request #6046 from moizjv/1.5\n\nMoving xcode-iwd.sh to appium-instruments and updating the docs",
        "tree": {
          "sha": "6eab66b468874b3322431086f4b3a120a6c86548",
          "url": "https://api.github.com/repos/appium/appium/git/trees/6eab66b468874b3322431086f4b3a120a6c86548"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/7056360b4846bba1d0bb797c9af24ff5f54b1343",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/7056360b4846bba1d0bb797c9af24ff5f54b1343",
      "html_url": "https://github.com/appium/appium/commit/7056360b4846bba1d0bb797c9af24ff5f54b1343",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/7056360b4846bba1d0bb797c9af24ff5f54b1343/comments",
      "author": {
        "login": "moizjv",
        "id": 1308607,
        "avatar_url": "https://avatars0.githubusercontent.com/u/1308607?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/moizjv",
        "html_url": "https://github.com/moizjv",
        "followers_url": "https://api.github.com/users/moizjv/followers",
        "following_url": "https://api.github.com/users/moizjv/following{/other_user}",
        "gists_url": "https://api.github.com/users/moizjv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/moizjv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/moizjv/subscriptions",
        "organizations_url": "https://api.github.com/users/moizjv/orgs",
        "repos_url": "https://api.github.com/users/moizjv/repos",
        "events_url": "https://api.github.com/users/moizjv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/moizjv/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "moizjv",
        "id": 1308607,
        "avatar_url": "https://avatars0.githubusercontent.com/u/1308607?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/moizjv",
        "html_url": "https://github.com/moizjv",
        "followers_url": "https://api.github.com/users/moizjv/followers",
        "following_url": "https://api.github.com/users/moizjv/following{/other_user}",
        "gists_url": "https://api.github.com/users/moizjv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/moizjv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/moizjv/subscriptions",
        "organizations_url": "https://api.github.com/users/moizjv/orgs",
        "repos_url": "https://api.github.com/users/moizjv/repos",
        "events_url": "https://api.github.com/users/moizjv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/moizjv/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "8063ef1fad91a411e583d1acb72baec9be025b19",
          "url": "https://api.github.com/repos/appium/appium/commits/8063ef1fad91a411e583d1acb72baec9be025b19",
          "html_url": "https://github.com/appium/appium/commit/8063ef1fad91a411e583d1acb72baec9be025b19"
        },
        {
          "sha": "bdeea026851986e7a1804df714933cc6c3a8dbf8",
          "url": "https://api.github.com/repos/appium/appium/commits/bdeea026851986e7a1804df714933cc6c3a8dbf8",
          "html_url": "https://github.com/appium/appium/commit/bdeea026851986e7a1804df714933cc6c3a8dbf8"
        }
      ]
    },
    {
      "sha": "9d43f76619aa38bc87f3f713750eb375800bdaac",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-01-21T17:48:41Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-01-21T17:48:41Z"
        },
        "message": "Merge pull request #6030 from appium/jlipps-governance\n\nadd governance doc that outlines project processes",
        "tree": {
          "sha": "4c64507d2de647334562cbf2436f0a3aa0bfc78d",
          "url": "https://api.github.com/repos/appium/appium/git/trees/4c64507d2de647334562cbf2436f0a3aa0bfc78d"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/9d43f76619aa38bc87f3f713750eb375800bdaac",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/9d43f76619aa38bc87f3f713750eb375800bdaac",
      "html_url": "https://github.com/appium/appium/commit/9d43f76619aa38bc87f3f713750eb375800bdaac",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/9d43f76619aa38bc87f3f713750eb375800bdaac/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "7056360b4846bba1d0bb797c9af24ff5f54b1343",
          "url": "https://api.github.com/repos/appium/appium/commits/7056360b4846bba1d0bb797c9af24ff5f54b1343",
          "html_url": "https://github.com/appium/appium/commit/7056360b4846bba1d0bb797c9af24ff5f54b1343"
        },
        {
          "sha": "bd2776ff67331f77c194affc0f331e6c47825e8d",
          "url": "https://api.github.com/repos/appium/appium/commits/bd2776ff67331f77c194affc0f331e6c47825e8d",
          "html_url": "https://github.com/appium/appium/commit/bd2776ff67331f77c194affc0f331e6c47825e8d"
        }
      ]
    },
    {
      "sha": "1985bb4b61fb2e2f9ff736fa2be64609d6a670b8",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-01-23T00:42:27Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-01-23T00:42:27Z"
        },
        "message": "explain that we are not supporting autoLaunch=false anymore",
        "tree": {
          "sha": "1894fc560825d57e277ee1c6cf32c14ef31c8a49",
          "url": "https://api.github.com/repos/appium/appium/git/trees/1894fc560825d57e277ee1c6cf32c14ef31c8a49"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/1985bb4b61fb2e2f9ff736fa2be64609d6a670b8",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/1985bb4b61fb2e2f9ff736fa2be64609d6a670b8",
      "html_url": "https://github.com/appium/appium/commit/1985bb4b61fb2e2f9ff736fa2be64609d6a670b8",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/1985bb4b61fb2e2f9ff736fa2be64609d6a670b8/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "9d43f76619aa38bc87f3f713750eb375800bdaac",
          "url": "https://api.github.com/repos/appium/appium/commits/9d43f76619aa38bc87f3f713750eb375800bdaac",
          "html_url": "https://github.com/appium/appium/commit/9d43f76619aa38bc87f3f713750eb375800bdaac"
        }
      ]
    },
    {
      "sha": "130872ffc0ed382ba5ab861bc123f17b495e018b",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-01-23T01:34:02Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-01-23T01:34:02Z"
        },
        "message": "Merge pull request #6060 from jlipps/1.5\n\nexplain that we are not supporting autoLaunch=false anymore",
        "tree": {
          "sha": "1894fc560825d57e277ee1c6cf32c14ef31c8a49",
          "url": "https://api.github.com/repos/appium/appium/git/trees/1894fc560825d57e277ee1c6cf32c14ef31c8a49"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/130872ffc0ed382ba5ab861bc123f17b495e018b",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/130872ffc0ed382ba5ab861bc123f17b495e018b",
      "html_url": "https://github.com/appium/appium/commit/130872ffc0ed382ba5ab861bc123f17b495e018b",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/130872ffc0ed382ba5ab861bc123f17b495e018b/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "9d43f76619aa38bc87f3f713750eb375800bdaac",
          "url": "https://api.github.com/repos/appium/appium/commits/9d43f76619aa38bc87f3f713750eb375800bdaac",
          "html_url": "https://github.com/appium/appium/commit/9d43f76619aa38bc87f3f713750eb375800bdaac"
        },
        {
          "sha": "1985bb4b61fb2e2f9ff736fa2be64609d6a670b8",
          "url": "https://api.github.com/repos/appium/appium/commits/1985bb4b61fb2e2f9ff736fa2be64609d6a670b8",
          "html_url": "https://github.com/appium/appium/commit/1985bb4b61fb2e2f9ff736fa2be64609d6a670b8"
        }
      ]
    },
    {
      "sha": "89a9874a8f11999ebeb2d7171b960f4c5c3ce83d",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2016-01-24T00:37:01Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2016-01-24T00:37:01Z"
        },
        "message": "Update shrinkwrap",
        "tree": {
          "sha": "f14e4f91ee36df1eb0217fb80b6cd6e71861d932",
          "url": "https://api.github.com/repos/appium/appium/git/trees/f14e4f91ee36df1eb0217fb80b6cd6e71861d932"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/89a9874a8f11999ebeb2d7171b960f4c5c3ce83d",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/89a9874a8f11999ebeb2d7171b960f4c5c3ce83d",
      "html_url": "https://github.com/appium/appium/commit/89a9874a8f11999ebeb2d7171b960f4c5c3ce83d",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/89a9874a8f11999ebeb2d7171b960f4c5c3ce83d/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "17d512a21ef17c5b49e96899dd4c9cf0733cc7f6",
          "url": "https://api.github.com/repos/appium/appium/commits/17d512a21ef17c5b49e96899dd4c9cf0733cc7f6",
          "html_url": "https://github.com/appium/appium/commit/17d512a21ef17c5b49e96899dd4c9cf0733cc7f6"
        }
      ]
    },
    {
      "sha": "34bdaeaac5be40eb88ddb486e723cfe32f544aae",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-01-24T07:11:16Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-01-24T07:11:16Z"
        },
        "message": "Merge pull request #6061 from appium/isaac-sw\n\nUpdate shrinkwrap",
        "tree": {
          "sha": "382ab955d8f73a648a5c33afc5ee2d219b654147",
          "url": "https://api.github.com/repos/appium/appium/git/trees/382ab955d8f73a648a5c33afc5ee2d219b654147"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/34bdaeaac5be40eb88ddb486e723cfe32f544aae",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/34bdaeaac5be40eb88ddb486e723cfe32f544aae",
      "html_url": "https://github.com/appium/appium/commit/34bdaeaac5be40eb88ddb486e723cfe32f544aae",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/34bdaeaac5be40eb88ddb486e723cfe32f544aae/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "130872ffc0ed382ba5ab861bc123f17b495e018b",
          "url": "https://api.github.com/repos/appium/appium/commits/130872ffc0ed382ba5ab861bc123f17b495e018b",
          "html_url": "https://github.com/appium/appium/commit/130872ffc0ed382ba5ab861bc123f17b495e018b"
        },
        {
          "sha": "89a9874a8f11999ebeb2d7171b960f4c5c3ce83d",
          "url": "https://api.github.com/repos/appium/appium/commits/89a9874a8f11999ebeb2d7171b960f4c5c3ce83d",
          "html_url": "https://github.com/appium/appium/commit/89a9874a8f11999ebeb2d7171b960f4c5c3ce83d"
        }
      ]
    },
    {
      "sha": "043e7443f266f16d043675335c528471a559b38e",
      "commit": {
        "author": {
          "name": "Srinivasan Sekar",
          "email": "srinivasan.sekar1990@gmail.com",
          "date": "2016-01-26T06:55:33Z"
        },
        "committer": {
          "name": "Srinivasan Sekar",
          "email": "srinivasan.sekar1990@gmail.com",
          "date": "2016-01-26T06:55:33Z"
        },
        "message": "updated supporting node versions for 1.5",
        "tree": {
          "sha": "bbe7a0630f6ad9ddef18e242aab79e7dc521afbd",
          "url": "https://api.github.com/repos/appium/appium/git/trees/bbe7a0630f6ad9ddef18e242aab79e7dc521afbd"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/043e7443f266f16d043675335c528471a559b38e",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/043e7443f266f16d043675335c528471a559b38e",
      "html_url": "https://github.com/appium/appium/commit/043e7443f266f16d043675335c528471a559b38e",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/043e7443f266f16d043675335c528471a559b38e/comments",
      "author": {
        "login": "SrinivasanTarget",
        "id": 8896549,
        "avatar_url": "https://avatars1.githubusercontent.com/u/8896549?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/SrinivasanTarget",
        "html_url": "https://github.com/SrinivasanTarget",
        "followers_url": "https://api.github.com/users/SrinivasanTarget/followers",
        "following_url": "https://api.github.com/users/SrinivasanTarget/following{/other_user}",
        "gists_url": "https://api.github.com/users/SrinivasanTarget/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/SrinivasanTarget/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/SrinivasanTarget/subscriptions",
        "organizations_url": "https://api.github.com/users/SrinivasanTarget/orgs",
        "repos_url": "https://api.github.com/users/SrinivasanTarget/repos",
        "events_url": "https://api.github.com/users/SrinivasanTarget/events{/privacy}",
        "received_events_url": "https://api.github.com/users/SrinivasanTarget/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "SrinivasanTarget",
        "id": 8896549,
        "avatar_url": "https://avatars1.githubusercontent.com/u/8896549?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/SrinivasanTarget",
        "html_url": "https://github.com/SrinivasanTarget",
        "followers_url": "https://api.github.com/users/SrinivasanTarget/followers",
        "following_url": "https://api.github.com/users/SrinivasanTarget/following{/other_user}",
        "gists_url": "https://api.github.com/users/SrinivasanTarget/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/SrinivasanTarget/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/SrinivasanTarget/subscriptions",
        "organizations_url": "https://api.github.com/users/SrinivasanTarget/orgs",
        "repos_url": "https://api.github.com/users/SrinivasanTarget/repos",
        "events_url": "https://api.github.com/users/SrinivasanTarget/events{/privacy}",
        "received_events_url": "https://api.github.com/users/SrinivasanTarget/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "34bdaeaac5be40eb88ddb486e723cfe32f544aae",
          "url": "https://api.github.com/repos/appium/appium/commits/34bdaeaac5be40eb88ddb486e723cfe32f544aae",
          "html_url": "https://github.com/appium/appium/commit/34bdaeaac5be40eb88ddb486e723cfe32f544aae"
        }
      ]
    },
    {
      "sha": "9e87a6bcd054ea2d2fc38fc63857ab569cbb70f2",
      "commit": {
        "author": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2016-01-26T16:02:22Z"
        },
        "committer": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2016-01-26T16:02:22Z"
        },
        "message": "Merge pull request #6068 from SrinivasanTarget/1.5\n\nupdated supporting node versions for 1.5",
        "tree": {
          "sha": "bbe7a0630f6ad9ddef18e242aab79e7dc521afbd",
          "url": "https://api.github.com/repos/appium/appium/git/trees/bbe7a0630f6ad9ddef18e242aab79e7dc521afbd"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/9e87a6bcd054ea2d2fc38fc63857ab569cbb70f2",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/9e87a6bcd054ea2d2fc38fc63857ab569cbb70f2",
      "html_url": "https://github.com/appium/appium/commit/9e87a6bcd054ea2d2fc38fc63857ab569cbb70f2",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/9e87a6bcd054ea2d2fc38fc63857ab569cbb70f2/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "34bdaeaac5be40eb88ddb486e723cfe32f544aae",
          "url": "https://api.github.com/repos/appium/appium/commits/34bdaeaac5be40eb88ddb486e723cfe32f544aae",
          "html_url": "https://github.com/appium/appium/commit/34bdaeaac5be40eb88ddb486e723cfe32f544aae"
        },
        {
          "sha": "043e7443f266f16d043675335c528471a559b38e",
          "url": "https://api.github.com/repos/appium/appium/commits/043e7443f266f16d043675335c528471a559b38e",
          "html_url": "https://github.com/appium/appium/commit/043e7443f266f16d043675335c528471a559b38e"
        }
      ]
    },
    {
      "sha": "cd7d7464f72e7fcf4724ba1127841af807e9a53f",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2016-01-26T20:54:17Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2016-01-26T20:54:17Z"
        },
        "message": "Update all appium dependencies",
        "tree": {
          "sha": "613b46fd3e2083a44f7833f1c66de39dd4ed7801",
          "url": "https://api.github.com/repos/appium/appium/git/trees/613b46fd3e2083a44f7833f1c66de39dd4ed7801"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/cd7d7464f72e7fcf4724ba1127841af807e9a53f",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/cd7d7464f72e7fcf4724ba1127841af807e9a53f",
      "html_url": "https://github.com/appium/appium/commit/cd7d7464f72e7fcf4724ba1127841af807e9a53f",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/cd7d7464f72e7fcf4724ba1127841af807e9a53f/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "34bdaeaac5be40eb88ddb486e723cfe32f544aae",
          "url": "https://api.github.com/repos/appium/appium/commits/34bdaeaac5be40eb88ddb486e723cfe32f544aae",
          "html_url": "https://github.com/appium/appium/commit/34bdaeaac5be40eb88ddb486e723cfe32f544aae"
        }
      ]
    },
    {
      "sha": "d148b6f4688d758f584d8ec6d5598ab70259f142",
      "commit": {
        "author": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2016-01-26T21:09:47Z"
        },
        "committer": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2016-01-26T21:09:47Z"
        },
        "message": "Merge pull request #6069 from appium/isaac-deps\n\nUpdate all appium dependencies",
        "tree": {
          "sha": "4e036a6255d0e83851ff410feedde8779ef896bb",
          "url": "https://api.github.com/repos/appium/appium/git/trees/4e036a6255d0e83851ff410feedde8779ef896bb"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/d148b6f4688d758f584d8ec6d5598ab70259f142",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/d148b6f4688d758f584d8ec6d5598ab70259f142",
      "html_url": "https://github.com/appium/appium/commit/d148b6f4688d758f584d8ec6d5598ab70259f142",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/d148b6f4688d758f584d8ec6d5598ab70259f142/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "9e87a6bcd054ea2d2fc38fc63857ab569cbb70f2",
          "url": "https://api.github.com/repos/appium/appium/commits/9e87a6bcd054ea2d2fc38fc63857ab569cbb70f2",
          "html_url": "https://github.com/appium/appium/commit/9e87a6bcd054ea2d2fc38fc63857ab569cbb70f2"
        },
        {
          "sha": "cd7d7464f72e7fcf4724ba1127841af807e9a53f",
          "url": "https://api.github.com/repos/appium/appium/commits/cd7d7464f72e7fcf4724ba1127841af807e9a53f",
          "html_url": "https://github.com/appium/appium/commit/cd7d7464f72e7fcf4724ba1127841af807e9a53f"
        }
      ]
    },
    {
      "sha": "a37a94e954a584f7fe046d9b4493b82c1715d3a2",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2016-01-27T19:41:57Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2016-01-27T19:41:57Z"
        },
        "message": "Update deps",
        "tree": {
          "sha": "fab8e2735fa25099002ccb883be2652c5f8efe42",
          "url": "https://api.github.com/repos/appium/appium/git/trees/fab8e2735fa25099002ccb883be2652c5f8efe42"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/a37a94e954a584f7fe046d9b4493b82c1715d3a2",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/a37a94e954a584f7fe046d9b4493b82c1715d3a2",
      "html_url": "https://github.com/appium/appium/commit/a37a94e954a584f7fe046d9b4493b82c1715d3a2",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/a37a94e954a584f7fe046d9b4493b82c1715d3a2/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "d148b6f4688d758f584d8ec6d5598ab70259f142",
          "url": "https://api.github.com/repos/appium/appium/commits/d148b6f4688d758f584d8ec6d5598ab70259f142",
          "html_url": "https://github.com/appium/appium/commit/d148b6f4688d758f584d8ec6d5598ab70259f142"
        }
      ]
    },
    {
      "sha": "fa9ca9ffafad477e7a13af1a4da0a54d09497d8d",
      "commit": {
        "author": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2016-01-27T19:57:38Z"
        },
        "committer": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2016-01-27T19:57:38Z"
        },
        "message": "Merge pull request #6073 from appium/isaac-deps\n\nUpdate deps",
        "tree": {
          "sha": "fab8e2735fa25099002ccb883be2652c5f8efe42",
          "url": "https://api.github.com/repos/appium/appium/git/trees/fab8e2735fa25099002ccb883be2652c5f8efe42"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/fa9ca9ffafad477e7a13af1a4da0a54d09497d8d",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/fa9ca9ffafad477e7a13af1a4da0a54d09497d8d",
      "html_url": "https://github.com/appium/appium/commit/fa9ca9ffafad477e7a13af1a4da0a54d09497d8d",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/fa9ca9ffafad477e7a13af1a4da0a54d09497d8d/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "d148b6f4688d758f584d8ec6d5598ab70259f142",
          "url": "https://api.github.com/repos/appium/appium/commits/d148b6f4688d758f584d8ec6d5598ab70259f142",
          "html_url": "https://github.com/appium/appium/commit/d148b6f4688d758f584d8ec6d5598ab70259f142"
        },
        {
          "sha": "a37a94e954a584f7fe046d9b4493b82c1715d3a2",
          "url": "https://api.github.com/repos/appium/appium/commits/a37a94e954a584f7fe046d9b4493b82c1715d3a2",
          "html_url": "https://github.com/appium/appium/commit/a37a94e954a584f7fe046d9b4493b82c1715d3a2"
        }
      ]
    },
    {
      "sha": "bf2517c09bd33fdfc2e3b35a8c68cf77a4cce68f",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2016-01-27T22:51:17Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2016-01-27T22:57:21Z"
        },
        "message": "Update ios driver in light of windows bug",
        "tree": {
          "sha": "8a9e7c6765cc384d444d511314d91de51c2daf79",
          "url": "https://api.github.com/repos/appium/appium/git/trees/8a9e7c6765cc384d444d511314d91de51c2daf79"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/bf2517c09bd33fdfc2e3b35a8c68cf77a4cce68f",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/bf2517c09bd33fdfc2e3b35a8c68cf77a4cce68f",
      "html_url": "https://github.com/appium/appium/commit/bf2517c09bd33fdfc2e3b35a8c68cf77a4cce68f",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/bf2517c09bd33fdfc2e3b35a8c68cf77a4cce68f/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "fa9ca9ffafad477e7a13af1a4da0a54d09497d8d",
          "url": "https://api.github.com/repos/appium/appium/commits/fa9ca9ffafad477e7a13af1a4da0a54d09497d8d",
          "html_url": "https://github.com/appium/appium/commit/fa9ca9ffafad477e7a13af1a4da0a54d09497d8d"
        }
      ]
    },
    {
      "sha": "86ffb90ef54a8573c49a47e8f0bd529f6f46b63c",
      "commit": {
        "author": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2016-01-27T23:33:46Z"
        },
        "committer": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2016-01-27T23:33:46Z"
        },
        "message": "Merge pull request #6074 from appium/isaac-deps\n\nUpdate ios driver in light of windows bug",
        "tree": {
          "sha": "8a9e7c6765cc384d444d511314d91de51c2daf79",
          "url": "https://api.github.com/repos/appium/appium/git/trees/8a9e7c6765cc384d444d511314d91de51c2daf79"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/86ffb90ef54a8573c49a47e8f0bd529f6f46b63c",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/86ffb90ef54a8573c49a47e8f0bd529f6f46b63c",
      "html_url": "https://github.com/appium/appium/commit/86ffb90ef54a8573c49a47e8f0bd529f6f46b63c",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/86ffb90ef54a8573c49a47e8f0bd529f6f46b63c/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "fa9ca9ffafad477e7a13af1a4da0a54d09497d8d",
          "url": "https://api.github.com/repos/appium/appium/commits/fa9ca9ffafad477e7a13af1a4da0a54d09497d8d",
          "html_url": "https://github.com/appium/appium/commit/fa9ca9ffafad477e7a13af1a4da0a54d09497d8d"
        },
        {
          "sha": "bf2517c09bd33fdfc2e3b35a8c68cf77a4cce68f",
          "url": "https://api.github.com/repos/appium/appium/commits/bf2517c09bd33fdfc2e3b35a8c68cf77a4cce68f",
          "html_url": "https://github.com/appium/appium/commit/bf2517c09bd33fdfc2e3b35a8c68cf77a4cce68f"
        }
      ]
    },
    {
      "sha": "566192918032956453b081395b189f170fe59734",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2016-01-29T22:04:10Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2016-01-29T22:04:10Z"
        },
        "message": "Update android driver",
        "tree": {
          "sha": "eec2e4ba90d953f9d1dca36032039fe0281aeae6",
          "url": "https://api.github.com/repos/appium/appium/git/trees/eec2e4ba90d953f9d1dca36032039fe0281aeae6"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/566192918032956453b081395b189f170fe59734",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/566192918032956453b081395b189f170fe59734",
      "html_url": "https://github.com/appium/appium/commit/566192918032956453b081395b189f170fe59734",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/566192918032956453b081395b189f170fe59734/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "86ffb90ef54a8573c49a47e8f0bd529f6f46b63c",
          "url": "https://api.github.com/repos/appium/appium/commits/86ffb90ef54a8573c49a47e8f0bd529f6f46b63c",
          "html_url": "https://github.com/appium/appium/commit/86ffb90ef54a8573c49a47e8f0bd529f6f46b63c"
        }
      ]
    },
    {
      "sha": "37da641ccfb1303571bfd2f58a32b2cfe04bdd91",
      "commit": {
        "author": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2016-01-29T22:16:59Z"
        },
        "committer": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2016-01-29T22:16:59Z"
        },
        "message": "Merge pull request #6082 from appium/isaac-android-iw\n\nUpdate android driver",
        "tree": {
          "sha": "eec2e4ba90d953f9d1dca36032039fe0281aeae6",
          "url": "https://api.github.com/repos/appium/appium/git/trees/eec2e4ba90d953f9d1dca36032039fe0281aeae6"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/37da641ccfb1303571bfd2f58a32b2cfe04bdd91",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/37da641ccfb1303571bfd2f58a32b2cfe04bdd91",
      "html_url": "https://github.com/appium/appium/commit/37da641ccfb1303571bfd2f58a32b2cfe04bdd91",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/37da641ccfb1303571bfd2f58a32b2cfe04bdd91/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "86ffb90ef54a8573c49a47e8f0bd529f6f46b63c",
          "url": "https://api.github.com/repos/appium/appium/commits/86ffb90ef54a8573c49a47e8f0bd529f6f46b63c",
          "html_url": "https://github.com/appium/appium/commit/86ffb90ef54a8573c49a47e8f0bd529f6f46b63c"
        },
        {
          "sha": "566192918032956453b081395b189f170fe59734",
          "url": "https://api.github.com/repos/appium/appium/commits/566192918032956453b081395b189f170fe59734",
          "html_url": "https://github.com/appium/appium/commit/566192918032956453b081395b189f170fe59734"
        }
      ]
    },
    {
      "sha": "f1511ced0d136c997f306e2b52ea4d45d6099d4f",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2016-02-01T23:59:19Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2016-02-01T23:59:19Z"
        },
        "message": "Update ios and android drivers",
        "tree": {
          "sha": "a59601713c7c4704132baa2e19298db65389b302",
          "url": "https://api.github.com/repos/appium/appium/git/trees/a59601713c7c4704132baa2e19298db65389b302"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/f1511ced0d136c997f306e2b52ea4d45d6099d4f",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/f1511ced0d136c997f306e2b52ea4d45d6099d4f",
      "html_url": "https://github.com/appium/appium/commit/f1511ced0d136c997f306e2b52ea4d45d6099d4f",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/f1511ced0d136c997f306e2b52ea4d45d6099d4f/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "37da641ccfb1303571bfd2f58a32b2cfe04bdd91",
          "url": "https://api.github.com/repos/appium/appium/commits/37da641ccfb1303571bfd2f58a32b2cfe04bdd91",
          "html_url": "https://github.com/appium/appium/commit/37da641ccfb1303571bfd2f58a32b2cfe04bdd91"
        }
      ]
    },
    {
      "sha": "ca5f3f0008c732fbca196844321b8870dc3c6e59",
      "commit": {
        "author": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2016-02-02T16:14:22Z"
        },
        "committer": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2016-02-02T16:14:22Z"
        },
        "message": "Merge pull request #6092 from appium/isaac-updates\n\nUpdate ios and android drivers",
        "tree": {
          "sha": "a59601713c7c4704132baa2e19298db65389b302",
          "url": "https://api.github.com/repos/appium/appium/git/trees/a59601713c7c4704132baa2e19298db65389b302"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/ca5f3f0008c732fbca196844321b8870dc3c6e59",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/ca5f3f0008c732fbca196844321b8870dc3c6e59",
      "html_url": "https://github.com/appium/appium/commit/ca5f3f0008c732fbca196844321b8870dc3c6e59",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/ca5f3f0008c732fbca196844321b8870dc3c6e59/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "37da641ccfb1303571bfd2f58a32b2cfe04bdd91",
          "url": "https://api.github.com/repos/appium/appium/commits/37da641ccfb1303571bfd2f58a32b2cfe04bdd91",
          "html_url": "https://github.com/appium/appium/commit/37da641ccfb1303571bfd2f58a32b2cfe04bdd91"
        },
        {
          "sha": "f1511ced0d136c997f306e2b52ea4d45d6099d4f",
          "url": "https://api.github.com/repos/appium/appium/commits/f1511ced0d136c997f306e2b52ea4d45d6099d4f",
          "html_url": "https://github.com/appium/appium/commit/f1511ced0d136c997f306e2b52ea4d45d6099d4f"
        }
      ]
    },
    {
      "sha": "86e8e70b3c58437b3220357e47730c10222689a2",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2016-02-02T17:59:04Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2016-02-02T17:59:04Z"
        },
        "message": "v1.5.0-beta12",
        "tree": {
          "sha": "597d9287cd147f694d47efc570fd8acecd1a6492",
          "url": "https://api.github.com/repos/appium/appium/git/trees/597d9287cd147f694d47efc570fd8acecd1a6492"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/86e8e70b3c58437b3220357e47730c10222689a2",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/86e8e70b3c58437b3220357e47730c10222689a2",
      "html_url": "https://github.com/appium/appium/commit/86e8e70b3c58437b3220357e47730c10222689a2",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/86e8e70b3c58437b3220357e47730c10222689a2/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "ca5f3f0008c732fbca196844321b8870dc3c6e59",
          "url": "https://api.github.com/repos/appium/appium/commits/ca5f3f0008c732fbca196844321b8870dc3c6e59",
          "html_url": "https://github.com/appium/appium/commit/ca5f3f0008c732fbca196844321b8870dc3c6e59"
        }
      ]
    },
    {
      "sha": "a16d8806e3d566124cee53e6aaa2022196734387",
      "commit": {
        "author": {
          "name": "Scott Dixon",
          "email": "scott@howrefreshing.com.au",
          "date": "2016-02-02T19:16:14Z"
        },
        "committer": {
          "name": "Scott Dixon",
          "email": "scott@howrefreshing.com.au",
          "date": "2016-02-02T22:44:56Z"
        },
        "message": "Changelog: iOS 9.3 support",
        "tree": {
          "sha": "3c25b5ceeb3ad66a1bc8ae2147e51e3cf5a07973",
          "url": "https://api.github.com/repos/appium/appium/git/trees/3c25b5ceeb3ad66a1bc8ae2147e51e3cf5a07973"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/a16d8806e3d566124cee53e6aaa2022196734387",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/a16d8806e3d566124cee53e6aaa2022196734387",
      "html_url": "https://github.com/appium/appium/commit/a16d8806e3d566124cee53e6aaa2022196734387",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/a16d8806e3d566124cee53e6aaa2022196734387/comments",
      "author": {
        "login": "scottdixon",
        "id": 4726068,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4726068?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottdixon",
        "html_url": "https://github.com/scottdixon",
        "followers_url": "https://api.github.com/users/scottdixon/followers",
        "following_url": "https://api.github.com/users/scottdixon/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottdixon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottdixon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottdixon/subscriptions",
        "organizations_url": "https://api.github.com/users/scottdixon/orgs",
        "repos_url": "https://api.github.com/users/scottdixon/repos",
        "events_url": "https://api.github.com/users/scottdixon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottdixon/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "scottdixon",
        "id": 4726068,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4726068?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottdixon",
        "html_url": "https://github.com/scottdixon",
        "followers_url": "https://api.github.com/users/scottdixon/followers",
        "following_url": "https://api.github.com/users/scottdixon/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottdixon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottdixon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottdixon/subscriptions",
        "organizations_url": "https://api.github.com/users/scottdixon/orgs",
        "repos_url": "https://api.github.com/users/scottdixon/repos",
        "events_url": "https://api.github.com/users/scottdixon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottdixon/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "86e8e70b3c58437b3220357e47730c10222689a2",
          "url": "https://api.github.com/repos/appium/appium/commits/86e8e70b3c58437b3220357e47730c10222689a2",
          "html_url": "https://github.com/appium/appium/commit/86e8e70b3c58437b3220357e47730c10222689a2"
        }
      ]
    },
    {
      "sha": "405dc315453ad557754298c78da3ef0c01e20e10",
      "commit": {
        "author": {
          "name": "Scott Dixon",
          "email": "scottdixon@saucelabs.com",
          "date": "2016-02-02T22:47:37Z"
        },
        "committer": {
          "name": "Scott Dixon",
          "email": "scottdixon@saucelabs.com",
          "date": "2016-02-02T22:47:37Z"
        },
        "message": "Merge pull request #6099 from scottdixon/changelog\n\nChangelog: iOS 9.3 support",
        "tree": {
          "sha": "3c25b5ceeb3ad66a1bc8ae2147e51e3cf5a07973",
          "url": "https://api.github.com/repos/appium/appium/git/trees/3c25b5ceeb3ad66a1bc8ae2147e51e3cf5a07973"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/405dc315453ad557754298c78da3ef0c01e20e10",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/405dc315453ad557754298c78da3ef0c01e20e10",
      "html_url": "https://github.com/appium/appium/commit/405dc315453ad557754298c78da3ef0c01e20e10",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/405dc315453ad557754298c78da3ef0c01e20e10/comments",
      "author": null,
      "committer": null,
      "parents": [
        {
          "sha": "86e8e70b3c58437b3220357e47730c10222689a2",
          "url": "https://api.github.com/repos/appium/appium/commits/86e8e70b3c58437b3220357e47730c10222689a2",
          "html_url": "https://github.com/appium/appium/commit/86e8e70b3c58437b3220357e47730c10222689a2"
        },
        {
          "sha": "a16d8806e3d566124cee53e6aaa2022196734387",
          "url": "https://api.github.com/repos/appium/appium/commits/a16d8806e3d566124cee53e6aaa2022196734387",
          "html_url": "https://github.com/appium/appium/commit/a16d8806e3d566124cee53e6aaa2022196734387"
        }
      ]
    },
    {
      "sha": "641f4a1c0b3544f7c3537103e277f95940323a8d",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-02-04T00:04:04Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-02-04T00:04:04Z"
        },
        "message": "don't require shrinkwrap until we actually need it",
        "tree": {
          "sha": "b4f3e10eb282dd46aa5b74b4dca85840896d8ba4",
          "url": "https://api.github.com/repos/appium/appium/git/trees/b4f3e10eb282dd46aa5b74b4dca85840896d8ba4"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/641f4a1c0b3544f7c3537103e277f95940323a8d",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/641f4a1c0b3544f7c3537103e277f95940323a8d",
      "html_url": "https://github.com/appium/appium/commit/641f4a1c0b3544f7c3537103e277f95940323a8d",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/641f4a1c0b3544f7c3537103e277f95940323a8d/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "405dc315453ad557754298c78da3ef0c01e20e10",
          "url": "https://api.github.com/repos/appium/appium/commits/405dc315453ad557754298c78da3ef0c01e20e10",
          "html_url": "https://github.com/appium/appium/commit/405dc315453ad557754298c78da3ef0c01e20e10"
        }
      ]
    },
    {
      "sha": "8454dab2ce59ba94175d1dcaabb932ec66bec20d",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-02-04T00:49:18Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-02-04T00:49:18Z"
        },
        "message": "update appium-ios-driver with iwd fix and bump to beta13",
        "tree": {
          "sha": "7f6c84ab470abe5fc2da7da4fb6ebd567e7e0642",
          "url": "https://api.github.com/repos/appium/appium/git/trees/7f6c84ab470abe5fc2da7da4fb6ebd567e7e0642"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/8454dab2ce59ba94175d1dcaabb932ec66bec20d",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/8454dab2ce59ba94175d1dcaabb932ec66bec20d",
      "html_url": "https://github.com/appium/appium/commit/8454dab2ce59ba94175d1dcaabb932ec66bec20d",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/8454dab2ce59ba94175d1dcaabb932ec66bec20d/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "641f4a1c0b3544f7c3537103e277f95940323a8d",
          "url": "https://api.github.com/repos/appium/appium/commits/641f4a1c0b3544f7c3537103e277f95940323a8d",
          "html_url": "https://github.com/appium/appium/commit/641f4a1c0b3544f7c3537103e277f95940323a8d"
        }
      ]
    },
    {
      "sha": "9449d36e1b94c07c2220c18a223ab2f6a091652b",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-02-04T04:12:31Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-02-04T04:12:31Z"
        },
        "message": "if the shrinkwrap doesn't exist, don't try to fix it",
        "tree": {
          "sha": "7ead02412bee958cb0be2134082c1ba03330e081",
          "url": "https://api.github.com/repos/appium/appium/git/trees/7ead02412bee958cb0be2134082c1ba03330e081"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/9449d36e1b94c07c2220c18a223ab2f6a091652b",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/9449d36e1b94c07c2220c18a223ab2f6a091652b",
      "html_url": "https://github.com/appium/appium/commit/9449d36e1b94c07c2220c18a223ab2f6a091652b",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/9449d36e1b94c07c2220c18a223ab2f6a091652b/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "8454dab2ce59ba94175d1dcaabb932ec66bec20d",
          "url": "https://api.github.com/repos/appium/appium/commits/8454dab2ce59ba94175d1dcaabb932ec66bec20d",
          "html_url": "https://github.com/appium/appium/commit/8454dab2ce59ba94175d1dcaabb932ec66bec20d"
        }
      ]
    },
    {
      "sha": "c7340a0b2e82b87e733804a79f6721cd1815f8a1",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-02-04T17:29:38Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-02-04T17:29:38Z"
        },
        "message": "Merge pull request #6100 from jlipps/1.5\n\nif the shrinkwrap doesn't exist, don't try to fix it",
        "tree": {
          "sha": "7ead02412bee958cb0be2134082c1ba03330e081",
          "url": "https://api.github.com/repos/appium/appium/git/trees/7ead02412bee958cb0be2134082c1ba03330e081"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/c7340a0b2e82b87e733804a79f6721cd1815f8a1",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/c7340a0b2e82b87e733804a79f6721cd1815f8a1",
      "html_url": "https://github.com/appium/appium/commit/c7340a0b2e82b87e733804a79f6721cd1815f8a1",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/c7340a0b2e82b87e733804a79f6721cd1815f8a1/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "8454dab2ce59ba94175d1dcaabb932ec66bec20d",
          "url": "https://api.github.com/repos/appium/appium/commits/8454dab2ce59ba94175d1dcaabb932ec66bec20d",
          "html_url": "https://github.com/appium/appium/commit/8454dab2ce59ba94175d1dcaabb932ec66bec20d"
        },
        {
          "sha": "9449d36e1b94c07c2220c18a223ab2f6a091652b",
          "url": "https://api.github.com/repos/appium/appium/commits/9449d36e1b94c07c2220c18a223ab2f6a091652b",
          "html_url": "https://github.com/appium/appium/commit/9449d36e1b94c07c2220c18a223ab2f6a091652b"
        }
      ]
    },
    {
      "sha": "3a4d107b38aaad2a763eb667032ee1b70906cc22",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2016-02-11T17:27:09Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2016-02-11T17:28:22Z"
        },
        "message": "Update deps and bump beta",
        "tree": {
          "sha": "5d5a18c0e6ac7dc8fdb8d345f01f9c6f1ceb0697",
          "url": "https://api.github.com/repos/appium/appium/git/trees/5d5a18c0e6ac7dc8fdb8d345f01f9c6f1ceb0697"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/3a4d107b38aaad2a763eb667032ee1b70906cc22",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/3a4d107b38aaad2a763eb667032ee1b70906cc22",
      "html_url": "https://github.com/appium/appium/commit/3a4d107b38aaad2a763eb667032ee1b70906cc22",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/3a4d107b38aaad2a763eb667032ee1b70906cc22/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "c7340a0b2e82b87e733804a79f6721cd1815f8a1",
          "url": "https://api.github.com/repos/appium/appium/commits/c7340a0b2e82b87e733804a79f6721cd1815f8a1",
          "html_url": "https://github.com/appium/appium/commit/c7340a0b2e82b87e733804a79f6721cd1815f8a1"
        }
      ]
    },
    {
      "sha": "c9795e425d0a7361884abb5597801463a01a14ea",
      "commit": {
        "author": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2016-02-11T20:27:15Z"
        },
        "committer": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2016-02-11T20:27:15Z"
        },
        "message": "Merge pull request #6128 from appium/isaac-beta14\n\nUpdate deps and bump beta",
        "tree": {
          "sha": "5d5a18c0e6ac7dc8fdb8d345f01f9c6f1ceb0697",
          "url": "https://api.github.com/repos/appium/appium/git/trees/5d5a18c0e6ac7dc8fdb8d345f01f9c6f1ceb0697"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/c9795e425d0a7361884abb5597801463a01a14ea",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/c9795e425d0a7361884abb5597801463a01a14ea",
      "html_url": "https://github.com/appium/appium/commit/c9795e425d0a7361884abb5597801463a01a14ea",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/c9795e425d0a7361884abb5597801463a01a14ea/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "c7340a0b2e82b87e733804a79f6721cd1815f8a1",
          "url": "https://api.github.com/repos/appium/appium/commits/c7340a0b2e82b87e733804a79f6721cd1815f8a1",
          "html_url": "https://github.com/appium/appium/commit/c7340a0b2e82b87e733804a79f6721cd1815f8a1"
        },
        {
          "sha": "3a4d107b38aaad2a763eb667032ee1b70906cc22",
          "url": "https://api.github.com/repos/appium/appium/commits/3a4d107b38aaad2a763eb667032ee1b70906cc22",
          "html_url": "https://github.com/appium/appium/commit/3a4d107b38aaad2a763eb667032ee1b70906cc22"
        }
      ]
    },
    {
      "sha": "2226bf087531e38dca7946386055c4c28a64674c",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-02-12T18:47:46Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-02-12T18:47:46Z"
        },
        "message": "update changelog with notice about change in closeApp behavior",
        "tree": {
          "sha": "bec93f05b9f77acd8cefa113e21c4479fcd17ebd",
          "url": "https://api.github.com/repos/appium/appium/git/trees/bec93f05b9f77acd8cefa113e21c4479fcd17ebd"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/2226bf087531e38dca7946386055c4c28a64674c",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/2226bf087531e38dca7946386055c4c28a64674c",
      "html_url": "https://github.com/appium/appium/commit/2226bf087531e38dca7946386055c4c28a64674c",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/2226bf087531e38dca7946386055c4c28a64674c/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "c9795e425d0a7361884abb5597801463a01a14ea",
          "url": "https://api.github.com/repos/appium/appium/commits/c9795e425d0a7361884abb5597801463a01a14ea",
          "html_url": "https://github.com/appium/appium/commit/c9795e425d0a7361884abb5597801463a01a14ea"
        }
      ]
    },
    {
      "sha": "f834e4ec17a0d900e7ed0b91d3fa06fe7b5fc857",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2016-02-16T17:31:40Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2016-02-16T17:31:40Z"
        },
        "message": "Make sure int args are parsed as int",
        "tree": {
          "sha": "bb4b7167d0fa58d2c96d16a9bca677429091d766",
          "url": "https://api.github.com/repos/appium/appium/git/trees/bb4b7167d0fa58d2c96d16a9bca677429091d766"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/f834e4ec17a0d900e7ed0b91d3fa06fe7b5fc857",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/f834e4ec17a0d900e7ed0b91d3fa06fe7b5fc857",
      "html_url": "https://github.com/appium/appium/commit/f834e4ec17a0d900e7ed0b91d3fa06fe7b5fc857",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/f834e4ec17a0d900e7ed0b91d3fa06fe7b5fc857/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "c9795e425d0a7361884abb5597801463a01a14ea",
          "url": "https://api.github.com/repos/appium/appium/commits/c9795e425d0a7361884abb5597801463a01a14ea",
          "html_url": "https://github.com/appium/appium/commit/c9795e425d0a7361884abb5597801463a01a14ea"
        }
      ]
    },
    {
      "sha": "66c6d26c2a35260f3573457dfead7eb76e241f47",
      "commit": {
        "author": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2016-02-16T18:19:40Z"
        },
        "committer": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2016-02-16T18:19:40Z"
        },
        "message": "Merge pull request #6148 from appium/isaac-parser\n\nMake sure int args are parsed as int",
        "tree": {
          "sha": "cdf15ebca0402291f6244901c95183f2fd76f479",
          "url": "https://api.github.com/repos/appium/appium/git/trees/cdf15ebca0402291f6244901c95183f2fd76f479"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/66c6d26c2a35260f3573457dfead7eb76e241f47",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/66c6d26c2a35260f3573457dfead7eb76e241f47",
      "html_url": "https://github.com/appium/appium/commit/66c6d26c2a35260f3573457dfead7eb76e241f47",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/66c6d26c2a35260f3573457dfead7eb76e241f47/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "2226bf087531e38dca7946386055c4c28a64674c",
          "url": "https://api.github.com/repos/appium/appium/commits/2226bf087531e38dca7946386055c4c28a64674c",
          "html_url": "https://github.com/appium/appium/commit/2226bf087531e38dca7946386055c4c28a64674c"
        },
        {
          "sha": "f834e4ec17a0d900e7ed0b91d3fa06fe7b5fc857",
          "url": "https://api.github.com/repos/appium/appium/commits/f834e4ec17a0d900e7ed0b91d3fa06fe7b5fc857",
          "html_url": "https://github.com/appium/appium/commit/f834e4ec17a0d900e7ed0b91d3fa06fe7b5fc857"
        }
      ]
    },
    {
      "sha": "28222a9ba8cfb21a3fe1cf790222e75c47cea6ef",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-02-17T20:09:55Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-02-17T20:23:45Z"
        },
        "message": "add basic issue template",
        "tree": {
          "sha": "b90d423c72763a5599ca304fac38134d1e61f011",
          "url": "https://api.github.com/repos/appium/appium/git/trees/b90d423c72763a5599ca304fac38134d1e61f011"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/28222a9ba8cfb21a3fe1cf790222e75c47cea6ef",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/28222a9ba8cfb21a3fe1cf790222e75c47cea6ef",
      "html_url": "https://github.com/appium/appium/commit/28222a9ba8cfb21a3fe1cf790222e75c47cea6ef",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/28222a9ba8cfb21a3fe1cf790222e75c47cea6ef/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "2226bf087531e38dca7946386055c4c28a64674c",
          "url": "https://api.github.com/repos/appium/appium/commits/2226bf087531e38dca7946386055c4c28a64674c",
          "html_url": "https://github.com/appium/appium/commit/2226bf087531e38dca7946386055c4c28a64674c"
        }
      ]
    },
    {
      "sha": "6cc5e02ad404bbe5aae80edb01bca5624ccdf961",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-02-17T20:24:14Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-02-17T20:24:14Z"
        },
        "message": "Merge pull request #6155 from jlipps/1.5\n\nadd basic issue template",
        "tree": {
          "sha": "cac1c01d6432d7f1d9afa757f3cdc82d364edac9",
          "url": "https://api.github.com/repos/appium/appium/git/trees/cac1c01d6432d7f1d9afa757f3cdc82d364edac9"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/6cc5e02ad404bbe5aae80edb01bca5624ccdf961",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/6cc5e02ad404bbe5aae80edb01bca5624ccdf961",
      "html_url": "https://github.com/appium/appium/commit/6cc5e02ad404bbe5aae80edb01bca5624ccdf961",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/6cc5e02ad404bbe5aae80edb01bca5624ccdf961/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "66c6d26c2a35260f3573457dfead7eb76e241f47",
          "url": "https://api.github.com/repos/appium/appium/commits/66c6d26c2a35260f3573457dfead7eb76e241f47",
          "html_url": "https://github.com/appium/appium/commit/66c6d26c2a35260f3573457dfead7eb76e241f47"
        },
        {
          "sha": "28222a9ba8cfb21a3fe1cf790222e75c47cea6ef",
          "url": "https://api.github.com/repos/appium/appium/commits/28222a9ba8cfb21a3fe1cf790222e75c47cea6ef",
          "html_url": "https://github.com/appium/appium/commit/28222a9ba8cfb21a3fe1cf790222e75c47cea6ef"
        }
      ]
    },
    {
      "sha": "8142eec0211dec3fca9f314f7f4bf2fb6c301e6f",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-02-17T20:28:14Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-02-17T20:29:06Z"
        },
        "message": "fix correct version of issue template",
        "tree": {
          "sha": "d656fbb06fa81ba2175eb7683446afe44841cf03",
          "url": "https://api.github.com/repos/appium/appium/git/trees/d656fbb06fa81ba2175eb7683446afe44841cf03"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/8142eec0211dec3fca9f314f7f4bf2fb6c301e6f",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/8142eec0211dec3fca9f314f7f4bf2fb6c301e6f",
      "html_url": "https://github.com/appium/appium/commit/8142eec0211dec3fca9f314f7f4bf2fb6c301e6f",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/8142eec0211dec3fca9f314f7f4bf2fb6c301e6f/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "6cc5e02ad404bbe5aae80edb01bca5624ccdf961",
          "url": "https://api.github.com/repos/appium/appium/commits/6cc5e02ad404bbe5aae80edb01bca5624ccdf961",
          "html_url": "https://github.com/appium/appium/commit/6cc5e02ad404bbe5aae80edb01bca5624ccdf961"
        }
      ]
    },
    {
      "sha": "a0cd6dd22e657becbe69c312b29fabded4c76675",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-02-17T22:21:47Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-02-17T22:29:37Z"
        },
        "message": "add a pull request template (and mention the CLA)",
        "tree": {
          "sha": "57ed02263e4e5598c68cdf61693fb88c82de7f9b",
          "url": "https://api.github.com/repos/appium/appium/git/trees/57ed02263e4e5598c68cdf61693fb88c82de7f9b"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/a0cd6dd22e657becbe69c312b29fabded4c76675",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/a0cd6dd22e657becbe69c312b29fabded4c76675",
      "html_url": "https://github.com/appium/appium/commit/a0cd6dd22e657becbe69c312b29fabded4c76675",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/a0cd6dd22e657becbe69c312b29fabded4c76675/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "8142eec0211dec3fca9f314f7f4bf2fb6c301e6f",
          "url": "https://api.github.com/repos/appium/appium/commits/8142eec0211dec3fca9f314f7f4bf2fb6c301e6f",
          "html_url": "https://github.com/appium/appium/commit/8142eec0211dec3fca9f314f7f4bf2fb6c301e6f"
        }
      ]
    },
    {
      "sha": "78ce208d3a7c7bd4673529297d40cd5f59129021",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-02-17T23:40:12Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-02-17T23:40:12Z"
        },
        "message": "Merge pull request #6156 from jlipps/1.5\n\nadd a pull request template (and mention the CLA)",
        "tree": {
          "sha": "57ed02263e4e5598c68cdf61693fb88c82de7f9b",
          "url": "https://api.github.com/repos/appium/appium/git/trees/57ed02263e4e5598c68cdf61693fb88c82de7f9b"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/78ce208d3a7c7bd4673529297d40cd5f59129021",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/78ce208d3a7c7bd4673529297d40cd5f59129021",
      "html_url": "https://github.com/appium/appium/commit/78ce208d3a7c7bd4673529297d40cd5f59129021",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/78ce208d3a7c7bd4673529297d40cd5f59129021/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "8142eec0211dec3fca9f314f7f4bf2fb6c301e6f",
          "url": "https://api.github.com/repos/appium/appium/commits/8142eec0211dec3fca9f314f7f4bf2fb6c301e6f",
          "html_url": "https://github.com/appium/appium/commit/8142eec0211dec3fca9f314f7f4bf2fb6c301e6f"
        },
        {
          "sha": "a0cd6dd22e657becbe69c312b29fabded4c76675",
          "url": "https://api.github.com/repos/appium/appium/commits/a0cd6dd22e657becbe69c312b29fabded4c76675",
          "html_url": "https://github.com/appium/appium/commit/a0cd6dd22e657becbe69c312b29fabded4c76675"
        }
      ]
    },
    {
      "sha": "c9d0a6668100e4743320db9288ffd071baff5dbe",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-02-19T20:53:24Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-02-19T20:53:24Z"
        },
        "message": "remove deprecated ANDROID_ADB_SERVER_PORT flag and use the adbPort cap instead",
        "tree": {
          "sha": "235b5c6173a37cbfd5d694b99d2e499444fb3b2a",
          "url": "https://api.github.com/repos/appium/appium/git/trees/235b5c6173a37cbfd5d694b99d2e499444fb3b2a"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/c9d0a6668100e4743320db9288ffd071baff5dbe",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/c9d0a6668100e4743320db9288ffd071baff5dbe",
      "html_url": "https://github.com/appium/appium/commit/c9d0a6668100e4743320db9288ffd071baff5dbe",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/c9d0a6668100e4743320db9288ffd071baff5dbe/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "a0cd6dd22e657becbe69c312b29fabded4c76675",
          "url": "https://api.github.com/repos/appium/appium/commits/a0cd6dd22e657becbe69c312b29fabded4c76675",
          "html_url": "https://github.com/appium/appium/commit/a0cd6dd22e657becbe69c312b29fabded4c76675"
        }
      ]
    },
    {
      "sha": "583a901ad962cb89a95a3b55a799897e95cbecb7",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-02-19T21:27:57Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-02-19T21:27:57Z"
        },
        "message": "Merge pull request #6162 from jlipps/1.5\n\nremove deprecated ANDROID_ADB_SERVER_PORT flag and use adbPort cap",
        "tree": {
          "sha": "235b5c6173a37cbfd5d694b99d2e499444fb3b2a",
          "url": "https://api.github.com/repos/appium/appium/git/trees/235b5c6173a37cbfd5d694b99d2e499444fb3b2a"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/583a901ad962cb89a95a3b55a799897e95cbecb7",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/583a901ad962cb89a95a3b55a799897e95cbecb7",
      "html_url": "https://github.com/appium/appium/commit/583a901ad962cb89a95a3b55a799897e95cbecb7",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/583a901ad962cb89a95a3b55a799897e95cbecb7/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "78ce208d3a7c7bd4673529297d40cd5f59129021",
          "url": "https://api.github.com/repos/appium/appium/commits/78ce208d3a7c7bd4673529297d40cd5f59129021",
          "html_url": "https://github.com/appium/appium/commit/78ce208d3a7c7bd4673529297d40cd5f59129021"
        },
        {
          "sha": "c9d0a6668100e4743320db9288ffd071baff5dbe",
          "url": "https://api.github.com/repos/appium/appium/commits/c9d0a6668100e4743320db9288ffd071baff5dbe",
          "html_url": "https://github.com/appium/appium/commit/c9d0a6668100e4743320db9288ffd071baff5dbe"
        }
      ]
    },
    {
      "sha": "a2a8ed46d4cbe309262ee26189f22b5014119adb",
      "commit": {
        "author": {
          "name": "Scott Dixon",
          "email": "scott@howrefreshing.com.au",
          "date": "2016-02-19T21:41:18Z"
        },
        "committer": {
          "name": "Scott Dixon",
          "email": "scott@howrefreshing.com.au",
          "date": "2016-02-19T21:41:18Z"
        },
        "message": "Docs: NPM install commands",
        "tree": {
          "sha": "bbc43aad301792cc3b74c329fa1cf81763343b91",
          "url": "https://api.github.com/repos/appium/appium/git/trees/bbc43aad301792cc3b74c329fa1cf81763343b91"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/a2a8ed46d4cbe309262ee26189f22b5014119adb",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/a2a8ed46d4cbe309262ee26189f22b5014119adb",
      "html_url": "https://github.com/appium/appium/commit/a2a8ed46d4cbe309262ee26189f22b5014119adb",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/a2a8ed46d4cbe309262ee26189f22b5014119adb/comments",
      "author": {
        "login": "scottdixon",
        "id": 4726068,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4726068?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottdixon",
        "html_url": "https://github.com/scottdixon",
        "followers_url": "https://api.github.com/users/scottdixon/followers",
        "following_url": "https://api.github.com/users/scottdixon/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottdixon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottdixon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottdixon/subscriptions",
        "organizations_url": "https://api.github.com/users/scottdixon/orgs",
        "repos_url": "https://api.github.com/users/scottdixon/repos",
        "events_url": "https://api.github.com/users/scottdixon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottdixon/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "scottdixon",
        "id": 4726068,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4726068?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottdixon",
        "html_url": "https://github.com/scottdixon",
        "followers_url": "https://api.github.com/users/scottdixon/followers",
        "following_url": "https://api.github.com/users/scottdixon/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottdixon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottdixon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottdixon/subscriptions",
        "organizations_url": "https://api.github.com/users/scottdixon/orgs",
        "repos_url": "https://api.github.com/users/scottdixon/repos",
        "events_url": "https://api.github.com/users/scottdixon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottdixon/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "583a901ad962cb89a95a3b55a799897e95cbecb7",
          "url": "https://api.github.com/repos/appium/appium/commits/583a901ad962cb89a95a3b55a799897e95cbecb7",
          "html_url": "https://github.com/appium/appium/commit/583a901ad962cb89a95a3b55a799897e95cbecb7"
        }
      ]
    },
    {
      "sha": "428a30023ff435bc9b25573a203dd4ff57bd64f5",
      "commit": {
        "author": {
          "name": "Scott Dixon",
          "email": "scott@howrefreshing.com.au",
          "date": "2016-02-19T21:48:39Z"
        },
        "committer": {
          "name": "Scott Dixon",
          "email": "scott@howrefreshing.com.au",
          "date": "2016-02-19T21:57:41Z"
        },
        "message": "Docs: fixed GUI + readme links",
        "tree": {
          "sha": "e2c9a6abb57bbc65b8b1388cfb48d2a58a39a8a0",
          "url": "https://api.github.com/repos/appium/appium/git/trees/e2c9a6abb57bbc65b8b1388cfb48d2a58a39a8a0"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/428a30023ff435bc9b25573a203dd4ff57bd64f5",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/428a30023ff435bc9b25573a203dd4ff57bd64f5",
      "html_url": "https://github.com/appium/appium/commit/428a30023ff435bc9b25573a203dd4ff57bd64f5",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/428a30023ff435bc9b25573a203dd4ff57bd64f5/comments",
      "author": {
        "login": "scottdixon",
        "id": 4726068,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4726068?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottdixon",
        "html_url": "https://github.com/scottdixon",
        "followers_url": "https://api.github.com/users/scottdixon/followers",
        "following_url": "https://api.github.com/users/scottdixon/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottdixon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottdixon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottdixon/subscriptions",
        "organizations_url": "https://api.github.com/users/scottdixon/orgs",
        "repos_url": "https://api.github.com/users/scottdixon/repos",
        "events_url": "https://api.github.com/users/scottdixon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottdixon/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "scottdixon",
        "id": 4726068,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4726068?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottdixon",
        "html_url": "https://github.com/scottdixon",
        "followers_url": "https://api.github.com/users/scottdixon/followers",
        "following_url": "https://api.github.com/users/scottdixon/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottdixon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottdixon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottdixon/subscriptions",
        "organizations_url": "https://api.github.com/users/scottdixon/orgs",
        "repos_url": "https://api.github.com/users/scottdixon/repos",
        "events_url": "https://api.github.com/users/scottdixon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottdixon/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "a2a8ed46d4cbe309262ee26189f22b5014119adb",
          "url": "https://api.github.com/repos/appium/appium/commits/a2a8ed46d4cbe309262ee26189f22b5014119adb",
          "html_url": "https://github.com/appium/appium/commit/a2a8ed46d4cbe309262ee26189f22b5014119adb"
        }
      ]
    },
    {
      "sha": "3ce9ad8e1dc933bc85306d422a96266043897d4a",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2016-02-19T22:14:12Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2016-02-19T22:14:12Z"
        },
        "message": "Update ios driver",
        "tree": {
          "sha": "a0c81a210489a1fb49b8fc1f6367a8100ab70f3c",
          "url": "https://api.github.com/repos/appium/appium/git/trees/a0c81a210489a1fb49b8fc1f6367a8100ab70f3c"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/3ce9ad8e1dc933bc85306d422a96266043897d4a",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/3ce9ad8e1dc933bc85306d422a96266043897d4a",
      "html_url": "https://github.com/appium/appium/commit/3ce9ad8e1dc933bc85306d422a96266043897d4a",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/3ce9ad8e1dc933bc85306d422a96266043897d4a/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "583a901ad962cb89a95a3b55a799897e95cbecb7",
          "url": "https://api.github.com/repos/appium/appium/commits/583a901ad962cb89a95a3b55a799897e95cbecb7",
          "html_url": "https://github.com/appium/appium/commit/583a901ad962cb89a95a3b55a799897e95cbecb7"
        }
      ]
    },
    {
      "sha": "194c065a7d7513583053ffc3666189014ac02815",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-02-19T23:02:06Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-02-19T23:02:06Z"
        },
        "message": "Merge pull request #6165 from appium/isaac-ios\n\nUpdate ios driver",
        "tree": {
          "sha": "a0c81a210489a1fb49b8fc1f6367a8100ab70f3c",
          "url": "https://api.github.com/repos/appium/appium/git/trees/a0c81a210489a1fb49b8fc1f6367a8100ab70f3c"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/194c065a7d7513583053ffc3666189014ac02815",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/194c065a7d7513583053ffc3666189014ac02815",
      "html_url": "https://github.com/appium/appium/commit/194c065a7d7513583053ffc3666189014ac02815",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/194c065a7d7513583053ffc3666189014ac02815/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "583a901ad962cb89a95a3b55a799897e95cbecb7",
          "url": "https://api.github.com/repos/appium/appium/commits/583a901ad962cb89a95a3b55a799897e95cbecb7",
          "html_url": "https://github.com/appium/appium/commit/583a901ad962cb89a95a3b55a799897e95cbecb7"
        },
        {
          "sha": "3ce9ad8e1dc933bc85306d422a96266043897d4a",
          "url": "https://api.github.com/repos/appium/appium/commits/3ce9ad8e1dc933bc85306d422a96266043897d4a",
          "html_url": "https://github.com/appium/appium/commit/3ce9ad8e1dc933bc85306d422a96266043897d4a"
        }
      ]
    },
    {
      "sha": "5a7284f66fd1335163c3d8fb13c7726d99f315bc",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-02-19T23:10:29Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-02-19T23:10:29Z"
        },
        "message": "update package.json and shrinkwrap for new beta publish",
        "tree": {
          "sha": "27abd7b4afe0de3b2ee6019372cf4376c461fff1",
          "url": "https://api.github.com/repos/appium/appium/git/trees/27abd7b4afe0de3b2ee6019372cf4376c461fff1"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/5a7284f66fd1335163c3d8fb13c7726d99f315bc",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/5a7284f66fd1335163c3d8fb13c7726d99f315bc",
      "html_url": "https://github.com/appium/appium/commit/5a7284f66fd1335163c3d8fb13c7726d99f315bc",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/5a7284f66fd1335163c3d8fb13c7726d99f315bc/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "194c065a7d7513583053ffc3666189014ac02815",
          "url": "https://api.github.com/repos/appium/appium/commits/194c065a7d7513583053ffc3666189014ac02815",
          "html_url": "https://github.com/appium/appium/commit/194c065a7d7513583053ffc3666189014ac02815"
        }
      ]
    },
    {
      "sha": "f8bdcc477ef2630c778193cafc2f2d155d9d3419",
      "commit": {
        "author": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2016-02-22T16:38:22Z"
        },
        "committer": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2016-02-22T16:38:22Z"
        },
        "message": "Merge pull request #6163 from scottdixon/1.5-doc-tweaks\n\n1.5 doc tweaks",
        "tree": {
          "sha": "c9892144eb603b2dc25c4f3b46b935eb9209e9df",
          "url": "https://api.github.com/repos/appium/appium/git/trees/c9892144eb603b2dc25c4f3b46b935eb9209e9df"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/f8bdcc477ef2630c778193cafc2f2d155d9d3419",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/f8bdcc477ef2630c778193cafc2f2d155d9d3419",
      "html_url": "https://github.com/appium/appium/commit/f8bdcc477ef2630c778193cafc2f2d155d9d3419",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/f8bdcc477ef2630c778193cafc2f2d155d9d3419/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "5a7284f66fd1335163c3d8fb13c7726d99f315bc",
          "url": "https://api.github.com/repos/appium/appium/commits/5a7284f66fd1335163c3d8fb13c7726d99f315bc",
          "html_url": "https://github.com/appium/appium/commit/5a7284f66fd1335163c3d8fb13c7726d99f315bc"
        },
        {
          "sha": "428a30023ff435bc9b25573a203dd4ff57bd64f5",
          "url": "https://api.github.com/repos/appium/appium/commits/428a30023ff435bc9b25573a203dd4ff57bd64f5",
          "html_url": "https://github.com/appium/appium/commit/428a30023ff435bc9b25573a203dd4ff57bd64f5"
        }
      ]
    },
    {
      "sha": "e949c4e7b2d8440502aef59f983d5a0bd2198497",
      "commit": {
        "author": {
          "name": "Scott Dixon",
          "email": "scott@howrefreshing.com.au",
          "date": "2016-02-22T19:56:31Z"
        },
        "committer": {
          "name": "Scott Dixon",
          "email": "scott@howrefreshing.com.au",
          "date": "2016-02-22T19:59:17Z"
        },
        "message": "Docs: --default-capabilities additional info + Windows note",
        "tree": {
          "sha": "d91c2898981a9509c41e0d0a90bd66e7ff45e863",
          "url": "https://api.github.com/repos/appium/appium/git/trees/d91c2898981a9509c41e0d0a90bd66e7ff45e863"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/e949c4e7b2d8440502aef59f983d5a0bd2198497",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/e949c4e7b2d8440502aef59f983d5a0bd2198497",
      "html_url": "https://github.com/appium/appium/commit/e949c4e7b2d8440502aef59f983d5a0bd2198497",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/e949c4e7b2d8440502aef59f983d5a0bd2198497/comments",
      "author": {
        "login": "scottdixon",
        "id": 4726068,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4726068?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottdixon",
        "html_url": "https://github.com/scottdixon",
        "followers_url": "https://api.github.com/users/scottdixon/followers",
        "following_url": "https://api.github.com/users/scottdixon/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottdixon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottdixon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottdixon/subscriptions",
        "organizations_url": "https://api.github.com/users/scottdixon/orgs",
        "repos_url": "https://api.github.com/users/scottdixon/repos",
        "events_url": "https://api.github.com/users/scottdixon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottdixon/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "scottdixon",
        "id": 4726068,
        "avatar_url": "https://avatars2.githubusercontent.com/u/4726068?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottdixon",
        "html_url": "https://github.com/scottdixon",
        "followers_url": "https://api.github.com/users/scottdixon/followers",
        "following_url": "https://api.github.com/users/scottdixon/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottdixon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottdixon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottdixon/subscriptions",
        "organizations_url": "https://api.github.com/users/scottdixon/orgs",
        "repos_url": "https://api.github.com/users/scottdixon/repos",
        "events_url": "https://api.github.com/users/scottdixon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottdixon/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "428a30023ff435bc9b25573a203dd4ff57bd64f5",
          "url": "https://api.github.com/repos/appium/appium/commits/428a30023ff435bc9b25573a203dd4ff57bd64f5",
          "html_url": "https://github.com/appium/appium/commit/428a30023ff435bc9b25573a203dd4ff57bd64f5"
        }
      ]
    },
    {
      "sha": "2571997839245701d5105a1cd07c0bdc4927e577",
      "commit": {
        "author": {
          "name": "Scott Dixon",
          "email": "scottdixon@saucelabs.com",
          "date": "2016-02-22T22:26:23Z"
        },
        "committer": {
          "name": "Scott Dixon",
          "email": "scottdixon@saucelabs.com",
          "date": "2016-02-22T22:26:23Z"
        },
        "message": "Merge pull request #6172 from scottdixon/1.5-doc-tweaks\n\nDocs: --default-capabilities additional info + Windows note",
        "tree": {
          "sha": "2496784ddf9a8ad58c4a25ecdfb647f080579b9d",
          "url": "https://api.github.com/repos/appium/appium/git/trees/2496784ddf9a8ad58c4a25ecdfb647f080579b9d"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/2571997839245701d5105a1cd07c0bdc4927e577",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/2571997839245701d5105a1cd07c0bdc4927e577",
      "html_url": "https://github.com/appium/appium/commit/2571997839245701d5105a1cd07c0bdc4927e577",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/2571997839245701d5105a1cd07c0bdc4927e577/comments",
      "author": null,
      "committer": null,
      "parents": [
        {
          "sha": "f8bdcc477ef2630c778193cafc2f2d155d9d3419",
          "url": "https://api.github.com/repos/appium/appium/commits/f8bdcc477ef2630c778193cafc2f2d155d9d3419",
          "html_url": "https://github.com/appium/appium/commit/f8bdcc477ef2630c778193cafc2f2d155d9d3419"
        },
        {
          "sha": "e949c4e7b2d8440502aef59f983d5a0bd2198497",
          "url": "https://api.github.com/repos/appium/appium/commits/e949c4e7b2d8440502aef59f983d5a0bd2198497",
          "html_url": "https://github.com/appium/appium/commit/e949c4e7b2d8440502aef59f983d5a0bd2198497"
        }
      ]
    },
    {
      "sha": "dccb8dee7a8b27c0d0b62ae3b24103d5971b2bbb",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-02-22T23:46:57Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-02-22T23:46:57Z"
        },
        "message": "update selendroid with installer fix. shrinkwrap and bump to beta16",
        "tree": {
          "sha": "e9abb185134f8a2d2361950a2cad74fff01655f7",
          "url": "https://api.github.com/repos/appium/appium/git/trees/e9abb185134f8a2d2361950a2cad74fff01655f7"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/dccb8dee7a8b27c0d0b62ae3b24103d5971b2bbb",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/dccb8dee7a8b27c0d0b62ae3b24103d5971b2bbb",
      "html_url": "https://github.com/appium/appium/commit/dccb8dee7a8b27c0d0b62ae3b24103d5971b2bbb",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/dccb8dee7a8b27c0d0b62ae3b24103d5971b2bbb/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "2571997839245701d5105a1cd07c0bdc4927e577",
          "url": "https://api.github.com/repos/appium/appium/commits/2571997839245701d5105a1cd07c0bdc4927e577",
          "html_url": "https://github.com/appium/appium/commit/2571997839245701d5105a1cd07c0bdc4927e577"
        }
      ]
    },
    {
      "sha": "4c3348fec65208579ce8dcb3161aeb58d75691e2",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-02-23T00:58:29Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-02-23T00:58:29Z"
        },
        "message": "make a note about the instability of hideKeyboard on iOS (fix #3661)",
        "tree": {
          "sha": "18720789f53bf686ef53acedea1373b41f58c267",
          "url": "https://api.github.com/repos/appium/appium/git/trees/18720789f53bf686ef53acedea1373b41f58c267"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/4c3348fec65208579ce8dcb3161aeb58d75691e2",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/4c3348fec65208579ce8dcb3161aeb58d75691e2",
      "html_url": "https://github.com/appium/appium/commit/4c3348fec65208579ce8dcb3161aeb58d75691e2",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/4c3348fec65208579ce8dcb3161aeb58d75691e2/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "dccb8dee7a8b27c0d0b62ae3b24103d5971b2bbb",
          "url": "https://api.github.com/repos/appium/appium/commits/dccb8dee7a8b27c0d0b62ae3b24103d5971b2bbb",
          "html_url": "https://github.com/appium/appium/commit/dccb8dee7a8b27c0d0b62ae3b24103d5971b2bbb"
        }
      ]
    },
    {
      "sha": "5d324178c8246c0122f5dbc6302fcf24c0322d6a",
      "commit": {
        "author": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2016-02-23T16:03:46Z"
        },
        "committer": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2016-02-23T16:03:46Z"
        },
        "message": "Merge pull request #6173 from jlipps/1.5\n\nmake a note about the instability of hideKeyboard on iOS (fix #3661)",
        "tree": {
          "sha": "18720789f53bf686ef53acedea1373b41f58c267",
          "url": "https://api.github.com/repos/appium/appium/git/trees/18720789f53bf686ef53acedea1373b41f58c267"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/5d324178c8246c0122f5dbc6302fcf24c0322d6a",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/5d324178c8246c0122f5dbc6302fcf24c0322d6a",
      "html_url": "https://github.com/appium/appium/commit/5d324178c8246c0122f5dbc6302fcf24c0322d6a",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/5d324178c8246c0122f5dbc6302fcf24c0322d6a/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "dccb8dee7a8b27c0d0b62ae3b24103d5971b2bbb",
          "url": "https://api.github.com/repos/appium/appium/commits/dccb8dee7a8b27c0d0b62ae3b24103d5971b2bbb",
          "html_url": "https://github.com/appium/appium/commit/dccb8dee7a8b27c0d0b62ae3b24103d5971b2bbb"
        },
        {
          "sha": "4c3348fec65208579ce8dcb3161aeb58d75691e2",
          "url": "https://api.github.com/repos/appium/appium/commits/4c3348fec65208579ce8dcb3161aeb58d75691e2",
          "html_url": "https://github.com/appium/appium/commit/4c3348fec65208579ce8dcb3161aeb58d75691e2"
        }
      ]
    },
    {
      "sha": "75d1f92add013c5b499d93bcadde0264a848e24a",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-02-23T20:17:20Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-02-23T20:17:20Z"
        },
        "message": "bump to 1.5.0 in preparation for release",
        "tree": {
          "sha": "2802d87201cb11ca4a263be1407aa56414e46485",
          "url": "https://api.github.com/repos/appium/appium/git/trees/2802d87201cb11ca4a263be1407aa56414e46485"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/75d1f92add013c5b499d93bcadde0264a848e24a",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/75d1f92add013c5b499d93bcadde0264a848e24a",
      "html_url": "https://github.com/appium/appium/commit/75d1f92add013c5b499d93bcadde0264a848e24a",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/75d1f92add013c5b499d93bcadde0264a848e24a/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "5d324178c8246c0122f5dbc6302fcf24c0322d6a",
          "url": "https://api.github.com/repos/appium/appium/commits/5d324178c8246c0122f5dbc6302fcf24c0322d6a",
          "html_url": "https://github.com/appium/appium/commit/5d324178c8246c0122f5dbc6302fcf24c0322d6a"
        }
      ]
    },
    {
      "sha": "9ba5f00472664093ea582635a926e76fb1621dbb",
      "commit": {
        "author": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2016-02-23T22:11:16Z"
        },
        "committer": {
          "name": "Isaac Murchie",
          "email": "isaac@saucelabs.com",
          "date": "2016-02-23T23:22:51Z"
        },
        "message": "Update authorize-ios docs",
        "tree": {
          "sha": "addcb2bebc0ff62fc1223ccdec242ba65547e90e",
          "url": "https://api.github.com/repos/appium/appium/git/trees/addcb2bebc0ff62fc1223ccdec242ba65547e90e"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/9ba5f00472664093ea582635a926e76fb1621dbb",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/9ba5f00472664093ea582635a926e76fb1621dbb",
      "html_url": "https://github.com/appium/appium/commit/9ba5f00472664093ea582635a926e76fb1621dbb",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/9ba5f00472664093ea582635a926e76fb1621dbb/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "75d1f92add013c5b499d93bcadde0264a848e24a",
          "url": "https://api.github.com/repos/appium/appium/commits/75d1f92add013c5b499d93bcadde0264a848e24a",
          "html_url": "https://github.com/appium/appium/commit/75d1f92add013c5b499d93bcadde0264a848e24a"
        }
      ]
    },
    {
      "sha": "9dcc6459da668ab5c2d0dfed9d89a08a4ab4db58",
      "commit": {
        "author": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2016-02-24T02:45:17Z"
        },
        "committer": {
          "name": "Isaac A. Murchie",
          "email": "murchieisaac@gmail.com",
          "date": "2016-02-24T02:45:17Z"
        },
        "message": "Merge pull request #6180 from appium/isaac-authorize\n\nUpdate authorize-ios docs",
        "tree": {
          "sha": "addcb2bebc0ff62fc1223ccdec242ba65547e90e",
          "url": "https://api.github.com/repos/appium/appium/git/trees/addcb2bebc0ff62fc1223ccdec242ba65547e90e"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/9dcc6459da668ab5c2d0dfed9d89a08a4ab4db58",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/9dcc6459da668ab5c2d0dfed9d89a08a4ab4db58",
      "html_url": "https://github.com/appium/appium/commit/9dcc6459da668ab5c2d0dfed9d89a08a4ab4db58",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/9dcc6459da668ab5c2d0dfed9d89a08a4ab4db58/comments",
      "author": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "imurchie",
        "id": 2614354,
        "avatar_url": "https://avatars1.githubusercontent.com/u/2614354?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/imurchie",
        "html_url": "https://github.com/imurchie",
        "followers_url": "https://api.github.com/users/imurchie/followers",
        "following_url": "https://api.github.com/users/imurchie/following{/other_user}",
        "gists_url": "https://api.github.com/users/imurchie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/imurchie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/imurchie/subscriptions",
        "organizations_url": "https://api.github.com/users/imurchie/orgs",
        "repos_url": "https://api.github.com/users/imurchie/repos",
        "events_url": "https://api.github.com/users/imurchie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/imurchie/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "75d1f92add013c5b499d93bcadde0264a848e24a",
          "url": "https://api.github.com/repos/appium/appium/commits/75d1f92add013c5b499d93bcadde0264a848e24a",
          "html_url": "https://github.com/appium/appium/commit/75d1f92add013c5b499d93bcadde0264a848e24a"
        },
        {
          "sha": "9ba5f00472664093ea582635a926e76fb1621dbb",
          "url": "https://api.github.com/repos/appium/appium/commits/9ba5f00472664093ea582635a926e76fb1621dbb",
          "html_url": "https://github.com/appium/appium/commit/9ba5f00472664093ea582635a926e76fb1621dbb"
        }
      ]
    },
    {
      "sha": "1e0063084b18408ed715dfda0f3d8d80aa77046e",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-02-24T17:22:34Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-02-24T17:22:47Z"
        },
        "message": "reconfigure changelog and mention capability strict validation",
        "tree": {
          "sha": "ef682db58788c88f675ab005ca57f282a21974cf",
          "url": "https://api.github.com/repos/appium/appium/git/trees/ef682db58788c88f675ab005ca57f282a21974cf"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/1e0063084b18408ed715dfda0f3d8d80aa77046e",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/1e0063084b18408ed715dfda0f3d8d80aa77046e",
      "html_url": "https://github.com/appium/appium/commit/1e0063084b18408ed715dfda0f3d8d80aa77046e",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/1e0063084b18408ed715dfda0f3d8d80aa77046e/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "9dcc6459da668ab5c2d0dfed9d89a08a4ab4db58",
          "url": "https://api.github.com/repos/appium/appium/commits/9dcc6459da668ab5c2d0dfed9d89a08a4ab4db58",
          "html_url": "https://github.com/appium/appium/commit/9dcc6459da668ab5c2d0dfed9d89a08a4ab4db58"
        }
      ]
    },
    {
      "sha": "b0b675c949dabd2087ffae677053c9098ef840ce",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-02-24T18:31:59Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-02-24T18:31:59Z"
        },
        "message": "bring in about:blank fix from MJSONWP and re-shrinkwrap",
        "tree": {
          "sha": "616e058335be18661b62010e9071c3d17afd9243",
          "url": "https://api.github.com/repos/appium/appium/git/trees/616e058335be18661b62010e9071c3d17afd9243"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/b0b675c949dabd2087ffae677053c9098ef840ce",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/b0b675c949dabd2087ffae677053c9098ef840ce",
      "html_url": "https://github.com/appium/appium/commit/b0b675c949dabd2087ffae677053c9098ef840ce",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/b0b675c949dabd2087ffae677053c9098ef840ce/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "1e0063084b18408ed715dfda0f3d8d80aa77046e",
          "url": "https://api.github.com/repos/appium/appium/commits/1e0063084b18408ed715dfda0f3d8d80aa77046e",
          "html_url": "https://github.com/appium/appium/commit/1e0063084b18408ed715dfda0f3d8d80aa77046e"
        }
      ]
    },
    {
      "sha": "634bb0f71a943d36d10f6ca6d920c20bd0501fcf",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-02-24T18:35:16Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-02-24T18:35:16Z"
        },
        "message": "Merge pull request #6187 from jlipps/master\n\nbring in about:blank fix from MJSONWP and re-shrinkwrap",
        "tree": {
          "sha": "616e058335be18661b62010e9071c3d17afd9243",
          "url": "https://api.github.com/repos/appium/appium/git/trees/616e058335be18661b62010e9071c3d17afd9243"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/634bb0f71a943d36d10f6ca6d920c20bd0501fcf",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/634bb0f71a943d36d10f6ca6d920c20bd0501fcf",
      "html_url": "https://github.com/appium/appium/commit/634bb0f71a943d36d10f6ca6d920c20bd0501fcf",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/634bb0f71a943d36d10f6ca6d920c20bd0501fcf/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "1e0063084b18408ed715dfda0f3d8d80aa77046e",
          "url": "https://api.github.com/repos/appium/appium/commits/1e0063084b18408ed715dfda0f3d8d80aa77046e",
          "html_url": "https://github.com/appium/appium/commit/1e0063084b18408ed715dfda0f3d8d80aa77046e"
        },
        {
          "sha": "b0b675c949dabd2087ffae677053c9098ef840ce",
          "url": "https://api.github.com/repos/appium/appium/commits/b0b675c949dabd2087ffae677053c9098ef840ce",
          "html_url": "https://github.com/appium/appium/commit/b0b675c949dabd2087ffae677053c9098ef840ce"
        }
      ]
    },
    {
      "sha": "d8248a42639feb62cf84653700c234b958684a54",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-02-24T22:42:28Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-02-24T22:50:38Z"
        },
        "message": "update ios-driver with safari executeScript fix",
        "tree": {
          "sha": "3592b163ee99419323235142d3cdd917883d0315",
          "url": "https://api.github.com/repos/appium/appium/git/trees/3592b163ee99419323235142d3cdd917883d0315"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/d8248a42639feb62cf84653700c234b958684a54",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/d8248a42639feb62cf84653700c234b958684a54",
      "html_url": "https://github.com/appium/appium/commit/d8248a42639feb62cf84653700c234b958684a54",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/d8248a42639feb62cf84653700c234b958684a54/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "634bb0f71a943d36d10f6ca6d920c20bd0501fcf",
          "url": "https://api.github.com/repos/appium/appium/commits/634bb0f71a943d36d10f6ca6d920c20bd0501fcf",
          "html_url": "https://github.com/appium/appium/commit/634bb0f71a943d36d10f6ca6d920c20bd0501fcf"
        }
      ]
    },
    {
      "sha": "5f03ce546e24684d56762531e783f28d61e2a13e",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-02-24T22:50:35Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-02-24T22:50:38Z"
        },
        "message": "update shrinkwrap",
        "tree": {
          "sha": "cfeac24849bfc24ee3af1b3a64ccb8fb58c377aa",
          "url": "https://api.github.com/repos/appium/appium/git/trees/cfeac24849bfc24ee3af1b3a64ccb8fb58c377aa"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/5f03ce546e24684d56762531e783f28d61e2a13e",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/5f03ce546e24684d56762531e783f28d61e2a13e",
      "html_url": "https://github.com/appium/appium/commit/5f03ce546e24684d56762531e783f28d61e2a13e",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/5f03ce546e24684d56762531e783f28d61e2a13e/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "d8248a42639feb62cf84653700c234b958684a54",
          "url": "https://api.github.com/repos/appium/appium/commits/d8248a42639feb62cf84653700c234b958684a54",
          "html_url": "https://github.com/appium/appium/commit/d8248a42639feb62cf84653700c234b958684a54"
        }
      ]
    },
    {
      "sha": "93004e134878b75c03ff78a6b7041a1f846d0429",
      "commit": {
        "author": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-02-25T23:14:47Z"
        },
        "committer": {
          "name": "Jonathan Lipps",
          "email": "jlipps@gmail.com",
          "date": "2016-02-25T23:14:47Z"
        },
        "message": "update changelog bits",
        "tree": {
          "sha": "84047b861810c7505f80076b536be5264a16e48b",
          "url": "https://api.github.com/repos/appium/appium/git/trees/84047b861810c7505f80076b536be5264a16e48b"
        },
        "url": "https://api.github.com/repos/appium/appium/git/commits/93004e134878b75c03ff78a6b7041a1f846d0429",
        "comment_count": 0
      },
      "url": "https://api.github.com/repos/appium/appium/commits/93004e134878b75c03ff78a6b7041a1f846d0429",
      "html_url": "https://github.com/appium/appium/commit/93004e134878b75c03ff78a6b7041a1f846d0429",
      "comments_url": "https://api.github.com/repos/appium/appium/commits/93004e134878b75c03ff78a6b7041a1f846d0429/comments",
      "author": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "committer": {
        "login": "jlipps",
        "id": 605053,
        "avatar_url": "https://avatars0.githubusercontent.com/u/605053?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlipps",
        "html_url": "https://github.com/jlipps",
        "followers_url": "https://api.github.com/users/jlipps/followers",
        "following_url": "https://api.github.com/users/jlipps/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlipps/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlipps/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlipps/subscriptions",
        "organizations_url": "https://api.github.com/users/jlipps/orgs",
        "repos_url": "https://api.github.com/users/jlipps/repos",
        "events_url": "https://api.github.com/users/jlipps/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlipps/received_events",
        "type": "User",
        "site_admin": false
      },
      "parents": [
        {
          "sha": "5f03ce546e24684d56762531e783f28d61e2a13e",
          "url": "https://api.github.com/repos/appium/appium/commits/5f03ce546e24684d56762531e783f28d61e2a13e",
          "html_url": "https://github.com/appium/appium/commit/5f03ce546e24684d56762531e783f28d61e2a13e"
        }
      ]
    }
  ],
  "files": [
    {
      "sha": "f96ef404887dfaa8fe056e55e8fb2f9d85a1d85b",
      "filename": ".github/ISSUE_TEMPLATE.md",
      "status": "added",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/.github/ISSUE_TEMPLATE.md",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/.github/ISSUE_TEMPLATE.md",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/.github/ISSUE_TEMPLATE.md?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -0,0 +1,21 @@\n+## The problem\n+\n+Briefly describe the issue you are experiencing (or the feature you want to see added to Appium). Tell us what you were trying to do and what happened instead. Remember, this is _not_ a place to ask questions. For that, go to http://discuss.appium.io!\n+\n+## Environment\n+\n+* Appium version (or git revision) that exhibits the issue:\n+* Last Appium version that did not exhibit the issue (if applicable):\n+* Desktop OS/version used to run Appium:\n+* Node.js version (unless using Appium.app|exe):\n+* Mobile platform/version under test:\n+* Real device or emulator/simulator:\n+* Appium CLI or Appium.app|exe:\n+\n+## Details\n+\n+Describe in more detail the problem you have been experiencing, if necessary.\n+\n+## Link to Appium logs\n+\n+Create a [gist](https://gist.github.com) which is a paste of your _full_ Appium logs, and link them here. Do _not_ paste your full Appium logs here, as it will make this issue very long and hard to read! If you are reporting a bug, _always_ include Appium logs!"
    },
    {
      "sha": "bfd33f4d8e03b56462fec9e7a114f97570f75958",
      "filename": ".github/PULL_REQUEST_TEMPLATE.md",
      "status": "added",
      "additions": 29,
      "deletions": 0,
      "changes": 29,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/.github/PULL_REQUEST_TEMPLATE.md",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/.github/PULL_REQUEST_TEMPLATE.md",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/.github/PULL_REQUEST_TEMPLATE.md?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -0,0 +1,29 @@\n+## Proposed changes\n+\n+Describe the big picture of your changes here to communicate to the maintainers why we should accept this pull request. If it fixes a bug or resolves a feature request, be sure to link to that issue.\n+\n+## Types of changes\n+\n+What types of changes does your code introduce to Appium?\n+_Put an `x` in the boxes that apply_\n+\n+- [ ] Bugfix (non-breaking change which fixes an issue)\n+- [ ] New feature (non-breaking change which adds functionality)\n+- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\n+\n+## Checklist\n+\n+_Put an `x` in the boxes that apply. You can also fill these out after creating the PR. If you're unsure about any of them, don't hesitate to ask. We're here to help! This is simply a reminder of what we are going to look for before merging your code._\n+\n+- [ ] I have read the [CONTRIBUTING](/CONTRIBUTING.md) doc\n+- [ ] I have signed the [CLA](https://docs.google.com/forms/d/1lOfXRw_0VCk7gYzjj4WLetGu7yelDVo5LWh0z7pGftE/viewform)\n+- [ ] Lint and unit tests pass locally with my changes\n+- [ ] I have added tests that prove my fix is effective or that my feature works\n+- [ ] I have added necessary documentation (if appropriate)\n+- [ ] Any dependent changes have been merged and published in downstream modules\n+\n+## Further comments\n+\n+If this is a relatively large or complex change, kick off the discussion by explaining why you chose the solution you did and what alternatives you considered, etc...\n+\n+### Reviewers: @imurchie, @jlipps, ..."
    },
    {
      "sha": "b0158f6c107edbf2caa41b4283bf42fd59b48792",
      "filename": ".gitignore",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/.gitignore",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/.gitignore",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/.gitignore?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -27,7 +27,6 @@ org.eclipse.ltk.core.refactoring.prefs\n .appiumconfig*\n build/\n .idea\n-lib/devices/ios/uiauto/lib/status.js\n-lib/devices/ios/uiauto/appium/xpath.js\n *DerivedData\n __pycache__\n+old"
    },
    {
      "sha": "bea75b2b5066c00342a1d7d11e800bea2b1d48a9",
      "filename": ".gitmodules",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/.gitmodules",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/.gitmodules",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/.gitmodules?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -16,9 +16,6 @@\n [submodule \"submodules/unlock_apk\"]\n \tpath = submodules/unlock_apk\n \turl = https://github.com/appium/unlock_apk.git\n-[submodule \"submodules/SafariLauncher\"]\n-\tpath = submodules/SafariLauncher\n-\turl = https://github.com/snevesbarros/SafariLauncher.git\n [submodule \"submodules/libimobiledevice-macosx\"]\n \tpath = submodules/libimobiledevice-macosx\n \turl = https://github.com/benvium/libimobiledevice-macosx.git"
    },
    {
      "sha": "5f0d1669970e78a7f9ea57bfacc8c5868a6604b7",
      "filename": ".jscsrc",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/.jscsrc",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/.jscsrc",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/.jscsrc?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -1,7 +1,5 @@\n {\n-  \"excludeFiles\": [\"submodules/**\", \"node_modules/**\",\n-    \"./lib/server/static/**\", \"./lib/devices/firefoxos/atoms/*.js\",\n-    \"./sample-code/**\", \"/Users/baba/Work/appium/ci/standalone-tools/node_modules/**\"],\n+  \"excludeFiles\": [\"node_modules/**\"],\n   \"requireCurlyBraces\": [\"for\", \"while\", \"do\", \"try\", \"catch\"],\n   \"requireSpaceAfterKeywords\": [\"if\", \"else\", \"for\", \"while\", \"do\", \"switch\",\n     \"return\", \"try\", \"catch\", \"function\"],"
    },
    {
      "sha": "d7d5933dee0df7db28d41197d728df52000c126c",
      "filename": ".jshintrc",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/.jshintrc",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/.jshintrc",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/.jshintrc?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -1,11 +1,11 @@\n {\n   \"laxcomma\": true,\n-  \"strict\": true,\n   \"undef\": true,\n   \"unused\": true,\n   \"node\": true,\n   \"eqeqeq\": true,\n   \"trailing\": true,\n   \"indent\": 2,\n-  \"shelljs\": false\n+  \"esnext\": true,\n+  \"experimental\": [\"asyncawait\"]\n }"
    },
    {
      "sha": "c6212e83c3d2fa36f32f68b72686fcc1aa7079b5",
      "filename": ".npmignore",
      "status": "modified",
      "additions": 0,
      "deletions": 10,
      "changes": 10,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/.npmignore",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/.npmignore",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/.npmignore?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -1,16 +1,6 @@\n assets/\n submodules/\n-bin/publish.sh\n-reset.sh\n-reset.bat\n-bin/test.sh\n-sample-code/\n test/\n-lib/devices/android/bootstrap/bin/\n-lib/devices/android/bootstrap/target/\n-lib/devices/android/bootstrap/local.properties\n-lib/devices/android/bootstrap/project.properties\n-lib/devices/android/bootstrap/.classpath\n _vimrc_local.vim\n *.swp\n *.swo"
    },
    {
      "sha": "4a50eb45f66e0fe770609c9645e7cf43a1d2e66d",
      "filename": ".travis.yml",
      "status": "added",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/.travis.yml",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/.travis.yml",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/.travis.yml?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -0,0 +1,7 @@\n+language: node_js\n+node_js:\n+  - \"5\"\n+  - \"4\"\n+  - \"0.12\"\n+after_success:\n+  - gulp coveralls"
    },
    {
      "sha": "1e79a1adc1decb397ac04901e350de277237e9e6",
      "filename": "AUTHORS",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/AUTHORS",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/AUTHORS",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/AUTHORS?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -14,6 +14,7 @@ Robin Keller <robinthekeller@gmail.com>\n Adam Christian <adam.christian@gmail.com>\n Jonathan Lipps <jlipps@gmail.com>\n Sebastian Tiedtke <sebastiantiedtke@gmail.com>\n+Christian Bromann <mail@christian-bromann.com>\n Jeremy Avnet <>\n Bernard Kobos <bkobos@extensa.pl>\n Santiago Suarez Ordoñez <santiycr@gmail.com>"
    },
    {
      "sha": "bf6f678def2a5481f481529f9b1d83e11fdadff1",
      "filename": "CHANGELOG.md",
      "status": "modified",
      "additions": 195,
      "deletions": 3,
      "changes": 198,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/CHANGELOG.md",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/CHANGELOG.md",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/CHANGELOG.md?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -1,4 +1,184 @@\n-CHANGES IN VERSION 1.4\n+CHANGES IN VERSION 1.5 (from 1.4.16)\n+======================================\n+\n+*NOTE*: Appium 1.5 is a complete rewrite of Appium from the ground up. Every\n+effort has been made to avoid any breaking changes but caution should be\n+exercised. Please let us know on GitHub if you notice any issues with your\n+tests.\n+\n+#### General\n+- Appium now requires Node 0.12 as a minimum Node version\n+- Deprecate server arguments that are also desired capabilities. Instead, add\n+  a `--default-capabilities` argument which takes a JSON string of capabilities\n+  that will be the default for any session. E.g., `--default-capabilities '{\"launchTimeout\": 60000}'`\n+- Various docs and contributing docs updates (including a code of conduct for\n+  the project)\n+- Add capability validation on the protocol and driver level. Along with this\n+  we have tightened up requirements on capability values so that they can be\n+  strictly validated. For example, before you were able to send in a string\n+  value of `\"180\"` for the `newCommandTimeout` capability. Now you must send in\n+  an actual JSON number, e.g., `180`.\n+- Remove the `autoLaunch` capability since it added a significant\n+  amount of complexity to the startup flow and Appium shouldn't be responsible\n+  for this kind of use case\n+- Remove long-deprecated `name` locator strategy\n+\n+#### iOS\n+- add Tapster support for some more touch methods\n+- iPhone 6 + 6S support\n+- iOS 9.3 support\n+\n+#### Android\n+- enable navigating to an android URI via the set url driver methods, e.g.,\n+  driver.get('content://contacts/people/1')\n+- fix some adb issues in Windows (e.g., `signWithCustomCert`, sdk binary names)\n+- fix issue with UIWatcher ssl certificate errors\n+- if you want to install all chromedrivers, use --chromedriver-install-all; if\n+  you want to install a specific chromedriver version, use\n+  --chromedriver-version=\"$VER\"\n+- `driver.closeApp` no longer runs through the shutdown routine; it simply\n+  force-stops the app\n+- The `ANDROID_ADB_SERVER_PORT` environment variable has been removed in favor\n+  of the `adbPort` desired capability, which does the same thing.\n+\n+#### Non-exhaustive examples of internal changes\n+- see the [developer's\n+  overview](/docs/en/contributing-to-appium/developers-overview.md) for\n+  a fuller description of Appium 1.5 from a developer's perspective\n+- get rid of reset.sh and various other appium build tools in favor of a simple\n+  npm install\n+- split apart Appium into various smaller modules each with their own\n+  repositories and NPM packages\n+- use gulp instead of grunt\n+- use babel to transpile from es2015+ to standard es5 code\n+- get rid of .appiumconfig.json\n+\n+CHANGES IN VERSION 1.4.16 (from 1.4.15)\n+===================================\n+\n+#### iOS\n+- fix for safari and webview issues for 9.2\n+\n+CHANGES IN VERSION 1.4.15 (from 1.4.14)\n+===================================\n+\n+#### iOS\n+- fix for safari and webview issues in iOS9+\n+\n+CHANGES IN VERSION 1.4.14 (from 1.4.13)\n+===================================\n+\n+#### iOS\n+- support for iOS9.2\n+- fix for webview, resolving context issues in iOS9+\n+\n+#### Selendroid\n+- upgrade to Selendroid 0.17.0.\n+\n+CHANGES IN VERSION 1.4.13 (from 1.4.12)\n+===================================\n+\n+#### Chromedriver\n+- Setting appium-chromedriver version to 2.3.2 as it is stable on Node version 0.10.32\n+\n+CHANGES IN VERSION 1.4.12 (from 1.4.11)\n+===================================\n+\n+#### iOS\n+- support for iOS9.1\n+- fix for iOS simulator with similar device names on Xcode 7\n+- fix to idevicelog (real device) to record logs only for device under test\n+\n+CHANGES IN VERSION 1.4.11 (from 1.4.10)\n+===================================\n+\n+#### iOS\n+- fix for iOS simulator selector for Xcode 7\n+- fix for selecting default device for iOS9\n+\n+CHANGES IN VERSION 1.4.10 (from 1.4.9)\n+===================================\n+\n+#### General\n+- fixed bug in a config file accidentally published in version 1.4.9\n+\n+CHANGES IN VERSION 1.4.9 (from 1.4.8)\n+===================================\n+\n+#### iOS\n+- support for iOS9 and xcode 7\n+- at this point instruments-without-delay is not supported for xcode-7\n+\n+CHANGES IN VERSION 1.4.8 (from 1.4.7)\n+===================================\n+\n+#### General\n+- fix for Windows users! Now the system architecture is properly detected, npm installs should work again\n+\n+#### Chromedriver / Android hybrid\n+- fix for an issue in responding to `/status` api endpoint, this is used heavily by Selenium grid\n+\n+CHANGES IN VERSION 1.4.7 (from 1.4.6)\n+===================================\n+\n+#### Chromedriver / Android hybrid\n+- fix for problem in downstream jsonwp-proxy; now sessionId returned is replaced\n+  with sessionId present in url(original sessionId). Fixed this in appium-jsonwp-proxy 1.2.3\n+\n+CHANGES IN VERSION 1.4.6 (from 1.4.5)\n+===================================\n+\n+#### General\n+- this is a republish because of a misconfiguration before 1.4.5 got published\n+  resulting in a server startup failure\n+\n+\n+CHANGES IN VERSION 1.4.5 (from 1.4.4)\n+===================================\n+\n+#### General\n+- fix problem with npm shrinkwrap that caused Appium not to start\n+\n+\n+CHANGES IN VERSION 1.4.4 (from 1.4.3)\n+===================================\n+\n+#### Chromedriver / Android hybrid\n+- fix a problem in downstream appium-chromedriver; no longer rely on async\n+  methods returning objects of the Promise type. This was causing undefined\n+  errors when running Chromedriver/hybrid tests.\n+\n+\n+CHANGES IN VERSION 1.4.3 (from 1.4.2)\n+===================================\n+\n+#### iOS\n+- update the appium-instruments dependency with working subdeps\n+\n+\n+CHANGES IN VERSION 1.4.2 (from 1.4.1)\n+===================================\n+\n+#### General\n+- update ES6-based dependencies which got bit by a breaking Regenerator\n+  change\n+\n+#### iOS\n+- keep track of the correct app ID for Safari webviews (fixes problems in\n+  finding the webview for iOS)\n+\n+#### Android\n+- fix sendKeys and clear for Samsung devices\n+\n+\n+CHANGES IN VERSION 1.4.1 (from 1.4)\n+===================================\n+\n+#### Chromedriver\n+- have the appium-chromedriver manage the chromedriver binary download/install\n+\n+\n+CHANGES IN VERSION 1.4 (from 1.3.7)\n ======================================\n \n #### General\n@@ -7,10 +187,15 @@ CHANGES IN VERSION 1.4\n - updated sample code\n - updated documentation\n - updated test suite\n+- deprecate node 0.10\n \n #### iOS\n-- Support for iOS 8.3\n-- fix for issues relating to finding xcode folder\n+- support for iOS 8.3\n+- deprecate iOS 6.1 and iOS 7.0 (support will be removed soon, probably 1.5)\n+- deprecate Xcodes less than 6.3 (moving to support of latest versions only,\n+  and Xcode 6.3+ together allows automation of all supported iOS versions). The\n+  only exception to this is the combination of Xcode 6.0.1 + iOS 8.0.\n+- fix for issues relating to finding xcode folder and Info.plist\n - new sever flag `--instruments <path>` to specify custom path to instruments commandLine tool\n - fix for getOrientation\n - fix for iOS crash log retrieval\n@@ -24,17 +209,24 @@ CHANGES IN VERSION 1.4\n - new capability `disableAndroidWatchers`\n - deprecated capability `stopAppOnReset`\n - new capability `dontStopAppOnReset`\n+- fix a crash possibly encountered during extracting app strings\n+- new server argument `suppress-adb-kill-server`\n+- fix issue with `keys()`; now it correctly targets currently-focused element\n \n #### Selendroid\n - Support for installApp, isAppInstalled and removeApp\n \n #### Android+Chrome\n - Chormedriver version updated to 2.15\n - fix for driver.quit()\n+- use the correct ADB path already identified by Appium\n \n #### iOS+Safari\n - fix for handling real device object\n - fix for safariAllowPopups for iOS 8.x\n+- reduce logging in remote debugger for real devices, and don't use console.log\n+- fix issues with SafariLauncher on real devices\n+- fix execute_async so that it now works at all\n \n CHANGES IN VERSION 1.3.7\n ======================================"
    },
    {
      "sha": "f9ea64bb977a01c74727b358c93d12e9f19c0b56",
      "filename": "CONDUCT.md",
      "status": "added",
      "additions": 48,
      "deletions": 0,
      "changes": 48,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/CONDUCT.md",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/CONDUCT.md",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/CONDUCT.md?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -0,0 +1,48 @@\n+## Code of Conduct\n+\n+### What is this code of conduct for?\n+\n+Appium is a piece of technology, but **the core of the Appium community is the people in it**. As such, we are committed to providing a friendly, safe and welcoming environment for all, regardless of gender, gender identity and expression, sexual orientation, ability, physical appearance, body size, race, age, socioeconomic status, religion (or lack thereof), or other marginalized aspect of comunity members. We expect all members of the Appium community to abide by this Code of Conduct whenever interacting in Appium venues (pull requests, GitHub issues, 1-1 or group chat, meetups, conferences, etc...)\n+\n+### Examples of inappropriate behavior\n+\n+Because we come from a variety of backgrounds, we don't want to assume that everyone has the same assumptions about what is and isn't appropriate. Here are some examples of inappropriate behavior that are incompatible with our community's ethos:\n+\n+* Spamming, trolling, intentionally disrupting conversations, or irrelevant solicitation or advertisement\n+* Making demeaning or discriminatory comments\n+* Making negative assumptions about someone's background, abilities, or intentions\n+* Harassing or stalking individuals (online or in person)\n+* Giving someone unwelcome sexual attention or making unwelcome physical contact (in the case of an IRL event)\n+* Sharing sexual images or using sexually explicit language\n+\n+In general: treat others how you would like to be treated, were you in their place. Don't be a jerk. _Do_ ask questions. _Do_ keep conflicts productively focused on technical issues. _Do_ think before you speak; remember that what is perceived as a funny witticism in your group of friends might be hurtful or reinforce hurtful stereotypes in the context of our diverse online community. _Do_ remember that we are all people, not robots, and all equally deserving of sensitivity and respect. (If and when robots join our community, let's treat them with respect too!)\n+\n+\n+### What will organizers do about inappropriate behavior?\n+\n+If we notice you doing or saying something inappropriate, an organizer will explain why it's inappropriate and ask you to stop. We won't demonize or vilify you. But please do stop the inappropriate behavior so we can get back to writing and discussing code in a safe environment. If you have philosophical disagreements about what's actually inappropriate, please take them to a separate public or private conversation with an Appium maintainer so we don't turn pull requests into an ethics debate.\n+\n+If you keep doing unacceptable things, we'll likely ban you, report you to GitHub, or take other appropriate action.\n+\n+### What if I see or am subject to what feels like inappropriate behavior?\n+\n+Let us know! Please notify a community organizer as soon as possible. Full contact information is listed in the [Contact Info](#contact-info) section of this document. All communications will be kept strictly confidential, unless otherwise required by law. No issue will be considered too inconsequential or unimportant for us to have a conversation about.\n+\n+### Contact Info\n+\n+If you need to report an incident, please contact any of the following organizers directly:\n+\n+* Isaac Murchie [email](mailto:isaac@saucelabs.com) [twitter](https://twitter.com/imurchie)\n+* Jonathan Lipps [email](mailto:jlipps@saucelabs.com) [twitter](https://twitter.com/jlipps)\n+\n+### Credit, License, and Attribution\n+\n+This Code of Conduct is distributed under a [Creative Commons Attribution-ShareAlike license](http://creativecommons.org/licenses/by-sa/3.0/).\n+\n+It's inspired among other things by:\n+* [Citizen Code of Conduct](http://citizencodeofconduct.org/)\n+* [npmjs](https://www.npmjs.com/policies/conduct)\n+* [Geek Feminism](http://geekfeminism.wikia.com/wiki/Conference_anti-harassment/Policy)\n+* [Ashe Dryden](http://www.ashedryden.com/blog/codes-of-conduct-101-faq)\n+* [Model View Culture](https://modelviewculture.com/issues/events)\n+* [Open Source & Feelings](http://osfeels.com/conduct)."
    },
    {
      "sha": "8d91ca281e86eb4fd31f9e2d3beea65690f363fd",
      "filename": "CONTRIBUTING.md",
      "status": "modified",
      "additions": 65,
      "deletions": 7,
      "changes": 72,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/CONTRIBUTING.md",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/CONTRIBUTING.md",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/CONTRIBUTING.md?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -1,12 +1,70 @@\n # Contributing to Appium\n \n-Fork the project, make a change, and send a pull request! Please have a look at our\n-[Style Guide](/docs/en/contributing-to-appium/style-guide.md) before getting to work.\n-Please make sure the unit and functional tests pass before sending a pull request; for more\n-information on how to run tests, keep reading!\n+There are a lot of different ways to contribute to Appium. See below for\n+everything you can do and the processes to follow for each contribution method.\n+Note that no matter how you contribute, your participation is governed by our\n+[Code of Conduct](CONDUCT.md).\n \n-Make sure you read and follow the setup instructions in the README first.\n+### Make changes to the Appium code or docs\n \n-### Running Appium from Source and doing dev on Appium\n+Fork the project, make a change, and send a pull request! Please have a look at\n+our [Style Guide](/docs/en/contributing-to-appium/style-guide-2.0.md) before\n+getting to work.  Please make sure the unit and functional tests pass before\n+sending a pull request; for more information on how to run tests, keep reading!\n \n-This is all detailed in our [running from source doc](/docs/en/contributing-to-appium/appium-from-source.md)\n+Make sure you read and follow the setup instructions in the README first. And note\n+that all participation in the Appium community (including code submissions) is\n+governed by our [Code of Conduct](CONDUCT.md). Then, have a look at our\n+[running from source doc](/docs/en/contributing-to-appium/appium-from-source.md) for more\n+information on how to get set up to run tests and start slinging code.\n+\n+You will probably also want to have a look at this more in-depth [Developer's\n+Overview](/docs/en/contributing-to-appium/developers-overview.md) of the Appium\n+project, how Appium is architected, how to make changes to modules, and so on.\n+\n+Finally, before we accept your code, you will need to have signed our\n+[Contributor License\n+Agreement](https://docs.google.com/forms/d/1lOfXRw_0VCk7gYzjj4WLetGu7yelDVo5LWh0z7pGftE/viewform).\n+\n+### Become an Appium Triager\n+\n+You can help us manage our issue tracker! All you need is enough familiarity\n+with Appium to try and reproduce bugs. We triage issues by having conversations\n+with the issue creator and then either closing the issue or moving it into the\n+[Bugs](https://github.com/appium/appium/milestones/Bugs) or\n+[Features](https://github.com/appium/appium/milestones/Features) milestone. We\n+use these buckets as the backlogs for our upcoming releases.\n+\n+We use this \"algorithm\" for triaging issues, which anyone can jump in and follow:\n+\n+1. If issue is a feature request, discuss amongst Appium devs.\n+    * If we decide to build it, add to the Features milestone.\n+    * If we decide not to build it, just close.\n+2. If issue is a bug report, attempt to verify\n+    * If it's a duplicate, close with link to bug already reported.\n+    * If it ultimately can't be verified, close until we have enough information to verify (e.g., in most cases we need a full set of Appium logs to help diagnose an issue).\n+    * If the user hasn't provided enough information, keep asking for enough information to verify.\n+    * If it's a verified new bug, add it to the Bugs milestone.\n+    * If we have been waiting for a reply from the user for over 3 weeks, close.\n+\n+If you're interested in joining our triage rotation, contact\n+[@jlipps](https://github.com/jlipps) or\n+[@imurchie](https://github.com/imurchie).\n+\n+### Help out on our forums\n+\n+We can always use help on our forums at\n+[discuss.appium.io](https://discuss.appium.io)! Hop on over and see if there\n+are any questions that you can answer.\n+\n+### Submit bug reports or feature requests\n+\n+Just use the GitHub issue tracker to submit your bug reports and feature\n+requests. If you are submitting a bug report, please remember to include:\n+\n+* Your complete Appium log (as a [gist](https://gist.github.com)---do *NOT* paste the whole thing into the issue description). This will tell us the exact version of Appium and the exact capabilities you are using, so you don't have to.\n+* Your relevant client code, if you are able to share it (again a gist is most useful).\n+* Any other information helpful in trying to reproduce your issue.\n+\n+In general, the less work we have to do to reproduce a bug, the faster we will\n+fix it. So please include as much information as possible up front!"
    },
    {
      "sha": "b6837b3d74edc3beb0698f615ee49a8a6bd63334",
      "filename": "GOVERNANCE.md",
      "status": "added",
      "additions": 71,
      "deletions": 0,
      "changes": 71,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/GOVERNANCE.md",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/GOVERNANCE.md",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/GOVERNANCE.md?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -0,0 +1,71 @@\n+# Appium Project Governance\n+\n+The Appium Project wants as much as possible to operate using procedures that\n+are fair, open, inviting, and ultimately good for the community. For that\n+reason we find it valuable to codify some of the ways that the Project goes\n+about its day-to-day business. We want to make sure that no matter who you are,\n+you have the opportunity to contribute to Appium. We want to make sure that no\n+one corporation can exert undue influence on the community or hold the Project\n+hostage. And likewise we want to make sure that corporations which benefit from\n+Appium are also incentivized to give back.\n+\n+### The Technical Committee\n+\n+The project is officially led by a Technical Committee (TC), currently\n+consisting of [@jlipps](https://github.com/jlipps),\n+[@bootstraponline](https://github.com/bootstraponline),\n+[@penguinho](https://github.com/penguinho), and\n+[@dandoveralba](https://github.com/dandoveralba), who all represent different\n+companies and different types of contribution to the Appium Project. The TC is\n+responsible for high-level decisions (like establishing a feature roadmap,\n+accepting sponsorship, organizing conferences, etc...), adjudicating conflicts\n+between members of the community, and making changes to the project's\n+governance processes.\n+\n+* Membership in the TC is granted by unanimous vote of current TC members.\n+* TC members can step down at any time.\n+* No more than 1/4 of TC members may belong to the same company.\n+* Changes to project governance require unanimous vote of the TC.\n+\n+### Project Committers\n+\n+Most of the project maintenance is handled by committers, community members who\n+have been granted commit access to the Appium organization on GitHub. The\n+responsibilities of committers include: reviewing and merging pull requests,\n+walking through changes with developers, weighing in on architectural issues,\n+and so on.\n+\n+* Any two TC members can decide to make someone a project committer, providing that person has shown an appropriate understanding of the Appium codebase through prior contributions of code.\n+* In general any committer can review and merge a PR. In general committers should only merge code they are qualified to review, which might entail pinging another committer who has greater ownership over a specific code area.\n+* Debates between committers about whether code should be merged should happen in GitHub pull requests.\n+* Proposals for large changes to the project's code (architectural changes, etc...) should be brought forward as a GitHub issue (with the label `Proposal`), and all committers should be pinged so they can weigh in on the discussion if desired. Substantial changes, whether in proposal stage or in pull request stage should be signed off on by 1 TC member and at least 2 other committers. To assist in the discussion, a small proof of concept can be undertaken on a subset of the Appium ecosystem and raised as a strawman PR, to give flesh to the proposal and make discussion more helpfully concrete.\n+* In general disputes about code should be resolved by discussion, not votes. If there is substantial disagreement, aim for consensus. If that is not possible, committers can bring the dispute to the TC for a vote, with the outcome determined by a majority.\n+* Any committer can decide to close a PR or issue if they determine the change doesn't suit the project.\n+* Appium has a large ecosystem of repositories. Some are 'core' in the sense of being central subpackages with a lot of traffic like `appium/appium` or `appium/appium-ios-driver`. Others are 'peripheral' in the sense of receiving few changes, being maintained by 1 person or no one, etc..., like `appium/ruby_lib` or `appium/appium_thor` For 'core' repos, committers should not merge their own code straightaway. Like all contributors they should open a PR and get a +1 from another committer. For 'peripheral' repos for which they are the sole maintainer or for which they have a good understanding, it is obtuse to insist on another contributor's +1 and this rule should be relaxed in that case. In sum: use good judgment and don't ram code through without a review when you can help it.\n+\n+The current committers are (in addition to the TC members above):\n+[imurchie](https://github.com/imurchie), [sebv](https://github.com/sebv),\n+[Jonahss](https://github.com/Jonahss), [moizjv](https://github.com/moizjv),\n+[scottdixon](https://github.com/scottdixon),\n+[Astro03](https://github.com/Astro03) (appium-dot-exe),\n+[edgy360](https://github.com/edgy360) (appium-dot-app).\n+\n+### Contributors\n+\n+Other, less formal, kinds of contribution are outlined in our\n+[CONTRIBUTING](/CONTRIBUTING.md) doc.\n+\n+### Sponsorship\n+\n+The Appium project welcomes sponsorship of various organizations. Specific\n+details are not yet available but in general we will accept monetary donations,\n+contribution of code, contribution of dedicated committers, or donations of\n+other goods or service (internet hosting, etc...). To begin the conversation,\n+reach out to one of the TC members.\n+\n+### Raising Issues Related to Governance\n+\n+This governance model necessarily leaves many situations unspecified. If\n+questions arise as to how a given situation should proceed according to the\n+overall goals of the project, the best thing to do is to open a GitHub issue\n+and ping the TC members."
    },
    {
      "sha": "7ca50ea9b76ca0cf19dc11f3c902ed8d92019057",
      "filename": "Gruntfile.js",
      "status": "removed",
      "additions": 0,
      "deletions": 127,
      "changes": 127,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/Gruntfile.js",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/Gruntfile.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/Gruntfile.js?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,127 +0,0 @@\n-\"use strict\";\n-\n-var path = require('path')\n-  , gruntHelpers = require('./grunt-helpers.js')\n-  , authorize = gruntHelpers.authorize\n-  , tail = gruntHelpers.tail\n-  , buildApp = gruntHelpers.buildApp\n-  , buildSafariLauncherApp = gruntHelpers.buildSafariLauncherApp\n-  , signApp = gruntHelpers.signApp\n-  , setupAndroidBootstrap = gruntHelpers.setupAndroidBootstrap\n-  , setupAndroidApp = gruntHelpers.setupAndroidApp\n-  , buildAndroidBootstrap = gruntHelpers.buildAndroidBootstrap\n-  , buildSelendroidServer = gruntHelpers.buildSelendroidServer\n-  , buildAndroidApp = gruntHelpers.buildAndroidApp\n-  , buildSelendroidAndroidApp = gruntHelpers.buildSelendroidAndroidApp\n-  , fixSelendroidAndroidManifest = gruntHelpers.fixSelendroidAndroidManifest\n-  , installAndroidApp = gruntHelpers.installAndroidApp\n-  , generateServerDocs = gruntHelpers.generateServerDocs\n-  , generateAppiumIo = gruntHelpers.generateAppiumIo\n-  , setDeviceConfigVer = gruntHelpers.setDeviceConfigVer\n-  , setBuildTime = gruntHelpers.setBuildTime\n-  , getSampleCode = gruntHelpers.getSampleCode\n-  , setGitRev = gruntHelpers.setGitRev\n-  , getGitRev = require('./lib/helpers').getGitRev;\n-\n-var GULP_BIN = 'node_modules/.bin/gulp';\n-\n-module.exports = function (grunt) {\n-  grunt.initConfig({\n-  mochaTest: {\n-      appiumutils: ['test/functional/appium/appiumutils.js']\n-    }\n-  , mochaTestConfig: {\n-      options: {\n-        timeout: 60000,\n-        reporter: 'spec'\n-      }\n-    }\n-  , maxBuffer: 2000 * 1024\n-  , exec: {\n-      'gulp-test-unit': GULP_BIN + ' test-unit --color',\n-      'gulp-jshint': GULP_BIN + ' jshint --color',\n-      'gulp-jscs': GULP_BIN + ' jscs --color',\n-      'gulp-lint': GULP_BIN + ' lint --color'\n-    },\n-  });\n-\n-  grunt.loadNpmTasks('grunt-mocha-test');\n-  grunt.loadNpmTasks('grunt-exec');\n-  grunt.registerTask('jshint', 'exec:gulp-jshint');\n-  grunt.registerTask('jscs', 'exec:gulp-jscs');\n-  grunt.registerTask('lint', 'exec:gulp-lint');\n-  grunt.registerTask('test', 'exec:gulp-test-unit');\n-  grunt.registerTask('unit', 'exec:gulp-test-unit');\n-  grunt.registerTask('default', ['test']);\n-  grunt.registerTask('travis', ['jshint','jscs', 'unit']);\n-  grunt.registerTask('buildApp', \"Build the test app\", function (appDir, sdk) {\n-    buildApp(appDir, this.async(), sdk);\n-  });\n-  grunt.registerTask('buildSafariLauncherApp', \"Build the SafariLauncher app\", function (sdk, xcconfig) {\n-    buildSafariLauncherApp(this.async(), sdk, xcconfig);\n-  });\n-  grunt.registerTask('signApp', \"Sign the test app\", function (certName) {\n-    signApp(\"TestApp\", certName, this.async());\n-  });\n-  grunt.registerTask('authorize', \"Authorize developer\", function (insecure) {\n-    authorize(grunt, insecure, this.async());\n-  });\n-  grunt.registerTask('log', \"Tail appium.log\", function () {\n-    tail(grunt, path.resolve(__dirname, \"appium.log\"), this.async());\n-  });\n-  grunt.registerTask('configAndroidBootstrap', function () {\n-    setupAndroidBootstrap(grunt, this.async());\n-  });\n-  grunt.registerTask('buildAndroidBootstrap', function () {\n-    buildAndroidBootstrap(grunt, this.async());\n-  });\n-  grunt.registerTask('buildSelendroidServer', function () {\n-    buildSelendroidServer(this.async());\n-  });\n-  grunt.registerTask('fixSelendroidAndroidManifest', function () {\n-    var destDir = path.resolve(__dirname, \"build\", \"selendroid\");\n-    var dstManifest = path.resolve(destDir, \"AndroidManifest.xml\");\n-    fixSelendroidAndroidManifest(dstManifest, this.async());\n-  });\n-  grunt.registerTask('configAndroidApp', function (appName) {\n-    setupAndroidApp(grunt, appName, this.async());\n-  });\n-  grunt.registerTask('buildAndroidApp', function (appName) {\n-    buildAndroidApp(grunt, appName, this.async());\n-  });\n-  grunt.registerTask('buildSelendroidAndroidApp', function (appName) {\n-    buildSelendroidAndroidApp(grunt, appName, this.async());\n-  });\n-  grunt.registerTask('installAndroidApp', function (appName) {\n-    installAndroidApp(grunt, appName, this.async());\n-  });\n-  grunt.registerTask('docs', function () {\n-    generateServerDocs(grunt, this.async());\n-  });\n-  grunt.registerTask('generateAppiumIo', function () {\n-    generateAppiumIo(grunt, this.async());\n-  });\n-  grunt.registerTask('setConfigVer', function (device) {\n-    setDeviceConfigVer(grunt, device, this.async());\n-  });\n-  grunt.registerTask('setBuildTime', function () {\n-    setBuildTime(grunt, this.async());\n-  });\n-  grunt.registerTask('getSampleCode', function (hardcore) {\n-    if (typeof hardcore !== \"undefined\" && hardcore === \"hardcore\") {\n-      hardcore = true;\n-    }\n-    getSampleCode(grunt, hardcore, this.async());\n-  });\n-  grunt.registerTask('setGitRev', function (rev) {\n-    var done = this.async();\n-    if (typeof rev === \"undefined\") {\n-      getGitRev(function (err, rev) {\n-        if (err) throw err;\n-        setGitRev(grunt, rev, done);\n-      });\n-    } else {\n-      setGitRev(grunt, rev, done);\n-    }\n-  });\n-};"
    },
    {
      "sha": "1e966041059f1c21560b492d32c9e3f25609f921",
      "filename": "LICENSE",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/LICENSE",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/LICENSE",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/LICENSE?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -1,4 +1,4 @@\n-Copyright 2012-2013 Appium Committers\n+Copyright 2012-2016 Sauce Labs, Inc.\n \n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License."
    },
    {
      "sha": "c74cbda6037f4abbc37f51a0f697354554777e21",
      "filename": "README.md",
      "status": "modified",
      "additions": 15,
      "deletions": 11,
      "changes": 26,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/README.md",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/README.md",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/README.md?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -12,7 +12,6 @@\n \n Appium is an open source, cross-platform test automation tool for native, hybrid and mobile web apps, tested on simulators (iOS, FirefoxOS), emulators (Android), and real devices (iOS, Android, FirefoxOS).\n \n-**Note:** we have just recently released Appium 1.0. If you already have a bunch of Appium tests, you might want to check out the [Migrating to 1.0](/docs/en/advanced-concepts/migrating-to-1-0.md) doc!\n \n ### Supported Platforms\n \n@@ -50,21 +49,22 @@ Your environment needs to be setup for the particular mobile platforms that you\n want to run tests on. See below for particular platform requirements.\n \n If you want to run Appium via an `npm install`, hack with or contribute to Appium, you will need\n-[node.js and npm](http://nodejs.org) 0.10 or greater (use [n](https://github.com/visionmedia/n) or\n+[node.js and npm](http://nodejs.org) 0.12 or greater (use [n](https://github.com/visionmedia/n) or\n `brew install node` to install Node.js. Make sure you have not installed Node or Appium with `sudo`,\n otherwise you'll run into problems). We recommend the latest stable version.\n \n-To verify that all of Appium's dependencies are met you can use `appium-doctor`.\n-Run `appium-doctor` and supply the `--ios` or `--android` flags to verify that all\n-of the dependencies are set up correctly. If running from source, you may have to use\n-`./bin/appium-doctor.js` or `node bin/appium-doctor.js`.\n+To verify that all of Appium's dependencies are met you can use\n+`appium-doctor`.  Install it with `npm install -g appium-doctor` (or run it\n+from [source](https://github.com/appium/appium-doctor)), then run\n+`appium-doctor` and supply the `--ios` or `--android` flags to verify that all\n+of the dependencies are set up correctly. \n \n You also need to download the Appium client for your language so you can write tests. The Appium clients are simple extensions to the WebDriver clients. You can see the list of clients and links to download instructions at the [Appium clients list](/docs/en/about-appium/appium-clients.md).\n \n #### iOS Requirements\n \n-* Mac OS X 10.7 or higher, 10.9.2 recommended\n-* XCode &gt;= 4.6.3, 5.1.1 recommended\n+* Mac OS X 10.10 or higher, 10.11.1 recommended\n+* XCode &gt;= 6.0, 7.1.1 recommended\n * Apple Developer Tools (iPhone simulator SDK, command line tools)\n * [Ensure you read our documentation on setting yourself up for iOS testing!](/docs/en/appium-setup/running-on-osx.md)\n \n@@ -88,14 +88,14 @@ You can run an Appium server using node.js or using the application, see below.\n \n #### Using Node.js\n \n-```center\n+```\n $ npm install -g appium\n-$ appium &\n+$ appium\n ```\n \n #### Using the App\n \n-* [Download the Appium app](https://github.com/appium/appium/releases)\n+* [Download the Appium app](https://bitbucket.org/appium/appium.app/downloads/)\n * Run it!\n \n ### Writing Tests for Appium\n@@ -133,6 +133,10 @@ Gecko-based platforms.\n Please take a look at our [contribution documentation](CONTRIBUTING.md)\n for instructions on how to build, test and run Appium from source.\n \n+### Roadmap\n+\n+Interested in where Appium is heading in the future? Check out the [Roadmap](ROADMAP.md)\n+\n ### Project Credits & Inspiration\n \n [Credits](/docs/en/contributing-to-appium/credits.md)"
    },
    {
      "sha": "c27cf2605a2be06db957e0aa6b70058c22cb4c0e",
      "filename": "ROADMAP.md",
      "status": "added",
      "additions": 49,
      "deletions": 0,
      "changes": 49,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/ROADMAP.md",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/ROADMAP.md",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/ROADMAP.md?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -0,0 +1,49 @@\n+Appium Roadmap\n+---------------\n+\n+This document is designed to be a living record of the current and projected\n+priorities for the Appium project. It is, of course, always subject to change\n+and exists solely to give the community an idea of where we're going. The\n+roadmap is set by the Appium core team. If you have feature suggestions for\n+Appium, please submit a [GitHub issue](https://github.com/appium/appium/issues)\n+and, if of sufficient size and approved by the team, it will be added here. If\n+you have concerns about the roadmap, you can e-mail the Appium devs at\n+`appium-developers@googlegroups.com` or raise a GitHub issue. Note that\n+bugfixes and miscellaneous features are not considered \"roadmap projects\", and\n+will be addressed in the due course of normal Appium development. This page\n+exists to outline large-scale future plans for Appium.\n+\n+## Current Roadmap Projects\n+\n+| Project | Description | ETD | Projected Appium Release |\n+|---------|-------------|-----|--------------------------|\n+|[Architecture Overhaul](https://github.com/appium/appium/issues/5169)|Appium's architecture has grown unwieldy enough that adding new features and preventing regressions has become difficult. A rearchitecture is in order to solve these issues as well as migrate the codebase to a form of JS much easier to work in and understand.|1/2016|1.5|\n+|XCUITest backend integration|Instruments + UIAutomation has been working well for many Appium users, but requires crazy workarounds to deal with bugs which remain unfixed on the Apple side. We should explore Apple's newer technology, XCUITest, in order to see if the overall experience is more stable. This new backend would exist alongside the UIAutomation backend.|3/2016?|Beta in 1.6?|\n+|UiAutomator2 backend integration|Google has released [UiAutomator 2](http://developer.android.com/reference/android/support/test/uiautomator/package-summary.html), and it promises to fix some issues and limitations with the previous UiAutomator support. We will build this inside of Selendroid since it requires an instrumentation context.|3/2016?|TBD|\n+|iOS 9.3 support|Appium should support iOS 9.3 / Xcode 7.3|2/2016|1.6?||\n+\n+## Upcoming Projects (in rough order of priority)\n+\n+| Project | Description |\n+|---------|-------------|\n+|Apple Watch support|Appium should support Apple Watch apps via the Watch simulator|\n+|Onboarding Overhaul|The current Appium docs leave a lot to be desired. The format is confusing (it would be better for API docs), the content is outdated, and many things are still undocumented. This project would go back to the drawing board in all of these areas and put together something genuinely helpful for the community, which hopefully reduces the kind of support issues we're currently flooded by.|\n+|New Appium GUIs|The current Appium GUIs (Appium.app and Appium.exe) have a number of issues. They aren't maintained by the core Appium team. They're written in Objective-C and C# respectively: two languages, and specifically, two languages other than Appium's core language. Because of this they lag behind the Appium server and are often broken. However, users love them primarily because of the Inspector feature (the thing that lets them graphically navigate their app), so we have to field a ton of complaints about these projects. There's an opportunity to start over. With [Electron](http://electron.atom.io/), we'd be able to take the new version of Appium we're working on and embed it directly inside a Node-based GUI app written using the languages and technologies the core team is experienced with. We'd have one codebase and could distribute the app on Mac, Windows, and Linux. The GUIs would become an official part of Appium's release cycle so they wouldn't be broken.|\n+|Unity3d backend POC|This is a research project to determine whether we can add some kind of support for 3d game automation, probably based on the Unity3d game development platform.|\n+|Dynamic Test App|Our current test applications (the ones used to test Appium's iOS and Android support) are not ideal. We use too many of them and the ones we use have a random hodgepodge of app SDK features, sometimes not enough to sufficiently test automation support. Using [Titanium](https://github.com/appcelerator/titanium_mobile), we can develop an app that allows us to inject whatever native code we need, as we need it. The app thus changes itself test-by-test to have whatever UI features we need for that particular test. It gives us much more fine-grained control over what we're testing. The app code would also be cross-platform and written in JS, which would make it easier for the core team to write and maintain.|\n+\n+## Projects Under Consideration (unprioritized)\n+\n+| Project | Description |\n+|---------|-------------|\n+|Windows Phone Support|There has been some work done on automating Windows Phone apps. We could take this all the way to integration with Appium in the form of a WindowsDriver.|\n+\n+## Completed Roadmap Projects\n+\n+| Project | Description | Completed | Appium Release | Notes |\n+|---------|-------------|-----------|----------------|-------|\n+|iOS 9.2 support|Appium should support iOS 9.2 / Xcode 7.2|11/2015|1.4.14||\n+|iOS 9.1 support|Appium should support iOS 9.1 / Xcode 7.1|10/2015|1.4.12||\n+|iOS 9.0 support|Appium should support iOS 9.0 / Xcode 7.0|10/2015|1.4.11||\n+|iOS 8.4 support|Appium should support iOS 8.4 / Xcode 6.2|5/2015|1.4.0||\n+|Appium CI|Appium has unique needs for Continuous Integration because of the highly specialized environments required (iOS simulators, Xcode, Android emulators, the Android SDK, etc...). We therefore need to create a custom CI solution (perhaps sitting underneath Cloudbees or some other OSS-friendly CI server) that can be used for all Appium projects which need integration tests.|5/2015|_N/A_|Usage instructions at [appium/appium-ci](https://github.com/appium/appium-ci)|"
    },
    {
      "sha": "4b238ecbda6e04e5b20725625e36c930f7d41c87",
      "filename": "assets/ApiDemos-debug.apk",
      "status": "removed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/assets/ApiDemos-debug.apk",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/assets/ApiDemos-debug.apk",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/assets/ApiDemos-debug.apk?ref=7ae8f99c7ea75a5af84960f63819580726892b75"
    },
    {
      "sha": "a07b8fb9827888d30463c63c18281ac9ef3cd997",
      "filename": "assets/Graphics/appium_logo_final.eps",
      "status": "removed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/assets/Graphics/appium_logo_final.eps",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/assets/Graphics/appium_logo_final.eps",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/assets/Graphics/appium_logo_final.eps?ref=7ae8f99c7ea75a5af84960f63819580726892b75"
    },
    {
      "sha": "a50464d32c183ed11fa127bbc8685372c0294802",
      "filename": "assets/InspectorImages/Overview.png",
      "status": "removed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/assets/InspectorImages/Overview.png",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/assets/InspectorImages/Overview.png",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/assets/InspectorImages/Overview.png?ref=7ae8f99c7ea75a5af84960f63819580726892b75"
    },
    {
      "sha": "e68c14b6b3e479ddbf4ae61e274764d943659d46",
      "filename": "assets/InspectorImages/Step1.png",
      "status": "removed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/assets/InspectorImages/Step1.png",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/assets/InspectorImages/Step1.png",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/assets/InspectorImages/Step1.png?ref=7ae8f99c7ea75a5af84960f63819580726892b75"
    },
    {
      "sha": "49aaf51636c9ed8cfcb180c4451885681d5430e7",
      "filename": "assets/InspectorImages/Step2.png",
      "status": "removed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/assets/InspectorImages/Step2.png",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/assets/InspectorImages/Step2.png",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/assets/InspectorImages/Step2.png?ref=7ae8f99c7ea75a5af84960f63819580726892b75"
    },
    {
      "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "filename": "assets/TestApp.app/PkgInfo",
      "status": "removed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/assets/TestApp.app/PkgInfo",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/assets/TestApp.app/PkgInfo",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/assets/TestApp.app/PkgInfo?ref=7ae8f99c7ea75a5af84960f63819580726892b75"
    },
    {
      "sha": "08aad51853cc3e09e626bacd56523251f7d408a2",
      "filename": "assets/TestApp.zip",
      "status": "removed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/assets/TestApp.zip",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/assets/TestApp.zip",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/assets/TestApp.zip?ref=7ae8f99c7ea75a5af84960f63819580726892b75"
    },
    {
      "sha": "13cb603641d459ce2a3ad5f42b0bceae802e3977",
      "filename": "assets/TestApp6.0.app.zip",
      "status": "removed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/assets/TestApp6.0.app.zip",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/assets/TestApp6.0.app.zip",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/assets/TestApp6.0.app.zip?ref=7ae8f99c7ea75a5af84960f63819580726892b75"
    },
    {
      "sha": "4c5c93a39ec0b100f6ecc10b7754a203d765a42e",
      "filename": "assets/TestApp6.1.app.zip",
      "status": "removed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/assets/TestApp6.1.app.zip",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/assets/TestApp6.1.app.zip",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/assets/TestApp6.1.app.zip?ref=7ae8f99c7ea75a5af84960f63819580726892b75"
    },
    {
      "sha": "ffe0ea709671073524a3e32c6f96dcce47f296b2",
      "filename": "assets/TestApp7.1.app.zip",
      "status": "removed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/assets/TestApp7.1.app.zip",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/assets/TestApp7.1.app.zip",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/assets/TestApp7.1.app.zip?ref=7ae8f99c7ea75a5af84960f63819580726892b75"
    },
    {
      "sha": "3434e6ff1f03c7f4a6497138bdd5e2d9655313e8",
      "filename": "assets/TestApp8.app.zip",
      "status": "removed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/assets/TestApp8.app.zip",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/assets/TestApp8.app.zip",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/assets/TestApp8.app.zip?ref=7ae8f99c7ea75a5af84960f63819580726892b75"
    },
    {
      "sha": "90315b4a7acc4ca1a392f5604a78a225a1545c15",
      "filename": "assets/UICatalog6.0.app.zip",
      "status": "removed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/assets/UICatalog6.0.app.zip",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/assets/UICatalog6.0.app.zip",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/assets/UICatalog6.0.app.zip?ref=7ae8f99c7ea75a5af84960f63819580726892b75"
    },
    {
      "sha": "a601562a1fead985f7facaf83477a50445474244",
      "filename": "assets/UICatalog6.1.app.zip",
      "status": "removed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/assets/UICatalog6.1.app.zip",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/assets/UICatalog6.1.app.zip",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/assets/UICatalog6.1.app.zip?ref=7ae8f99c7ea75a5af84960f63819580726892b75"
    },
    {
      "sha": "91181163551e4af7e16c234593532ef6e302fa7e",
      "filename": "assets/UICatalog7.1.app.zip",
      "status": "removed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/assets/UICatalog7.1.app.zip",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/assets/UICatalog7.1.app.zip",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/assets/UICatalog7.1.app.zip?ref=7ae8f99c7ea75a5af84960f63819580726892b75"
    },
    {
      "sha": "41554a2f7dd3f31186d01932e54920942ce21ec7",
      "filename": "assets/WebViewApp6.0.app.zip",
      "status": "removed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/assets/WebViewApp6.0.app.zip",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/assets/WebViewApp6.0.app.zip",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/assets/WebViewApp6.0.app.zip?ref=7ae8f99c7ea75a5af84960f63819580726892b75"
    },
    {
      "sha": "5b5ecb3c08babccbd0d7b63b29206f47845b9e46",
      "filename": "assets/WebViewApp6.1.app.zip",
      "status": "removed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/assets/WebViewApp6.1.app.zip",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/assets/WebViewApp6.1.app.zip",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/assets/WebViewApp6.1.app.zip?ref=7ae8f99c7ea75a5af84960f63819580726892b75"
    },
    {
      "sha": "404623a3140cfcd1147ed2455f85337e69809ada",
      "filename": "assets/WebViewApp7.1.app.zip",
      "status": "removed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/assets/WebViewApp7.1.app.zip",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/assets/WebViewApp7.1.app.zip",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/assets/WebViewApp7.1.app.zip?ref=7ae8f99c7ea75a5af84960f63819580726892b75"
    },
    {
      "sha": "571aafa78439020a17e65d2bfc51a28b63d5ad92",
      "filename": "assets/iwd4.zip",
      "status": "removed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/assets/iwd4.zip",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/assets/iwd4.zip",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/assets/iwd4.zip?ref=7ae8f99c7ea75a5af84960f63819580726892b75"
    },
    {
      "sha": "d90fb13e5d10ea643c875598e22ac2c5be4d0455",
      "filename": "bin/appium-doctor.js",
      "status": "removed",
      "additions": 0,
      "deletions": 109,
      "changes": 109,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/bin/appium-doctor.js",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/bin/appium-doctor.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/bin/appium-doctor.js?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,109 +0,0 @@\n-#!/usr/bin/env node\n-\"use strict\";\n-\n-var IOSChecker = require('../lib/doctor/ios.js').IOSChecker\n-  , AndroidChecker = require('../lib/doctor/android.js').AndroidChecker\n-  , DevChecker = require('../lib/doctor/dev.js').DevChecker\n-  , common = require(\"../lib/doctor/common.js\")\n-  , eol = require('os').EOL\n-  , async = require('async')\n-  , isMac = process.platform === 'darwin';\n-  // , isWindows = process.platform === 'win32';\n-\n-var argv = process.argv\n-  , doAndroid = argv.indexOf('--android') > -1\n-  , doIOS = argv.indexOf('--ios') > -1\n-  , doDev = argv.indexOf('--dev') > -1\n-  // , verbose = argv.indexOf('--verbose') > -1\n-  , broadcast = argv.indexOf('--port') > -1\n-  , port = null;\n-\n-if (broadcast) {\n-  port = argv[argv.indexOf(\"--port\") + 1];\n-}\n-\n-if (!doIOS && !doAndroid) {\n-  doIOS = isMac;\n-  doAndroid = true;\n-}\n-\n-var log = new common.Log(port);\n-\n-var runiOSChecks = function (cb) {\n-  if (doIOS) {\n-    if (!isMac) {\n-      log.fail(\"iOS Checks cannot be run on Windows.\");\n-      log.exitDoctor();\n-    }\n-    var iosChecker = new IOSChecker(log);\n-    log.comment(\"Running iOS Checks\");\n-    iosChecker.runAllChecks(function (err) {\n-      if (!err) {\n-        log.pass(\"iOS Checks were successful.\" + eol);\n-        cb();\n-      } else {\n-        log.exitDoctor();\n-      }\n-    });\n-  } else {\n-    cb();\n-  }\n-};\n-\n-var runAndroidChecks = function (cb) {\n-  if (doAndroid) {\n-    var androidChecker = new AndroidChecker(log);\n-    log.comment(\"Running Android Checks\");\n-    androidChecker.runAllChecks(function (err) {\n-      if (!err) {\n-        log.pass(\"Android Checks were successful.\" + eol);\n-        cb();\n-      } else {\n-        log.exitDoctor();\n-      }\n-    });\n-  } else {\n-    cb();\n-  }\n-};\n-\n-var runDevChecks = function (cb) {\n-  if (doDev) {\n-    var devChecker = new DevChecker(log);\n-    log.comment(\"Running Dev Checks\");\n-    devChecker.runAllChecks(function (err) {\n-      if (!err) {\n-        log.pass(\"Dev Checks were successful.\" + eol);\n-        cb();\n-      } else {\n-        log.exitDoctor();\n-      }\n-    });\n-  } else {\n-    cb();\n-  }\n-};\n-\n-if (require.main === module) {\n-\n-  var mainMethod = function () {\n-    async.series([\n-      runiOSChecks,\n-      runAndroidChecks,\n-      runDevChecks\n-    ], function (err) {\n-      if (!err) {\n-        log.pass(\"All Checks were successful\");\n-        log.stopBroadcast();\n-      } else {\n-        log.exitDoctor();\n-      }\n-    });\n-  };\n-\n-  if (log.broadcast) {\n-    log.startBroadcast(mainMethod);\n-  } else {\n-    mainMethod();\n-  }\n-}"
    },
    {
      "sha": "e146fdd59059b994bfd3536259f3b3dfb05515bb",
      "filename": "bin/appium.js",
      "status": "removed",
      "additions": 0,
      "deletions": 58,
      "changes": 58,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/bin/appium.js",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/bin/appium.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/bin/appium.js?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,58 +0,0 @@\n-#!/usr/bin/env node\n-\"use strict\";\n-\n-var net = require('net')\n-  , repl = require('repl')\n-  , logFactory = require('../lib/server/logger.js')\n-  , parser = require('../lib/server/parser.js');\n-\n-require('colors');\n-\n-var args = parser().parseArgs();\n-logFactory.init(args);\n-\n-var appium  = require('../lib/server/main.js');\n-\n-var startRepl = function () {\n-  var help = function () {\n-    console.log(\"\\nWelcome to the Appium CLI\".cyan);\n-    console.log(\" - Access the appium object via the object: 'appium'\".grey);\n-    console.log(\" - appium.run is the function to start the server\".grey);\n-    console.log(\" - args is the default params data structure\".grey);\n-    console.log(\" - set args.app then run appium.run(args);\\n\".grey);\n-    return 'Thanks for asking';\n-  };\n-\n-  help();\n-\n-  var r = repl.start('(appium): ');\n-  r.context.appium = appium;\n-  r.context.parser = parser();\n-  r.context.help = help;\n-  r.context.args = {\n-    app: '/path/to/test/app'\n-  , udid: null\n-  , address: '127.0.0.1'\n-  , port: 4723\n-  };\n-\n-  var connections = 0;\n-  var server = net.createServer(function (socket) {\n-    connections += 1;\n-    socket.setTimeout(5 * 60 * 1000, function () {\n-      socket.destroy();\n-    });\n-    repl.start(\"(appium): \", socket);\n-  }).listen(process.platform === \"win32\" ? \"\\\\\\\\.\\\\pipe\\\\node-repl-sock-\" + process.pid : \"/tmp/node-repl-sock-\" + process.pid);\n-\n-  r.on('exit', function () {\n-    server.close();\n-    process.exit();\n-  });\n-};\n-\n-if (process.argv[2] && process.argv[2].trim() === \"--shell\") {\n-  startRepl();\n-} else {\n-  appium.run(args, function () { /* console.log('Rock and roll.'.grey); */ });\n-}"
    },
    {
      "sha": "4e3e15d9c5febb5f028fee923f0ce504f748e1b6",
      "filename": "bin/authorize-ios.js",
      "status": "removed",
      "additions": 0,
      "deletions": 23,
      "changes": 23,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/bin/authorize-ios.js",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/bin/authorize-ios.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/bin/authorize-ios.js?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,23 +0,0 @@\n-#!/usr/bin/env node\n-\"use strict\";\n-\n-var authorize = require('../grunt-helpers.js').authorize;\n-\n-var gruntMock = {\n-  fatal: function (msg) {\n-    console.error(msg);\n-    process.exit(0);\n-  },\n-  log: {\n-    writeln: function (msg) {\n-      console.log(msg);\n-    }\n-  }\n-};\n-\n-if (require.main === module) {\n-  authorize(gruntMock, false, function (err) {\n-    if (err) throw err;\n-    console.log(\"Authorization successful\");\n-  });\n-}"
    },
    {
      "sha": "83f79b4739fee5fb550e3a3157dbe4c3daa7f382",
      "filename": "bin/ios-webkit-debug-proxy-launcher.js",
      "status": "modified",
      "additions": 13,
      "deletions": 4,
      "changes": 17,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/bin/ios-webkit-debug-proxy-launcher.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/bin/ios-webkit-debug-proxy-launcher.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/bin/ios-webkit-debug-proxy-launcher.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -28,11 +28,18 @@ var RESTART_ON_MESSAGES = [\n   'Invalid message _rpc_applicationSentListing'];\n \n var PROXY_CMD = 'ios_webkit_debug_proxy';\n+var proxy;\n \n-function startProxy() {\n+var handleKillProcess = function (exitCode) {\n+  console.log('\\nKilling proxy process!');\n+  proxy.kill('SIGTERM');\n+  process.exit((exitCode || 0));\n+};\n+\n+var startProxy = function () {\n   console.log('RUNNING:', PROXY_CMD, args.join(' '));\n \n-  var proxy = spawn(PROXY_CMD, args);\n+  proxy = spawn(PROXY_CMD, args);\n \n   proxy.stdout.on('data', function (data) {\n     console.log('stdout: ' + data);\n@@ -54,7 +61,9 @@ function startProxy() {\n   proxy.on('close', function (code) {\n     console.log('child process exited with code ' + code);\n   });\n-}\n+};\n \n-startProxy();\n+process.on('SIGINT', handleKillProcess);\n+process.on('SIGTERM', handleKillProcess);\n \n+startProxy();"
    },
    {
      "sha": "4e46cf81a98ace0bdf62567f29ec4ac33d960b25",
      "filename": "bin/npmlink.sh",
      "status": "removed",
      "additions": 0,
      "deletions": 76,
      "changes": 76,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/bin/npmlink.sh",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/bin/npmlink.sh",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/bin/npmlink.sh?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,76 +0,0 @@\n-#!/bin/bash\n-\n-ACTION='usage'\n-\n-ALL_PACKAGES=(\n-    'appium-atoms'\n-    'appium-instruments'\n-    'appium-uiauto'\n-    'appium-adb'\n-)\n-\n-PACKAGES=()\n-\n-for i in \"$@\"\n-do\n-    case $i in\n-        -l|--link)\n-        ACTION='link'\n-        shift\n-        ;;\n-        -u|--unlink)\n-        ACTION='unlink'\n-        shift\n-        ;;\n-        -m|--master)\n-        MASTER=true\n-        shift\n-        ;;\n-        *)\n-          PACKAGES+=($i)\n-          shift\n-        ;;\n-    esac\n-done\n-\n-if [[ ${#PACKAGES[*]} == 0 ]]; then\n-    PACKAGES=(\"${ALL_PACKAGES[@]}\")\n-fi\n-\n-function npmlink {\n-    git submodule update --init submodules/$1\n-    pushd submodules/$1\n-    if [[ $MASTER ]]; then\n-        git checkout master\n-    fi\n-    npm link\n-    popd\n-    npm link $1\n-}\n-\n-if [[ $ACTION == 'usage' ]]; then\n-    echo 'Usage:'\n-    echo '  link all: dev.sh --link [--master]'\n-    echo '  unlink all: dev.sh --unlink'\n-    echo '  link specific packages: dev.sh --link [--master] <pkg1> <pkg2>...'\n-    echo '  unlink specific packages: dev.sh --unlink <pkg1> <pkg2>...'\n-    echo 'Short verion:'\n-    echo '  link all: dev.sh -l [-m]'\n-    echo '  unlink all: dev.sh -u'\n-    echo '  link specific packages: dev.sh -l [-m] <pkg1> <pkg2>...'\n-    echo '  unlink specific packages: dev.sh -u <pkg1> <pkg2>...'\n-fi\n-\n-if [[ $ACTION == 'link' ]]; then\n-    for i in \"${PACKAGES[@]}\"\n-    do\n-        npmlink $i\n-    done\n-fi\n-\n-if [[ $ACTION == 'unlink' ]]; then\n-    for i in \"${PACKAGES[@]}\"\n-    do\n-        npm unlink $i\n-    done\n-fi"
    },
    {
      "sha": "74397fff54841f4522ffcdaa2a37fcddd9cbd49f",
      "filename": "bin/publish.sh",
      "status": "removed",
      "additions": 0,
      "deletions": 65,
      "changes": 65,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/bin/publish.sh",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/bin/publish.sh",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/bin/publish.sh?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,65 +0,0 @@\n-#!/bin/bash\n-set +e\n-\n-if [[ \"$1\" = \"\" ]]; then\n-    branch=\"master\"\n-else\n-    branch=\"$1\"\n-fi\n-\n-XCODE_PATH=$(xcode-select -print-path)\n-if test -d $XCODE_PATH/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator7.1.sdk ||\n-   [ -e /Library/Developer/CoreSimulator/Profiles/Runtimes/iOS\\ 7.1.simruntime ]; then\n-    echo \"Confirmed iOS7.1 SDK available\"\n-else\n-    echo \"You don't have iOS 7.1 SDK available. Switch to Xcode 5?\"\n-    exit 1\n-fi\n-\n-node --version | grep \"v0.10\" >/dev/null\n-if [ $? -gt 0 ]; then\n-    echo \"You need to publish Appium using Node 0.10.x, not $(node --version)\"\n-    exit 1;\n-else\n-    echo \"Node version OK\"\n-fi\n-\n-git remote | grep \"upstream\" >/dev/null\n-if [ $? -gt 0 ]; then\n-    echo \"You need to have an 'upstream' remote to pull from / push tags to\"\n-    exit 1\n-else\n-    echo \"Git remote OK\"\n-fi\n-git status | grep -E \"nothing to commit.+working directory clean\" >/dev/null\n-if [ $? -gt 0 ]; then\n-    echo \"Working directory isn't clean, commit/clean then publish\"\n-    exit 1\n-else\n-    echo \"Working directory clean\"\n-fi\n-git status | grep \"Your branch is ahead\" >/dev/null\n-if [ $? -eq 0 ]; then\n-    echo \"Your branch isn't in sync with origin\"\n-    exit 1\n-else\n-    echo \"In sync with origin\"\n-fi\n-\n-set -e\n-echo \"Getting latest from upstream:$branch\"\n-git pull upstream $branch\n-echo \"Resetting\"\n-./reset.sh --hardcore --real-safari --chromedriver-install-all --chromedriver-version 2.15\n-version=$(cat package.json | $(npm bin)/underscore extract version | sed 's/\\\"//g')\n-echo \"Clearing npm cache\"\n-npm cache clear appium\n-echo \"Publishing on npm\"\n-if [[ \"$version\" =~ \"beta\" ]]; then\n-    npm publish --tag beta\n-else\n-    npm publish\n-fi\n-echo \"Git tagging\"\n-git tag -a \"v$version\" -m \"tag appium@$version for npm publish\"\n-git push --tags upstream $branch"
    },
    {
      "sha": "954ace014686265379a41c7197f9ef65a8a59401",
      "filename": "bin/test.ps1",
      "status": "removed",
      "additions": 0,
      "deletions": 15,
      "changes": 15,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/bin/test.ps1",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/bin/test.ps1",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/bin/test.ps1?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,15 +0,0 @@\n-param([string]$mochaArgs = \"\", [switch]$android, [switch]$selendroid)\r\n-$all = !($android -or $selendroid)\r\n-$appiumMocha=\"mocha --recursive -t 90000 -R spec $mochaArgs \"\r\n-\r\n-if ($android -or $all){\r\n-  \"RUNNING ANDROID TESTS\"\r\n-  \"---------------------\"\r\n-  Invoke-Expression ($appiumMocha + \"test\\functional\\android test\\functional\\common -g '@skip-android-all' -i\")\r\n-}\r\n-\r\n-if ($selendroid -or $all){\r\n-  \"RUNNING SELENDROID TESTS\"\r\n-  \"------------------------\"\r\n-  Invoke-Expression ($appiumMocha + \"test\\functional\\selendroid -g '@skip-selendroid-all' -i\")\r\n-}\n\\ No newline at end of file"
    },
    {
      "sha": "1feaada35dd708336d0e0030bc0db7d1df2a72dd",
      "filename": "bin/test.sh",
      "status": "removed",
      "additions": 0,
      "deletions": 165,
      "changes": 165,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/bin/test.sh",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/bin/test.sh",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/bin/test.sh?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,165 +0,0 @@\n-#!/bin/sh\n-set -e\n-mocha_args=\"\"\n-ios_only=false\n-ios6_only=false\n-ios7_only=false\n-ios71_only=false\n-ios8_only=false\n-ios81_only=false\n-ios82_only=false\n-ios83_only=false\n-ios84_only=false\n-android_only=false\n-android_chrome=false\n-selendroid_only=false\n-gappium_only=false\n-real_device=false\n-all_tests=true\n-\n-for arg in \"$@\"; do\n-    if [ \"$arg\" = \"--ios\" ]; then\n-        ios_only=true\n-        all_tests=false\n-    elif [ \"$arg\" = \"--android\" ]; then\n-        android_only=true\n-        all_tests=false\n-    elif [ \"$arg\" = \"--android-chrome\" ]; then\n-        android_chrome=true\n-        all_tests=false\n-    elif [ \"$arg\" = \"--selendroid\" ]; then\n-        selendroid_only=true\n-        all_tests=false\n-    elif [ \"$arg\" = \"--gappium\" ]; then\n-        gappium_only=true\n-        all_tests=false\n-    elif [ \"$arg\" = \"--ios6\" ]; then\n-        ios6_only=true\n-        all_tests=false\n-    elif [ \"$arg\" = \"--ios7\" ]; then\n-        ios7_only=true\n-        all_tests=false\n-    elif [ \"$arg\" = \"--ios71\" ]; then\n-        ios71_only=true\n-        all_tests=false\n-    elif [ \"$arg\" = \"--ios8\" ]; then\n-        ios8_only=true\n-        all_tests=false\n-    elif [ \"$arg\" = \"--ios81\" ]; then\n-        ios81_only=true\n-        all_tests=false\n-    elif [ \"$arg\" = \"--ios82\" ]; then\n-        ios82_only=true\n-        all_tests=false\n-    elif [ \"$arg\" = \"--ios83\" ]; then\n-        ios83_only=true\n-        all_tests=false\n-    elif [ \"$arg\" = \"--ios84\" ]; then\n-        ios84_only=true\n-        all_tests=false\n-    elif [ \"$arg\" = \"--real-device\" ]; then\n-        real_device=true\n-    elif [ \"$arg\" =~ \" \" ]; then\n-        mocha_args=\"$mocha_args \\\"$arg\\\"\"\n-    else\n-        mocha_args=\"$mocha_args $arg\"\n-    fi\n-done\n-\n-appium_mocha=\"./node_modules/.bin/mocha --recursive $mocha_args\"\n-\n-run_ios_tests() {\n-    echo \"RUNNING IOS $1 TESTS\"\n-    echo \"---------------------\"\n-\n-\n-    DEVICE=$2 time $appium_mocha -g $3 -i \\\n-        test/functional/common \\\n-        test/functional/ios\n-}\n-\n-if $ios6_only || $ios_only || $all_tests; then\n-    run_ios_tests \"6.1\" \"ios6\" \"@skip-ios6|@skip-ios-all\"\n-fi\n-\n-if $ios7_only || $all_tests; then\n-    run_ios_tests \"7.0\" \"ios7\" \"@skip-ios7|@skip-ios-all\"\n-fi\n-\n-if $ios71_only || $all_tests; then\n-    run_ios_tests \"7.1\" \"ios71\" \"@skip-ios71|@skip-ios7|@skip-ios-all|@skip-ios7up\"\n-fi\n-\n-if $ios8_only || $all_tests; then\n-    run_ios_tests \"8.0\" \"ios8\" \"@skip-ios8|@skip-ios-all|@skip-ios7up\"\n-fi\n-\n-if $ios81_only || $all_tests; then\n-    run_ios_tests \"8.1\" \"ios81\" \"@skip-ios81|@skip-ios8|@skip-ios-all|@skip-ios7up\"\n-fi\n-\n-if $ios82_only || $all_tests; then\n-    run_ios_tests \"8.2\" \"ios82\" \"@skip-ios82|@skip-ios81|@skip-ios8|@skip-ios-all|@skip-ios7up\"\n-fi\n-\n-if $ios83_only || $all_tests; then\n-    run_ios_tests \"8.3\" \"ios83\" \"@skip-ios83|@skip-ios82|@skip-ios81|@skip-ios8|@skip-ios-all|@skip-ios7up\"\n-fi\n-\n-if $ios84_only || $all_tests; then\n-    run_ios_tests \"8.4\" \"ios84\" \"@skip-ios84|@skip-ios82|@skip-ios81|@skip-ios8|@skip-ios-all|@skip-ios7up\"\n-fi\n-\n-if $android_only || $all_tests; then\n-    echo \"RUNNING ANDROID TESTS\"\n-    echo \"---------------------\"\n-\n-    if $real_device; then\n-        DEVICE=android REAL_DEVICE=true time $appium_mocha \\\n-            -g  '@skip-android-all|@android-arm-only|@skip-real-device' -i \\\n-            test/functional/common \\\n-            test/functional/android\n-    else\n-        DEVICE=android time $appium_mocha \\\n-            -g  '@skip-android-all|@android-arm-only' -i \\\n-            test/functional/common \\\n-            test/functional/android\n-    fi\n-fi\n-\n-if $android_chrome; then\n-    echo \"RUNNING ANDROID CHROME TESTS\"\n-    echo \"---------------------\"\n-\n-    if $real_device; then\n-        DEVICE=android REAL_DEVICE=true time $appium_mocha \\\n-            -g  '@skip-chrome|@skip-android-all' -i \\\n-            test/functional/android/chrome\n-    else\n-        DEVICE=android time $appium_mocha \\\n-            -g  '@skip-chrome|@skip-android-all' -i \\\n-            test/functional/android/chrome\n-    fi\n-fi\n-\n-if $selendroid_only || $all_tests; then\n-    echo \"RUNNING SELENDROID TESTS\"\n-    echo \"---------------------\"\n-    DEVICE=selendroid time $appium_mocha -g  '@skip-selendroid-all' -i \\\n-        test/functional/selendroid\n-fi\n-\n-if $gappium_only || $all_tests; then\n-    echo \"RUNNING GAPPIUM TESTS\"\n-    echo \"---------------------\"\n-    DEVICE=ios81 time $appium_mocha test/functional/gappium\n-    # disabling, ios6 not working yet xcode 6\n-    #DEVICE=ios6 time $appium_mocha test/functional/gappium\n-    echo \"Start the android emulator api 19 and press Enter.\"\n-    read\n-    DEVICE=android time $appium_mocha test/functional/gappium\n-    # disabling gappium test, see https://github.com/selendroid/selendroid/issues/658\n-    #echo \"Start the android emulator api 16 and press Enter.\"\n-    #read\n-    #DEVICE=selendroid time $appium_mocha test/functional/gappium\n-fi"
    },
    {
      "sha": "522406e052e1a5b9bc6d1ab1c5e787003d5f58f2",
      "filename": "ci/setup",
      "status": "removed",
      "additions": 0,
      "deletions": 16,
      "changes": 16,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/ci/setup",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/ci/setup",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/ci/setup?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,16 +0,0 @@\n-#!/bin/bash\n-{ set -e; } 2>/dev/null\n-{ set -x; } 2>/dev/null\n-\n-# Loading appium-ci-gulper submodule\n-export APPIUM_ROOT=\"$(pwd)\"\n-git submodule update --remote --init submodules/appium-ci-gulper\n-pushd submodules/appium-ci-gulper\n-git pull origin master\n-{ set +x; } 2>/dev/null\n-\n-# Running appium-ci-gulper submodule\n-# This sets up node etc...\n-source ./setup\n-{ set -x; } 2>/dev/null\n-"
    },
    {
      "sha": "5f96bdafefd7b8311f9da7018529588fb6a67177",
      "filename": "docs/cn/about-appium/intro.cn.md",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/docs/cn/about-appium/intro.cn.md",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/docs/cn/about-appium/intro.cn.md",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/docs/cn/about-appium/intro.cn.md?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -21,7 +21,7 @@ Appium 是一个自动化测试开源工具，支持 iOS 平台和 Android 平\n \n 那么 Appium 架构是如何实现这个哲学呢？为了满足第一条，Appium 真正的工作引擎其实是第三方自动化框架。这样，我们就不需在你的应用里植入 Appium 相关或者第三方的代码。这意味着你测试使用的应用与最终发布的应用并无二致。我们使用以下的第三方框架：\n \n-* iOS: 苹果的 [UIAutomation](https://developer.apple.com/library/ios/documentation/DeveloperTools/Reference/UIAutomationRef/_index.html)\n+* iOS: 苹果的 [UIAutomation](https://developer.apple.com/library/ios/documentation/DeveloperTools/Reference/UIAutomationRef)\n * Android 4.2+: Google's [UiAutomator](http://developer.android.com/tools/help/uiautomator/index.html)\n * Android 2.3+: Google's [Instrumentation](http://developer.android.com/reference/android/app/Instrumentation.html). (Instrumentation由单独的项目[Selendroid](http://selendroid.io)提供支持 )\n "
    },
    {
      "sha": "69df22f6ba04d6d95f90fb712656e2e6c31f7def",
      "filename": "docs/cn/appium-setup/platform-support.cn.md",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/docs/cn/appium-setup/platform-support.cn.md",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/docs/cn/appium-setup/platform-support.cn.md",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/docs/cn/appium-setup/platform-support.cn.md?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -9,7 +9,7 @@ Appimu的时候支持的平台版本和上述测试方式的必备条件。\n \n * 版本号：6.1，7.0，以及7.1。\n * 支持设备：iPhone模拟器，iPad模拟器以及iPhones和iPads真机。\n-* 是否支持原生应用：支持。同时支持模拟器中调试应用版本和正确签名的真机ipa。其他相关支持由苹果的[UIAutomation](https://developer.apple.com/library/ios/documentation/DeveloperTools/Reference/UIAutomationRef/_index.html)框架提供。\n+* 是否支持原生应用：支持。同时支持模拟器中调试应用版本和正确签名的真机ipa。其他相关支持由苹果的[UIAutomation](https://developer.apple.com/library/ios/documentation/DeveloperTools/Reference/UIAutomationRef/)框架提供。\n * 是否支持内置移动浏览器：支持。Safari浏览器已经通过测试。对于真机，则需要安装调试工具ios-webkit-remote-debugger。很遗憾，对于Safari的原生界面的自动化是不支持的。更多信息请移步至[mobile web doc](/docs/cn/writing-running-appium/mobile-web.cn.md) 。\n * 是否支持混合应用：支持。同样对于真机需要安装调试工具ios-webkit-remote-debugger，更多详情请移步至[hybrid doc](/docs/cn/advanced-concepts/hybrid.cn.md) 查看详情。\n * 是否支持在同一个session中执行多个应用的自动化：不支持。"
    },
    {
      "sha": "519068a9561eaf1be93fc11a1c1b453a9879a1b4",
      "filename": "docs/cn/writing-running-appium/ios_predicate.cn.md",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/docs/cn/writing-running-appium/ios_predicate.cn.md",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/docs/cn/writing-running-appium/ios_predicate.cn.md",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/docs/cn/writing-running-appium/ios_predicate.cn.md?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -1,6 +1,6 @@\n ## iOS 谓词(Predicate)\n \n-在查看 *'-ios uiautomation'* 搜索策略时了解 **谓词(Predicate)** 十分必要。 [UIAutomation JavaScript API](https://developer.apple.com/library/ios/documentation/DeveloperTools/Reference/UIAutomationRef/_index.html)有下列几种非常有用的方法:\n+在查看 *'-ios uiautomation'* 搜索策略时了解 **谓词(Predicate)** 十分必要。 [UIAutomation JavaScript API](https://developer.apple.com/library/ios/documentation/DeveloperTools/Reference/UIAutomationRef/)有下列几种非常有用的方法:\n \n ```center\n (UIAElement) UIAElementArray.firstWithPredicate(PredicateString predicateString)\n@@ -243,4 +243,4 @@ predicate = \"name contains[c] '#{text}' || label contains[c] '#{text}' || value\n element = execute_script(%Q(au.mainApp().getFirstWithPredicate(\"#{predicate}\");))\n \n puts element.name # Buttons, Various uses of UIButton\n-```\n\\ No newline at end of file\n+```"
    },
    {
      "sha": "7d0c4d0aef2056a1d853d66449c44117111578c4",
      "filename": "docs/en/about-appium/intro.md",
      "status": "modified",
      "additions": 7,
      "deletions": 3,
      "changes": 10,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/docs/en/about-appium/intro.md",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/docs/en/about-appium/intro.md",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/docs/en/about-appium/intro.md?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -31,7 +31,7 @@ meet requirement #1 by using vendor-provided automation frameworks under the\n hood. That way, we don't need to compile in any Appium-specific or\n third-party code or frameworks to your app. This means **you're testing the same app you're shipping**. The vendor-provided frameworks we use are:\n \n-* iOS: Apple's [UIAutomation](https://developer.apple.com/library/ios/documentation/DeveloperTools/Reference/UIAutomationRef/_index.html)\n+* iOS: Apple's [UIAutomation](https://developer.apple.com/library/ios/documentation/DeveloperTools/Reference/UIAutomationRef/)\n * Android 4.2+: Google's [UiAutomator](http://developer.android.com/tools/help/uiautomator/index.html)\n * Android 2.3+: Google's [Instrumentation](http://developer.android.com/reference/android/app/Instrumentation.html). (Instrumentation support is provided by bundling a separate project, [Selendroid](http://selendroid.io))\n \n@@ -89,7 +89,11 @@ during a Safari automation session, we're allowed to use JavaScript to open\n up new windows. See the [capabilities doc](/docs/en/writing-running-appium/caps.md) for the complete list of capabilities available for Appium.\n \n **Appium Server**<br/>\n-Appium is a server written in Node.js. It can be built and installed from source or installed directly from NPM.\n+Appium is a server written in Node.js. It can be built and installed [from source](github.com/appium/appium) or installed directly from NPM:\n+```\n+$ npm install -g appium\n+$ appium\n+```\n \n **Appium Clients**<br/>\n There are client libraries (in Java, Ruby, Python, PHP, JavaScript, and C#)\n@@ -105,4 +109,4 @@ which enables you to check out the hierarchy of your app. This can come in handy\n \n ### Getting Started\n \n-Congratulations! You are now armed with enough knowledge to begin using Appium. Why not head to the [getting started doc](/README.md) for more detailed requirements and instructions?\n+Congratulations! You are now armed with enough knowledge to begin using Appium. Why not head to the [getting started doc](https://github.com/appium/appium/blob/master/README.md) for more detailed requirements and instructions?"
    },
    {
      "sha": "af263a4ca434eeef637efd092dd27c8cd08e9f09",
      "filename": "docs/en/advanced-concepts/ios-webkit-debug-proxy.md",
      "status": "modified",
      "additions": 3,
      "deletions": 11,
      "changes": 14,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/docs/en/advanced-concepts/ios-webkit-debug-proxy.md",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/docs/en/advanced-concepts/ios-webkit-debug-proxy.md",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/docs/en/advanced-concepts/ios-webkit-debug-proxy.md?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -11,17 +11,11 @@ Homebrew, run the following commands in the terminal:\n \n  ``` center\n  # The first command is only required if you don't have brew installed.\n- > ruby -e \"$(curl -fsSL https://raw.github.com/mxcl/homebrew/go/install)\"\n+ > ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n  > brew update\n  > brew install ios-webkit-debug-proxy\n  ```\n \n-**NOTE:** As of April 2, 2015, the primary ios-webkit-debug-proxy repository\n-has not been updated for some time. **We currently recommend using [James Chuong's\n-fork](https://github.com/jchuong/ios-webkit-debug-proxy)**. To do so, you'll need\n-to build from source. If you're unfamiliar with building with GMake, try following\n-the steps below.\n-\n #### Building ios-webkit-debug-proxy from source\n \n Open the command terminal on your mac. You can find instructions on how to open the\n@@ -37,12 +31,10 @@ line prompt, do not enter it):\n \n ```shell\n $ cd  ~\n-$ git clone https://github.com/jchuong/ios-webkit-debug-proxy.git\n+$ sudo apt-get install autoconf automake libusb-dev libusb-1.0-0-dev libplist-dev libplist++-dev usbmuxd libtool libimobiledevice-dev\n+$ git clone https://github.com/google/ios-webkit-debug-proxy.git\n $ cd ios-webkit-debug-proxy\n-$ brew install autoconf automake libusb libplist usbmuxd\n-$ brew install --HEAD ideviceinstaller\n $ ./autogen.sh\n-$ ./configure\n $ make\n $ sudo make install\n ```"
    },
    {
      "sha": "1d84c2b9ee8f097dc40db5b50f5fff50c88062d5",
      "filename": "docs/en/advanced-concepts/iwd_xcode7.md",
      "status": "added",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/docs/en/advanced-concepts/iwd_xcode7.md",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/docs/en/advanced-concepts/iwd_xcode7.md",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/docs/en/advanced-concepts/iwd_xcode7.md?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -0,0 +1,15 @@\n+## Setting up instruments without delay (iwd) for xcode 7 and iOS >= 9.0\n+\n+For iOS >= 9.0 instruments without delay (iwd) does not work by passing binaries through\n+the command line (appium does this under the hood for xcode < 7). See [iwd](https://github.com/lawrencelomax/instruments-without-delay/tree/xcode7-quirks#xcode-7--ios-9-support)\n+\n+For enabling iwd for xcode >= 7,\n+- Checkout [appium-instruments](https://github.com/appium/appium-instruments)\n+- Run `xcode_iwd.sh` present in `<appium-instruments>/bin/`\n+\n+```\n+sh <appium-instruments>/bin/xcode_iwd.sh <path to xcode> <path to appium-instruments>\n+```\n+eg. `sh ./bin/xcode_iwd.sh /Applications/Xcode.app /Users/xyz/appium-instruments/`\n+\n+Note: iwd with xcode7 will only work for iOS >= 9.0, you can switch to older xcode for iOS < 9.0"
    },
    {
      "sha": "599a82c0371540a1be090a4f794fa08d803d2903",
      "filename": "docs/en/appium-setup/android-setup.md",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/docs/en/appium-setup/android-setup.md",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/docs/en/appium-setup/android-setup.md",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/docs/en/appium-setup/android-setup.md?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -1,6 +1,6 @@\n ## Android Setup\n \n-To get started, you'll need to install node.js (v0.10 or greater). Just\n+To get started, you'll need to install node.js (v0.12 or greater). Just\n follow the [instructions for your flavor of linux](https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager).\n \n Once you've got node.js installed, install the [Android SDK](http://developer.android.com/sdk/index.html).\n@@ -17,7 +17,7 @@ shell startup:\n     export ANDROID_HOME=\"/usr/local/adt/sdk\"\n \n Now you're set up to run Appium! If you're running Appium from source, run\n-`./reset.sh --android` from your Appium checkout to install all the\n+`npm install` from your Appium checkout to install all the\n dependencies.\n \n ### Additional Setup for Older Versions of Android\n@@ -29,7 +29,6 @@ running from source.\n \n * Make sure you have [Maven 3.1.1](http://maven.apache.org/download.cgi) or\n   newer installed (`mvn`).\n-* Run `./reset.sh --selendroid` from your Appium checkout\n \n ### Running Appium Android Tests\n \n@@ -46,6 +45,6 @@ See the [server documentation](/docs/en/writing-running-appium/server-args.md) f\n   [page](/docs/en/appium-setup/android-hax-emulator.md).\n * Make sure that `hw.battery=yes` in your AVD's `config.ini`, if you want to\n   run any of the Appium tests, or use any of the power commands.\n-* Selendroid requires the following permission for your app:         \n+* Selendroid requires the following permission for your app:\n   `<uses-permission android:name=\"android.**permission.INTERNET\"/>`,\n   please make sure your app has internet permission set when you are using selendroid or older versions of Android i.e. 2.3 to 4.1"
    },
    {
      "sha": "54e726a5f3550523a3cdc521768e26c079fae8d3",
      "filename": "docs/en/appium-setup/platform-support.md",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/docs/en/appium-setup/platform-support.md",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/docs/en/appium-setup/platform-support.md",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/docs/en/appium-setup/platform-support.md?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -9,11 +9,11 @@ make explicit the level of support and requirements for each of these.\n See [Running on OS X: iOS](running-on-osx.md) for iOS requirements and setup\n instructions.\n \n-* Versions: 6.0, 6.1, 7.0, 7.1, 8.0, and 8.1\n+* Versions: 7.1, 8.0, 8.1, 8.2, 8.3, 8.4, 9.0, 9.1 and 9.2\n * Devices: iPhone Simulator, iPad Simulator, and real iPhones and iPads\n * Native app support: Yes, with debug version of .app (simulator),\n   or correctly-signed .ipa (real devices). Underlying support is provided by\n-  Apple's [UIAutomation](https://developer.apple.com/library/ios/documentation/DeveloperTools/Reference/UIAutomationRef/_index.html)\n+  Apple's [UIAutomation](https://developer.apple.com/library/ios/documentation/DeveloperTools/Reference/UIAutomationRef/)\n   framework.\n * Mobile web support: Yes, via automation of mobile Safari. For real devices,\n   ios-webkit-remote-debugger is required, and automation of native aspects of"
    },
    {
      "sha": "2569978d44affe8f85a30a0973e622da52c3ea57",
      "filename": "docs/en/appium-setup/real-devices.md",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/docs/en/appium-setup/real-devices.md",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/docs/en/appium-setup/real-devices.md",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/docs/en/appium-setup/real-devices.md?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -60,6 +60,7 @@ the capabilities that you can use.\n 0. Make sure that you can run your tests against the Simulator.\n 0. Double check that you can invoke your automation from Instruments.\n 0. Make sure Instruments is not already running.\n+0. Make sure UI Automation is enabled on your device. Settings -> Developer -> Enable UI Automation\n \n ### Appium on real Android devices\n "
    },
    {
      "sha": "47a78487b33984af226585291f748b86d50255f2",
      "filename": "docs/en/appium-setup/running-on-osx.md",
      "status": "modified",
      "additions": 32,
      "deletions": 30,
      "changes": 62,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/docs/en/appium-setup/running-on-osx.md",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/docs/en/appium-setup/running-on-osx.md",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/docs/en/appium-setup/running-on-osx.md?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -4,16 +4,14 @@ Appium on OS X supports iOS and Android testing.\n \n ### System setup (iOS)\n \n-* Appium requires Mac OS X 10.7, but 10.8 or 10.9 is recommended.\n-* Make sure you have Xcode and the iOS SDK(s) installed. Xcode version 5.1 is\n-  recommended as earlier versions of Xcode are limited in which version of iOS\n+* Appium requires Mac OS X 10.7 or greater. We recommend OS X 10.10.\n+* Make sure you have Xcode and the iOS SDK(s) installed. Xcode version 7.1 is\n+  recommended as earlier versions of Xcode are limited in which versions of iOS\n   they can test against. See the next section for more detail.\n-* You need to authorize use of the iOS Simulator. If you are running Appium\n-  from NPM, you'll do this by running `sudo authorize_ios` (`authorize_ios` is\n-  a binary made available by the Appium npm package). If you're running Appium\n-  from source, simply run `sudo grunt authorize` to do the same thing. If you\n-  are running [Appium.app](https://github.com/appium/appium-dot-app), you can\n-  authorize iOS through the GUI.\n+* You need to authorize use of the iOS Simulator. See [below](#authorizing-ios-on-the-computer).\n+* If you're on Xcode 7.x, Instruments Without Delay (IWD) does not work. You can\n+  enable IWD (which will significantly speed up your tests) using\n+  [this method](/docs/en/advanced-concepts/iwd_xcode7.md)\n * If you're on Xcode 6, you need to launch each simulator you intend to use\n   with appium in advance, and change the default to actually show the soft\n   keyboard if you want sendKeys to work. You can do this by clicking on any\n@@ -30,34 +28,38 @@ Appium on OS X supports iOS and Android testing.\n   verify that UIAutomaion is enabled in this view before the simulator or\n   device can be automated.\n \n-### Testing against multiple iOS SDKs\n+### Authorizing iOS on the computer\n+\n+You need to authorize use of the iOS Simulator by running the `authorize-ios`\n+binary made available through `npm`. If you installed globally, by running\n+`npm install -g appium`, use\n+\n+```\n+sudo authorize-ios\n+```\n \n-Xcode version 5.1 allows for automatic testing against iOS versions 6.0 and later.\n-If using version 5.1, you can ignore the rest of this section.\n+If you installed locally, the binary will be installed within the `node_modules/.bin`\n+directory, so use\n \n-For Xcode 4.6.3 to 5.0, Apple's `instruments` binary, which Appium uses to launch\n-the iOS simulator, by default uses the currently-selected Xcode, and the highest\n-iOS SDK installed with that version of Xcode. This means that if you want to test\n-iOS 6.1, but have iOS 7.1 installed, Appium will be forced to use the 7.1 Simulator\n-regardless. The only way around this is to have multiple copies of Xcode\n-installed with different sets of SDKs. You can then switch to the particular\n-copy of Xcode that has the versions you want to test with before starting\n-Appium.\n+```\n+sudo node_modules/.bin/authorize-ios\n \n-In addition, it's been discovered that testing against iOS 6.1 with Xcode\n-5 causes increased slowness and instability, so it's recommended that for\n-testing against iOS 6.1 and below we use Xcode 4.6.3, and for testing against\n-iOS 7.0 we use Xcode 5. We can do this by, say, having Xcode 5 at\n-`/Applications/Xcode.app`, and Xcode 4.6 and `/Applications/Xcode-4.6.app`.\n-Then we use the following command:\n+# alternatively\n+sudo $(npm bin)/authorize-ios\n+```\n \n-    sudo xcode-select -switch /Applications/Xcode-4.6.app/Contents/Developer/\n+If you are running [Appium.app](https://github.com/appium/appium-dot-app), you can\n+authorize iOS through the GUI.\n+\n+You need to do this every time you install a new version of Xcode.\n+\n+### Testing against multiple iOS SDKs\n \n-To prepare for iOS 6.1 testing. We run it again with a different Xcode:\n+Xcode version 7.1 allows for automatic testing against iOS versions 7.1 and later.\n \n-    sudo xcode-select -switch /Applications/Xcode.app/Contents/Developer/\n+If you're using multiple Xcode versions, you can switch between them using:\n \n-To go back to iOS 7.1 testing.\n+    sudo xcode-select --switch &lt;path to required xcode&gt;\n \n ### System setup (Android)\n "
    },
    {
      "sha": "8cd6747ab0b0235521cbae1411b42020467a4f68",
      "filename": "docs/en/appium-setup/running-on-windows.md",
      "status": "modified",
      "additions": 5,
      "deletions": 4,
      "changes": 9,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/docs/en/appium-setup/running-on-windows.md",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/docs/en/appium-setup/running-on-windows.md",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/docs/en/appium-setup/running-on-windows.md?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -13,7 +13,7 @@ option to connect to an Appium server running on a Mac.\n \n To get started:\n \n-1. Install [node.js](http://nodejs.org/download/) (v.0.10 or greater). Use the\n+1. Install [node.js](http://nodejs.org/download/) (v.0.12 or greater). Use the\n    installer from nodejs.org.\n 1. Install the [Android SDK](http://developer.android.com/sdk/index.html).\n    You will need to run the 'android' tool (included in the SDK, in the `tools` folder) and make sure\n@@ -33,10 +33,11 @@ To get started:\n 1. Install [cURL](http://curl.haxx.se/download.html).\n \n Now that you've downloaded everything, if you're running from source, run the\n-following .bat file in the folder where you cloned appium:\n+following in the folder where you cloned appium:\n \n ```center\n-reset.bat\n+rm -rf node_modules\n+npm install\n ```\n \n ### Running Appium\n@@ -56,7 +57,7 @@ arguments.\n \n ### Notes\n \n-* On windows run appium.app as administrator or when running from source you need to run cmd as administrator. \n+* On windows run appium.app as administrator or when running from source you need to run cmd as administrator.\n * You must supply the `--no-reset` or `--full-reset` flags for\n   Android to work on Windows.\n * There exists a hardware accelerated emulator for Android, it has it's own"
    },
    {
      "sha": "dfce1bc51924e3ba218c55714f9354a8466b0790",
      "filename": "docs/en/appium-setup/troubleshooting.md",
      "status": "modified",
      "additions": 16,
      "deletions": 25,
      "changes": 41,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/docs/en/appium-setup/troubleshooting.md",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/docs/en/appium-setup/troubleshooting.md",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/docs/en/appium-setup/troubleshooting.md?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -19,21 +19,11 @@ to github or write to the [appium-discuss discussion group](https://discuss.appi\n ### If you're running Appium from source\n \n * `git pull` to make sure you're running the latest code\n-* Run the appropriate flavor of `reset.sh` based on what you're trying to\n-automate:\n-\n-|command                  | explanation |\n-|-------------------------|-------------|\n-|./reset.sh               | # all |\n-|./reset.sh --ios         | # ios-only |\n-|./reset.sh --android     | # android-only |\n-|./reset.sh --selendroid  | # selendroid-only |\n-\n-* You might also want to run `reset.sh` with the `--dev` flag if you want the\n-  test apps downloaded and built as well.\n-* You can also use `appium-doctor` to automatically verify that all\n-  dependencies are met. If running from source, you may have to use\n-  `bin/appium-doctor.js` or `node bin/appium-doctor.js`.\n+* Remove old dependencies: `rm -rf node_modules`\n+* Re-install dependencies: `npm install`\n+* Re-transpile the code: `gulp transpile`\n+\n+* You can also use [Appium Doctor](https://github.com/appium/appium-doctor) to determine whether your system is configured correctly for Appium.\n * If you get this error after upgrading to Android SDK 22:\n   `{ANDROID_HOME}/tools/ant/uibuild.xml:155: SDK does not have any Build Tools installed.`\n In the Android SDK 22, the platform and build tools are split up into their\n@@ -60,13 +50,17 @@ own items in the SDK manager. Make sure you install the build-tools and platform\n * If you've ever run Appium with sudo, you might need to `sudo rm\n   /tmp/instruments_sock` and try again as not-sudo.\n * If this is the first time you've run Appium, make sure to authorize the use\n-  of Instruments. Usually a box will pop up that you enter your password into\n-  . If you're running Appium from source, you can simply run `sudo grunt authorize`\n-  from the main repo to avoid getting this popup. If you're running from npm,\n-  run `sudo authorize_ios` instead. You need to do this every time you install\n-  a new version of Xcode, as well.\n+  of Instruments. See [running on OSX documentation](./running-on-osx.md#authorizing-ios-on-the-computer).\n * If you see `iOS Simulator failed to install the application.` and the\n   paths are correct, try restarting the computer.\n+* If you have custom elements in your app, they will not be automatable by\n+  UIAutomation (and therefore Appium) by default. You need to set the\n+  accessibility status to 'enabled' on them. The way to do this in code is:\n+\n+  ```center\n+  [myCustomView setAccessibilityEnabled:YES];\n+  ```\n+\n * Tests on iOS may exhibit symptoms similar to a memory leak including sluggish\n   performance or hangs. If you experience this problem, it's likely due to a\n   known issue with NSLog. One option is to remove NSLog from your code.\n@@ -166,7 +160,7 @@ and submit an issue describing the bug and a repro case.\n ### Known Issues\n \n * If you've installed Node from the Node website, it requires that you use sudo\n-  for `npm`. This is not ideal. Try to get node with\n+  for `npm`. This is not ideal. Try to get node with [nvm](https://github.com/creationix/nvm),\n   [n](https://github.com/visionmedia/n) or `brew install node` instead!\n * Webview support works on real iOS devices with a proxy, see [discussion](https://groups.google.com/d/msg/appium-discuss/u1ropm4OEbY/uJ3y422a5_kJ).\n * Sometimes iOS UI elements become invalidated milliseconds after they are\n@@ -182,8 +176,5 @@ and submit an issue describing the bug and a repro case.\n \n |Action|Error|Resolution|\n |------|-----|----------|\n-|Running reset.sh|xcodebuild: error: SDK \"iphonesimulator6.1\" cannot be located|Install the iPhone 6.1 SDK _or_ build the test apps with a separate SDK, e.g., `grunt buildApp:UICatalog:iphonesimulator5.1`|\n-|Running reset.sh|Warning: Task \"setGitRev\" not found. Use --force to continue.|Update the submodules with `git submodule update --init` and run `reset.sh` again|\n-|Running reset.sh|`[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:2.3.2:compile (default-compile) on project selendroid-server: Compilation failure [ERROR] Failure executing javac, but could not parse the error: [ERROR] [ERROR] [ERROR] The system is out of resources. [ERROR] Consult the following stack trace for details. [ERROR] java.lang.StackOverflowError `|`export MAVEN_OPTS=\"-Xms1024m -Xmx2048m -Xss2048k\"`|\n |Running ios test|`[INST STDERR] posix spawn failure; aborting launch`|Your app is not compiled correctly for the simulator or device.|\n-|Running mobile safari test|`error: Could not prepare mobile safari with version '7.1'`|You probably need to run the authorize script again to make the iOS SDK files writeable. E.g., `sudo authorize_ios`|\n+|Running mobile safari test|`error: Could not prepare mobile safari with version '7.1'`|You probably need to run the authorize script again to make the iOS SDK files writeable. See [running on OSX documentation](./running-on-osx.md#authorizing-ios-on-the-computer)|"
    },
    {
      "sha": "689c2ad4ceaeba9484eeb4bb808e744833e5f30e",
      "filename": "docs/en/contributing-to-appium/appium-from-source.md",
      "status": "modified",
      "additions": 48,
      "deletions": 105,
      "changes": 153,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/docs/en/contributing-to-appium/appium-from-source.md",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/docs/en/contributing-to-appium/appium-from-source.md",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/docs/en/contributing-to-appium/appium-from-source.md?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -2,7 +2,7 @@\n \n So you want to run Appium from source and help fix bugs and add features?\n Great! Just fork the project, make a change, and send a pull request! Please\n-have a look at our [Style Guide](style-guide.md) before getting to work.\n+have a look at our [Style Guide](style-guide-2.0.md) before getting to work.\n Please make sure the unit and functional tests pass before sending a pull\n request; for more information on how to run tests, keep reading!\n \n@@ -18,37 +18,48 @@ instance of an Appium server, and then run your test.\n The quick way to get started:\n \n ```center\n-$ git clone https://github.com/appium/appium.git\n-$ cd appium\n-$ ./reset.sh\n-$ sudo ./bin/authorize-ios.js # for ios only\n-$ node .\n+git clone https://github.com/appium/appium.git\n+cd appium\n+npm install\n+gulp transpile # requires gulp, see below\n+sudo node_modules/.bin/authorize-ios.js # for ios only\n+node .\n ```\n \n ### Hacking on Appium\n \n-Make sure you have ant, maven, adb installed and added to system PATH, also you\n+Make sure you have `ant`, `maven`, `adb` installed and added to system `PATH`, also you\n would need the android-16 sdk (for Selendroid) and android-19 sdk installed.\n From your local repo's command prompt, install the following packages using the\n-following commands (if you didn't install `node` using homebrew, you might have\n-to run npm with sudo privileges):\n+following commands (if you didn't install `node` using Homebrew, you might have\n+to run `npm` with sudo privileges):\n \n ```center\n npm install -g mocha\n-npm install -g grunt-cli\n-node bin/appium-doctor.js --dev\n-./reset.sh --dev\n+npm install -g gulp\n+npm install -g gulp-cli\n+npm install -g appium-doctor && appium-doctor --dev\n+npm install\n+gulp transpile\n ```\n \n The first two commands install test and build tools (`sudo` may not be\n necessary if you installed node.js via Homebrew). The third command verifies\n that all of the dependencies are set up correctly (since dependencies for\n building Appium are different from those for simply running Appium) and fourth\n command installs all app dependencies and builds supporting binaries and test\n-apps. `reset.sh` is also the recommended command to run after pulling changes\n-from master. Running `reset.sh` with the `--dev` flag also installs git hooks\n-that make sure code quality is preserved before committing. At this point,\n-you're able to start the Appium server:\n+apps. The final command transpiles all the code so that `node` can run it.\n+\n+When pulling new code from GitHub, if there are changes to `package.json` it\n+is necessary to remove the old dependencies and re-run `npm install`:\n+\n+```center\n+rm -rf node_modules\n+npm install\n+gulp transpile\n+```\n+\n+At this point, you will be able to start the Appium server:\n \n ```center\n node .\n@@ -57,9 +68,6 @@ node .\n See [the server documentation](/docs/en/writing-running-appium/server-args.md)\n for a full list of arguments.\n \n-Like the power of automating dev tasks? Check out the [Appium Grunt tasks](/docs/en/contributing-to-appium/grunt.md)\n-available to help with building apps, installing apps, generating docs, etc.\n-\n #### Hacking with Appium for iOS\n \n To avoid a security dialog that may appear when launching your iOS apps you'll\n@@ -68,37 +76,34 @@ have to modify your `/etc/authorization` file in one of two ways:\n 1. Manually modify the element following `<allow-root>` under `<key>system.privilege.taskport</key>`\n    in your `/etc/authorization` file to `<true/>`.\n \n-2. Run the following grunt command which automatically modifies your\n+2. Run the following command which automatically modifies your\n    `/etc/authorization` file for you:\n \n     ```center\n-    sudo ./bin/authorize-ios.js\n+    sudo node_modules/.bin/authorize-ios.js\n     ```\n \n At this point, run:\n \n ```center\n-./reset.sh --ios --dev\n+rm -rf node-modules\n+npm install\n+gulp transpile\n ```\n \n Now your Appium instance is ready to go. Run `node .` to kick up the Appium server.\n \n #### Hacking with Appium for Android\n \n-Bootstrap running for Android by running:\n+Set up Appium by running:\n \n ```center\n-./reset.sh --android --dev\n+rm -rf node-modules\n+npm install\n+gulp transpile\n ```\n \n-If you want to use [Selendroid](http://github.com/DominikDary/selendroid) for\n-support on older Android platforms like 2.3, then run:\n-\n-```center\n-./reset.sh --selendroid --dev\n-```\n-\n-Make sure you have one and only one Android emulator or device running, e.g.\n+Make sure you have one and only one Android emulator or device running, e.g.,\n by running this command in another process (assuming the `emulator` command is\n on your path):\n \n@@ -111,21 +116,15 @@ Now you are ready to run the Appium server via `node .`.\n #### Making sure you're up to date\n \n Since Appium uses dev versions of some packages, it often becomes necessary to\n-install new `npm` packages or update various things. There's a handy shell script\n-to do all this for all platforms (the `--dev` flag gets dev npm dependencies\n-and test applications used in the Appium test suite). You will also need to do\n-this when Appium bumps its version up:\n-\n-```center\n-./reset.sh --dev\n-```\n-\n-Or you can run reset for individual platforms only:\n+install new `npm` packages or update various things. Running `npm install` will\n+update everything necessary. You will also need to do this when Appium bumps\n+its version up. Prior to running `npm install` it is recommended to remove\n+all the old dependencies in the `node_modules` directory:\n \n ```center\n-./reset.sh --ios --dev\n-./reset.sh --android --dev\n-./reset.sh --selendroid --dev\n+rm -rf node-modules\n+npm install\n+gulp transpile\n ```\n \n ### Running Tests\n@@ -138,71 +137,15 @@ Once your system is set up and your code is up to date, you can run unit tests\n with:\n \n ```center\n-grunt unit\n+gulp once\n ```\n \n You can run functional tests for all supported platforms (after ensuring that\n Appium is running in another window with `node .`) with:\n \n ```center\n-bin/test.sh\n-```\n-\n-Or you can run particular platform tests with `test.sh`:\n-\n-```center\n-bin/test.sh --android\n-bin/test.sh --ios\n-bin/test.sh --ios7\n-bin/test.sh --ios71\n+gulp e2e-test\n ```\n \n-Before committing code, please run `grunt` to execute some basic tests and\n-check your changes against code quality standards. Note that this should happen\n-automatically if you ran `reset.sh --dev`, which sets up the git pre-commit\n-hooks.\n-\n-```center\n-grunt lint\n-> Running \"newer:jshint\" (newer) task\n-> \n-> Running \"newer:jshint:files\" (newer) task\n-> No newer files to process.\n-> \n-> Running \"newer:jshint:test\" (newer) task\n-> No newer files to process.\n-> \n-> Running \"newer:jshint:examples\" (newer) task\n-> No newer files to process.\n-> \n-> Running \"jscs:files\" (jscs) task\n-> >> 303 files without code style errors.\n-```\n-\n-#### Running individual tests\n-\n-If you have an Appium server listening, you can run individual test files using\n-Mocha, for example:\n-\n-```center\n-DEVICE=ios71 mocha -t 60000 -R spec test/functional/ios/testapp/simple.js\n-```\n-\n-Or individual tests (e.g., a test with the word \"alert\" in the name):\n-\n-```center\n-DEVICE=ios6 mocha -t 60000 -R spec --grep \"alert\" test/functional/ios/uicatalog\n-```\n-\n-For windows you have to use `set DEVICE=android` in cmd to run above tests, for\n-example:\n-\n-```center\n-set DEVICE=android\n-mocha -t 60000 -R spec test/functional/android/apidemos/alerts-specs.js\n-```\n-\n-NOTE: For Android, you will need an emulator/device with screen size of 4.0\"\n-(480x800). Some tests might fail on a different screen size.\n-\n-`DEVICE` must be set to a valid value: `ios71`, `ios6`, `android`, `selendroid`\n+Before committing code, please run `gulp once` to execute some basic tests and\n+check your changes against code quality standards."
    },
    {
      "sha": "7226fa74e67406aca4a1ff343b0aa22fe6697e69",
      "filename": "docs/en/contributing-to-appium/appium-packages.md",
      "status": "added",
      "additions": 258,
      "deletions": 0,
      "changes": 258,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/docs/en/contributing-to-appium/appium-packages.md",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/docs/en/contributing-to-appium/appium-packages.md",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/docs/en/contributing-to-appium/appium-packages.md?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -0,0 +1,258 @@\n+# Appium in a Nutshell\n+\n+![Appium packages](./appium-packages.png)\n+\n+## appium\n+- runs basic checks\n+  - node version (>= 0.12)\n+  - CLI arguments checks\n+    - contains all available and supported CLI arguments\n+    - check for deprecation and mutual exclusion\n+- put logging together\n+  - mixture out of npmlog, winston and appium-logger\n+- initiates AppiumDriver (extends Basedriver)\n+  - assigns iOS/Android/Selendroid/Fake driver to session\n+  - creates/deletes Appium session\n+- starts baseServer (appium-express)\n+  - passes routes given by driver\n+\n+## appium-express\n+- starts express server (allows x-domain-origin)\n+- initialises routes from AppiumDriver\n+- timeout handling\n+- serves a static page for test purposes\n+- connects req/res events to logger\n+\n+## mobile-json-wire-protocol\n+- provides list of Appium commands\n+- subclassed by drivers that will use the protocol\n+  - kind of middleware between client and driver\n+  - handles jwp proxy for driver\n+- contains error classes for all types of errors\n+  - sanitises error responses\n+- (un)wraps params to commands\n+- checks required params, validates params\n+\n+## appium-base-driver\n+- designed to have a single testing session per instantiation\n+- contains constraints on caps (platformName has to be present, etc)\n+- validates capabilities\n+- runs chain of promised commands with single concurrency\n+- handles session restart\n+- handles swipe options\n+- exports class (DeviceSettings) to manage device settings (get/update)\n+- contains basic commands\n+  - to find elements\n+  - create/delete sessions\n+  - handle timeouts\n+  - set/update device settings\n+- provides helper methods for commands\n+\n+## appium-ios-driver\n+- can also run as standalone server (has a small server part that extends from appium-express)\n+- supported strategies: \"name\", \"xpath\", \"id\", \"-ios uiautomation\", \"class name\", \"accessibility id”\n+- can start a simulator or a real device (if udid is given)\n+  - runs for each type a huge set of instructions\n+    - removeInstrumentsSocket\n+    - setBundleIdFromApp\n+    - createInstruments\n+    - runSimReset, isolateSimDevice, setLocale || runRealDeviceReset\n+    - setPreferences || runRealDeviceReset\n+    - startLogCapture\n+    - prelaunchSimulator || (noop)\n+    - startInstruments\n+    - onInstrumentsLaunch\n+    - configureBootstrap\n+    - setBundleId\n+    - setInitialOrientation\n+    - initAutoWebview\n+    - waitForAppLaunched\n+  - all instructions are helper methods within driver.js\n+- contains a more specific set of capability constraints\n+- has logic to build and run Safari (safari-launcher) using appium-xcode\n+- implements commands for iOS driver\n+  - Selenium commands are compiled to ui-automator commands\n+  - commands will be send out to uiAutoClient (appium-uiauto)\n+- connects to appium remote debugger\n+\n+## appium-xcode\n+- runs shell commands to return useful data from Xcode like\n+  - getPath\n+  - getVersion\n+  - getAutomationTraceTemplatePath\n+  - getMaxIOSSDK\n+  - …\n+- has an auto-retry built in\n+\n+## appium-uiauto\n+- wrapper for the iOS UI Automation framework\n+- talks to it via socket connection\n+- runs a command queue that get filled up by the sendCommand function\n+- handles responses (as a buffer) from the ui-automation framework\n+- uses osascript to rotate screenshots\n+- provides method to bootstrap simulator/realdevice (dynamic-bootstrap)\n+  - javascript files which are run in the iOS UI Automation context (not node)\n+  - responsible to execute actual iOS UI Automation commands\n+  - see [UIAutomation docs](https://developer.apple.com/library/ios/documentation/DeveloperTools/Reference/UIAutomationRef/)\n+  - command flow is like\n+    - Webdriver command -> iOS driver command -> uiauto-command\n+\n+## appium-instruments\n+- wrapper to run instruments commands\n+- a lot of exec calls to talk to instruments binary\n+- all of them take callbacks to propagate the result\n+- uses \"iwd\" (instruments without delay) packages which have to be compiled first\n+  - special Instruments package that gets rid of a delay between commands\n+  - contains also older versions of iwd instrument (v4 - v7)\n+\n+## appium-ios-log\n+- captures console, performance and crash logs from the iOS simulator or real device\n+- by either calling tail to grab logs from a system path (simulator devices)\n+- or by calling deviceconsole (real devices)\n+- performance logs are getting grabbed using the remote-debugger\n+- crash logs remain in “.crash” files on the system\n+\n+## appium-ios-simulator\n+- wrapper around iOS simulator app\n+  - start and shutdown (kill all) simulators\n+  - updating settings and locals\n+  - update/clean safari\n+  - grabs meta data about the simulator device\n+- uses simctl to talk to the simulator\n+- works for Xcode 6 and 7\n+\n+## authorize-ios\n+- utility that pre-authorizes Instruments to run UIAutomation scripts against iOS devices\n+- enables developer tools by calling “DevToolsSecurity —enable”\n+- authorises user as developer calling “authorizationdb\"\n+- changes ownerships of simulator directories\n+\n+## node-simctl\n+- wrapper around simctl binary (cli utility to control an iOS simulator)\n+- executed as a subcommand of xcrun (locate or invoke developer tools from the command-line)\n+- contains functions to\n+  - install/remove apps\n+  - launch and shutdown simulators\n+  - create/erase/delete devices\n+  - get list of devices\n+\n+## appium-cookies\n+- simple package to create and receive cookies\n+- used in the appium-ios-driver to implement jswonwire cookie commands within the web context\n+\n+## appium-chromedriver\n+- wrapper around the chrome driver\n+- downloads and installs chromedriver binaries\n+- launches, restarts and stops (or kills all) chrome instances\n+- uses appium-jsonwp-proxy to send json wire protocol commands to the driver\n+\n+## jsonwp-proxy\n+- allows to send json wire protocol commands to a server that understands it (browser drivers)\n+- parses response into json\n+- allows to proxy requests to a proxied server\n+- used for communication in appium-chromedriver and appium-selendroid-driver\n+\n+## appium-android-driver\n+- similar to appium-ios-driver it can run as standalone server\n+- automates native, hybrid and mobile web apps on emulators/simulators and real devices\n+- takes care of installing android packages to the device\n+- runs chromedriver sessions if desired\n+- contains a more specific set of capability constraints\n+- uses appium-adb to talk to the emulator/simulator/realdevice\n+- and appium-android-bootstrap to execute the actual commands\n+- contains helpers to figure out which web view belongs to which app package vice versa\n+\n+## appium-adb\n+- wrapper around the Android Debug Bridge (adb)\n+- contains a bunch of commands that are basically just rpc to the adb binary\n+- houses jar files to run for special use cases like signing, verifying apps or moving manifests\n+- allows special (mobile specific) emulator commands that are not related to the webdriver protocol like\n+  - locking the screen\n+  - press back button\n+  - press home button\n+  - set/get airplane mode\n+  - set/get wifi state\n+- captures logcat\n+- handles emulator/simulator actions (e.g. reboot)\n+\n+## appium-android-bootstrap\n+- JavaScript interface, and Java code, for interacting with Android UI Automator\n+- builds AppiumBootstrap.jar that contains logic to execute the commands\n+- counterpart to appium-uiauto\n+- once started it creates a web socket connection to the device\n+  - application provides start/shutdown/sendCommand interface\n+- command flow is like:\n+  - Selenium command -> appium-adb -> appium-android-bootstrap -> Java code using the Android UI Automator framework\n+\n+## appium-uiautomator\n+- starts and shutdowns uiautomator server given by appium-android-bootstrap jar build\n+- command flow is like\n+  - appium-android-bootstrap:start -> appium-uiautomator:start -> appium-adb:install bootstrap\n+\n+## appium-selendroid-driver\n+- similar to appium-android-driver it can run as standalone server\n+- downloads and installs Selendroid using appium-selendroid-installer\n+- contains several Selendroid specific logic to ensure a seamless integration\n+- contains a more specific set of capability constraints\n+- uses jsonwp-proxy to talk to the server\n+- used appium-adb to enable commands not implemented in Selendroid\n+\n+## appium-selendroid-installer\n+- contains and exports a setup logic to\n+  - download Selendroid\n+  - determine AndroidManifest location\n+  - determine Server APK location\n+  - extracting both files\n+  - copying and cleaning files\n+\n+## appium-android-ime\n+- allows to send and receive unicode characters from/to the Android device\n+- encodes text into UTF-7 sends it to the device and recodes it as Unicode\n+- used by appium-android-driver and appium-selendroid-driver\n+\n+## appium-doctor\n+- diagnoses, reports and fixes common Node, iOS and Android configuration issues before starting Appium\n+- exposes cli command “appium-doctor\"\n+- it checks for\n+  - Android:\n+    - android sdk exists and configured properly\n+    - env variables and path check\n+  - iOS:\n+    - xcode is installed (with command line tools)\n+    - dev tools security check\n+    - auth check\n+    - node binary check\n+\n+## appium-gulp-plugins\n+- dev package with custom plugins used accross appium modules (for Appium development only)\n+- contains task for\n+  - e2e and unit tests (with coverage reporting)\n+  - transpiling ES2016 into ES5\n+  - static code analysis (jshint)\n+  - watch task for dev\n+\n+## appium-remote-debugger\n+- RPC client to connect Appium to iOS webviews\n+- can connect to WebKit devtools\n+- for iOS only\n+- has two rpc client classes\n+  - remote-debugger-rpc-client: uses tcp6 that connects to localhost:27753\n+  - webkit-rpc-client: uses WebSockets to connect to ws://localhost:27753/devtools/page/${pageId}\n+\n+## node-teen_process\n+- helper module that exposes:\n+  - exec: ES7 (async/await) implementation of exec that uses spawn under the hood\n+  - SubProcess: cuts down boilerplate when using spawn (especially when using in an async/await context)\n+\n+## appium-logger\n+- basic logger defaulting to npmlog with special consideration for running tests\n+- exposes getLogger function that gets used by almost all Appium packages\n+  - defers to already-running logger if there is one, so everything bubbles up\n+\n+## appium-support\n+- utility functions used to support libs used across appium packages.\n+- provides promise wrappers for some common operations like\n+  - system methods (isWindows, isLinux …)\n+  - utility methods like hasValue, escapeSpace\n+  - a bunch of fs methods\n+  - plist helpers for parsing and updating plist files"
    },
    {
      "sha": "e289347d487df4055f82717b52d4efa073ef5e33",
      "filename": "docs/en/contributing-to-appium/appium-packages.png",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/docs/en/contributing-to-appium/appium-packages.png",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/docs/en/contributing-to-appium/appium-packages.png",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/docs/en/contributing-to-appium/appium-packages.png?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "4dd029ead471fc548d932964d453c7e7ec721506",
      "filename": "docs/en/contributing-to-appium/credits.md",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/docs/en/contributing-to-appium/credits.md",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/docs/en/contributing-to-appium/credits.md",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/docs/en/contributing-to-appium/credits.md?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -2,7 +2,7 @@\n \n ###  These are the projects that inspired us, or are depended upon to make Appium awesome.\n \n-* [Apple UIAutomation](http://developer.apple.com/library/ios/#documentation/DeveloperTools/Reference/UIAutomationRef/_index.html)\n+* [Apple UIAutomation](https://developer.apple.com/library/ios/documentation/DeveloperTools/Reference/UIAutomationRef/)\n * [GhostDriver](https://github.com/detro/ghostdriver)\n * [IOS Auto](https://github.com/penguinho/applecart)\n * [IOS Driver](https://github.com/ios-driver/ios-driver)"
    },
    {
      "sha": "a7205452a53f2bcca2ebb0752e7f410e6ab10143",
      "filename": "docs/en/contributing-to-appium/developers-overview.md",
      "status": "added",
      "additions": 152,
      "deletions": 0,
      "changes": 152,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/docs/en/contributing-to-appium/developers-overview.md",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/docs/en/contributing-to-appium/developers-overview.md",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/docs/en/contributing-to-appium/developers-overview.md?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -0,0 +1,152 @@\n+## A Developer's Overview of Appium\n+\n+Before reading this document, please ensure that you have read and understood\n+the more general [introduction to Appium\n+concepts](/docs/en/about-appium/intro.md) and the more general [contribution\n+instructions](/CONTRIBUTING.md).\n+\n+### Technical Vision\n+\n+Appium aims to be a Mobile JSONWP front-end for the best app automation\n+technologies. That's it. We want to take all the different useful automation\n+engines and smooth away their differences and gotchas by making Appium drivers\n+for them and bringing them under the umbrella of Appium itself. This is very\n+similar to the goal of the Selenium project. For our part, we want to have\n+every driver be an independent entity (separate repo, tests, etc...) even as it\n+uses shared libraries that make the development of an Appium driver as simple\n+and boilerplate-free as possible. We use modern JavaScript because JavaScript\n+is everywhere and it's easy for many developers to understand and contribute\n+back to.\n+\n+### Developer Community\n+\n+Anyone is welcome to become an Appium developer; just read this guide and get\n+some of your code merged, and you are one of us! If you stick around and help\n+a lot, we will also make you a committer so that you can continue to help the\n+community more easily. If you are developing code for Appium and have\n+questions, reach out to the developer community at\n+`appium-developers@googlegroups.com`. Note that this is a mailing list for\n+_development_ questions, not _usage_ questions or bug reports. Usage questions\n+belong on [discuss.appium.io](https://discuss.appium.io). The GitHub issue\n+tracker is for bug reports and feature requests only.\n+\n+### Architecture\n+\n+Appium is primarily a collection of [node.js](http://nodejs.org) packages that\n+combine to form a running node.js server. These packages are maintained\n+independently of one another and each have their own GitHub repo, CI, and\n+release process. Some packages (like `appium-ios-driver`) are large and add\n+significant functionality to Appium, while others play a support role and\n+expose one specific bit of functionality that is reused by other packages.\n+\n+For an overview of the package hierarchy and the role that each package plays,\n+please check out our [package\n+overview](/docs/en/contributing-to-appium/appium-packages.md) doc.\n+\n+### Transpilation\n+\n+Appium is written in a new form of JavaScript, called ES6 (or now ES2015).\n+Because this version of the language is not yet supported natively by older\n+versions of node.js, Appium code is _transpiled_ to ES5 (the more\n+widely-supported version of JS). This transpilation process must occur before\n+any code is run. In addition to the new language features of ES6, we have\n+adopted two very important keywords from the _subsequent_ version of JS, namely\n+`async` and `await`, which assist in writing asynchronous code cleanly. Because\n+of the transpilation step, Appium packages include tools which watch code for\n+changes and automatically re-transpile the code. Usually, the same tool will\n+automatically run unit tests as well to ensure that nothing small has broken.\n+Most Appium packages have this as the default behavior when running `gulp`.\n+\n+### Linting and Style\n+\n+It's important for all of Appium's JS to look and feel the same. This includes\n+style conventions as well as coding patterns and which libraries we use to\n+solve various problems. You should get familiar with our new [ES2015 Style\n+Guide](/docs/en/contributing-to-appium/style-guide-2.0.md). When transpiling,\n+Appium packages will automatically run JSHint or other lint tools and provide\n+warning or error feedback if the code doesn't conform to our style. These tools\n+are not necessarily exhaustive of the kinds of style issues we care about, so\n+we may also mention style issues in our reviews. This isn't to be nit-picky but\n+to have a clean, consistent, and readable codebase!\n+\n+### Submitting Code\n+\n+Getting your code into Appium is easy: just submit a PR to one of our repos and\n+engage with the maintainers in the review process. We have a number of\n+requirements for code submissions (but don't worry! If the following seems like\n+a lot, we will helpfully and patiently walk you through each step. Just send in\n+your PR and we'll go from there):\n+\n+* Follow the style of the surrounding code and our Style Guide\n+* Atomic commits--one commit per logical change (i.e., make sure that commits don't need to come in a group in order for the program to work. It should work at any given commit). Usually this means one commit per PR. You'll want to get very familiar with `git rebase -i` and squashing!\n+* No merge commits: always rebase on top of latest master (or whatever other branch you're asking to merge into) before submitting your PR.\n+* Almost all changes should have tests. Bugfixes should at the least have unit tests that prove that the bug has been fixed. New features should have unit tests and in most cases e2e tests to prove that the feature actually works. We will be happy to walk you through the test creation process. Reading the surrounding test code is a good place to start. Our CI systems usually run test coverage statistics and we will likely not merge code that decreases test coverage.\n+\n+If you do all of these things before submission, your code will almost\n+certainly be accepted very quickly! Of course, if you're thinking of making\n+a change to Appium that requires a lot of work, you might reach out to the\n+developers list to make sure that the change is in line with our philosophy and\n+in principle something that we'll accept before you get going.\n+\n+### Testing\n+\n+Always make sure that your changes are tested! In addition to writing unit and\n+e2e tests, make sure you run existing tests before you begin to make changes\n+and before you push code to be reviewed. We do have CI set up for every Appium\n+repository as a safety net for reviewers to know whether the code they are\n+reviewing has passed muster. Running tests in any Appium package is easy!\n+Unless the README says otherwise, here are the things you can do:\n+\n+```\n+gulp                    # watch directory to re-transpile on code change, and run unit tests\n+gulp once               # same as above but don't watch\n+gulp unit-test          # transpile and run unit tests\n+gulp e2e-test           # transpile and run end-to-end/functional tests\n+_FORCE_LOGS=1 <command> # show module log output during test run\n+```\n+\n+Note that we have a convention for unit test files to end in `-specs.js` and\n+for e2e test files to end in `-e2e-specs.js`.\n+\n+### Releasing\n+\n+The release process for any Appium module other than the main Appium package is\n+pretty straightforward (note that you will need to be an NPM owner for the\n+package if you want to publish it. Ownership is managed by the Appium\n+committers; talk to @jlipps or @imurchie if you believe you should be an owner\n+and are not):\n+\n+0. `rm -rf node_modules && npm install` and run tests to make sure a clean install works.\n+0. Determine whether we have a patch (bugfix), minor (feature), or major (breaking) release according to the principles of [SemVer](http://semver.org/) (see also this explanation of [how SemVer works with NPM](https://docs.npmjs.com/getting-started/semantic-versioning)).\n+0. Update the CHANGELOG and/or README with any appropriate changes and commit. Most subpackages don't have a CHANGELOG.\n+0. Run `npm version <version-type>` with the appropriate version type.\n+0. Push the appropriate branch to GitHub, and don't forget to include the `--tags` flag to include the tag just created by `npm version`.\n+0. Run `npm publish` (with `--tag beta` if this isn't an official release).\n+\n+For the main Appium packages, all the above steps must be taken, but with\n+several changes. One reason is that for the main package we use NPM shrinkwrap\n+to ensure dependencies don't change between installations. Another reason is\n+that we develop on master and release on various branches. The way it works is\n+as follows: we always develop and add new code to master. When we are ready to\n+make a new minor or major release (i.e., `1.5.0` or `2.0.0`), we create\n+a release branch (`1.5` or `2.0` respectively). We then publish off of that\n+branch. As we feel the need to make patch releases, we first pull the patch\n+into master, then cherry-pick individual patches to the release branch (perhaps\n+even multiple release branches). Then we again publish from those branches with\n+the updated patch version (`1.5.1` or `2.0.1` for example).\n+\n+0. Remove the NPM shrinkwrap JSON file.\n+0. `rm -rf node_modules && npm install` and run tests to make sure a clean install works.\n+0. `rm -rf node_modules && npm install --production` to get just the production deps.\n+0. `npm shrinkwrap` to write the new NPM shrinkwrap JSON file.\n+0. Determine whether we have a patch (bugfix), minor (feature), or major (breaking) release according to the principles of SemVer.\n+0. Update `package.json` with the appropriate new version.\n+0. Update the CHANGELOG/README with appropriate changes and submit for review as a PR, along with shrinkwrap and `package.json` changes. Wait for it to be merged, then pull it into the release branch.\n+0. Create a tag of the form `v<version>` on the release branch (usually a minor branch like `1.5` or `1.4`), with: `git tag -a v<version>`, e.g., `git tag -a 1.5.0`. This is not necessary for beta versions.\n+0. Push the tag to upstream: `git push --tags <remote> <branch>`\n+0. Run `npm publish` (with `--tag beta` if this isn't an official release).\n+0. Update the docs at appium.io. Check out the appium.io repo from github, check out the `gh-pages` branch and pull latest. Run `rake publish`.\n+0. Create a new release on GitHub: go to `https://github.com/appium/appium/releases/tag/v<VERSION>` and hit \"Edit Tag\". Make the release name `<VERSION>` (e.g., `2.0.5`), then paste in the changelog (but not the changelog header for this version). If it's a beta release, mark as pre-release.\n+0. Create a new post on discuss.appium.io announcing the release. Post it in the \"News\" category. Paste in the changelog and any choice comments. Pin it and unpin the previous release post.\n+0. Notify Appium.app and Appium.exe of the new build so that new GUIs can be released.\n+0. Notify @jlipps to so he can tweet a link to the discuss post."
    },
    {
      "sha": "78de3a3283a409d8d9a497d43b7bddc61fcbaa46",
      "filename": "docs/en/contributing-to-appium/grunt.md",
      "status": "removed",
      "additions": 0,
      "deletions": 32,
      "changes": 32,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/docs/en/contributing-to-appium/grunt.md",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/docs/en/contributing-to-appium/grunt.md",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/docs/en/contributing-to-appium/grunt.md?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,32 +0,0 @@\n-## Appium grunt commands\n-\n-[Grunt](http://gruntjs.com) is like make for Node.js! We use it to automate all\n-kinds of appium dev tasks. Here's what you can do:\n-\n-|Task|Description|\n-|----|-----------|\n-|grunt lint|Run JSLint|\n-|grunt test|Run the unit tests|\n-|grunt unit|Run the unit tests|\n-|grunt getSampleCode|Download sample code and apps. Accepts `:hardcore` parameter|\n-|grunt buildApp:&lt;AppName&gt;:&lt;SDK&gt;|Build an iOS app for the iPhone Simulator.  Expects there to be a .app at `sample-code/apps/<AppName>/build/Release-iphonesimulator/<AppName>.app`. Default SDK is 'iphonesimulator7.1'|\n-|grunt signApp:&lt;certName&gt;|Signs the test app with an absolute path to an iOS dev certificate|\n-|grunt authorize|Authorize your simulator to run without prompting|\n-|grunt log|Tail appium.log (useful when running tests)|\n-|grunt configAndroidBootstrap|Configure the android bootstrap jar so it can be built with ant|\n-|grunt buildAndroidBootstrap|Build the android bootstrap jar with ant|\n-|grunt buildSelendroidServer|Build the selendroid server|\n-|grunt configAndroidApp:&lt;AppName&gt;|Configure an android test app so it can be built with ant. Expects an android project at `sample-code/apps/<AppName>`|\n-|grunt buildAndroidApp:&lt;AppName&gt;|Build an android app using ant. Expects the app to be at `sample-code/apps/<AppName>`|\n-|grunt installAndroidApp:&lt;AppName&gt;|Installs an android app to the currently running emulator or device|\n-|grunt docs|Generate docs|\n-|grunt generateAppiumIo|Take Appium's README.md and turn it into HTML for getting-started.html of appium.io|\n-|grunt setConfigVer:&lt;device&gt;|Say that &lt;device&gt; is configured for the version of Appium listed in package.json|\n-\n-### Miscellaneous notes\n-\n-By default, `grunt buildApp` builds apps using the iPhone 7.1 simulator SDK.\n-You can overwrite the simulator by passing another SDK to grunt (to figure out\n-which SDKs you have available, try running `xcodebuild -showsdks`):\n-\n-    > grunt buildApp:UICatalog:iphonesimulator6.1"
    },
    {
      "sha": "2d35ad0f378188b1cbf90a8aa8b12d521d8976db",
      "filename": "docs/en/contributing-to-appium/gulp.md",
      "status": "added",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/docs/en/contributing-to-appium/gulp.md",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/docs/en/contributing-to-appium/gulp.md",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/docs/en/contributing-to-appium/gulp.md?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -0,0 +1,15 @@\n+## Appium gulp commands\n+\n+[Gulp](http://gulpjs.com) is like make for Node.js! We use it to automate all\n+kinds of appium dev tasks. Here's what you can do:\n+\n+|Task|Description|\n+|----|-----------|\n+|gulp once|Cleans, lints, transpiles and runs unit tests|\n+|gulp watch|Automatically runs `gulp once` when code changes|\n+|gulp lint|Runs JSLint|\n+|gulp jshint|Runs JSHint|\n+|gulp transpile|Transpiles our ES7/ES2015 code to ES5, generates `/build` directory + contents|\n+|gulp unit-test|Runs unit tests|\n+|gulp e2e-test|Runs e2e tests|\n+|gulp docs|Generates docs/en/writing-running-appium/server-args.md doc|"
    },
    {
      "sha": "9623b3cfad16243c3af19736ea17f39e6d4c0aef",
      "filename": "docs/en/contributing-to-appium/style-guide-2.0.md",
      "status": "added",
      "additions": 256,
      "deletions": 0,
      "changes": 256,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/docs/en/contributing-to-appium/style-guide-2.0.md",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/docs/en/contributing-to-appium/style-guide-2.0.md",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/docs/en/contributing-to-appium/style-guide-2.0.md?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -0,0 +1,256 @@\n+## Style guide for contributors\n+\n+Thanks for your contribution to Appium! Here are the principles we use when\n+writing javascript. Please conform to these so we can merge your pull request\n+ without going back and forth about style. The main principle is: *make your\n+ code look like the surrounding code*.\n+\n+### Rebasing\n+\n+Commits in a pull request should consist of [logical changes](https://github.com/appium/appium/pull/920#issuecomment-21588553).\n+If there are multiple authors, make sure each author has their own commit.\n+It's not a good idea to modify author information. Merge commits should be\n+rebased out of pull requests.\n+\n+### Linting\n+\n+All code (except for code in `bootstrap.js` which uses proprietary Apple\n+methods) must pass JSLint. To check your code, you can simply run `grunt\n+lint` from the Appium repo dir. If you've created a new .js file,\n+please make sure it is covered by the wildcards in `grunt.js` or that it is\n+added specifically.\n+\n+It's easy to have your code linted as you type, which makes the whole process\n+much smoother. We like [jshint](http://www.jshint.com),\n+which has integrations with a lot of source code editors. The file `\n+.jshintrc` is checked into the repo, so by adding jshint to your editor, you'll\n+take advantage of the linting.\n+\n+Since jshint does not enforce code style anymore, we also use\n+[jscs](https://github.com/mdevils/node-jscs), for which it also exists some\n+source editor integrations.\n+\n+These configuration files define the warnings you will see in your favorite\n+editor. See [this page for jshint](http://www.jshint.com/platforms/) and\n+[this page for jscs](https://github.com/mdevils/node-jscs#friendly-packages) to\n+get the list of editors and platforms supported and how setup your editor for\n+automatic linting.\n+\n+### Style notes\n+\n+We use a future version of JavaScript and take advantage of the Babel\n+transpiler to render it down to what is supported by current versions of\n+Node.js. We use ES2015 (link needed) (formerly called ES6) with some\n+not-yet-standard features, namely `async/await` (link needed). This style guide\n+must be followed diligently in all Appium contributions!\n+\n+*   Use two spaces for indentation, *no tabs*\n+*   Use single spaces around operators\n+\n+    ```javascript\n+    var x = 1;\n+    ```\n+    not\n+    ```javascript\n+    var x=1;\n+    ```\n+\n+*   Spaces after commas and colons in lists, objects, function calls, etc...\n+\n+    ```javascript\n+    var x = myFunc(\"lol\", {foo: bar, baz: boo});\n+    ```\n+    not\n+    ```javascript\n+    var x = myFunc(\"lol\",{foo:bar,baz:boo});\n+    ```\n+\n+*   Always end statements with semicolons\n+*   Comma-first\n+\n+    ```javascript\n+    var x = {\n+      foo: 'bar'\n+    , baz: 'boo'\n+    , wuz: 'foz'\n+    };\n+    ```\n+\n+*   Brackets for `function`, `if`, etc... go on same line, `else` gets sandwiched\n+\n+    ```javascript\n+    if (foo === bar) {\n+      // do something\n+    } else {\n+      // do something else\n+    }\n+    ```\n+\n+*   Space after `if`, `for`, and `function`:\n+\n+    ```javascript\n+    if (foo === bar) {\n+    ```\n+    ```javascript\n+    for (var i = 0; i < 10; i ++) {\n+    ```\n+    ```javascript\n+    var lol = function (foo) {\n+    ```\n+    not\n+    ```javascript\n+    if(foo === bar) {\n+    ```\n+    ```javascript\n+    for(var i = 0; i < 10; i ++) {\n+    ```\n+    ```javascript\n+    var lol = function(foo) {\n+    ```\n+\n+*   Avoid bracketless `if` for one-liners:\n+\n+    ```javascript\n+    if (foo === bar) {\n+      foo++;\n+    }\n+    ```\n+    not\n+    ```javascript\n+    if (foo === bar)\n+      foo++;\n+    ```\n+    except in the case of short-circuiting to a callback in the event of an error\n+    ```javascript\n+    if (err) return cb(err);\n+    ```\n+\n+*   Use `===`, not `==`, and `!==`, not `!=` for no surprises\n+*   Line length shouldn't be longer than 79 characters\n+*   Break up long strings like this:\n+\n+    ```javascript\n+    myFunc(\"This is a really long string that's longer \" +\n+            \"than 79 characters so I broke it up, woo\");\n+    ```\n+\n+*   Comments should line up with code\n+\n+    ```javascript\n+    if (foo === 5) {\n+      myFunc(foo);\n+      // foo++;\n+    }\n+    ```\n+    not\n+    ```javascript\n+    if (foo === 5) {\n+      myFunc(foo);\n+    //foo++;\n+    }\n+    ```\n+\n+*   Subclassing by extending prototypes\n+\n+    ```javascript\n+    var _ = require('underscore');\n+\n+    var SuperClass = function () {\n+      this.init();\n+    };\n+\n+    SuperClass.prototype.init = function () {\n+      // initialize\n+    };\n+\n+    // Create a subclass\n+\n+    var SubClass = function () {\n+        this.init();\n+    };\n+\n+    _.extend(SubClass.prototype, SuperClass.prototype);\n+    ```\n+\n+*   Callbacks are always last in function definitions\n+\n+    ```javascript\n+    var foo = function (arg1, arg2, cb) {\n+      ...\n+    };\n+    ```\n+\n+*   Define functions as variables\n+\n+    ```javascript\n+    var myFunc = function (a, b, c) {};\n+    ```\n+    not\n+    ```javascript\n+    function myFunc (a, b, c) {}\n+    ```\n+\n+*   Variable names should be camelCased:\n+\n+    ```javascript\n+    var myVariable = 42;\n+    ```\n+    not\n+    ```javascript\n+    var my_variable = 42;\n+    ```\n+\n+*    Check for undefined\n+\n+    ```javascript\n+    typeof myVariable === \"undefined\"\n+    ```\n+    not\n+    ```javascript\n+    myVariable === undefined\n+    ```\n+\n+*   Define a variable with a default value\n+\n+    ```javascript\n+    var x = y || z;\n+    ```\n+    not\n+    ```javascript\n+    var x = y ? y : z;\n+    ```\n+\n+### Test Style:\n+\n+Keep on the same line if it makes sense semantically and length is not an issue:\n+\n+Examples:\n+\n+```javascript\n+  driver.elementByTagName('el1').should.become(\"123\")\n+    .nodeify(done);\n+\n+  driver\n+    .elementsByTagName('el1').should.eventually.have.length(0)\n+    .nodeify(done);\n+```\n+\n+Alternatively use extra indents to improve readability:\n+\n+```javascript\n+h.driver\n+  .elementById('comments')\n+    .clear()\n+    .click()\n+    .keys(\"hello world\")\n+    .getValue()\n+    .should.become(\"hello world\")\n+  .elementById('comments')\n+    .getValue().should.become(\"hello world\")\n+  .nodeify(done);\n+\n+h.driver\n+  .execute(\"'nan'--\")\n+    .should.be.rejectedWith(\"status: 13\")\n+  .nodeify(done);\n+```"
    },
    {
      "sha": "ad4d174cd0e40bd74c328b8dd6afb1412edbb611",
      "filename": "docs/en/writing-running-appium/appium-bindings.md",
      "status": "modified",
      "additions": 8,
      "deletions": 1,
      "changes": 9,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/docs/en/writing-running-appium/appium-bindings.md",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/docs/en/writing-running-appium/appium-bindings.md",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/docs/en/writing-running-appium/appium-bindings.md?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -104,7 +104,14 @@ driver.BackgroundApp(5);\n \n ### Hide Keyboard\n \n-Hide the keyboard.\n+Hide the keyboard. *Note*: on iOS, this helper function is not guaranteed to\n+work. There is no automation hook for hiding the keyboard, and apps are free to\n+allow the user to hide the keyboard using any of a variety of different\n+strategies, whether that is tapping outside the keyboard, swiping down, etc...\n+We encourage you, rather than using this method, to think about how a _user_\n+would hide the keyboard in your app, and tell Appium to do that instead (swipe,\n+tap on a certain coordinate, etc...). That being said, the default behavior\n+here might help you.\n \n ```ruby\n # ruby"
    },
    {
      "sha": "3f24bdaa62213026438624fee08ca3016026bf28",
      "filename": "docs/en/writing-running-appium/caps.md",
      "status": "modified",
      "additions": 7,
      "deletions": 3,
      "changes": 10,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/docs/en/writing-running-appium/caps.md",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/docs/en/writing-running-appium/caps.md",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/docs/en/writing-running-appium/caps.md?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -11,7 +11,6 @@\n |`app`|The absolute local path _or_ remote http URL to an `.ipa` or `.apk` file, or a `.zip` containing one of these. Appium will attempt to install this app binary on the appropriate device first. Note that this capability is not required for Android if you specify `appPackage` and `appActivity` capabilities (see below). Incompatible with `browserName`.|`/abs/path/to/my.apk` or `http://myapp.com/app.ipa`|\n |`browserName`|Name of mobile web browser to automate. Should be an empty string if automating an app instead.|'Safari' for iOS and 'Chrome', 'Chromium', or 'Browser' for Android|\n |`newCommandTimeout`|How long (in seconds) Appium will wait for a new command from the client before assuming the client quit and ending the session|e.g. `60`|\n-|`autoLaunch`|Whether to have Appium install and launch the app automatically. Default `true`|`true`, `false`|\n |`language`| (Sim/Emu-only) Language to set for the simulator / emulator |e.g. `fr`|\n |`locale`| (Sim/Emu-only) Locale to set for the simulator / emulator |e.g. `fr_CA`|\n |`udid`| Unique device identifier of the connected physical device|e.g. `1ae203187fc012g`|\n@@ -34,6 +33,7 @@\n |`androidCoverage`| Fully qualified instrumentation class. Passed to -w in adb shell am instrument -e coverage true -w | `com.my.Pkg/com.my.Pkg.instrumentation.MyInstrumentation`|\n |`enablePerformanceLogging`| (Chrome and webview only) Enable Chromedriver's performance logging (default `false`)| `true`, `false`|\n |`androidDeviceReadyTimeout`|Timeout in seconds used to wait for a device to become ready after booting|e.g., `30`|\n+|`adbPort`|Port used to connect to the ADB server (default `5037`)|`5037`|\n |`androidDeviceSocket`|Devtools socket name. Needed only when tested app is a Chromium embedding browser. The socket is open by the browser and Chromedriver connects to it as a devtools client.|e.g., `chrome_devtools_remote`|\n |`avd`| Name of avd to launch|e.g., `api19`|\n |`avdLaunchTimeout`| How long to wait in milliseconds for an avd to launch and connect to ADB (default `120000`)| `300000`|\n@@ -56,6 +56,8 @@\n |`noSign`| Skip checking and signing of app with debug keys, will work only with UiAutomator and not with selendroid, default `false`| `true` or `false`|\n |`ignoreUnimportantViews`| Calls the `setCompressedLayoutHierarchy()` uiautomator function. This capability can speed up test execution, since Accessibility commands will run faster ignoring some elements. The ignored elements will not be findable, which is why this capability has also been implemented as a toggle-able *setting* as well as a capability. Defaults to `false` | `true` or `false`\n |`disableAndroidWatchers`| Disables android watchers that watch for application not responding and application crash, this will reduce cpu usage on android device/emulator. This capability will work only with UiAutomator and not with selendroid, default `false`| `true` or `false`|\n+|`chromeOptions`| Allows passing chromeOptions capability for ChromeDriver. For more information see [chromeOptions](https://sites.google.com/a/chromium.org/chromedriver/capabilities) | `chromeOptions: {args: ['--disable-popup-blocking']}` |\n+|`recreateChromeDriverSessions`| Kill ChromeDriver session when moving to a non-ChromeDriver webview. Defaults to `false` | `true` or `false`|\n \n ### iOS Only\n \n@@ -69,8 +71,8 @@\n |`launchTimeout`| Amount of time in ms to wait for instruments before assuming it hung and failing the session|e.g. `20000`|\n |`locationServicesEnabled`| (Sim-only) Force location services to be either on or off. Default is to keep current sim setting.|`true` or `false`|\n |`locationServicesAuthorized`| (Sim-only) Set location services to be authorized or not authorized for app via plist, so that location services alert doesn't pop up. Default is to keep current sim setting. Note that if you use this setting you MUST also use the `bundleId` capability to send in your app's bundle ID.|`true` or `false`|\n-|`autoAcceptAlerts`| Accept iOS privacy access permission alerts (e.g., location, contacts, photos) automatically if they pop up. Default is false.|`true` or `false`|\n-|`autoDismissAlerts`| Dismiss iOS privacy access permission alerts (e.g., location, contacts, photos) automatically if they pop up. Default is false.|`true` or `false`|\n+|`autoAcceptAlerts`| Accept all iOS alerts automatically if they pop up. This includes privacy access permission alerts (e.g., location, contacts, photos). Default is false.|`true` or `false`|\n+|`autoDismissAlerts`| Dismiss all iOS alerts automatically if they pop up. This includes privacy access permission alerts (e.g., location, contacts, photos). Default is false.|`true` or `false`|\n |`nativeInstrumentsLib`| Use native intruments lib (ie disable instruments-without-delay).|`true` or `false`|\n |`nativeWebTap`| (Sim-only) Enable \"real\", non-javascript-based web taps in Safari. Default: `false`. Warning: depending on viewport size/ratio this might not accurately tap an element|`true` or `false`|\n |`safariInitialUrl`| (Sim-only) (>= 8.1) Initial safari url, default is a local welcome page | e.g. `https://www.github.com` |\n@@ -85,3 +87,5 @@\n |`sendKeyStrategy`| strategy to use to type test into a test field. Simulator default: `oneByOne`. Real device default: `grouped` |`oneByOne`, `grouped` or `setValue`|\n |`screenshotWaitTimeout`| Max timeout in sec to wait for a screenshot to be generated. default: 10 |e.g., `5`|\n |`waitForAppScript`| The ios automation script used to determined if the app has been launched, by default the system wait for the page source not to be empty. The result must be a boolean |e.g. `true;`, `target.elements().length > 0;`, `$.delay(5000); true;` |\n+|`webviewConnectRetries`| Number of times to send connection message to remote debugger, to get webview. Default: `8` |e.g., `12`|\n+|`appName`| The display name of the application under test. Used to automate backgrounding the app in iOS 9+.|e.g., `UICatalog`|"
    },
    {
      "sha": "628145f93147d0eb681c1996325922490be8156a",
      "filename": "docs/en/writing-running-appium/default-capabilities-arg.md",
      "status": "added",
      "additions": 51,
      "deletions": 0,
      "changes": 51,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/docs/en/writing-running-appium/default-capabilities-arg.md",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/docs/en/writing-running-appium/default-capabilities-arg.md",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/docs/en/writing-running-appium/default-capabilities-arg.md?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -0,0 +1,51 @@\n+## The --default-capabilities flag\n+\n+Appium 1.5 does away with most CLI flags; the remainder can be converted into JSON and made part of the `--default-capabilities` flag. For example:\n+\n+```\n+--default-capabilities '{\"app\": \"myapp.app\", \"deviceName\": \"iPhone Simulator\"}'\n+```\n+\n+**Windows users** will need to escape the quotes: `--default-capabilities \"{\\\"app\\\": \\\"myapp.app\\\"}\"`\n+\n+\n+\n+| Flag                      | JSON key                |\n+|---------------------------|-------------------------|\n+| --keep-artifacts          | keepArtifacts           |\n+| --platform-name           | platformName            |\n+| --platform-version        | platformVersion         |\n+| --automation-name         | automationName          |\n+| --device-name             | deviceName              |\n+| --browser-name            | browserName             |\n+| --app                     | app                     |\n+| --launch-timeout          | launchTimeout           |\n+| --language                | language                |\n+| --locale                  | locale                  |\n+| --udid                    | udid                    |\n+| --orientation             | orientation             |\n+| --no-reset                | noReset                 |\n+| --full-reset              | rullReset               |\n+| --app-pkg                 | appPackage              |\n+| --app-activity            | appActivity             |\n+| --app-wait-package        | appWaitPackage          |\n+| --app-wait-activity       | appWaitActivity         |\n+| --device-ready-timeout    | deviceReadyTimeout      |\n+| --android-coverage        | androidCoverage         | \n+| --avd                     | avd                     |\n+| --avd-args                | avdArgs                 |\n+| --use-keystore            | useKeystore             |\n+| --keystore-path           | keystorePath            |\n+| --keystore-password       | keystorePassword        |\n+| --key-alias               | keyAlias                |\n+| --key-password            | keyPassword             |\n+| --intent-action           | intentAction            |\n+| --intent-category         | intentCategory          |\n+| --intent-flags            | intentFlags             |\n+| --intent-args             | optionalIntentArguments |\n+| --dont-stop-app-on-reset  | dontStopAppOnReset      |\n+| --calendar-format         | calendarFormat          |\n+| --native-instruments-lib  | nativeInstrumentsLib    |\n+| --keep-keychains          | keepKeyChains           |\n+| --localizable-strings-dir | localizableStringsDir   |\n+| --show-ios-log            | showIOSLog              |"
    },
    {
      "sha": "a7cb27a8b9d7754e774a01eccc397429293d1477",
      "filename": "docs/en/writing-running-appium/ios_predicate.md",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/docs/en/writing-running-appium/ios_predicate.md",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/docs/en/writing-running-appium/ios_predicate.md",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/docs/en/writing-running-appium/ios_predicate.md?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -1,7 +1,7 @@\n ## iOS Predicate\n \n It is worth looking at *'-ios uiautomation'* search strategy with **Predicates**.\n-[UIAutomation JavaScript API](https://developer.apple.com/library/ios/documentation/DeveloperTools/Reference/UIAutomationRef/_index.html) has following methods which can are very useful.\n+[UIAutomation JavaScript API](https://developer.apple.com/library/ios/documentation/DeveloperTools/Reference/UIAutomationRef/) has following methods which can are very useful.\n \n ```center\n (UIAElement) UIAElementArray.firstWithPredicate(PredicateString predicateString)"
    },
    {
      "sha": "166fbf0c580395e1c0d0d9f64956b9d611576c39",
      "filename": "docs/en/writing-running-appium/mobile-web.md",
      "status": "modified",
      "additions": 8,
      "deletions": 17,
      "changes": 25,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/docs/en/writing-running-appium/mobile-web.md",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/docs/en/writing-running-appium/mobile-web.md",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/docs/en/writing-running-appium/mobile-web.md?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -77,7 +77,7 @@ Before you can run your tests against Safari on a real device you will need to:\n * Have the **ios-webkit-debug-proxy** installed, running and listening on port 27753 (see the\n [hybrid docs](/docs/en/advanced-concepts/hybrid.md#execution-against-a-real-ios-device) for instructions)\n * Turn on **web inspector** on iOS device (**settings > safari >\n-advanced**, only for iOS 6.0 and up)\n+advanced**)\n * Create a **provisioning profile** that can be used to deploy the SafariLauncherApp.\n \n To create a profile for the launcher go into the **Apple Developers Member Center** and:\n@@ -89,23 +89,14 @@ To create a profile for the launcher go into the **Apple Developers Member Cente\n   * **Step 5:** Download the profile and open it with a text editor.\n   * **Step 6:** Search for the **UUID** and the string for it is your **identity code**.\n \n-Now that you have a profile open a terminal and run the following commands:\n+Now simply include your UDID and device name in your desired capabilities:\n \n ```center\n-$ git clone https://github.com/appium/appium.git\n-$ cd appium\n-\n-# Option 1: You dont define any parameters and it will set the code signing identity to 'iPhone Developer'\n-$ ./reset.sh --ios --real-safari\n-\n-# Option 2: You define the code signing identity and allow xcode to select the profile identity code (if it can).\n-$ ./reset.sh --ios --real-safari --code-sign '<code signing idendity>'\n-\n-# Option 3: You define both the code signing identity and profile identity code.\n-$ ./reset.sh --ios --real-safari --code-sign '<code signing idendity>' --profile '<retrieved profile identity code>'\n-\n-# Once successfully configured and with the safari launcher built, start the server as per usual\n-$ node /lib/server/main.js -U <UDID>\n+{\n+  \"udid\": '...',\n+  \"deviceName\": '...',\n+  \"browserName\": \"Safari\"\n+}\n ```\n \n ### Running your test\n@@ -185,7 +176,7 @@ class ContextTests extends PHPUnit_Extensions_AppiumTestCase\n Pre-requisites:\n \n *  Make sure Chrome (an app with the package `com.android.chrome`) is installed on your device or emulator. Getting Chrome for the x86 version of the emulator is not currently possible without building Chromium, so you may want to run an ARM emulator and then copy a Chrome APK from a real device to get Chrome on an emulator.\n-*  If downloaded from [NPM](https://www.npmjs.org/package/appium), or running from the [.app](https://github.com/appium/appium-dot-app), nothing needs to be done. If running from source, the `reset` script will download ChromeDriver and put it in `build`. A particular version can be specified by passing the `--chromedriver-version` option (e.g., `./reset.sh --android --chromedriver-version 2.8`), otherwise the most recent one will be retrieved.\n+*  If downloaded from [NPM](https://www.npmjs.org/package/appium), or running from the [.app](https://github.com/appium/appium-dot-app), nothing needs to be done. If running from source, `npm install` will download ChromeDriver and put it in `node_modules/appium-android-driver/node_modules/appium-chromedriver/chromedriver`. A particular version can be specified by passing the `--chromedriver_version` config property (e.g., `npm install appium --chromedriver_version=\"2.16\"`), otherwise the most recent one will be retrieved.\n \n Then, use desired capabilities like these to run your test in Chrome:\n "
    },
    {
      "sha": "dd58b6448e3b3a5a0ca4447b4e6555ee675df24a",
      "filename": "docs/en/writing-running-appium/server-args.md",
      "status": "modified",
      "additions": 48,
      "deletions": 44,
      "changes": 92,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/docs/en/writing-running-appium/server-args.md",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/docs/en/writing-running-appium/server-args.md",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/docs/en/writing-running-appium/server-args.md?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -1,8 +1,10 @@\n-# Appium server arguments\n+## Appium server arguments\n+\n+Many Appium 1.5 server arguments have been deprecated in favor of the [--default-capabilities flag](/docs/en/writing-running-appium/default-capabilities-arg.md).\n \n Usage: `node . [flags]`\n \n-## Server flags\n+### Server flags\n All flags are optional, but some are required in conjunction with certain others.\n \n \n@@ -12,77 +14,79 @@ All flags are optional, but some are required in conjunction with certain others\n |Flag|Default|Description|Example|\n |----|-------|-----------|-------|\n |`--shell`|null|Enter REPL mode||\n-|`--localizable-strings-dir`|en.lproj|IOS only: the relative path of the dir where Localizable.strings file resides |`--localizable-strings-dir en.lproj`|\n-|`--app`|null|IOS: abs path to simulator-compiled .app file or the bundle_id of the desired target on device; Android: abs path to .apk file|`--app /abs/path/to/my.app`|\n |`--ipa`|null|(IOS-only) abs path to compiled .ipa file|`--ipa /abs/path/to/my.ipa`|\n-|`-U`, `--udid`|null|Unique device identifier of the connected physical device|`--udid 1adsf-sdfas-asdf-123sdf`|\n |`-a`, `--address`|0.0.0.0|IP Address to listen on|`--address 0.0.0.0`|\n |`-p`, `--port`|4723|port to listen on|`--port 4723`|\n-|`-ca`, `--callback-address`|null|callback IP Address (default: same as address)|`--callback-address 127.0.0.1`|\n+|`-ca`, `--callback-address`|null|callback IP Address (default: same as --address)|`--callback-address 127.0.0.1`|\n |`-cp`, `--callback-port`|null|callback port (default: same as port)|`--callback-port 4723`|\n |`-bp`, `--bootstrap-port`|4724|(Android-only) port to use on device to talk to Appium|`--bootstrap-port 4724`|\n-|`-k`, `--keep-artifacts`|false|[DEPRECATED] no effect, trace is now in tmp dir by default and is  cleared before each run. Please also refer to the --trace-dir flag.||\n |`-r`, `--backend-retries`|3|(iOS-only) How many times to retry launching Instruments before saying it crashed or timed out|`--backend-retries 3`|\n |`--session-override`|false|Enables session override (clobbering)||\n-|`--full-reset`|false|(iOS) Delete the entire simulator folder. (Android) Reset app state by uninstalling app instead of clearing app data. On Android, this will also remove the app after the session is complete.||\n-|`--no-reset`|false|Don't reset app state between sessions (IOS: don't delete app plist files; Android: don't uninstall app before new session)||\n |`-l`, `--pre-launch`|false|Pre-launch the application before allowing the first session (Requires --app and, for Android, --app-pkg and --app-activity)||\n-|`-lt`, `--launch-timeout`|90000|(iOS-only) how long in ms to wait for Instruments to launch||\n |`-g`, `--log`|null|Also send log output to this file|`--log /path/to/appium.log`|\n |`--log-level`|debug|log level; default (console[:file]): debug[:debug]|`--log-level debug`|\n |`--log-timestamp`|false|Show timestamps in console output||\n |`--local-timezone`|false|Use local timezone for timestamps||\n-|`--log-no-colors`|false|Don't use colors in console output||\n+|`--log-no-colors`|false|Do not use colors in console output||\n |`-G`, `--webhook`|null|Also send log output to this HTTP listener|`--webhook localhost:9876`|\n-|`--native-instruments-lib`|false|(IOS-only) IOS has a weird built-in unavoidable delay. We patch this in appium. If you do not want it patched, pass in this flag.||\n-|`--app-pkg`|null|(Android-only) Java package of the Android app you want to run (e.g., com.example.android.myApp)|`--app-pkg com.example.android.myApp`|\n-|`--app-activity`|null|(Android-only) Activity name for the Android activity you want to launch from your package (e.g., MainActivity)|`--app-activity MainActivity`|\n-|`--app-wait-package`|false|(Android-only) Package name for the Android activity you want to wait for (e.g., com.example.android.myApp)|`--app-wait-package com.example.android.myApp`|\n-|`--app-wait-activity`|false|(Android-only) Activity name for the Android activity you want to wait for (e.g., SplashActivity)|`--app-wait-activity SplashActivity`|\n-|`--android-coverage`|false|(Android-only) Fully qualified instrumentation class. Passed to -w in adb shell am instrument -e coverage true -w |`--android-coverage com.my.Pkg/com.my.Pkg.instrumentation.MyInstrumentation`|\n-|`--avd`|null|(Android-only) Name of the avd to launch|`--avd @default`|\n-|`--avd-args`|null|(Android-only) Additional emulator arguments to launch the avd|`--avd-args -no-snapshot-load`|\n-|`--device-ready-timeout`|5|(Android-only) Timeout in seconds while waiting for device to become ready|`--device-ready-timeout 5`|\n |`--safari`|false|(IOS-Only) Use the safari app||\n-|`--device-name`|null|Name of the mobile device to use|`--device-name iPhone Retina (4-inch), Android Emulator`|\n-|`--platform-name`|null|Name of the mobile platform: iOS, Android, or FirefoxOS|`--platform-name iOS`|\n-|`--platform-version`|null|Version of the mobile platform|`--platform-version 7.1`|\n-|`--automation-name`|null|Name of the automation tool: Appium or Selendroid|`--automation-name Appium`|\n-|`--browser-name`|null|Name of the mobile browser: Safari or Chrome|`--browser-name Safari`|\n |`--default-device`, `-dd`|false|(IOS-Simulator-only) use the default simulator that instruments launches on its own||\n |`--force-iphone`|false|(IOS-only) Use the iPhone Simulator no matter what the app wants||\n |`--force-ipad`|false|(IOS-only) Use the iPad Simulator no matter what the app wants||\n-|`--language`|null|Language for the iOS simulator / Android Emulator|`--language en`|\n-|`--locale`|null|Locale for the iOS simulator / Android Emulator|`--locale en_US`|\n-|`--calendar-format`|null|(IOS-only) calendar format for the iOS simulator|`--calendar-format gregorian`|\n-|`--orientation`|null|(IOS-only) use LANDSCAPE or PORTRAIT to initialize all requests to this orientation|`--orientation LANDSCAPE`|\n |`--tracetemplate`|null|(IOS-only) .tracetemplate file to use with Instruments|`--tracetemplate /Users/me/Automation.tracetemplate`|\n-|`--instruments`|null|(IOS-only) custom path to the instruments commandline tool| `--instruments /path/to/instruments`|\n-|`--show-sim-log`|false|(IOS-only) if set, the iOS simulator log will be written to the console||\n-|`--show-ios-log`|false|(IOS-only) if set, the iOS system log will be written to the console||\n+|`--instruments`|null|(IOS-only) path to instruments binary|`--instruments /path/to/instruments`|\n |`--nodeconfig`|null|Configuration JSON file to register appium with selenium grid|`--nodeconfig /abs/path/to/nodeconfig.json`|\n |`-ra`, `--robot-address`|0.0.0.0|IP Address of robot|`--robot-address 0.0.0.0`|\n |`-rp`, `--robot-port`|-1|port for robot|`--robot-port 4242`|\n |`--selendroid-port`|8080|Local port used for communication with Selendroid|`--selendroid-port 8080`|\n |`--chromedriver-port`|9515|Port upon which ChromeDriver will run|`--chromedriver-port 9515`|\n |`--chromedriver-executable`|null|ChromeDriver executable full path||\n-|`--use-keystore`|false|(Android-only) When set the keystore will be used to sign apks.||\n-|`--keystore-path`|/Users/user/.android/debug.keystore|(Android-only) Path to keystore||\n-|`--keystore-password`|android|(Android-only) Password to keystore||\n-|`--key-alias`|androiddebugkey|(Android-only) Key alias||\n-|`--key-password`|android|(Android-only) Key password||\n |`--show-config`|false|Show info about the appium server configuration and exit||\n |`--no-perms-check`|false|Bypass Appium's checks to ensure we can read/write necessary files||\n-|`--command-timeout`|60|The default command timeout for the server to use for all sessions. Will still be overridden by newCommandTimeout cap||\n-|`--keep-keychains`|false|(iOS) Whether to keep keychains (Library/Keychains) when reset app between sessions||\n+|`--command-timeout`|60|The default command timeout for the server to use for all sessions (in seconds and should be less than 2147483). Will still be overridden by newCommandTimeout cap||\n |`--strict-caps`|false|Cause sessions to fail if desired caps are sent in that Appium does not recognize as valid for the selected device||\n |`--isolate-sim-device`|false|Xcode 6 has a bug on some platforms where a certain simulator can only be launched without error if all other simulator devices are first deleted. This option causes Appium to delete all devices other than the one being used by Appium. Note that this is a permanent deletion, and you are responsible for using simctl or xcode to manage the categories of devices used with Appium.||\n |`--tmp`|null|Absolute path to directory Appium can use to manage temporary files, like built-in iOS apps it needs to move around. On *nix/Mac defaults to /tmp, on Windows defaults to C:\\Windows\\Temp||\n |`--trace-dir`|null|Absolute path to directory Appium use to save ios instruments traces, defaults to <tmp dir>/appium-instruments||\n-|`--intent-action`|android.intent.action.MAIN|(Android-only) Intent action which will be used to start activity|`--intent-action android.intent.action.MAIN`|\n-|`--intent-category`|android.intent.category.LAUNCHER|(Android-only) Intent category which will be used to start activity|`--intent-category android.intent.category.APP_CONTACTS`|\n-|`--intent-flags`|0x10200000|(Android-only) Flags that will be used to start activity|`--intent-flags 0x10200000`|\n-|`--intent-args`|null|(Android-only) Additional intent arguments that will be used to start activity|`--intent-args 0x10200000`|\n-|`--dont-stop-app-on-reset`|false|(Android-only) When included, refrains from stopping the app before restart||\n |`--debug-log-spacing`|false|Add exaggerated spacing in logs to help with visual inspection||\n |`--suppress-adb-kill-server`|false|(Android-only) If set, prevents Appium from killing the adb server instance||\n+|`--async-trace`|false|Add long stack traces to log entries. Recommended for debugging only.||\n+|`--webkit-debug-proxy-port`|27753|(IOS-only) Local port used for communication with ios-webkit-debug-proxy|`--webkit-debug-proxy-port 27753`|\n+|`--default-capabilities`|{}|Set the default desired capabilities, which will be set on each session unless overridden by received capabilities. [More infomation](/docs/en/writing-running-appium/default-capabilities-arg.md). |`--default-capabilities '{\"app\": \"myapp.app\", \"deviceName\": \"iPhone Simulator\"}'`|\n+|`-k`, `--keep-artifacts`|false|[DEPRECATED] - no effect, trace is now in tmp dir by default and is cleared before each run. Please also refer to the --trace-dir flag.||\n+|`--platform-name`|null|[DEPRECATED] - Name of the mobile platform: iOS, Android, or FirefoxOS|`--platform-name iOS`|\n+|`--platform-version`|null|[DEPRECATED] - Version of the mobile platform|`--platform-version 7.1`|\n+|`--automation-name`|null|[DEPRECATED] - Name of the automation tool: Appium or Selendroid|`--automation-name Appium`|\n+|`--device-name`|null|[DEPRECATED] - Name of the mobile device to use|`--device-name iPhone Retina (4-inch), Android Emulator`|\n+|`--browser-name`|null|[DEPRECATED] - Name of the mobile browser: Safari or Chrome|`--browser-name Safari`|\n+|`--app`|null|[DEPRECATED] - IOS: abs path to simulator-compiled .app file or the bundle_id of the desired target on device; Android: abs path to .apk file|`--app /abs/path/to/my.app`|\n+|`-lt`, `--launch-timeout`|90000|[DEPRECATED] - (iOS-only) how long in ms to wait for Instruments to launch||\n+|`--language`|null|[DEPRECATED] - Language for the iOS simulator / Android Emulator|`--language en`|\n+|`--locale`|null|[DEPRECATED] - Locale for the iOS simulator / Android Emulator|`--locale en_US`|\n+|`-U`, `--udid`|null|[DEPRECATED] - Unique device identifier of the connected physical device|`--udid 1adsf-sdfas-asdf-123sdf`|\n+|`--orientation`|null|[DEPRECATED] - (IOS-only) use LANDSCAPE or PORTRAIT to initialize all requests to this orientation|`--orientation LANDSCAPE`|\n+|`--no-reset`|false|[DEPRECATED] - Do not reset app state between sessions (IOS: do not delete app plist files; Android: do not uninstall app before new session)||\n+|`--full-reset`|false|[DEPRECATED] - (iOS) Delete the entire simulator folder. (Android) Reset app state by uninstalling app instead of clearing app data. On Android, this will also remove the app after the session is complete.||\n+|`--app-pkg`|null|[DEPRECATED] - (Android-only) Java package of the Android app you want to run (e.g., com.example.android.myApp)|`--app-pkg com.example.android.myApp`|\n+|`--app-activity`|null|[DEPRECATED] - (Android-only) Activity name for the Android activity you want to launch from your package (e.g., MainActivity)|`--app-activity MainActivity`|\n+|`--app-wait-package`|false|[DEPRECATED] - (Android-only) Package name for the Android activity you want to wait for (e.g., com.example.android.myApp)|`--app-wait-package com.example.android.myApp`|\n+|`--app-wait-activity`|false|[DEPRECATED] - (Android-only) Activity name for the Android activity you want to wait for (e.g., SplashActivity)|`--app-wait-activity SplashActivity`|\n+|`--device-ready-timeout`|5|[DEPRECATED] - (Android-only) Timeout in seconds while waiting for device to become ready|`--device-ready-timeout 5`|\n+|`--android-coverage`|false|[DEPRECATED] - (Android-only) Fully qualified instrumentation class. Passed to -w in adb shell am instrument -e coverage true -w |`--android-coverage com.my.Pkg/com.my.Pkg.instrumentation.MyInstrumentation`|\n+|`--avd`|null|[DEPRECATED] - (Android-only) Name of the avd to launch|`--avd @default`|\n+|`--avd-args`|null|[DEPRECATED] - (Android-only) Additional emulator arguments to launch the avd|`--avd-args -no-snapshot-load`|\n+|`--use-keystore`|false|[DEPRECATED] - (Android-only) When set the keystore will be used to sign apks.||\n+|`--keystore-path`|&lt;user&gt;/.android/debug.keystore|[DEPRECATED] - (Android-only) Path to keystore||\n+|`--keystore-password`|android|[DEPRECATED] - (Android-only) Password to keystore||\n+|`--key-alias`|androiddebugkey|[DEPRECATED] - (Android-only) Key alias||\n+|`--key-password`|android|[DEPRECATED] - (Android-only) Key password||\n+|`--intent-action`|android.intent.action.MAIN|[DEPRECATED] - (Android-only) Intent action which will be used to start activity|`--intent-action android.intent.action.MAIN`|\n+|`--intent-category`|android.intent.category.LAUNCHER|[DEPRECATED] - (Android-only) Intent category which will be used to start activity|`--intent-category android.intent.category.APP_CONTACTS`|\n+|`--intent-flags`|0x10200000|[DEPRECATED] - (Android-only) Flags that will be used to start activity|`--intent-flags 0x10200000`|\n+|`--intent-args`|null|[DEPRECATED] - (Android-only) Additional intent arguments that will be used to start activity|`--intent-args 0x10200000`|\n+|`--dont-stop-app-on-reset`|false|[DEPRECATED] - (Android-only) When included, refrains from stopping the app before restart||\n+|`--calendar-format`|null|[DEPRECATED] - (IOS-only) calendar format for the iOS simulator|`--calendar-format gregorian`|\n+|`--native-instruments-lib`|false|[DEPRECATED] - (IOS-only) IOS has a weird built-in unavoidable delay. We patch this in appium. If you do not want it patched, pass in this flag.||\n+|`--keep-keychains`|false|[DEPRECATED] - (iOS-only) Whether to keep keychains (Library/Keychains) when reset app between sessions||\n+|`--localizable-strings-dir`|en.lproj|[DEPRECATED] - (IOS-only) the relative path of the dir where Localizable.strings file resides |`--localizable-strings-dir en.lproj`|\n+|`--show-ios-log`|false|[DEPRECATED] - (IOS-only) if set, the iOS system log will be written to the console||"
    },
    {
      "sha": "cf4c11b3c9ccf2f597e4f1ae92d960252d5721a2",
      "filename": "docs/old/cn/intro.cn.md",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/docs/old/cn/intro.cn.md",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/docs/old/cn/intro.cn.md",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/docs/old/cn/intro.cn.md?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -27,7 +27,7 @@ Appium 是一个自动化测试开源工具，支持 iOS 平台和 Android 平\n 这样，我们就不需在你的应用里植入 Appium 特定或者第三方的代码。这就意味着你在测试你将发布的应用。我们\n 使用以下的第三方框架：\n \n-* iOS: 苹果的 [UIAutomation](https://developer.apple.com/library/ios/documentation/DeveloperTools/Reference/UIAutomationRef/_index.html)\n+* iOS: 苹果的 [UIAutomation](https://developer.apple.com/library/ios/documentation/DeveloperTools/Reference/UIAutomationRef/)\n * Android 4.2+: Google's [UiAutomator](http://developer.android.com/tools/help/uiautomator/index.html)\n * Android 2.3+: Google's [Instrumentation](http://developer.android.com/reference/android/app/Instrumentation.html). (Instrumentation support is provided by bundling a separate project, [Selendroid](http://selendroid.io))\n "
    },
    {
      "sha": "97a43d701c751ddbd3859b18bdc73c465a5eaeb4",
      "filename": "docs/old/cn/ios_predicate.cn.md",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/docs/old/cn/ios_predicate.cn.md",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/docs/old/cn/ios_predicate.cn.md",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/docs/old/cn/ios_predicate.cn.md?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -1,6 +1,6 @@\n # iOS Predicate\n \n-I'd like to share my experience in using *'-ios uiautomation'* search strategy with **Predicates**. After using Instruments/UIAutomation tool for a long time I paid attention on the following methods in [UIAutomation JavaScript API](https://developer.apple.com/library/ios/documentation/DeveloperTools/Reference/UIAutomationRef/_index.html):\n+I'd like to share my experience in using *'-ios uiautomation'* search strategy with **Predicates**. After using Instruments/UIAutomation tool for a long time I paid attention on the following methods in [UIAutomation JavaScript API](https://developer.apple.com/library/ios/documentation/DeveloperTools/Reference/UIAutomationRef/):\n \n ```java\n (UIAElement) UIAElementArray.firstWithPredicate(PredicateString predicateString)"
    },
    {
      "sha": "462db671c1f03ed551b366865a31ae9c6daed8e7",
      "filename": "docs/old/cn/platform-support.cn.md",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/docs/old/cn/platform-support.cn.md",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/docs/old/cn/platform-support.cn.md",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/docs/old/cn/platform-support.cn.md?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -11,7 +11,7 @@ Appimu时候支持的平台版本和上述测试方式的必备条件。\n * 版本号：6.1 , 7.0 , and 7.1\n * 支持设备： iPhone 模拟器, iPad 模拟器以及iPhones 和 iPads真机\n * 是否支持原生应用：支持 。同时支持模拟器中调试应用版本和正确签名的真机ipa。\n-  其他相关支持由苹果的[UIAutomation](https://developer.apple.com/library/ios/documentation/DeveloperTools/Reference/UIAutomationRef/_index.html)\n+  其他相关支持由苹果的[UIAutomation](https://developer.apple.com/library/ios/documentation/DeveloperTools/Reference/UIAutomationRef/)\n   框架提供。\n * 是否支持内嵌浏览器：支持, Safari浏览器已经通过测试。对于\n   真机,则需要安装调试工具 ios-webkit-remote-debugger，很遗憾"
    },
    {
      "sha": "6c565457d1ad8491aac4975713e67d86ac0b8e70",
      "filename": "grunt-helpers.js",
      "status": "removed",
      "additions": 0,
      "deletions": 804,
      "changes": 804,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/grunt-helpers.js",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/grunt-helpers.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/grunt-helpers.js?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,804 +0,0 @@\n-\"use strict\";\n-\n-var _ = require(\"underscore\")\n-  , server = require('./lib/server/main.js')\n-  , rimraf = require('rimraf')\n-  , path = require('path')\n-  // , temp = require('temp')\n-  , mkdirp = require('mkdirp')\n-  , ncp = require('ncp')\n-  // , difflib = require('difflib')\n-  // , prompt = require('prompt')\n-  , exec = require('child_process').exec\n-  , spawn = require('win-spawn')\n-  , parser = require('./lib/server/parser.js')\n-  , namp = require('namp')\n-  , parseXmlString = require('xml2js').parseString\n-  , appiumVer = require('./package.json').version\n-  , fs = require('fs')\n-  , xcode = require('./lib/future.js').xcode\n-  , isWindows = require('appium-support').system.isWindows()\n-  , MAX_BUFFER_SIZE = 524288\n-  , SELENDROID_MAX_BUFFER_SIZE = 4 * MAX_BUFFER_SIZE;\n-\n-module.exports.startAppium = function (appName, verbose, readyCb, doneCb) {\n-  var app;\n-  if (appName) {\n-    app = (fs.existsSync(appName)) ? appName:\n-      path.resolve(__dirname, \"sample-code\", \"apps\", appName, \"build\", \"Release-iphonesimulator\", appName + \".app\");\n-  } else {\n-    app = null;\n-  }\n-  return server.run({\n-      app: app\n-    , udid: null\n-    , quiet: !verbose\n-    , port: 4723\n-    , nativeInstrumentsLib: false\n-    , fullReset: false\n-    , noReset: false\n-    , launch: app ? true : false\n-    , log: path.resolve(__dirname, \"appium.log\")\n-    , address: '127.0.0.1'\n-    , androidDeviceReadyTimeout: 5\n-    , nodeconfig: null\n-    , robotPort: -1\n-    , robotAddresss: '0.0.0.0'\n-    , keepArtifacts: false\n-    , ipa: null\n-    , avd: null\n-    }\n-  , readyCb\n-  , doneCb\n-  );\n-};\n-\n-var execWithOutput = function (cmd, cb) {\n-  exec(cmd, function (err, stdout, stderr) {\n-    if (err) {\n-      console.error(\"Command failed\");\n-      console.error(\"stdout:\");\n-      console.error(stdout);\n-      console.error(\"stderr:\");\n-      console.error(stderr);\n-    }\n-    cb(err, stdout, stderr);\n-  });\n-};\n-\n-module.exports.getSampleCode = function (grunt, hardcore, cb) {\n-  var submodulesDir = path.resolve(__dirname, \"submodules\");\n-  var sampleCodeGit = path.resolve(submodulesDir, \"sample-code\");\n-  var sampleCodeDir = path.resolve(__dirname, \"sample-code\");\n-  var sampleCodeExists = fs.existsSync(sampleCodeDir);\n-  var updateCmd = \"git submodule update --init \\\"\" + sampleCodeGit + \"\\\"\";\n-  console.log(\"Cloning/updating Appium sample-code submodule\");\n-  execWithOutput(updateCmd, function (err, stdout, stderr) {\n-    if (err) return cb(err);\n-    var updated = false;\n-    if (stdout + stderr !== \"\") {\n-      // there were submodule updates\n-      console.log(\"There were updates to the submodule\");\n-      updated = true;\n-    }\n-    if (hardcore || updated) {\n-      console.log(\"Removing old sample-code\");\n-      console.log(\"Please remember to rebuild test apps\");\n-      rimraf.sync(sampleCodeDir);\n-    }\n-    if (hardcore || updated || !sampleCodeExists) {\n-      console.log(\"Copying sample-code out for use\");\n-      ncp(path.resolve(sampleCodeGit, \"sample-code\"), sampleCodeDir, function (err) {\n-        if (err) return cb(err);\n-        console.log(\"Test apps are ready for building\");\n-        cb();\n-      });\n-    } else {\n-      console.log(\"Sample code was not updated, doing nothing\");\n-    }\n-  });\n-};\n-\n-module.exports.runTestsWithServer = function (grunt, appName, testType, deviceType, verbose, cb) {\n-  if (typeof verbose === \"undefined\") {\n-    verbose = false;\n-  }\n-  var exitCode = null;\n-  var appServer = module.exports.startAppium(appName, verbose, function () {\n-    module.exports.runMochaTests(grunt, appName, testType, deviceType, function (code) {\n-      appServer.close();\n-      exitCode = code;\n-    });\n-  }, function () {\n-    console.log(\"Appium server exited\");\n-    cb(exitCode === 0);\n-  });\n-};\n-\n-module.exports.runMochaTests = function (grunt, appName, testType, deviceType, cb) {\n-\n-  // load the options if they are specified\n-  var options = grunt.config(['mochaTestConfig', testType, 'options']);\n-  if (typeof options !== 'object') {\n-    options = grunt.config(['mochaTestConfig', 'options']);\n-  }\n-  if (typeof options.timeout === \"undefined\") {\n-    options.timeout = 60000;\n-  }\n-  if (typeof options.reporter === \"undefined\") {\n-    options.reporter = \"tap\";\n-  }\n-  var args = ['-t', options.timeout, '-R', options.reporter, '--colors'];\n-  var mochaFiles = [];\n-  var fileConfig = grunt.config(['mochaTestWithServer']);\n-  var configAppDevice, nameOk, deviceOk, configAppTests;\n-  _.each(fileConfig, function (config, configAppName) {\n-    configAppDevice = config[0];\n-    configAppTests = config[1];\n-    nameOk = !appName || appName === configAppName;\n-    deviceOk = !deviceType || deviceType === configAppDevice;\n-    if (nameOk && deviceOk) {\n-      _.each(configAppTests, function (testFiles, testKey) {\n-        if (testType === \"*\" || testType === testKey) {\n-          _.each(testFiles, function (file) {\n-            _.each(grunt.file.expand(file), function (file) {\n-              mochaFiles.push(file);\n-            });\n-          });\n-        }\n-      });\n-    }\n-  });\n-\n-  var exitCodes = [];\n-  var runMochaProc = function () {\n-    var file = mochaFiles.shift();\n-    if (typeof file !== \"undefined\") {\n-      var mochaProc = spawn('mocha', args.concat(file), {cwd: __dirname});\n-      mochaProc.on(\"error\", function () {\n-        grunt.fatal(\"Unable to spawn mocha process: mocha not installed?\");\n-      });\n-      mochaProc.stdout.setEncoding('utf8');\n-      mochaProc.stderr.setEncoding('utf8');\n-      mochaProc.stdout.on('data', function (data) {\n-        grunt.log.write(data);\n-      });\n-      mochaProc.stderr.on('data', function (data) {\n-        grunt.log.write(data);\n-      });\n-      mochaProc.on('exit', function (code) {\n-        exitCodes.push(code);\n-        runMochaProc();\n-      });\n-    } else {\n-      cb(_.max(exitCodes));\n-    }\n-  };\n-  runMochaProc();\n-};\n-\n-module.exports.tail = function (grunt, filename, cb) {\n-  var proc = spawn('tail', ['-f', filename]);\n-  proc.on(\"error\", function (err) {\n-    grunt.fatal(\"Unable to spawn \\\"tail\\\": \" + err.message);\n-  });\n-  proc.stdout.setEncoding('utf8');\n-  proc.stdout.on('data', function (data) {\n-    grunt.log.write(data);\n-  });\n-  proc.on('exit', function (code) {\n-    cb(code);\n-  });\n-};\n-\n-module.exports.setDeviceConfigVer = function (grunt, device, cb) {\n-  var value = {version: appiumVer};\n-  exports.writeConfigKey(grunt, device, value, cb);\n-};\n-\n-module.exports.writeConfigKey = function (grunt, key, value, cb) {\n-  var configPath = path.resolve(__dirname, \".appiumconfig.json\");\n-  fs.readFile(configPath, function (err, data) {\n-    var writeConfig = function (config) {\n-      config[key] = value;\n-      grunt.log.write(\"\\n\");\n-      grunt.log.write(JSON.stringify(config));\n-      fs.writeFile(configPath, JSON.stringify(config), cb);\n-    };\n-    if (err) {\n-      grunt.log.write(\"Config file doesn't exist, creating it\");\n-      var config = {};\n-      writeConfig(config);\n-    } else {\n-      grunt.log.write(\"Config file exists, updating it\");\n-      writeConfig(JSON.parse(data.toString('utf8')));\n-    }\n-  });\n-};\n-\n-module.exports.setGitRev = function (grunt, rev, cb) {\n-  exports.writeConfigKey(grunt, \"git-sha\", rev, cb);\n-};\n-\n-module.exports.setBuildTime = function (grunt, cb) {\n-  var time = new Date();\n-  exports.writeConfigKey(grunt, \"built\", time.toISOString(), cb);\n-};\n-\n-var auth_enableDevTools = function (grunt, cb) {\n-  grunt.log.writeln(\"Enabling DevToolsSecurity\");\n-  exec('DevToolsSecurity --enable', function (err) {\n-    if (err) grunt.fatal(err);\n-    cb();\n-  });\n-};\n-\n-var auth_updateSecurityDb = function (grunt, insecure, cb) {\n-  grunt.log.writeln(\"Updating security db for \" + (insecure ? \"insecure\" :\n-        \"developer\") + \" access\");\n-  var cmd = \"security authorizationdb write system.privilege.taskport \" +\n-            (insecure ? \"allow\" : \"is-developer\");\n-  exec(cmd, function (err) {\n-    if (err) grunt.fatal(err);\n-    cb();\n-  });\n-};\n-\n-var auth_chmodApps = function (grunt, cb) {\n-  grunt.log.writeln(\"Granting access to built-in simulator apps\");\n-  var user;\n-  if (!process.env.HOME) {\n-    grunt.fatal(new Error(\"Could not determine your $HOME\"));\n-  } else {\n-    user = /\\/([^\\/]+)$/.exec(process.env.HOME)[1];\n-  }\n-  xcode.getPath(function (err, xcodeDir) {\n-    if (err) return cb(err);\n-    var glob = path.resolve(xcodeDir, \"Platforms/iPhoneSimulator.platform/\" +\n-                            \"Developer/SDKs/iPhoneSimulator*.sdk/Applications\");\n-    glob += \" \";\n-    glob += path.resolve(\"/Library/Developer/CoreSimulator/\" +\n-                         \"Profiles/Runtimes/iOS\\\\ *.simruntime/\" +\n-                         \"Contents/Resources/RuntimeRoot/Applications/\");\n-    var cmd = \"chown -R \" + user + \": \" + glob;\n-    exec(cmd, function (err) {\n-      if (err) {\n-        grunt.log.writeln(\"Encountered an issue chmodding iOS sim app dirs. \" +\n-                          \"This may be because they don't exist on your \" +\n-                          \"system, which is not necessarily a problem. The \" +\n-                          \"error was: \" + err.message);\n-      }\n-      cb();\n-    });\n-  });\n-};\n-\n-module.exports.authorize = function (grunt, insecure, cb) {\n-  auth_enableDevTools(grunt, function () {\n-    auth_updateSecurityDb(grunt, insecure, function () {\n-      auth_chmodApps(grunt, cb);\n-    });\n-  });\n-};\n-\n-module.exports.build = function (appRoot, cb, sdk, xcconfig) {\n-  var next = function () {\n-    var cmd = 'xcodebuild -sdk ' + sdk + ' clean';\n-    console.log('Using sdk: ' + sdk + '...');\n-    console.log(\"Cleaning build...\");\n-    var xcode = exec(cmd, {cwd: appRoot, maxBuffer: MAX_BUFFER_SIZE}, function (err, stdout, stderr) {\n-      if (err) {\n-        console.log(\"Failed cleaning app, maybe it doesn't exist?\");\n-        return cb(stdout + \"\\n\" + stderr);\n-      }\n-      console.log(\"Building app...\");\n-      var args = ['-sdk', sdk];\n-      if (typeof xcconfig !== \"undefined\") {\n-        args = args.concat(['-xcconfig', xcconfig]);\n-      }\n-      xcode = spawn('xcodebuild', args, {\n-        cwd: appRoot\n-      });\n-      xcode.on(\"error\", function (err) {\n-        cb(new Error(\"Failed spawning xcodebuild: \" + err.message));\n-      });\n-      var output = '';\n-      var collect = function (data) { output += data; };\n-      xcode.stdout.on('data', collect);\n-      xcode.stderr.on('data', collect);\n-      xcode.on('exit', function (code) {\n-        if (code === 0) {\n-          cb(null);\n-        } else {\n-          console.log(\"Failed building app, maybe it doesn't exist?\");\n-          cb(output);\n-        }\n-      });\n-    });\n-  };\n-  if (typeof sdk === \"undefined\") {\n-    xcode.getVersion(function (err, version) {\n-      if (err) return cb(err);\n-      var sdkVersion = version[0] === \"5\" ? \"7.0\" : \"6.1\";\n-      sdk = 'iphonesimulator' + sdkVersion;\n-      next();\n-    });\n-  } else {\n-    next();\n-  }\n-};\n-\n-module.exports.buildApp = function (appDir, cb, sdk) {\n-  var appRoot = path.resolve(__dirname, \"sample-code\", \"apps\", appDir);\n-  module.exports.build(appRoot, function (err) {\n-    if (err !== null) {\n-      console.log(err);\n-      cb(false);\n-    } else {\n-      cb(true);\n-    }\n-  }, sdk);\n-};\n-\n-module.exports.signApp = function (appName, certName, cb) {\n-  var appPath = path.resolve(__dirname, \"sample-code\", \"apps\", appName,\n-      \"build\", \"Release-iphonesimulator\");\n-  exec(\"codesign -f -s \\\"\" + certName + \"\\\" -v \" + appName + \".app\", {cwd: appPath, maxBuffer: MAX_BUFFER_SIZE}, function (err, stdout, stderr) {\n-    console.log(stdout);\n-    console.log(stderr);\n-    if (err) {\n-      cb(false);\n-    } else {\n-      cb(true);\n-    }\n-  });\n-};\n-\n-module.exports.buildSafariLauncherApp = function (cb, sdk, xcconfig) {\n-  var appRoot = path.resolve(__dirname, \"submodules\", \"SafariLauncher\");\n-  module.exports.build(appRoot, function (err) {\n-    if (err !== null) {\n-      console.log(err);\n-      cb(false);\n-    } else {\n-      cb(true);\n-    }\n-  }, sdk, xcconfig);\n-};\n-\n-\n-var setupAndroidProj = function (grunt, projPath, args, cb) {\n-  if (!process.env.ANDROID_HOME) {\n-    grunt.fatal(\"Could not find Android SDK, make sure to export ANDROID_HOME\");\n-  }\n-  var tool = \"android\";\n-  if (isWindows) {\n-    tool = \"android.bat\";\n-  }\n-  var cmd = path.resolve(process.env.ANDROID_HOME, \"tools\", tool);\n-  if (!fs.existsSync(cmd)) {\n-    grunt.fatal(\"The `android` command was not found at \\\"\" + cmd + \"\\\", are you sure ANDROID_HOME is set properly?\");\n-  }\n-  var proc = spawn(cmd, args, {cwd: projPath});\n-  proc.on(\"error\", function (err) {\n-    grunt.fatal(\"Unable to spawn android: \" + err.message);\n-  });\n-  proc.stdout.setEncoding('utf8');\n-  proc.stderr.setEncoding('utf8');\n-  proc.stdout.on('data', function (data) {\n-    grunt.log.write(data);\n-  });\n-  proc.stderr.on('data', function (data) {\n-    grunt.log.write(data);\n-  });\n-  proc.on('exit', function (code) {\n-    cb(code === 0 ? null : new Error(\"Setup cmd \" + cmd + \" failed with code \" + code));\n-  });\n-};\n-\n-module.exports.setupAndroidBootstrap = function (grunt, cb) {\n-  var projPath = path.resolve(__dirname, \"lib\", \"devices\", \"android\",\n-      \"bootstrap\");\n-  var args = [\"create\", \"uitest-project\", \"-n\", \"AppiumBootstrap\", \"-t\",\n-              \"android-19\", \"-p\", \".\"];\n-  // TODO: possibly check output of `android list target` to make sure api level 19 is available?\n-  setupAndroidProj(grunt, projPath, args, cb);\n-};\n-\n-module.exports.setupAndroidApp = function (grunt, appName, cb) {\n-  var appPath = path.resolve(__dirname, \"sample-code\", \"apps\", appName);\n-  var args = [\"update\", \"project\", \"--subprojects\", \"-t\", \"android-19\", \"-p\", \".\", \"-n\", appName];\n-  setupAndroidProj(grunt, appPath, args, cb);\n-};\n-\n-var buildAndroidProj = function (grunt, projPath, target, cb) {\n-  var cmdName = 'ant';\n-  if (!fs.existsSync(path.resolve(projPath, \"build.xml\")) &&\n-      fs.existsSync(path.resolve(projPath, \"pom.xml\"))) {\n-    cmdName = 'mvn';\n-  }\n-  var whichCmd = 'which ';\n-  if (isWindows) {\n-    whichCmd = 'where ';\n-  }\n-  exec(whichCmd + cmdName, { maxBuffer: MAX_BUFFER_SIZE }, function (err, stdout) {\n-    if (err) {\n-      grunt.fatal(\"Error finding \" + cmdName + \" binary, is it on your path?\");\n-    } else {\n-      if (stdout) {\n-        var cmd = stdout.split('\\r\\n')[0].trim();\n-        if (isWindows && cmdName === 'ant') {\n-          cmd = cmd + '.bat';\n-        }\n-        grunt.log.write(\"Using \" + cmdName + \" found at \" + cmd + \"\\n\");\n-        var proc = spawn(cmd, [target], {cwd: projPath});\n-        proc.on(\"error\", function () {\n-          grunt.fatal(\"Unable to spawn \\\"\" + cmdName + \"\\\"\");\n-        });\n-        proc.stdout.setEncoding('utf8');\n-        proc.stderr.setEncoding('utf8');\n-        proc.stdout.on('data', function (data) {\n-          grunt.log.write(data);\n-        });\n-        proc.stderr.on('data', function (data) {\n-          grunt.log.write(data);\n-        });\n-        proc.on('exit', function (code) {\n-          cb(code ? new Error(\"Building project exited with \" + code) : null);\n-        });\n-      } else {\n-        grunt.fatal(\"Could not find \" + cmdName + \" installed; please make sure it's on PATH\");\n-      }\n-    }\n-  });\n-};\n-\n-module.exports.buildAndroidBootstrap = function (grunt, cb) {\n-  var projPath = path.resolve(__dirname, \"lib\", \"devices\", \"android\",\n-      \"bootstrap\");\n-  var binSrc = path.resolve(projPath, \"bin\", \"AppiumBootstrap.jar\");\n-  var binDestDir = path.resolve(__dirname, \"build\", \"android_bootstrap\");\n-  var binDest = path.resolve(binDestDir, \"AppiumBootstrap.jar\");\n-  buildAndroidProj(grunt, projPath, \"build\", function (err) {\n-    if (err) {\n-      console.log(\"Could not build android bootstrap\");\n-      return cb(err);\n-    }\n-    mkdirp(binDestDir, function (err) {\n-      if (err) {\n-        console.log(\"Could not mkdirp \" + binDestDir);\n-        return cb(err);\n-      }\n-      rimraf(binDest, function (err) {\n-        if (err) {\n-          console.log(\"Could not delete old \" + binDest);\n-          return cb(err);\n-        }\n-        ncp(binSrc, binDest, function (err) {\n-          if (err) {\n-            console.log(\"Could not copy \" + binSrc + \" to \" + binDest);\n-            return cb(err);\n-          }\n-          cb();\n-        });\n-      });\n-    });\n-  });\n-};\n-\n-var fixSelendroidAndroidManifest = function (dstManifest, cb) {\n-  console.log(\"Modifying manifest for no icons\");\n-  fs.readFile(dstManifest, function (err, data) {\n-    if (err) {\n-      console.error(\"Could not open new manifest\");\n-      return cb(err);\n-    }\n-    data = data.toString('utf8');\n-    console.log(data);\n-    var iconRe = /application[\\s\\S]+android:icon=\"[^\"]+\"/;\n-    data = data.replace(iconRe, \"application\");\n-    fs.writeFile(dstManifest, data, function (err) {\n-      if (err) {\n-        console.error(\"Could not write modified manifest\");\n-        return cb(err);\n-      }\n-      cb(null);\n-    });\n-  });\n-};\n-module.exports.fixSelendroidAndroidManifest = fixSelendroidAndroidManifest;\n-\n-\n-module.exports.buildSelendroidServer = function (cb) {\n-  getSelendroidVersion(function (err, version) {\n-    if (err) return cb(err);\n-    console.log(\"Installing Cordova\");\n-    var cordovaDir = path.resolve(__dirname, \"submodules\", \"selendroid\",\n-      \"third-party\", \"cordova-3.7.0\");\n-    var cmd = \"mvn install:install-file -Dfile=classes.jar -DgroupId=org.apache.cordova \" +\n-      \"-DartifactId=cordova -Dversion=3.7.0 -Dclassifier=android -Dpackaging=jar\";\n-    exec(cmd, {cwd: cordovaDir}, function (err, stdout, stderr) {\n-      if (err) {\n-        console.error(\"Unable to install Cordova. Stdout was: \");\n-        console.error(stdout);\n-        console.error(stderr);\n-        return cb(err);\n-      }\n-    });\n-    console.log(\"Building selendroid server\");\n-    var buildDir = path.resolve(__dirname, \"submodules\", \"selendroid\");\n-    var target = path.resolve(buildDir, \"selendroid-server\", \"target\",\n-      \"selendroid-server-\" + version + \".apk\");\n-    var destDir = path.resolve(__dirname, \"build\", \"selendroid\");\n-    var destBin = path.resolve(destDir, \"selendroid.apk\");\n-    var srcManifest = path.resolve(__dirname, \"submodules\", \"selendroid\",\n-      \"selendroid-server\", \"AndroidManifest.xml\");\n-    var dstManifest = path.resolve(destDir, \"AndroidManifest.xml\");\n-    cmd = \"mvn clean package -DskipTests=true\";\n-    exec(cmd, {cwd: buildDir, maxBuffer: SELENDROID_MAX_BUFFER_SIZE}, function (err, stdout, stderr) {\n-      if (err) {\n-        console.error(\"Unable to build selendroid server. Stdout was: \");\n-        console.error(stdout);\n-        console.error(stderr);\n-        return cb(err);\n-      }\n-      console.log(\"Making sure target exists\");\n-      fs.stat(target, function (err) {\n-        if (err) {\n-          console.error(\"Selendroid doesn't exist! Not sure what to do.\");\n-          return cb(err);\n-        }\n-        console.log(\"Selendroid server built successfully, copying to build/selendroid\");\n-        rimraf(destDir, function (err) {\n-          if (err) {\n-            console.error(\"Could not remove \" + destDir);\n-            return cb(err);\n-          }\n-          mkdirp(destDir, function (err) {\n-            if (err) {\n-              console.error(\"Could not create \" + destDir);\n-              return cb(err);\n-            }\n-            ncp(target, destBin, function (err) {\n-              if (err) {\n-                console.error(\"Could not copy \" + target + \" to \" + destBin);\n-                return cb(err);\n-              }\n-              console.log(\"Copying selendroid manifest as well\");\n-              ncp(srcManifest, dstManifest, function (err) {\n-                if (err) {\n-                  console.error(\"Could not copy manifest\");\n-                  return cb(err);\n-                }\n-                fixSelendroidAndroidManifest(dstManifest, cb);\n-              });\n-            });\n-          });\n-        });\n-      });\n-    });\n-  });\n-};\n-\n-var getSelendroidVersion = function (cb) {\n-  console.log(\"Getting Selendroid version\");\n-  var pomXml = path.resolve(__dirname, \"submodules\", \"selendroid\",\n-      \"selendroid-server\", \"pom.xml\");\n-  fs.readFile(pomXml, function (err, xmlData) {\n-    if (err) {\n-      console.error(\"Could not find selendroid's pom.xml at\");\n-      return cb(err);\n-    }\n-    parseXmlString(xmlData.toString('utf8'), function (err, res) {\n-      if (err) {\n-        console.error(\"Error parsing selendroid's pom.xml\");\n-        return cb(err);\n-      }\n-      var version = res.project.parent[0].version[0];\n-      if (typeof version === \"string\") {\n-        console.log(\"Selendroid version is \" + version);\n-        cb(null, version);\n-      } else {\n-        cb(new Error(\"Version \" + version + \" was not valid\"));\n-      }\n-    });\n-  });\n-};\n-\n-module.exports.buildAndroidApp = function (grunt, appName, cb) {\n-  var appPath = path.resolve(__dirname, \"sample-code\", \"apps\", appName);\n-  buildAndroidProj(grunt, appPath, \"clean\", function (err) {\n-    if (err) return cb(err);\n-    buildAndroidProj(grunt, appPath, \"debug\", cb);\n-  });\n-};\n-\n-module.exports.buildSelendroidAndroidApp = function (grunt, appName, cb) {\n-  var appPath = path.resolve(__dirname, \"sample-code\", \"apps\" + appName);\n-  buildAndroidProj(grunt, appPath, \"package\", cb);\n-};\n-\n-module.exports.installAndroidApp = function (grunt, appName, cb) {\n-  var pkgMap = {'ApiDemos': 'com.example.android.apis'};\n-  if (!_.has(pkgMap, appName)) {\n-    var msg = \"We don't know about appName \" + appName + \", please edit \" +\n-              \"grunt-helpers.js:installAndroidApp() to add it and its \" +\n-              \"package identifier\";\n-    grunt.fatal(new Error(msg));\n-  }\n-\n-  var appPath = path.resolve(__dirname, \"sample-code\", \"apps\", appName,\n-      \"bin/\" + appName + \"-debug.apk\");\n-  exec(\"adb uninstall \" + pkgMap[appName], { maxBuffer: MAX_BUFFER_SIZE }, function (err, stdout) {\n-    if (err) return grunt.fatal(err);\n-    grunt.log.write(stdout);\n-    exec(\"adb install -r \" + appPath, { maxBuffer: MAX_BUFFER_SIZE }, function (err, stdout) {\n-      if (err) return grunt.fatal(err);\n-      grunt.log.write(stdout);\n-      cb();\n-    });\n-  });\n-};\n-\n-module.exports.generateServerDocs = function (grunt, cb) {\n-  var p = parser();\n-  var docFile = path.resolve(__dirname, \"docs/en/writing-running-appium/server-args.md\");\n-  var md = \"# Appium server arguments\\n\\n\";\n-  md += \"Usage: `node . [flags]`\\n\\n\";\n-  md += \"## Server flags\\n\";\n-  md += \"All flags are optional, but some are required in conjunction with \" +\n-        \"certain others.\\n\\n\";\n-  md += \"\\n\\n<expand_table>\\n\\n\";\n-  md += \"|Flag|Default|Description|Example|\\n\";\n-  md += \"|----|-------|-----------|-------|\\n\";\n-  _.each(p.rawArgs, function (arg) {\n-    var argNames = arg[0];\n-    var exampleArg = typeof arg[0][1] === \"undefined\" ? arg[0][0] : arg[0][1];\n-    var argOpts = arg[1];\n-    md += \"|`\" + argNames.join(\"`, `\") + \"`\";\n-    md += \"|\" + ((typeof argOpts.defaultValue === \"undefined\") ? \"\" : argOpts.defaultValue);\n-    md += \"|\" + argOpts.help;\n-    md += \"|\" + ((typeof argOpts.example === \"undefined\") ? \"\" : \"`\" + exampleArg + \" \" + argOpts.example + \"`\");\n-    md += \"|\\n\";\n-  });\n-  fs.writeFile(docFile, md, function (err) {\n-    if (err) {\n-      console.log(err.stack);\n-      grunt.fatal(err);\n-    } else {\n-      grunt.log.write(\"New docs written! Don't forget to commit and push\");\n-      cb();\n-    }\n-  });\n-};\n-\n-module.exports.generateAppiumIo = function (grunt, cb) {\n-  getAppiumIoFiles(function (err, template, readme) {\n-    if (err) {\n-      return grunt.fatal(err);\n-    }\n-    var readmeLex = namp.lexer(readme)\n-      , headers = getMarkdownHeaders(readmeLex)\n-      , sidebarHtml = generateSidebarHtml(headers)\n-      , warning = \"<!-- THIS FILE IS AUTOMATICALLY GENERATED DO NOT EDIT -->\\n\"\n-      , bodyHtml = generateBodyHtml(readmeLex, headers)\n-      , submod = path.resolve(__dirname, \"submodules\", \"appium.io\")\n-      , outfile = submod + \"/getting-started.html\";\n-\n-    var newDoc = template.replace(\"{{ SIDENAV }}\", sidebarHtml)\n-                         .replace(\"{{ README_SECTIONS }}\", bodyHtml)\n-                         .replace(\"{{ WARNING }}\", warning);\n-    fs.writeFile(outfile, newDoc, function (err) {\n-      if (err) {\n-        grunt.fatal(err);\n-      } else {\n-        grunt.log.write(\"Pushing changes to appium.io...\");\n-        var cmd = 'git commit -am \"updating getting-started via grunt\" && ' +\n-                  'git pull --rebase origin master && ' +\n-                  'git push origin master && ' +\n-                  'git checkout gh-pages && ' +\n-                  'git pull origin gh-pages && ' +\n-                  'git merge master && ' +\n-                  'git push origin gh-pages && ' +\n-                  'git checkout master';\n-        exec(cmd, {cwd: submod, maxBuffer: MAX_BUFFER_SIZE}, function (err, stdout, stderr) {\n-          if (err) {\n-            console.log(stdout);\n-            console.log(stderr);\n-            grunt.fatal(err);\n-          } else {\n-            grunt.log.write(\"success!\");\n-            cb();\n-          }\n-        });\n-      }\n-    });\n-  });\n-};\n-\n-var getAppiumIoFiles = function (cb) {\n-  var templateFile = path.resolve(__dirname, \"submodules\", \"appium.io\", \"getting-started-template.html\")\n-    , readmeFile = path.resolve(__dirname, \"README.md\");\n-\n-  fs.readFile(templateFile, function (err, templateData) {\n-    if (err) {\n-      cb(err);\n-    } else {\n-      fs.readFile(readmeFile, function (err, readmeData) {\n-        if (err) cb(err); else cb(null, templateData.toString(), readmeData.toString());\n-      });\n-    }\n-  });\n-\n-};\n-\n-var getMarkdownHeaders = function (mdTree) {\n-  var headers = {};\n-  _.each(mdTree, function (mdObj) {\n-    if (mdObjIsHeader(mdObj)) {\n-      headers[mdObj.text] = sanitizeMdHeader(mdObj.text);\n-    }\n-  });\n-  return headers;\n-};\n-\n-var mdObjIsHeader = function (mdObj) {\n-  return mdObj.depth === 2 && mdObj.type === 'heading';\n-};\n-\n-var sanitizeMdHeader = function (header) {\n-  var re = new RegExp(/[^a-zA-Z0-9]/g);\n-  return header.replace(re, \"-\")\n-               .replace(/-$/, \"\")\n-               .replace(/-+/g, \"-\")\n-               .toLowerCase();\n-};\n-\n-var generateSidebarHtml = function (headers) {\n-  var html = '';\n-  _.each(headers, function (link, header) {\n-    header = namp(header).html;\n-    header = header.replace(/<[^>]+>/ig, \"\");\n-    html += '<li><a href=\"#' + link + '\"><i class=\"icon-chevron-right\"></i> ' +\n-            header + '</a></li>\\n';\n-  });\n-  return html;\n-};\n-\n-var generateBodyHtml = function (readmeMd, headers) {\n-  var html = ''\n-    , inBetweens = []\n-    , inBetweenHtml = ''\n-    , inSection = false;\n-  var addInBetweenHtml = function () {\n-    if (inBetweens.length) {\n-      inBetweenHtml = namp.parser(inBetweens)[0];\n-      html += inBetweenHtml;\n-      inBetweens = [];\n-    }\n-  };\n-\n-  for (var i = 1; i < readmeMd.length; i++) {\n-    var mdObj = readmeMd[i];\n-    if (mdObjIsHeader(mdObj)) {\n-      addInBetweenHtml();\n-      var headerHtml = namp.parser([mdObj])[0];\n-      headerHtml = headerHtml.replace(/<.?p>/ig, '');\n-      if (inSection) {\n-        html += '</section>\\n';\n-      }\n-      html += '<section id=\"' + headers[mdObj.text] + '\">\\n';\n-      html += '<h2>\\n<a href=\"#' + headers[mdObj.text] + '\" class=\"anchor\" ' +\n-              'name=\"requirements\">\\n<span class=\"mini-icon mini-icon-link\">' +\n-              '</span>\\n</a>\\n' +  headerHtml + '\\n</h2>\\n\\n';\n-      inSection = true;\n-    } else if (inSection) {\n-      inBetweens.push(mdObj);\n-    }\n-    if (i === readmeMd.length - 1) {\n-      addInBetweenHtml();\n-    }\n-  }\n-  html += '</section>';\n-  return html;\n-};"
    },
    {
      "sha": "95223b961c320d4c04107871d07772979bd15e3d",
      "filename": "gulpfile.js",
      "status": "modified",
      "additions": 65,
      "deletions": 216,
      "changes": 281,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/gulpfile.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/gulpfile.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/gulpfile.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -1,233 +1,82 @@\n \"use strict\";\n \n-var argv = require('yargs').argv;\n-\n var gulp = require('gulp'),\n+    boilerplate = require('appium-gulp-plugins').boilerplate.use(gulp),\n     path = require('path'),\n-    mochaStream = require('spawn-mocha-parallel').mochaStream,\n-    jshint = require('gulp-jshint'),\n-    jshintStylish = require('jshint-stylish'),\n-    jscs = require('gulp-jscs'),\n-    Q = require('q'),\n-    runSequence = Q.denodeify(require('run-sequence')),\n-    cp = require('child_process'),\n-    spawn = cp.spawn,\n-    exec = Q.denodeify(cp.exec),\n-    stream = require('stream'),\n-    fs = require('fs'),\n-    split = require('split'),\n-    os = require('os'),\n-    _ = require('underscore'),\n-    through = require('through'),\n-    promisePipe = require(\"promisepipe\"),\n-    assert = require('assert'),\n-    splitArray = require('./test/helpers/split-array');\n-\n-var childProcs = [];\n-\n-function newMochaOpts() {\n-  return {\n-    flags: {\n-      u: 'bdd-with-opts',\n-      R: process.env.MOCHA_REPORTER || 'nyan',\n-      'c': true\n-    },\n-    env: _.clone(process.env),\n-    bin: path.join(__dirname,  'node_modules/.bin/mocha'),\n-    concurrency: 5\n-  };\n-}\n-\n-var JS_SOURCES = ['*.js', 'bin/**/*.js', 'ci/**/*.js', 'new-ci/**/*.js', 'lib/**/*.js', 'test/**/*.js'];\n-\n-gulp.task('jshint', function () {\n-  return gulp.src(JS_SOURCES)\n-    .pipe(jshint())\n-    .pipe(jshint.reporter(jshintStylish))\n-    .pipe(jshint.reporter('fail'));\n-});\n-\n-gulp.task('jscs', function () {\n-  return gulp.src(JS_SOURCES)\n-    .pipe(jscs({configPath: __dirname + '/.jscsrc'}));\n-});\n-\n-gulp.task('lint', ['jshint', 'jscs']);\n-\n-gulp.task('test-unit', function () {\n-  var opts = newMochaOpts();\n-  var mocha = mochaStream(opts);\n-  return gulp.src('test/unit/**/*-specs.js', {read: false})\n-    .pipe(mocha)\n-    .on('error',  console.warn.bind(console));\n-});\n-\n-function splitAndroidE2ETests() {\n-  var testFiles = [];\n-  var androidGroups = {};\n-  return promisePipe(\n-    gulp.src(['test/functional/common/**/*-specs.js', 'test/functional/android/**/*-specs.js',\n-              '!test/functional/android/chrome/**'], {read: false})\n-      .pipe(through(function (file) {\n-        testFiles.push(path.relative(file.cwd ,file.path));\n-      })).on('close', function () {\n-        testFiles.sort();\n-        androidGroups = splitArray(testFiles, argv.androidTestSplit);\n-      })).then(function () {\n-        assert(androidGroups.length === argv.androidTestSplit);\n-        return androidGroups;\n-      });\n-}\n-\n-function killProcs() {\n-  _(childProcs).each(function (child) {\n-    try { child.kill(); } catch (err) {}\n-  });\n-}\n-\n-gulp.task('kill-procs', function () {\n-  killProcs();\n+    fs = require('fs');\n+\n+// remove 'fsevents' from shrinkwrap, since it causes errors on non-Mac hosts\n+// see https://github.com/npm/npm/issues/2679\n+gulp.task('fixShrinkwrap', function (done) {\n+  var shrinkwrap;\n+  try {\n+    shrinkwrap = require('./npm-shrinkwrap.json');\n+  } catch (err) {\n+    console.error('Could not find shrinkwrap; skipping fixing shrinkwrap. ' +\n+                  '(Original error: ' + err.message + ')');\n+    return;\n+  }\n+  delete shrinkwrap.dependencies.fsevents;\n+  var shrinkwrapString = JSON.stringify(shrinkwrap, null, '  ') + '\\n';\n+  fs.writeFile('./npm-shrinkwrap.json', shrinkwrapString, done);\n });\n \n-gulp.task('show-android-e2e-tests-split', function () {\n-  return splitAndroidE2ETests()\n-    .then(function (androidGroups) {\n-      console.log('Android groups:');\n-      _(androidGroups).each(function (group, i) {\n-        console.log(i + 1, '-->', group);\n-      });\n-    });\n-});\n \n-gulp.task('test-android-e2e', function () {\n-  return splitAndroidE2ETests().then(function (androidGroups) {\n-    var opts = newMochaOpts();\n-    opts.env.DEVICE='android';\n-    opts.env.VERBOSE=1;\n-    opts.flags.g = '@skip-android-all|@android-arm-only|@skip-ci';\n-    opts.flags.i = true;\n-    opts.concurrency = 1;\n-    opts.liveOutput = true;\n-    opts.liveOutputPrepend= 'client -> ';\n-    opts.fileOutput = 'client.log';\n-    var mocha = mochaStream(opts);\n-    var androidGroup = androidGroups[argv.androidTestGroup - 1];\n-    console.log('running tests for:' + androidGroup);\n-    return promisePipe( gulp.src(androidGroup, {read: false})\n-      .pipe(mocha)\n-      .on('error',  function (err) {\n-        killProcs();\n-        throw err;\n-      })\n-    );\n-  });\n-});\n \n-gulp.task('launch-appium', function () {\n-  var deferred = Q.defer();\n-  var out = new stream.PassThrough();\n \n-  out.pipe(split())\n-    .on('data', function (line) {\n-      if (line.match(/Appium REST http interface listener started/)) {\n-         deferred.resolve();\n-      }\n-      console.log('server -->', line);\n-    });\n-  out.pipe(fs.createWriteStream('appium.log'));\n-  var child = spawn(\"node\", ['.'], { detached: false });\n-  childProcs.push(child);\n-  child.stdout.pipe(out);\n-  child.stderr.pipe(out);\n-  child.on('close', function () {\n-    deferred.reject('Something went wrong!');\n-  });\n-  return deferred.promise;\n+boilerplate({\n+  build: 'appium',\n+  jscs: false,\n+  test: {\n+    files: ['${testDir}/**/*-specs.js']\n+  },\n+  extraPrepublishTasks: ['fixShrinkwrap'],\n });\n \n-gulp.task('launch-emu', function () {\n-  var LOG_PREPEND= 'emu --> ';\n-  var deferred = Q.defer();\n+// generates server arguments readme\n+gulp.task('docs', ['transpile'], function () {\n+  var parser = require('./build/lib/parser.js');\n+  var appiumArguments = parser.getParser().rawArgs;\n+  var docFile = path.resolve(__dirname, \"docs/en/writing-running-appium/server-args.md\");\n+  var md = \"# Appium server arguments\\n\\n\";\n+  md += \"Many Appium 1.5 server arguments have been deprecated in favor of the \"\n+  md += \"[--default-capabilities flag](/docs/en/writing-running-appium/default-capabilities-arg.md).\"\n+  md += \"\\n\\nUsage: `node . [flags]`\\n\\n\";\n+  md += \"## Server flags\\n\";\n+  md += \"All flags are optional, but some are required in conjunction with \" +\n+        \"certain others.\\n\\n\";\n+  md += \"\\n\\n<expand_table>\\n\\n\";\n+  md += \"|Flag|Default|Description|Example|\\n\";\n+  md += \"|----|-------|-----------|-------|\\n\";\n+  appiumArguments.forEach(function (arg) {\n+    var argNames = arg[0];\n+    var exampleArg = typeof arg[0][1] === \"undefined\" ? arg[0][0] : arg[0][1];\n+    var argOpts = arg[1];\n+\n+    // --keystore-path defaultValue contains a user-specific path,\n+    // let's replace it with <user>/...\n+    if (arg[0][0] === '--keystore-path') {\n+      var userPath = process.env.HOME || process.env.USERPROFILE;\n+      argOpts.defaultValue = argOpts.defaultValue.replace(userPath, '&lt;user&gt;')\n+    }\n \n-  var emuErrored = false;\n-  function waitForEmu() {\n-    var INIT_WAIT = 15000;\n-    var MAX_WAIT_MS = 180000;\n-    var POOL_MS = 5000;\n-    var startMs = Date.now();\n-    function _waitForEmu () {\n-      function retry() {\n-        if (emuErrored) {\n-          throw new Error('Emulator errored');\n-        }\n-        if (Date.now() - startMs > MAX_WAIT_MS) {\n-          throw new Error('Emulator did not show up');\n-        }\n-        console.log(LOG_PREPEND + 'Waiting for emu...');\n-        return Q.delay(POOL_MS).then(_waitForEmu);\n-      }\n-      return exec('adb shell getprop sys.boot_completed')\n-        .spread(function (stdout) {\n-          if (stdout && stdout.trim() === '1') {\n-            console.log(LOG_PREPEND + 'emulator started');\n-            return;\n-          }\n-          return retry();\n-        }, function (err) {\n-          if (err.toString().match(/device not found/)) {\n-            console.log(LOG_PREPEND + 'Device not found, it should be there, killing adb server.');\n-            return exec('adb kill-server').then(retry);\n-          }\n-          return retry();\n-        });\n+    // handle empty objects\n+    if (JSON.stringify(argOpts.defaultValue) === '{}'){\n+      argOpts.defaultValue = '{}';\n     }\n-    return Q.delay(INIT_WAIT).then(_waitForEmu)\n-      .then(function () {deferred.resolve();});\n-  }\n \n-  var out = new stream.PassThrough();\n-  out.pipe(split())\n-    .on('data', function (line) {\n-      console.log(LOG_PREPEND + line);\n-    });\n-  out.pipe(fs.createWriteStream('emulator.log'));\n-  var emuBin = os.platform() === 'linux' ? 'emulator64-x86' : 'emulator';\n-  var emuArgs = [\n-    '-avd', argv.avd,\n-    '-no-snapshot-load', '-no-snapshot-save',\n-    '-no-audio', '-netfast'\n-  ];\n-  if (os.platform() === 'linux') {\n-    emuArgs = emuArgs.concat([\n-      '-qemu', '-m', '512', '-enable-kvm'\n-    ]);\n-  }\n-  console.log(LOG_PREPEND + 'executing', emuBin, emuArgs.join(' '));\n-  var child = spawn(emuBin, emuArgs);\n-  childProcs.push(child);\n-  child.stdout.pipe(out);\n-  child.stderr.pipe(out);\n-  child.on('error', function (err) {\n-    emuErrored = true;\n-    deferred.reject(err);\n+    md += \"|`\" + argNames.join(\"`, `\") + \"`\";\n+    md += \"|\" + ((typeof argOpts.defaultValue === \"undefined\") ? \"\" : argOpts.defaultValue);\n+    md += \"|\" + argOpts.help;\n+    md += \"|\" + ((typeof argOpts.example === \"undefined\") ? \"\" : \"`\" + exampleArg + \" \" + argOpts.example + \"`\");\n+    md += \"|\\n\";\n   });\n-  child.on('close', function () {\n-    deferred.reject('Something went wrong!');\n+  // console.log(md);\n+  fs.writeFile(docFile, md, function (err) {\n+    if (err) {\n+      console.log(err.stack);\n+    } else {\n+      console.log(\"New docs written! Don't forget to commit and push\");\n+    }\n   });\n-  return Q.all([\n-    waitForEmu(),\n-    deferred.promise\n-  ]);\n-});\n-\n-gulp.task('run-android-e2e', function () {\n-  return runSequence(['launch-emu', 'launch-appium'], 'test-android-e2e', 'kill-procs')\n-    .catch(function (err) {\n-      killProcs();\n-      throw err;\n-    });\n-});\n-\n-gulp.task('default', function () {\n-  return runSequence('lint', 'test-unit');\n });"
    },
    {
      "sha": "fff7f967b0d69155ac71d6db071a644f7979b2ef",
      "filename": "install-beta.md",
      "status": "removed",
      "additions": 0,
      "deletions": 32,
      "changes": 32,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/install-beta.md",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/install-beta.md",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/install-beta.md?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,32 +0,0 @@\n-#appium beta install\n-\n-## global install\n-\n-Install with:\n-\n-```\n-npm install -g appium@beta\n-```\n-\n-Start with:\n-\n-```\n-appium\n-```\n-\n-## local install\n-\n-Install with:\n-\n-```\n-mkdir beta\n-cd beta\n-npm init # press <Enter when asked>\n-npm install appium@beta\n-```\n-\n-Start with\n-```\n-\"node_modules/.bin/appium\"\n-```\n-"
    },
    {
      "sha": "abb316584a2b334667a017c8b31def2b804d08b7",
      "filename": "install-from-npm.md",
      "status": "removed",
      "additions": 0,
      "deletions": 32,
      "changes": 32,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/install-from-npm.md",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/install-from-npm.md",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/install-from-npm.md?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,32 +0,0 @@\n-#appium npm install\n-\n-## global install\n-\n-Install with:\n-\n-```\n-npm install -g appium\n-```\n-\n-Start with:\n-\n-```\n-appium\n-```\n-\n-## local install\n-\n-Install with:\n-\n-```\n-mkdir appium-local\n-cd appium-local\n-npm init # press <Enter when asked>\n-npm install appium\n-```\n-\n-Start with\n-```\n-\"node_modules/.bin/appium\"\n-```\n-"
    },
    {
      "sha": "c7c8f0490a24a3ec118bdd714b36e4cd17f603de",
      "filename": "lib/appium.js",
      "status": "modified",
      "additions": 163,
      "deletions": 372,
      "changes": 535,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/appium.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/appium.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/appium.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -1,410 +1,201 @@\n-\"use strict\";\n+import _ from 'lodash';\n+import log from './logger';\n+import { getAppiumConfig } from './config';\n+import { fixCaps } from './helpers';\n+import { BaseDriver } from 'appium-base-driver';\n+import { FakeDriver } from 'appium-fake-driver';\n+import { AndroidDriver } from 'appium-android-driver';\n+import { IosDriver } from 'appium-ios-driver';\n+import { SelendroidDriver } from 'appium-selendroid-driver';\n+import { routeConfiguringFunction, errors,\n+         isSessionCommand } from 'mobile-json-wire-protocol';\n+import B from 'bluebird';\n+import util from 'util';\n \n-var loggerjs = require('./server/logger.js')\n-  , logger = loggerjs.get('appium')\n-  , UUID = require('uuid-js')\n-  , _ = require('underscore')\n-  , Capabilities = require('./server/capabilities')\n-  , IOS = require('./devices/ios/ios.js')\n-  , Safari = require('./devices/ios/safari.js')\n-  , Android = require('./devices/android/android.js')\n-  , Selendroid = require('./devices/android/selendroid.js')\n-  , Chrome = require('./devices/android/chrome.js')\n-  , FirefoxOs = require('./devices/firefoxos/firefoxos.js')\n-  , jwpResponse = require('./devices/common.js').jwpResponse\n-  , status = require(\"./server/status.js\");\n \n-var DT_IOS = \"ios\"\n-  , DT_SAFARI = \"safari\"\n-  , DT_ANDROID = \"android\"\n-  , DT_CHROME = \"chrome\"\n-  , DT_SELENDROID = \"selendroid\"\n-  , DT_FIREFOX_OS = \"firefoxos\";\n+class AppiumDriver extends BaseDriver {\n+  constructor (args) {\n+    super();\n \n-var Appium = function (args) {\n-  this.args = _.clone(args);\n-  this.args.callbackAddress = this.args.callbackAddress || this.args.address;\n-  this.args.callbackPort = this.args.callbackPort || this.args.port;\n-  // we need to keep an unmodified copy of the args so that we can restore\n-  // any server arguments between sessions to their default values\n-  // (otherwise they might be overridden by session-level caps)\n-  this.serverArgs = _.clone(this.args);\n-  this.rest = null;\n-  this.webSocket = null;\n-  this.deviceType = null;\n-  this.device = null;\n-  this.sessionId = null;\n-  this.dyingSessionId = null;\n-  this.desiredCapabilities = {};\n-  this.oldDesiredCapabilities = {};\n-  this.session = null;\n-  this.preLaunched = false;\n-  this.sessionOverride = this.args.sessionOverride;\n-  this.resetting = false;\n-  this.defCommandTimeoutMs = this.args.defaultCommandTimeout * 1000;\n-  this.commandTimeoutMs = this.defCommandTimeoutMs;\n-  this.commandTimeout = null;\n-};\n+    // the main Appium Driver has no new command timeout\n+    this.newCommandTimeoutMs = 0;\n \n-Appium.prototype.attachTo = function (rest) {\n-  this.rest = rest;\n-};\n+    this.args = args;\n \n-Appium.prototype.attachSocket = function (webSocket) {\n-  this.webSocket = webSocket;\n-};\n-\n-Appium.prototype.registerConfig = function (configObj) {\n-  this.serverConfig = configObj;\n-};\n-\n-Appium.prototype.deviceIsRegistered = function (deviceType) {\n-  if (deviceType === DT_SAFARI) deviceType = DT_IOS;\n-  if (deviceType === DT_CHROME) deviceType = DT_ANDROID;\n-  return _.has(this.serverConfig, deviceType);\n-};\n-\n-Appium.prototype.preLaunch = function (cb) {\n-  logger.info(\"Pre-launching app\");\n-  var caps = {};\n-  this.start(caps, function (err) {\n-    if (err) {\n-      cb(err, null);\n-    } else {\n-      this.preLaunched = true;\n-      cb(null, this);\n-    }\n-  }.bind(this));\n-};\n-\n-Appium.prototype.setArgFromCap = function (arg, cap) {\n-  if (typeof this.desiredCapabilities[cap] !== \"undefined\") {\n-    this.args[arg] = this.desiredCapabilities[cap];\n+    this.sessions = {};\n   }\n-};\n \n-Appium.prototype.updateResetArgsFromCaps = function () {\n-  this.setArgFromCap(\"noReset\", \"noReset\");\n-  this.setArgFromCap(\"fullReset\", \"fullReset\");\n-\n-  // user can set noReset or fullReset\n-  var caps = this.desiredCapabilities;\n-  if (caps.noReset === true) this.args.fullReset = false;\n-  if (caps.fullReset === true) this.args.noReset = false;\n-\n-  // not user visible via caps\n-  this.args.fastReset = !this.args.fullReset && !this.args.noReset;\n-  this.args.skipUninstall = this.args.fastReset || this.args.noReset;\n-};\n-\n-Appium.prototype.start = function (desiredCaps, cb) {\n-\n-  if (this.args.debugLogSpacing) {\n-    for (var i = 0; i < 8; i++) {\n-      logger.info(\"*************************************\");\n-    }\n-    for (i = 0; i < 8; i++) {\n-      logger.info(\"****        NEW SESSION           ***\");\n-    }\n-    for (i = 0; i < 8; i++) {\n-      logger.info(\"*************************************\");\n-    }\n-  }\n-\n-  var configureAndStart = function () {\n-    this.desiredCapabilities = new Capabilities(desiredCaps);\n-    this.updateResetArgsFromCaps();\n-    this.args.webSocket = this.webSocket; // allow to persist over many sessions\n-    this.configure(this.args, this.desiredCapabilities, function (err) {\n-      if (err) {\n-        logger.debug(\"Got configuration error, not starting session\");\n-        this.cleanupSession();\n-        cb(err, null);\n-      } else {\n-        this.invoke(cb);\n-      }\n-    }.bind(this));\n-  }.bind(this);\n-  if (this.sessionId === null) {\n-    configureAndStart();\n-  } else if (this.sessionOverride) {\n-    logger.info(\"Found an existing session to clobber, shutting it down \" +\n-                 \"first...\");\n-    this.stop(function (err) {\n-      if (err) return cb(err);\n-      logger.info(\"Old session shut down OK, proceeding to new session\");\n-      configureAndStart();\n-    });\n-  } else {\n-    return cb(new Error(\"Requested a new session but one was in progress\"));\n+  sessionExists (sessionId) {\n+    return _.contains(_.keys(this.sessions), sessionId) &&\n+           this.sessions[sessionId].sessionId !== null;\n   }\n-};\n-\n-Appium.prototype.getDeviceType = function (args, caps) {\n-  var platform = caps.platformName || args.platformName;\n-  platform = platform ? platform.toString().toLowerCase() : '';\n-  var browser = caps.browserName || args.browserName;\n-  browser = browser ? browser.toString().toLowerCase() : '';\n-  var automation = caps.automationName || args.automationName;\n-  automation = automation ? automation.toString().toLowerCase() : '';\n-  var app = args.app || caps.app;\n-  app = app ? app.toString().toLowerCase() : '';\n-  var pkg = args.androidPackage || caps.appPackage;\n-  pkg = pkg ? pkg.toString().toLowerCase() : '';\n \n-  var validPlatforms = ['ios', 'android', 'firefoxos'];\n-  if (platform && !_.contains(validPlatforms, platform)) {\n-    throw new Error(\"Could not determine your device. You sent in a \" +\n-                    \"platformName capability of '\" + platform + \"' but that \" +\n-                    \"is not a supported platform. Supported platforms are: \" +\n-                    \"iOS, Android and FirefoxOS\");\n+  driverForSession (sessionId) {\n+    return this.sessions[sessionId];\n   }\n \n-  // TODO: Set DT_SELENDROID type based on platformVersion\n-  var type = this.getDeviceTypeFromPlatform(platform);\n-\n-  if (type === DT_IOS) {\n-     // Detect Safari browser from browserName, app and args\n-    if (\n-        args.safari ||\n-        this.isSafariBrowser(browser) ||\n-        this.isSafariBrowser(app)\n-      ) {\n-      type = DT_SAFARI;\n+  getDriverForCaps (caps) {\n+    // TODO if this logic ever becomes complex, should probably factor out\n+    // into its own file\n+    if (!caps.platformName || !_.isString(caps.platformName)) {\n+      throw new Error(\"You must include a platformName capability\");\n     }\n-  } else if (type === DT_ANDROID) {\n-    // Detect Chrome browser from browserName, app and pkg\n-    if (\n-        this.isChromeBrowser(browser) ||\n-        this.isChromeBrowser(app) ||\n-        this.isChromePackage(pkg)\n-      ) {\n-      type = DT_CHROME;\n-    } else if (this.isSelendroidAutomation(automation)) {\n-      type = DT_SELENDROID;\n-    }\n-  }\n-\n-  if (!type) {\n-    throw new Error(\"Could not determine your device from Appium arguments \" +\n-                  \"or desired capabilities. Please make sure to specify the \" +\n-                  \"'deviceName' and 'platformName' capabilities\");\n-  }\n-  return type;\n-};\n-\n-Appium.prototype.isSelendroidAutomation = function (automation) {\n-  return automation.indexOf('selendroid') !== -1;\n-};\n \n-Appium.prototype.isChromeBrowser = function (browser) {\n-  return _.contains([\"chrome\", \"chromium\", \"chromebeta\", \"browser\"], browser);\n-};\n+    // we don't necessarily have an `automationName` capability,\n+    // but if we do and it is 'Selendroid', act on it\n+    if ((caps.automationName || '').toLowerCase() === 'selendroid') {\n+      return SelendroidDriver;\n+    }\n \n-Appium.prototype.isChromePackage = function (pkg) {\n-  var chromePkgs = [\n-    \"com.android.chrome\"\n-  , \"com.chrome.beta\"\n-  , \"org.chromium.chrome.shell\"\n-  , \"com.android.browser\"\n-  ];\n-  return _.contains(chromePkgs, pkg);\n-};\n+    if (caps.platformName.toLowerCase() === \"fake\") {\n+      return FakeDriver;\n+    }\n \n-Appium.prototype.isSafariBrowser = function (browser) {\n-  return browser === \"safari\";\n-};\n+    if (caps.platformName.toLowerCase() === 'android') {\n+      return AndroidDriver;\n+    }\n \n-Appium.prototype.getDeviceTypeFromPlatform = function (caps) {\n-  var device = null;\n-  switch (caps) {\n-  case 'ios':\n-    device = DT_IOS;\n-    break;\n-  case 'android':\n-    device = DT_ANDROID;\n-    break;\n-  case 'firefoxos':\n-    device = DT_FIREFOX_OS;\n-    break;\n-  }\n-  return device;\n-};\n+    if (caps.platformName.toLowerCase() === 'ios') {\n+      return IosDriver;\n+    }\n \n-Appium.prototype.configure = function (args, desiredCaps, cb) {\n-  var deviceType;\n-  try {\n-    deviceType = this.getDeviceType(args, desiredCaps);\n-    if (!args.launch) desiredCaps.checkValidity(deviceType, args.enforceStrictCaps);\n-  } catch (e) {\n-    logger.error(e.message);\n-    return cb(e);\n+    let msg;\n+    if (caps.automationName) {\n+      msg = `Could not find a driver for automationName '${caps.automationName}' and platformName ` +\n+            `'${caps.platformName}'.`;\n+    } else {\n+      msg = `Could not find a driver for platformName '${caps.platformName}'.`;\n+    }\n+    throw new Error(`${msg} Please check your desired capabilities.`);\n   }\n \n-  if (!this.deviceIsRegistered(deviceType)) {\n-    logger.error(\"Trying to run a session for device '\" + deviceType + \"' \" +\n-                 \"but that device hasn't been configured. Run config\");\n-    return cb(new Error(\"Device \" + deviceType + \" not configured yet\"));\n+  async getStatus () {\n+    let config = await getAppiumConfig();\n+    let gitSha = config['git-sha'];\n+    let status = {build: {version: config.version}};\n+    if (typeof gitSha !== \"undefined\") {\n+      status.build.revision = gitSha;\n+    }\n+    return status;\n   }\n-  this.device = this.getNewDevice(deviceType);\n-  this.device.configure(args, desiredCaps, cb);\n-  // TODO: better collaboration between the Appium and Device objects\n-  this.device.onResetTimeout = function () { this.resetTimeout(); }.bind(this);\n-};\n-\n-Appium.prototype.invoke = function (cb) {\n-  this.sessionId = UUID.create().hex;\n-  logger.debug('Creating new appium session ' + this.sessionId);\n \n-  if (this.device.args.autoLaunch === false) {\n-    // if user has passed in desiredCaps.autoLaunch = false\n-    // meaning they will manage app install / launching\n-    if (typeof this.device.noLaunchSetup === \"function\") {\n-      this.device.noLaunchSetup(function (err) {\n-        if (err) return cb(err);\n-        cb(null, this.device);\n-      }.bind(this));\n-    } else {\n-      cb(null, this.device);\n+  async getSessions () {\n+    let sessions = [];\n+    for (let [id, driver] of _.pairs(this.sessions)) {\n+      sessions.push({id: id, capabilities: driver.caps});\n     }\n-  } else {\n-    // the normal case, where we launch the device for folks\n-\n-    var onStart = function (err, sessionIdOverride) {\n-      if (sessionIdOverride) {\n-        this.sessionId = sessionIdOverride;\n-        logger.debug(\"Overriding session id with \" +\n-                    JSON.stringify(sessionIdOverride));\n+    return sessions;\n+  }\n+\n+  async createSession (caps, reqCaps) {\n+    caps = _.defaults(_.clone(caps), this.args.defaultCapabilities);\n+    let InnerDriver = this.getDriverForCaps(caps);\n+    let curSessions;\n+    log.info(`Creating new ${InnerDriver.name} session`);\n+    log.info('Capabilities:');\n+    util.inspect(caps);\n+    for (let [cap, value] of _.pairs(caps)) {\n+      log.info(`  ${cap}: ${util.inspect(value)}`);\n+    }\n+    try {\n+      curSessions = this.curSessionDataForDriver(InnerDriver);\n+    } catch (e) {\n+      throw new errors.SessionNotCreatedError(e.message);\n+    }\n+    let d = new InnerDriver(this.args);\n+    let [innerSessionId, dCaps] = await d.createSession(fixCaps(caps), reqCaps, curSessions);\n+    this.sessions[innerSessionId] = d;\n+\n+    // Remove the session on unexpected shutdown, so that we are in a position\n+    // to open another session later on.\n+    // TODO: this should be removed and replaced by a onShutdown callback.\n+    d.onUnexpectedShutdown\n+      .then(() => { throw new Error('Unexpected shutdown'); })\n+      .catch(B.CancellationError, () => {})\n+      .catch((err) => {\n+        log.warn(`Closing session, cause was '${err.message}'`);\n+        log.info(`Removing session ${innerSessionId} from our master session list`);\n+        delete this.sessions[innerSessionId];\n+      })\n+      .done();\n+\n+    log.info(`New ${InnerDriver.name} session created successfully, session ` +\n+             `${innerSessionId} added to master session list`);\n+\n+    // set the New Command Timeout for the inner driver\n+    d.startNewCommandTimeout();\n+\n+    return [innerSessionId, dCaps];\n+  }\n+\n+  curSessionDataForDriver (InnerDriver) {\n+    let data = _.values(this.sessions)\n+                .filter(s => s.constructor.name === InnerDriver.name)\n+                .map(s => s.driverData);\n+    for (let datum of data) {\n+      if (!datum) {\n+        throw new Error(`Problem getting session data for driver type ` +\n+                        `${InnerDriver.name}; does it implement 'get ` +\n+                        `driverData'?`);\n       }\n-      if (err) return this.cleanupSession(err, cb);\n-      logger.debug(\"Device launched! Ready for commands\");\n-      this.setCommandTimeout(this.desiredCapabilities.newCommandTimeout);\n-      cb(null, this.device);\n-    }.bind(this);\n+    }\n+    return data;\n+   }\n \n-    this.device.start(onStart, _.once(this.cleanupSession.bind(this)));\n+  async deleteSession (sessionId) {\n+    try {\n+      if (this.sessions[sessionId]) {\n+        await this.sessions[sessionId].deleteSession();\n+      }\n+    } catch (e) {\n+      log.error(`Had trouble ending session ${sessionId}: ${e.message}`);\n+      throw e;\n+    } finally {\n+      // regardless of whether the deleteSession completes successfully or not\n+      // make the session unavailable, because who knows what state it might\n+      // be in otherwise\n+      log.info(`Removing session ${sessionId} from our master session list`);\n+      delete this.sessions[sessionId];\n+    }\n   }\n-};\n \n-Appium.prototype.getNewDevice = function (deviceType) {\n-  var DeviceClass = (function () {\n-    switch (deviceType) {\n-      case DT_IOS:\n-        return IOS;\n-      case DT_SAFARI:\n-        return Safari;\n-      case DT_ANDROID:\n-        return Android;\n-      case DT_CHROME:\n-        return Chrome;\n-      case DT_SELENDROID:\n-        return Selendroid;\n-      case DT_FIREFOX_OS:\n-        return FirefoxOs;\n-      default:\n-        throw new Error(\"Tried to start a device that doesn't exist: \" +\n-                        deviceType);\n+  async executeCommand (cmd, ...args) {\n+    if (isAppiumDriverCommand(cmd)) {\n+      return super.executeCommand(cmd, ...args);\n     }\n-  })();\n-  return new DeviceClass();\n-};\n-\n-Appium.prototype.timeoutWaitingForCommand = function () {\n-  logger.debug(\"Didn't get a new command in \" + (this.commandTimeoutMs / 1000) +\n-              \" secs, shutting down...\");\n-  this.stop(function () {\n-    logger.debug(\"We shut down because no new commands came in\");\n-  }.bind(this));\n-};\n \n-Appium.prototype.cleanupSession = function (err, cb) {\n-  logger.debug(\"Cleaning up appium session\");\n-  if (this.commandTimeout) {\n-    clearTimeout(this.commandTimeout);\n-    this.commandTimeout = null;\n-  }\n-  this.commandTimeoutMs = this.defCommandTimeoutMs;\n-  if (this.sessionId) {\n-    // for some reason, stop has not been called\n-    this.dyingSessionId = this.sessionId;\n-    this.sessionId = null;\n+    let sessionId = args[args.length - 1];\n+    return this.sessions[sessionId].executeCommand(cmd, ...args);\n   }\n-  this.device = null;\n-  this.args = _.clone(this.serverArgs);\n-  this.oldDesiredCapabilities = _.clone(this.desiredCapabilities.desired);\n-  this.desiredCapabilities = {};\n-  if (cb) {\n-    if (err) return cb(err);\n-    cb(null, {status: status.codes.Success.code, value: null,\n-      sessionId: this.dyingSessionId});\n-  }\n-};\n \n-Appium.prototype.resetTimeout = function () {\n-  if (this.commandTimeout) {\n-    clearTimeout(this.commandTimeout);\n-  }\n-  if (this.commandTimeoutMs && this.commandTimeoutMs > 0) {\n-    this.commandTimeout = setTimeout(this.timeoutWaitingForCommand.bind(this),\n-      this.commandTimeoutMs);\n+  proxyActive (sessionId) {\n+    return this.sessions[sessionId] &&\n+           _.isFunction(this.sessions[sessionId].proxyActive) &&\n+           this.sessions[sessionId].proxyActive(sessionId);\n   }\n-};\n \n-Appium.prototype.setCommandTimeout = function (secs, cb) {\n-  if (typeof secs === \"undefined\") {\n-    secs = this.defCommandTimeoutMs / 1000;\n-    logger.debug(\"Setting command timeout to the default of \" + secs + \" secs\");\n-  } else {\n-    logger.debug(\"Setting command timeout to \" + secs + \" secs\");\n-  }\n-  this.commandTimeoutMs = secs * 1000;\n-  this.resetTimeout();\n-  if (typeof cb === \"function\") {\n-    jwpResponse(null, secs, cb);\n+  getProxyAvoidList (sessionId) {\n+    if (!this.sessions[sessionId]) {\n+      return [];\n+    }\n+    return this.sessions[sessionId].getProxyAvoidList();\n   }\n-};\n \n-Appium.prototype.stop = function (cb) {\n-  if (this.sessionId === null || this.device === null) {\n-    logger.debug(\"Trying to stop appium but there's no session, doing nothing\");\n-    return cb();\n+  canProxy (sessionId) {\n+    return this.sessions[sessionId] && this.sessions[sessionId].canProxy(sessionId);\n   }\n-  logger.info('Shutting down appium session');\n-  this.dyingSessionId = this.sessionId;\n-  this.sessionId = null;\n-  this.device.stop(function (err) {\n-    this.cleanupSession(err, cb);\n-  }.bind(this));\n-};\n+}\n \n-Appium.prototype.reset = function (cb) {\n-  logger.debug(\"Resetting app mid-session\");\n-  if (typeof this.device.resetAndStartApp === \"function\") {\n-    logger.debug(\"Running device specific reset\");\n-    this.device.resetAndStartApp(function (err) {\n-      jwpResponse(err, cb);\n-    });\n-  } else {\n-    logger.debug(\"Running generic full reset\");\n-    var oldImpWait = this.device.implicitWaitMs\n-      , oldCommandTimeoutMs = this.commandTimeoutMs\n-      , oldId = this.sessionId;\n+// help decide which commands should be proxied to sub-drivers and which\n+// should be handled by this, our umbrella driver\n+function isAppiumDriverCommand (cmd) {\n+  return !isSessionCommand(cmd) || cmd === \"deleteSession\";\n+}\n \n-    this.resetting = true;\n-    this.stop(function () {\n-      logger.debug(\"Restarting app\");\n-      this.start(this.oldDesiredCapabilities, function (err) {\n-        if (err) return cb(err);\n-        this.resetting = false;\n-        this.device.implicitWaitMs = oldImpWait;\n-        this.sessionId = oldId;\n-        this.dyingSessionId = null;\n-        this.setCommandTimeout(oldCommandTimeoutMs / 1000, cb);\n-      }.bind(this));\n-    }.bind(this));\n-  }\n-};\n+function getAppiumRouter (args) {\n+  let appium = new AppiumDriver(args);\n+  return routeConfiguringFunction(appium);\n+}\n \n-module.exports = function (args) {\n-  return new Appium(args);\n-};\n+export { AppiumDriver, getAppiumRouter };\n+export default getAppiumRouter;"
    },
    {
      "sha": "552ce6b57cf8e7689a548e558c6af575b7c9a77a",
      "filename": "lib/config.js",
      "status": "added",
      "additions": 149,
      "deletions": 0,
      "changes": 149,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/config.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/config.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/config.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429",
      "patch": "@@ -0,0 +1,149 @@\n+import _ from 'lodash';\n+import path from 'path';\n+import { mkdirp, fs } from 'appium-support';\n+import { exec } from 'teen_process';\n+import logger from './logger';\n+import pkgObj from '../../package.json';\n+\n+\n+const APPIUM_VER = pkgObj.version;\n+\n+function getNodeVersion () {\n+  // expect v<major>.<minor>.<patch>\n+  // we will pull out `major` and `minor`\n+  let version = process.version.match(/^v(\\d+)\\.(\\d+)/);\n+  return [Number(version[1]), Number(version[2])];\n+}\n+\n+async function getGitRev () {\n+  let cwd = path.resolve(__dirname, \"..\", \"..\");\n+  let rev = null;\n+  try {\n+    let {stdout} = await exec(\"git\", [\"rev-parse\", \"HEAD\"], {cwd});\n+    rev = stdout.trim();\n+  } catch (ign) {}\n+  return rev;\n+}\n+\n+async function getAppiumConfig () {\n+  let stat = await fs.stat(path.resolve(__dirname, '..'));\n+  let built = stat.mtime.getTime();\n+  let config = {\n+    'git-sha': await getGitRev(),\n+    'built': built,\n+    'version': APPIUM_VER,\n+  };\n+  return config;\n+}\n+\n+function checkNodeOk () {\n+  let [major, minor] = getNodeVersion();\n+  if (major === 0 && minor < 12) {\n+    let msg = `Node version must be >= 0.12. Currently ${major}.${minor}`;\n+    logger.errorAndThrow(msg);\n+  }\n+}\n+\n+function warnNodeDeprecations () {\n+  let [major, minor] = getNodeVersion();\n+  if (major === 0 && minor < 12) {\n+    logger.warn(\"Appium support for versions of node < 0.12 has been \" +\n+                \"deprecated and will be removed in a future version. Please \" +\n+                \"upgrade!\");\n+  }\n+}\n+\n+async function showConfig () {\n+  let config = await getAppiumConfig();\n+  console.log(JSON.stringify(config));\n+}\n+\n+function getNonDefaultArgs (parser, args) {\n+  let nonDefaults = {};\n+  for (let rawArg of parser.rawArgs) {\n+    let arg = rawArg[1].dest;\n+    if (args[arg] !== rawArg[1].defaultValue) {\n+      nonDefaults[arg] = args[arg];\n+    }\n+  }\n+  return nonDefaults;\n+}\n+\n+function getDeprecatedArgs (parser, args) {\n+  // go through the server command line arguments and figure\n+  // out which of the ones used are deprecated\n+  let deprecated = {};\n+  for (let rawArg of parser.rawArgs) {\n+    let arg = rawArg[1].dest;\n+    let defaultValue = rawArg[1].defaultValue;\n+    let isDeprecated = !!rawArg[1].deprecatedFor;\n+    if (args[arg] !== defaultValue && isDeprecated) {\n+      deprecated[rawArg[0]] = rawArg[1].deprecatedFor;\n+    }\n+  }\n+  return deprecated;\n+}\n+\n+function checkValidPort (port, portName) {\n+  if (port > 0 && port < 65536) return true;\n+  logger.error(`Port '${portName}' must be greater than 0 and less than 65536. Currently ${port}`);\n+  return false;\n+}\n+\n+function validateServerArgs (parser, args) {\n+  // arguments that cannot both be set\n+  let exclusives = [\n+    ['noReset', 'fullReset'],\n+    ['ipa', 'safari'],\n+    ['app', 'safari'],\n+    ['forceIphone', 'forceIpad'],\n+    ['deviceName', 'defaultDevice']\n+  ];\n+\n+  for (let exSet of exclusives) {\n+    let numFoundInArgs = 0;\n+    for (let opt of exSet) {\n+      if (_.has(args, opt) && args[opt]) {\n+        numFoundInArgs++;\n+      }\n+    }\n+    if (numFoundInArgs > 1) {\n+      throw new Error(`You can't pass in more than one argument from the ` +\n+                      `set ${JSON.stringify(exSet)}, since they are ` +\n+                      `mutually exclusive`);\n+    }\n+  }\n+\n+  const validations = {\n+    port: checkValidPort,\n+    callbackPort: checkValidPort,\n+    bootstrapPort: checkValidPort,\n+    selendroidPort: checkValidPort,\n+    chromedriverPort: checkValidPort,\n+    robotPort: checkValidPort,\n+    backendRetries: (r) => { return r >= 0; }\n+  };\n+\n+  const nonDefaultArgs = getNonDefaultArgs(parser, args);\n+\n+  for (let [arg, validator] of _.pairs(validations)) {\n+    if (_.has(nonDefaultArgs, arg)) {\n+      if (!validator(args[arg], arg)) {\n+        throw new Error(`Invalid argument for param ${arg}: ${args[arg]}`);\n+      }\n+    }\n+  }\n+}\n+\n+async function validateTmpDir (tmpDir) {\n+  try {\n+    await mkdirp(tmpDir);\n+  } catch (e) {\n+    throw new Error(`We could not ensure that the temp dir you specified ` +\n+                    `(${tmpDir}) exists. Please make sure it's writeable.`);\n+  }\n+}\n+\n+export { getAppiumConfig, validateServerArgs, checkNodeOk, showConfig,\n+         warnNodeDeprecations, validateTmpDir, getNonDefaultArgs,\n+         getDeprecatedArgs, getGitRev, checkValidPort, APPIUM_VER };"
    },
    {
      "sha": "518f00af86780ebb010c37d7677912c8848c1196",
      "filename": "lib/cookies.js",
      "status": "removed",
      "additions": 0,
      "deletions": 93,
      "changes": 93,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/cookies.js",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/cookies.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/cookies.js?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,93 +0,0 @@\n-\"use strict\";\n-\n-var _ = require('underscore');\n-\n-/*\n- * derived from jQuery Cookie Plugin v1.4.1\n- * https://github.com/carhartl/jquery-cookie\n- */\n-\n-module.exports = function (cookieString) {\n-\n-  var pluses = /\\+/g;\n-\n-  function encode(s) {\n-    return encodeURIComponent(s);\n-  }\n-\n-  function decode(s) {\n-    return decodeURIComponent(s);\n-  }\n-\n-  function parseCookieValue(s) {\n-    if (s.indexOf('\"') === 0) {\n-      // This is a quoted cookie as according to RFC2068, unescape...\n-      s = s.slice(1, -1).replace(/\\\\\"/g, '\"').replace(/\\\\\\\\/g, '\\\\');\n-    }\n-\n-    try {\n-      // Replace server-side written pluses with spaces.\n-      // If we can't decode the cookie, ignore it, it's unusable.\n-      // If we can't parse the cookie, ignore it, it's unusable.\n-      return decodeURIComponent(s.replace(pluses, ' '));\n-    } catch (e) {}\n-  }\n-\n-  function read(s, converter) {\n-    var value = parseCookieValue(s);\n-    return _.isFunction(converter) ? converter(value) : value;\n-  }\n-\n-  this.cookie = this.cookies = function (key, value, options) {\n-\n-    // Write\n-\n-    if (arguments.length > 1 && !_.isFunction(value)) {\n-      options = _.extend({}, options);\n-\n-      var ret = [\n-        encode(key), '=', value,\n-        options.expires ? '; expires=' + options.expires : '', // use expires attribute, max-age is not supported by IE\n-        options.path    ? '; path=' + options.path : '',\n-        options.domain  ? '; domain=' + options.domain : '',\n-        options.secure  ? '; secure' : ''\n-      ].join('');\n-      return ret;\n-    }\n-\n-    // Read\n-\n-    var result = key ? undefined : {};\n-\n-    // To prevent the for loop in the first place assign an empty array\n-    // in case there are no cookies at all. Also prevents odd result when\n-    // calling this.cookie().\n-    var cookies = cookieString ? cookieString.split('; ') : [];\n-\n-    for (var i = 0, l = cookies.length; i < l; i++) {\n-      var parts = cookies[i].split('=');\n-      var name = decode(parts.shift());\n-      var cookie = parts.join('=');\n-\n-      if (key && key === name) {\n-        // If second argument (value) is a function it's a converter...\n-        result = read(cookie, value);\n-        break;\n-      }\n-\n-      // Prevent storing a cookie that we couldn't decode.\n-      if (!key && (cookie = read(cookie)) !== undefined) {\n-        result[name] = cookie;\n-      }\n-    }\n-\n-    return result;\n-  };\n-\n-  this.removeCookie = function (key, options) {\n-    // Must not alter options, thus extending a fresh object...\n-    return this.cookie(key, '', _.extend({}, options, {\n-      expires: \"Thu, 01 Jan 1970 00:00:00 GMT\" }));\n-  };\n-\n-};"
    },
    {
      "sha": "57349c2529abbec84ae42638873c5e95f7e802ad",
      "filename": "lib/devices/android/adb.js",
      "status": "removed",
      "additions": 0,
      "deletions": 8,
      "changes": 8,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/adb.js",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/adb.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/adb.js?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,8 +0,0 @@\n-// Gets adb from npm package and setup logger\n-\"use strict\";\n-\n-var ADB = require('appium-adb');\n-\n-ADB.logger.init(require('../../server/logger').get('appium'));\n-\n-module.exports = ADB;"
    },
    {
      "sha": "f7a7eaeab8a66aa4e321b9da57f338e0fc7c548a",
      "filename": "lib/devices/android/android-common.js",
      "status": "removed",
      "additions": 0,
      "deletions": 1079,
      "changes": 1079,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/android-common.js",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/android-common.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/android-common.js?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,1079 +0,0 @@\n-\"use strict\";\n-\n-var logger = require('../../server/logger.js').get('appium')\n-  , _ = require('underscore')\n-  , status = require(\"../../server/status.js\")\n-  , fs = require('fs')\n-  , path = require('path')\n-  , exec = require('child_process').exec\n-  , md5 = require('md5calculator')\n-  , async = require('async')\n-  , errors = require('../../server/errors.js')\n-  , Device = require('../device.js')\n-  , NotYetImplementedError = errors.NotYetImplementedError\n-  , Args = require(\"vargs\").Constructor\n-  , ADB = require('./adb.js');\n-\n-var logTypesSupported = {\n-  'logcat' : 'Logs for Android applications on real device and emulators ' +\n-             'via ADB'\n-};\n-\n-var androidCommon = {};\n-\n-androidCommon.configure = function (args, caps, cb) {\n-  this._deviceConfigure(args, caps);\n-  this.setAndroidArgs();\n-  if (!this.args.androidActivity) {\n-    logger.debug(\"No appActivity desired capability or server param. \" +\n-                \"Parsing from apk.\");\n-  }\n-  if (!this.args.androidPackage) {\n-    logger.debug(\"No appPackage desired capability or server param. \" +\n-                \"Parsing from apk.\");\n-  }\n-\n-  if (this.args.app) {\n-    this.configureApp(cb);\n-  } else if (this.args.androidPackage) {\n-    this.args.app = null;\n-    logger.debug(\"Didn't get app but did get Android package, will attempt \" +\n-                \"to launch it on the device\");\n-    cb(null);\n-  } else {\n-    var msg = \"No app set; either start appium with --app or pass in an \" +\n-              \"'app' value in desired capabilities, or set androidPackage \" +\n-              \"to launch pre-existing app on device\";\n-    logger.error(msg);\n-    cb(new Error(msg));\n-  }\n-};\n-\n-androidCommon.configureApp = function (cb) {\n-  var _cb = cb;\n-  cb = function (err) {\n-    if (err) {\n-      err = new Error(\"Bad app: \" + this.args.app + \". App paths need to be \" +\n-                      \"absolute, or relative to the appium server install \" +\n-                      \"dir, or a URL to compressed file, or a special app \" +\n-                      \"name. cause: \" + err);\n-    }\n-    _cb(err);\n-  }.bind(this);\n-\n-  if (this.appIsPackageOrBundle(this.args.app)) {\n-    // we have a package instead of app\n-    this.args.appPackage = this.args.app;\n-    this.args.app = null;\n-    if (!this.args.appActivity) {\n-      return cb(new Error(\"You passed in an app package as the 'app' \" +\n-                          \"capability, but didn't include appActivity. We \" +\n-                          \"need to know that too in order to start your app\"));\n-    }\n-    logger.debug(\"App is an Android package, will attempt to run on device\");\n-    cb();\n-  } else {\n-    Device.prototype.configureApp.call(this, cb);\n-  }\n-};\n-\n-androidCommon.setAndroidArgs = function () {\n-  this.setArgFromCap(\"androidPackage\", \"appPackage\");\n-  this.setArgFromCap(\"androidActivity\", \"appActivity\");\n-  this.setArgFromCap(\"androidWaitPackage\", \"appWaitPackage\");\n-  this.setArgFromCap(\"androidWaitActivity\", \"appWaitActivity\");\n-  this.setArgFromCap(\"androidDeviceReadyTimeout\", \"deviceReadyTimeout\");\n-  this.setArgFromCap(\"androidCoverage\", \"androidCoverage\");\n-  this.args.systemPort = this.args.bootstrapPort;\n-  this.args.appPackage = this.args.androidPackage;\n-  this.args.appActivity = this.args.androidActivity;\n-  this.args.appWaitPackage = this.args.androidWaitPackage ||\n-                             this.args.appPackage;\n-  this.args.appWaitActivity = this.args.androidWaitActivity ||\n-                              this.args.appActivity;\n-  this.appProcess = this.args.appPackage;\n-  this.args.appDeviceReadyTimeout = this.args.androidDeviceReadyTimeout;\n-  this.args.avdLaunchTimeout = this.args.avdLaunchTimeout || 120000;\n-  this.args.avdReadyTimeout = this.args.avdReadyTimeout || 120000;\n-  this.args.noSign = this.args.noSign || false;\n-};\n-\n-androidCommon.background = function (secs, cb) {\n-  this.adb.getFocusedPackageAndActivity(function (err, pack, activity) {\n-    if (err) return cb(err);\n-\n-    this.adb.keyevent(\"3\", function (err) {\n-      if (err) return cb(err);\n-\n-      setTimeout(function () {\n-        var onStart = function (err) {\n-          if (err) return cb(err);\n-          cb(null,{\n-            status: status.codes.Success.code,\n-            value: null\n-          });\n-        };\n-        this.adb.startApp({\n-          pkg: this.args.appPackage,\n-          activity: this.args.appActivity,\n-          action: this.args.intentAction,\n-          category: this.args.intentCategory,\n-          flags: this.args.intentFlags,\n-          waitPkg: pack,\n-          waitActivity: activity,\n-          optionalIntentArguments: this.args.optionalIntentArguments,\n-          retry: true,\n-          stopApp: !this.args.dontStopAppOnReset\n-        }, onStart);\n-      }.bind(this), secs * 1000);\n-    }.bind(this));\n-  }.bind(this));\n-};\n-\n-androidCommon.openSettingsActivity = function (setting, cb) {\n-  this.adb.getFocusedPackageAndActivity(function (err, foundPackage,\n-                                                 foundActivity) {\n-    var cmd = 'am start -a android.settings.' + setting;\n-    this.adb.shell(cmd, function (err) {\n-      if (err) {\n-        cb(err);\n-      } else {\n-        this.adb.waitForNotActivity(foundPackage, foundActivity, 5000, cb);\n-      }\n-    }.bind(this));\n-  }.bind(this));\n-};\n-\n-androidCommon.toggleSetting = function (setting, preKeySeq, ocb) {\n-  var doKey = function (key) {\n-    return function (cb) {\n-      setTimeout(function () {\n-        this.adb.keyevent(key, cb);\n-      }.bind(this), 2000);\n-    }.bind(this);\n-  }.bind(this);\n-\n-  var settPkg, settAct;\n-\n-  var back = function (cb) {\n-    this.adb.back(function (err) {\n-      if (err) {\n-        cb(err);\n-      } else {\n-        this.adb.waitForNotActivity(settPkg, settAct, 5000, cb);\n-      }\n-    }.bind(this));\n-  }.bind(this);\n-\n-  /*\n-   * preKeySeq is the keyevent sequence to send over ADB in order\n-   * to position the cursor on the right option.\n-   * By default it's [up, up, down] because we usually target the 1st item in\n-   * the screen, and sometimes when opening settings activities the cursor is\n-   * already positionned on the 1st item, but we can't know for sure\n-   */\n-  if (preKeySeq === null) preKeySeq = [19, 19, 20]; // up, up, down\n-\n-  var sequence = [\n-    function (cb) {\n-      this.openSettingsActivity(setting, cb);\n-    }.bind(this)\n-  ];\n-  var len = preKeySeq.length;\n-\n-  for (var i = 0; i < len; i++) {\n-    sequence.push(doKey(preKeySeq[i]));\n-  }\n-\n-  sequence.push(\n-    function (cb) {\n-      this.adb.getFocusedPackageAndActivity(function (err, foundPackage,\n-                                                     foundActivity) {\n-        settPkg = foundPackage;\n-        settAct = foundActivity;\n-        cb(err);\n-      }.bind(this));\n-    }.bind(this)\n-    , function (cb) {\n-      /*\n-       * Click and handle potential ADB disconnect that occurs on official\n-       * emulator when the network connection is disabled\n-       */\n-      this.wrapActionAndHandleADBDisconnect(doKey(23), cb);\n-    }.bind(this)\n-    , function (cb) {\n-      /*\n-       * In one particular case (enable Location Services), a pop-up is\n-       * displayed on some platforms so the user accepts or refuses that Google\n-       * collects location data. So we wait for that pop-up to open, if it\n-       * doesn't then proceed\n-       */\n-      this.adb.waitForNotActivity(settPkg, settAct, 5000, function (err) {\n-        if (err) {\n-          cb(null);\n-        } else {\n-          // Click on right button, \"Accept\"\n-          async.series([\n-            doKey(22)     // right\n-            , doKey(23)   // click\n-            , function (cb) {\n-              // Wait for pop-up to close\n-              this.adb.waitForActivity(settPkg, settAct, 5000, cb);\n-            }.bind(this)\n-          ], function (err) {\n-            cb(err);\n-          }.bind(this));\n-        }\n-      }.bind(this));\n-    }.bind(this)\n-    , back\n-  );\n-\n-  async.series(sequence, function (err) {\n-    if (err) return ocb(err);\n-    ocb(null, { status: status.codes.Success.code });\n-  }.bind(this));\n-};\n-\n-androidCommon.toggleData = function (cb) {\n-  this.adb.isDataOn(function (err, dataOn) {\n-    if (err) return cb(err);\n-\n-    this.wrapActionAndHandleADBDisconnect(function (ncb) {\n-      this.adb.setData(dataOn ? 0 : 1, ncb);\n-    }.bind(this), function (err) {\n-      if (err) return cb(err);\n-      cb(null, {\n-        status: status.codes.Success.code\n-      });\n-    });\n-  }.bind(this));\n-};\n-\n-androidCommon.toggleFlightMode = function (ocb) {\n-  this.adb.isAirplaneModeOn(function (err, airplaneModeOn) {\n-    if (err) return ocb(err);\n-\n-    async.series([\n-      function (cb) {\n-        this.wrapActionAndHandleADBDisconnect(function (ncb) {\n-          this.adb.setAirplaneMode(airplaneModeOn ? 0 : 1, ncb);\n-        }.bind(this), cb);\n-      }.bind(this),\n-      function (cb) {\n-        this.wrapActionAndHandleADBDisconnect(function (ncb) {\n-          this.adb.broadcastAirplaneMode(airplaneModeOn ? 0 : 1, ncb);\n-        }.bind(this), cb);\n-      }.bind(this)\n-    ], function (err) {\n-      if (err) return ocb(err);\n-      ocb(null, {\n-        status: status.codes.Success.code\n-      });\n-    }.bind(this));\n-  }.bind(this));\n-};\n-\n-androidCommon.toggleWiFi = function (cb) {\n-  this.adb.isWifiOn(function (err, dataOn) {\n-    if (err) return cb(err);\n-\n-    this.wrapActionAndHandleADBDisconnect(function (ncb) {\n-      this.adb.setWifi(dataOn ? 0 : 1, ncb);\n-    }.bind(this), function (err) {\n-      if (err) return cb(err);\n-      cb(null, {\n-        status: status.codes.Success.code\n-      });\n-    });\n-  }.bind(this));\n-};\n-\n-androidCommon.toggleLocationServices = function (ocb) {\n-  this.adb.getApiLevel(function (err, api) {\n-    if (api > 15) {\n-      var seq = [19, 19];   // up, up\n-      if (api === 16) {\n-        // This version of Android has a \"parent\" button in its action bar\n-        seq.push(20);       // down\n-      } else if (api >= 19) {\n-        // Newer versions of Android have the toggle in the Action bar\n-        seq = [22, 22, 19];     // right, right, up\n-        /*\n-         * Once the Location services switch is OFF, it won't receive focus\n-         * when going back to the Location Services settings screen unless we\n-         * send a dummy keyevent (UP) *before* opening the settings screen\n-         */\n-        this.adb.keyevent(19, function (/*err*/) {\n-          this.toggleSetting('LOCATION_SOURCE_SETTINGS', seq, ocb);\n-        }.bind(this));\n-        return;\n-      }\n-      this.toggleSetting('LOCATION_SOURCE_SETTINGS', seq, ocb);\n-    } else {\n-      // There's no global location services toggle on older Android versions\n-      ocb(new NotYetImplementedError(), null);\n-    }\n-  }.bind(this));\n-};\n-\n-androidCommon.prepareDevice = function (onReady) {\n-  logger.debug(\"Using fast reset? \" + this.args.fastReset);\n-  logger.debug(\"Preparing device for session\");\n-  async.series([\n-    function (cb) { this.checkAppPresent(cb); }.bind(this),\n-    function (cb) { this.prepareEmulator(cb); }.bind(this),\n-    function (cb) { this.prepareActiveDevice(cb); }.bind(this),\n-    function (cb) { this.adb.waitForDevice(cb); }.bind(this),\n-    function (cb) { this.adb.startLogcat(cb); }.bind(this)\n-  ], onReady);\n-};\n-\n-androidCommon.checkAppPresent = function (cb) {\n-  if (this.args.app === null) {\n-    logger.debug(\"Not checking whether app is present since we are assuming \" +\n-                \"it's already on the device\");\n-    cb();\n-  } else {\n-    logger.debug(\"Checking whether app is actually present\");\n-    fs.stat(this.args.app, function (err) {\n-      if (err) {\n-        logger.error(\"Could not find app apk at \" + this.args.app);\n-        cb(err);\n-      } else {\n-        cb();\n-      }\n-    }.bind(this));\n-  }\n-};\n-\n-androidCommon.prepareEmulator = function (cb) {\n-  if (this.args.avd !== null) {\n-    var avdName = this.args.avd.replace('@', '');\n-    this.adb.getRunningAVD(avdName, function (err, runningAVD) {\n-      if (err && err.message.indexOf('No devices') === -1 &&\n-          err.message.indexOf('No emulators') === -1) return cb(err);\n-      if (runningAVD !== null) {\n-        logger.debug(\"Did not launch AVD because it was already running.\");\n-        return this.ensureDeviceLocale(cb);\n-      }\n-      this.adb.launchAVD(this.args.avd, this.args.avdArgs, this.args.language, this.args.locale,\n-        this.args.avdLaunchTimeout, this.args.avdReadyTimeout, cb);\n-    }.bind(this));\n-  } else {\n-    this.ensureDeviceLocale(cb);\n-  }\n-};\n-\n-androidCommon.ensureDeviceLocale = function (cb) {\n-  var haveLanguage = this.args.language && typeof this.args.language === \"string\";\n-  var haveCountry = this.args.locale && typeof this.args.locale === \"string\";\n-  if (!haveLanguage && !haveCountry) return cb();\n-  this.getDeviceLanguage(function (err, language) {\n-    if (err) return cb(err);\n-    this.getDeviceCountry(function (err, country) {\n-      if (err) return cb(err);\n-      var adbCmd = \"\";\n-      if (haveLanguage && this.args.language !== language) {\n-        logger.debug(\"Setting Android Device Language to \" + this.args.language);\n-        adbCmd += \"setprop persist.sys.language \" + this.args.language.toLowerCase() + \";\";\n-      }\n-      if (haveCountry && this.args.locale !== country) {\n-        logger.debug(\"Setting Android Device Country to \" + this.args.locale);\n-        adbCmd += \"setprop persist.sys.country \" + this.args.locale.toUpperCase() + \";\";\n-      }\n-      if (adbCmd === \"\") return cb();\n-      this.adb.shell(adbCmd, function (err) {\n-        if (err) return cb(err);\n-        this.adb.reboot(cb);\n-      }.bind(this));\n-    }.bind(this));\n-  }.bind(this));\n-};\n-\n-androidCommon.prepareActiveDevice = function (cb) {\n-  if (this.adb.curDeviceId) {\n-    // deviceId is already setted\n-    return cb();\n-  }\n-  logger.info('Retrieving device');\n-  this.adb.getDevicesWithRetry(function (err, devices) {\n-    if (err) return cb(err);\n-    var deviceId = null;\n-    if (this.adb.udid) {\n-      if (!_.contains(_.pluck(devices, 'udid'), this.adb.udid)) {\n-        return cb(new Error(\"Device \" + this.adb.udid + \" was not in the list \" +\n-                            \"of connected devices\"));\n-      }\n-      deviceId = this.adb.udid;\n-    } else {\n-      deviceId = devices[0].udid;\n-      var emPort = this.adb.getPortFromEmulatorString(deviceId);\n-      this.adb.setEmulatorPort(emPort);\n-    }\n-    logger.info('Found device', deviceId);\n-    this.adb.setDeviceId(deviceId);\n-    cb();\n-  }.bind(this));\n-};\n-\n-androidCommon.resetApp = function (cb) {\n-  if (this.args.fastReset) {\n-    logger.debug(\"Running fast reset (stop and clear)\");\n-    this.adb.stopAndClear(this.args.appPackage, cb);\n-  } else {\n-    logger.debug(\"Running old fashion reset (reinstall)\");\n-    this.remoteApkExists(function (err, remoteApk) {\n-      if (err) return cb(err);\n-      if (!remoteApk) {\n-        return cb(new Error(\"Can't run reset if remote apk doesn't exist\"));\n-      }\n-      this.adb.uninstallApk(this.args.appPackage, function (err) {\n-        if (err) return cb(err);\n-        this.adb.installRemote(remoteApk, cb);\n-      }.bind(this));\n-    }.bind(this));\n-  }\n-};\n-\n-androidCommon.getRemoteApk = function (cb) {\n-  var next = function () {\n-    cb(null, this.remoteTempPath() + this.appMd5Hash + '.apk', this.appMd5Hash);\n-  }.bind(this);\n-\n-  if (this.appMd5Hash) {\n-    next();\n-  } else {\n-    this.getAppMd5(function (err, md5Hash) {\n-      if (err) return cb(err);\n-      this.appMd5Hash = md5Hash;\n-      next();\n-    }.bind(this));\n-  }\n-};\n-\n-androidCommon.remoteApkExists = function (cb) {\n-  this.getRemoteApk(function (err, remoteApk) {\n-    if (err) return cb(err);\n-    this.adb.shell(\"ls \" + remoteApk, function (err, stdout) {\n-      if (err) return cb(err);\n-      if (stdout.indexOf(\"No such file\") !== -1) {\n-        return cb(new Error(\"remote apk did not exist\"));\n-      }\n-      cb(null, stdout.trim());\n-    });\n-  }.bind(this));\n-};\n-androidCommon.uninstallApp = function (cb) {\n-  var next = function () {\n-    this.adb.uninstallApk(this.args.appPackage, function (err) {\n-      if (err) return cb(err);\n-      cb(null);\n-    }.bind(this));\n-  }.bind(this);\n-\n-  if (this.args.skipUninstall) {\n-    logger.debug(\"Not uninstalling app since server not started with \" +\n-      \"--full-reset\");\n-    cb();\n-  } else {\n-    next();\n-  }\n-};\n-\n-androidCommon.installAppForTest = function (cb) {\n-  if (this.args.app === null) {\n-    logger.debug(\"Skipping install since we launched with a package instead \" +\n-                \"of an app path\");\n-    return cb();\n-  }\n-  var afterSigning = function (err) {\n-    if (err) return cb(err);\n-    this.remoteApkExists(function (err, remoteApk) {\n-      // err is set if the remote apk doesn't exist so don't check it.\n-      this.adb.isAppInstalled(this.args.appPackage, function (err, installed) {\n-        if (installed && this.args.fastReset && remoteApk) {\n-          logger.info('App is already installed, resetting app');\n-          this.resetApp(cb);\n-        } else if (!installed || (this.args.fastReset && !remoteApk)) {\n-          logger.info('Installing App');\n-          this.adb.mkdir(this.remoteTempPath(), function (err) {\n-            if (err) return cb(err);\n-            this.getRemoteApk(function (err, remoteApk, md5Hash) {\n-              if (err) return cb(err);\n-              this.removeTempApks([md5Hash], function (err, appExists) {\n-                if (err) return cb(err);\n-                var install = function (err) {\n-                  if (err) return cb(err);\n-                  this.installRemoteWithRetry(remoteApk, cb);\n-                }.bind(this);\n-                if (appExists) {\n-                  install();\n-                } else {\n-                  this.adb.push(this.args.app, remoteApk, install);\n-                }\n-              }.bind(this));\n-            }.bind(this));\n-          }.bind(this));\n-        } else {\n-          cb();\n-        }\n-      }.bind(this));\n-    }.bind(this));\n-  }.bind(this);\n-  // Skipping sign apk for noSign true\n-  if (this.args.noSign) {\n-    logger.debug('noSign capability set to true, skipping checking and signing of app');\n-    afterSigning();\n-  } else {\n-    this.adb.checkAndSignApk(this.args.app, this.args.appPackage, afterSigning);\n-  }\n-};\n-\n-androidCommon.installRemoteWithRetry = function (remoteApk, cb) {\n-  this.adb.uninstallApk(this.args.appPackage, function (err) {\n-    if (err) logger.warn(\"Uninstalling apk failed, continuing\");\n-    this.adb.installRemote(remoteApk, function (err) {\n-      if (err) {\n-        logger.warn(\"Installing remote apk failed, going to uninstall and try \" +\n-                    \"again\");\n-        this.removeTempApks([], function () {\n-          this.adb.push(this.args.app, remoteApk, function (err) {\n-            if (err) return cb(err);\n-            logger.debug(\"Attempting to install again for the last time\");\n-            this.adb.installRemote(remoteApk, cb);\n-          }.bind(this));\n-        }.bind(this));\n-      } else {\n-        cb();\n-      }\n-    }.bind(this));\n-  }.bind(this));\n-};\n-\n-androidCommon.getAppMd5 = function (cb) {\n-  try {\n-    md5(this.args.app, function (err, md5Hash) {\n-      if (err) return cb(err);\n-      logger.debug(\"MD5 for app is \" + md5Hash);\n-      cb(null, md5Hash);\n-    }.bind(this));\n-  } catch (e) {\n-    logger.error(\"Problem calculating md5: \" + e);\n-    return cb(e);\n-  }\n-};\n-\n-androidCommon.remoteTempPath = function () {\n-  return \"/data/local/tmp/\";\n-};\n-\n-androidCommon.removeTempApks = function (exceptMd5s, cb) {\n-  logger.debug(\"Removing any old apks\");\n-  if (typeof exceptMd5s === \"function\") {\n-    cb = exceptMd5s;\n-    exceptMd5s = [];\n-  }\n-\n-  var listApks = function (cb) {\n-    var cmd = 'ls /data/local/tmp/*.apk';\n-    this.adb.shell(cmd, function (err, stdout) {\n-      if (err || stdout.indexOf(\"No such file\") !== -1) {\n-        return cb(null, []);\n-      }\n-      var apks = stdout.split(\"\\n\");\n-      cb(null, apks);\n-    });\n-  }.bind(this);\n-\n-  var removeApks = function (apks, cb) {\n-    if (apks.length < 1) {\n-      logger.debug(\"No apks to examine\");\n-      return cb();\n-    }\n-    var matchingApkFound = false;\n-    var noMd5Matched = true;\n-    var removes = [];\n-    _.each(apks, function (path) {\n-      path = path.trim();\n-      if (path !== \"\") {\n-        noMd5Matched = true;\n-        _.each(exceptMd5s, function (md5Hash) {\n-          if (path.indexOf(md5Hash) !== -1) {\n-            noMd5Matched = false;\n-          }\n-        });\n-        if (noMd5Matched) {\n-          removes.push('rm \"' + path + '\"');\n-        } else {\n-          logger.debug(\"Found an apk we want to keep at \" + path);\n-          matchingApkFound = true;\n-        }\n-      }\n-    });\n-\n-    // Invoking adb shell with an empty string will open a shell console\n-    // so return here if there's nothing to remove.\n-    if (removes.length < 1) {\n-      logger.debug(\"Couldn't find any apks to remove\");\n-      return cb(null, matchingApkFound);\n-    }\n-\n-    var cmd = removes.join(\" && \");\n-    this.adb.shell(cmd, function () {\n-      cb(null, matchingApkFound);\n-    });\n-  }.bind(this);\n-\n-  async.waterfall([\n-    function (cb) { listApks(cb); },\n-    function (apks, cb) { removeApks(apks, cb); }\n-  ], function (err, matchingApkFound) { cb(null, matchingApkFound); });\n-};\n-\n-androidCommon.forwardPort = function (cb) {\n-  this.adb.forwardPort(this.args.systemPort, this.args.devicePort, cb);\n-};\n-\n-androidCommon.pushUnicodeIME = function (cb) {\n-  logger.debug(\"Pushing unicode ime to device...\");\n-  var imePath = path.resolve(__dirname, \"..\", \"..\", \"..\", \"build\",\n-      \"unicode_ime_apk\", \"UnicodeIME-debug.apk\");\n-  fs.stat(imePath, function (err) {\n-    if (err) {\n-      cb(new Error(\"Could not find Unicode IME apk; please run \" +\n-                   \"'reset.sh --android' to build it.\"));\n-    } else {\n-      this.adb.install(imePath, false, cb);\n-    }\n-  }.bind(this));\n-};\n-\n-androidCommon.pushSettingsApp = function (cb) {\n-  logger.debug(\"Pushing settings apk to device...\");\n-  var settingsPath = path.resolve(__dirname, \"..\", \"..\", \"..\", \"build\",\n-      \"settings_apk\", \"settings_apk-debug.apk\");\n-\n-  fs.stat(settingsPath, function (err) {\n-    if (err) {\n-      cb(new Error(\"Could not find settings apk; please run \" +\n-                   \"'reset.sh --android' to build it.\"));\n-    } else {\n-      this.adb.install(settingsPath, false, cb);\n-    }\n-  }.bind(this));\n-};\n-\n-androidCommon.packageAndLaunchActivityFromManifest = function (cb) {\n-  if (!this.args.app) {\n-    logger.warn(\"No app capability, can't parse package/activity\");\n-    return cb();\n-  }\n-  if (this.args.appPackage && this.args.appActivity) return cb();\n-\n-  logger.debug(\"Parsing package and activity from app manifest\");\n-  this.adb.packageAndLaunchActivityFromManifest(this.args.app, function (err, pkg, act) {\n-    if (err) {\n-      logger.error(\"Problem parsing package and activity from manifest: \" +\n-                   err);\n-      return cb(err);\n-    }\n-    if (pkg && !this.args.appPackage) this.args.appPackage = pkg;\n-    if (!this.args.appWaitPackage) this.args.appWaitPackage = this.args.appPackage;\n-    // Retrying to parse activity from AndroidManifest.xml\n-    if (act === null) {\n-      var appiumApkToolsJarPath = this.adb.jars['appium_apk_tools.jar'];\n-      var outputPath = path.resolve(this.args.tmpDir, pkg);\n-      var getLaunchActivity = ['java -jar \"', appiumApkToolsJarPath,\n-                                '\" \"', 'printLaunchActivity',\n-                                '\" \"', this.args.app, '\" \"', outputPath, '\"'].join('');\n-      exec(getLaunchActivity, { maxBuffer: 524288 }, function (err, stdout, stderr) {\n-        if (err || stderr) {\n-          logger.warn(stderr);\n-          return cb(new Error(\"Cannot parse launchActivity from manifest.\" + err));\n-        }\n-        var apkActivity = new RegExp(/Launch activity parsed:([^']+)/g).exec(stdout);\n-        if (apkActivity && apkActivity.length >= 2) {\n-          act = apkActivity[1];\n-        } else {\n-          act = null;\n-        }\n-        if (act && !this.args.appActivity) this.args.appActivity = act;\n-        if (!this.args.appWaitActivity) this.args.appWaitActivity = this.args.appActivity;\n-        logger.debug(\"Parsed package and activity are: \" + pkg + \"/\" + act);\n-        cb();\n-      }.bind(this));\n-    }\n-    else {\n-       if (act && !this.args.appActivity) this.args.appActivity = act;\n-       if (!this.args.appWaitActivity) this.args.appWaitActivity = this.args.appActivity;\n-       logger.debug(\"Parsed package and activity are: \" + pkg + \"/\" + act);\n-       cb();\n-    }\n-   }.bind(this));\n-};\n-\n-androidCommon.getLog = function (logType, cb) {\n-  // Check if passed logType is supported\n-  if (!_.has(logTypesSupported, logType)) {\n-    return cb(null, {\n-      status: status.codes.UnknownError.code\n-    , value: \"Unsupported log type '\" + logType + \"', supported types : \" + JSON.stringify(logTypesSupported)\n-    });\n-  }\n-  var logs;\n-  // Check that current logType and instance is compatible\n-  if (logType === 'logcat') {\n-    try {\n-      logs = this.adb.getLogcatLogs();\n-    } catch (e) {\n-      return cb(e);\n-    }\n-  }\n-  // If logs captured sucessfully send response with data, else send error\n-  if (logs) {\n-    return cb(null, {\n-      status: status.codes.Success.code\n-    , value: logs\n-    });\n-  } else {\n-    return cb(null, {\n-      status: status.codes.UnknownError.code\n-    , value: \"Incompatible logType for this device\"\n-    });\n-  }\n-};\n-\n-androidCommon.getLogTypes = function (cb) {\n-  return cb(null, {\n-    status: status.codes.Success.code\n-  , value: _.keys(logTypesSupported)\n-  });\n-};\n-\n-androidCommon.getCurrentActivity = function (cb) {\n-  this.adb.getFocusedPackageAndActivity(function (err, curPackage, activity) {\n-    if (err) {\n-      return cb(null, {\n-        status: status.codes.UnknownError.code\n-      , value: err.message\n-      });\n-    }\n-    cb(null, {\n-      status: status.codes.Success.code\n-    , value: activity\n-    });\n-  });\n-};\n-\n-androidCommon.getDeviceProperty = function (property, cb) {\n-  this.adb.shell(\"getprop \" + property, function (err, stdout) {\n-    if (err) {\n-      logger.error(\"Error getting device property \" + property + \": \" + err);\n-      cb(err, null);\n-    } else {\n-      logger.debug(\"Current device \" + property + \": \" + stdout.trim());\n-      cb(null, stdout.trim());\n-    }\n-  }.bind(this));\n-};\n-\n-androidCommon.getDeviceLanguage = function (cb) {\n-  this.getDeviceProperty(\"persist.sys.language\", cb);\n-};\n-\n-androidCommon.getDeviceCountry = function (cb) {\n-  this.getDeviceProperty(\"persist.sys.country\", cb);\n-};\n-\n-androidCommon.extractLocalizedStrings = function (language, outputPath, cb) {\n-  var appiumApkToolsJarPath = this.adb.jars['appium_apk_tools.jar'];\n-  if (!this.args.appPackage) {\n-    return cb(new Error(\"Parameter 'appPackage' is required for launching application\"));\n-  }\n-  var makeStrings = ['java -jar \"', appiumApkToolsJarPath, '\" \"', 'stringsFromApk',\n-                     '\" \"', this.args.app, '\" \"', outputPath, '\"'].join('');\n-\n-  if (language) {\n-    this.extractStringsFromApk(makeStrings, language, cb);\n-  } else {\n-    // If language is not set, use device language\n-    this.getDeviceLanguage(function (err, language) {\n-      this.extractStringsFromApk(makeStrings, language, cb);\n-    }.bind(this));\n-  }\n-};\n-\n-androidCommon.extractStringsFromApk = function (makeStrings, language, cb) {\n-  var makeLanguageStrings = makeStrings;\n-  if (language !== null) makeLanguageStrings = [makeStrings, language].join(' ');\n-  logger.debug(makeLanguageStrings);\n-  exec(makeLanguageStrings, { maxBuffer: 524288 }, function (err, stdout, stderr) {\n-    if (err && language !== null) {\n-      logger.debug(\"No strings.xml for language '\" + language + \"', getting default strings.xml\");\n-      this.extractStringsFromApk(makeStrings, null, cb);\n-    } else {\n-      cb(err, stdout, stderr);\n-    }\n-  }.bind(this));\n-};\n-\n-androidCommon.extractStrings = function (cb, language) {\n-  var outputPath = path.resolve(this.args.tmpDir, this.args.appPackage);\n-  var stringsJson = 'strings.json';\n-  if (!fs.existsSync(this.args.app)) {\n-    logger.debug(\"Apk doesn't exist locally\");\n-    this.apkStrings = {};\n-    this.language = null;\n-    return cb(new Error(\"Apk doesn't exist locally\"));\n-  } else {\n-    this.extractLocalizedStrings(language, outputPath, function (err, stdout, stderr) {\n-      if (err) {\n-        logger.warn(\"Error getting strings.xml from apk\");\n-        logger.debug(stderr);\n-        this.apkStrings = {};\n-        this.language = null;\n-        return cb(err);\n-      }\n-      var file = fs.readFileSync(path.join(outputPath, stringsJson), 'utf8');\n-      this.apkStrings = JSON.parse(file);\n-      this.language = language;\n-      cb();\n-    }.bind(this));\n-  }\n-};\n-\n-androidCommon.initUnicode = function (cb) {\n-  if (this.args.unicodeKeyboard) {\n-    logger.debug('Enabling Unicode keyboard support');\n-    this.pushUnicodeIME(function (err) {\n-      if (err) return cb(err);\n-      this.adb.defaultIME(function (err, engine) {\n-        if (err) return cb(err);\n-        // save the previously set IME\n-        this.defaultIME = engine;\n-        logger.debug('Unsetting IME \\'' + this.defaultIME + '\\'');\n-        logger.debug('Setting IME to \\'io.appium.android.ime/.UnicodeIME\\'');\n-        this.adb.enableIME('io.appium.android.ime/.UnicodeIME', function (err) {\n-          if (err) return cb(err);\n-          this.adb.setIME('io.appium.android.ime/.UnicodeIME', cb);\n-        }.bind(this));\n-      }.bind(this));\n-    }.bind(this));\n-  } else {\n-    cb();\n-  }\n-};\n-\n-androidCommon.getNetworkConnection = function (cb) {\n-  logger.info('Getting network connection');\n-  this.adb.isAirplaneModeOn(function (err, airplaneModeOn) {\n-    if (err) return cb(err);\n-    var connection = airplaneModeOn ? 1 : 0;\n-    if (airplaneModeOn) {\n-      // airplane mode on implies wifi and data off\n-      return cb(null, {\n-        status: status.codes.Success.code,\n-        value: connection\n-      });\n-    }\n-    this.adb.isWifiOn(function (err, wifiOn) {\n-      if (err) return cb(err);\n-      connection += (wifiOn ? 2 : 0);\n-      this.adb.isDataOn(function (err, dataOn) {\n-        if (err) return cb(err);\n-        connection += (dataOn ? 4 : 0);\n-        cb(null, {\n-          status: status.codes.Success.code,\n-          value: connection\n-        });\n-      }.bind(this));\n-    }.bind(this));\n-  }.bind(this));\n-};\n-\n-androidCommon.setNetworkConnection = function (type, ocb) {\n-  logger.info('Setting network connection');\n-  // decode the input\n-  var airplaneMode = type % 2;\n-  type >>= 1;\n-  var wifi = type % 2;\n-  type >>= 1;\n-  var data = type % 2;\n-\n-  var series = [];\n-  // do airplane mode stuff first, since it will change the other statuses\n-  series.push(function (cb) {\n-    this.wrapActionAndHandleADBDisconnect(function (ncb) {\n-      this.adb.setAirplaneMode(airplaneMode, ncb);\n-    }.bind(this), cb);\n-  }.bind(this));\n-  series.push(function (cb) {\n-    this.wrapActionAndHandleADBDisconnect(function (ncb) {\n-      this.adb.broadcastAirplaneMode(airplaneMode, ncb);\n-    }.bind(this), cb);\n-  }.bind(this));\n-  // no need to do anything else if we are in or going into airplane mode\n-  if (airplaneMode === 0) {\n-    series.push(function (cb) {\n-      this.wrapActionAndHandleADBDisconnect(function (ncb) {\n-        this.adb.setWifiAndData({\n-          wifi: wifi,\n-          data: data\n-        }, ncb);\n-      }.bind(this), cb);\n-    }.bind(this));\n-  }\n-\n-  async.series(series, function (err) {\n-    if (err) return ocb(err);\n-    return this.getNetworkConnection(ocb);\n-  }.bind(this));\n-};\n-\n-androidCommon.isIMEActivated = function (cb) {\n-  // IME is always activated on Android devices\n-  cb(null, {\n-    status: status.codes.Success.code,\n-    value: true\n-  });\n-};\n-\n-androidCommon.availableIMEEngines = function (cb) {\n-  logger.debug('Retrieving available IMEs');\n-  this.adb.availableIMEs(function (err, engines) {\n-    if (err) return cb(err);\n-    logger.debug('Engines: ' + JSON.stringify(engines));\n-\n-    cb(null, {\n-      status: status.codes.Success.code,\n-      value: engines\n-    });\n-  });\n-};\n-\n-androidCommon.getActiveIMEEngine = function (cb) {\n-  logger.debug('Retrieving current default IME');\n-  this.adb.defaultIME(function (err, engine) {\n-    if (err) return cb(err);\n-    cb(null, {\n-      status: status.codes.Success.code,\n-      value: engine\n-    });\n-  });\n-};\n-\n-androidCommon.activateIMEEngine = function (imeId, cb) {\n-  logger.debug('Attempting to activate IME \\'' + imeId + '\\'');\n-  this.adb.availableIMEs(function (err, engines) {\n-    if (err) return cb(err);\n-    if (engines.indexOf(imeId) !== -1) {\n-      logger.debug('Found installed IME, attempting to activate.');\n-      this.adb.enableIME(imeId, function (err) {\n-        if (err) return cb(err);\n-        this.adb.setIME(imeId, function (err) {\n-          if (err) return cb(err);\n-          return cb(null, {\n-            status: status.codes.Success.code,\n-            value: null\n-          });\n-        });\n-      }.bind(this));\n-    } else {\n-      logger.debug('IME not found, failing.');\n-      return cb(null, {\n-        status: status.codes.IMENotAvailable.code,\n-        message: 'Unable to find requested IME \\'' + imeId + '\\'.'\n-      });\n-    }\n-  }.bind(this));\n-};\n-\n-androidCommon.deactivateIMEEngine = function (cb) {\n-  logger.debug('Retrieving current default IME');\n-  this.adb.defaultIME(function (err, engine) {\n-    if (err) return cb(err);\n-    logger.debug('Attempting to deactivate \\'' + engine + '\\'');\n-    this.adb.disableIME(engine, function (err) {\n-      if (err) return cb(err);\n-      cb(null, {\n-        status: status.codes.Success.code,\n-        value: null\n-      });\n-    });\n-  }.bind(this));\n-};\n-\n-androidCommon.hideKeyboard = function () {\n-  // parameters only used for iOS. Please ignore them for android.\n-  var args = new Args(arguments);\n-  var cb = args.callback;\n-  this.adb.isSoftKeyboardPresent(function (err, isKeyboardPresent, canCloseKeyboard) {\n-    if (err) return cb(err);\n-    if (isKeyboardPresent) {\n-      if (canCloseKeyboard) {\n-        this.back(cb);\n-      } else {\n-        cb(null, {\n-          status: status.codes.Success.code\n-        , value: \"Keyboard has no UI; no closing necessary\"\n-        });\n-      }\n-    } else {\n-      return cb(new Error(\"Soft keyboard not present, cannot hide keyboard\"));\n-    }\n-  }.bind(this));\n-};\n-\n-androidCommon.parseJavaVersion = function (stderr) {\n-  var lines = stderr.split(\"\\n\");\n-  for (var i = 0; i < lines.length; i++) {\n-    var line = lines[i];\n-    if (new RegExp(\"java version\").test(line)) {\n-      return line.split(\" \")[2].replace(/\"/g, '');\n-    }\n-  }\n-  return null;\n-};\n-\n-androidCommon.getJavaVersion = function (cb) {\n-  var extractVersion = function (err, stdout, stderr) {\n-    var javaVersion = null;\n-    if (err) {\n-      return cb(new Error(\"'java -version' failed. \" + err));\n-    } else if (stderr) {\n-      javaVersion = this.parseJavaVersion(stderr);\n-    }\n-    if (javaVersion === null) {\n-      return cb(new Error(\"Could not get the Java version. Is Java installed?\"));\n-    }\n-    return cb(null, javaVersion);\n-  }.bind(this);\n-\n-  exec(\"java -version\", extractVersion);\n-};\n-\n-androidCommon.initJavaVersion = function (cb) {\n-  if (this.args.javaVersion) return cb();\n-  logger.debug(\"Getting Java version\");\n-  this.getJavaVersion(function (err, javaVersion) {\n-    if (err) return cb(err);\n-    logger.info(\"Java version is: \" + javaVersion);\n-    this.args.javaVersion = javaVersion;\n-    return cb();\n-  }.bind(this));\n-};\n-\n-androidCommon.initAdb = function (cb) {\n-  if (this.adb === null) {\n-    ADB.createADB(this.args, function (e, adb) {\n-      if (e) return cb(e);\n-      this.adb = adb;\n-      cb();\n-    }.bind(this));\n-  } else {\n-    cb();\n-  }\n-};\n-\n-module.exports = androidCommon;"
    },
    {
      "sha": "7cf375e1488c74b3303cd7023f519385537a67f5",
      "filename": "lib/devices/android/android-context-controller.js",
      "status": "removed",
      "additions": 0,
      "deletions": 100,
      "changes": 100,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/android-context-controller.js",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/android-context-controller.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/android-context-controller.js?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,100 +0,0 @@\n-\"use strict\";\n-\n-var _ = require('underscore')\n-  , logger = require('../../server/logger.js').get('appium')\n-  , jwpSuccess = require('../common.js').jwpSuccess\n-  , status = require('../../server/status.js')\n-  , NotYetImplementedError = require('../../server/errors.js').NotYetImplementedError\n-  , warnDeprecated = require('../../helpers.js').logDeprecationWarning;\n-\n-var androidContextController = {};\n-\n-androidContextController.NATIVE_WIN = \"NATIVE_APP\";\n-androidContextController.WEBVIEW_WIN = \"WEBVIEW\";\n-androidContextController.WEBVIEW_BASE = androidContextController.WEBVIEW_WIN + \"_\";\n-androidContextController.CHROMIUM_WIN = \"CHROMIUM\";\n-\n-androidContextController.defaultContext = function () {\n-  return this.NATIVE_WIN;\n-};\n-\n-androidContextController.leaveWebView = function (cb) {\n-  warnDeprecated('function', 'leaveWebView', 'context(null)');\n-  this.setWindow(this.defaultContext(), cb);\n-};\n-\n-androidContextController.getCurrentContext = function (cb) {\n-  var response = {\n-    status: status.codes.Success.code\n-  , value: this.curContext || null\n-  };\n-  cb(null, response);\n-};\n-\n-androidContextController.getContexts = function (cb) {\n-  this.listWebviews(function (err, webviews) {\n-    if (err) return cb(err);\n-    this.contexts = _.union([this.NATIVE_WIN], webviews);\n-    logger.debug(\"Available contexts: \" + this.contexts);\n-    cb(null, {\n-      status: status.codes.Success.code\n-    , value: this.contexts\n-    });\n-  }.bind(this));\n-};\n-\n-androidContextController.isChromedriverContext = function (viewName) {\n-  return viewName.indexOf(this.WEBVIEW_WIN) !== -1 || viewName === this.CHROMIUM_WIN;\n-};\n-\n-androidContextController.setContext = function (name, cb) {\n-  if (name === null) {\n-    name = this.defaultContext();\n-  } else if (name === this.WEBVIEW_WIN) {\n-    // handle setContext \"WEBVIEW\"\n-    name = this.defaultWebviewName();\n-  }\n-  this.getContexts(function () {\n-    if (!_.contains(this.contexts, name)) {\n-      return cb(null, {\n-        status: status.codes.NoSuchContext.code\n-      , value: \"Context '\" + name + \"' does not exist\"\n-      });\n-    }\n-    if (name === this.curContext) {\n-      return jwpSuccess(cb);\n-    }\n-    var next = function (err) {\n-      if (err) return cb(err);\n-      this.curContext = name;\n-      jwpSuccess(cb);\n-    }.bind(this);\n-\n-    // current ChromeDriver doesn't handle more than a single web view\n-    if (this.isChromedriverContext(name)) {\n-      this.startChromedriverProxy(name, next);\n-    } else if (this.isChromedriverContext(this.curContext)) {\n-      this.suspendChromedriverProxy(next);\n-    } else if (this.isProxy) { // e.g. WebView context handled in Selendroid\n-      this.proxyTo('wd/hub/session/' + this.proxySessionId + '/context', 'POST', {name: name}, next);\n-    }\n-  }.bind(this));\n-};\n-\n-androidContextController.isWebContext = function () {\n-  return this.curContext !== null && this.curContext !== 'NATIVE_APP';\n-};\n-\n-androidContextController.getWindowHandle = function (cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-androidContextController.getWindowHandles = function (cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-androidContextController.setWindow = function (name, cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-module.exports = androidContextController;"
    },
    {
      "sha": "22d28d80e98be640b96a27901b5634b90afc28b1",
      "filename": "lib/devices/android/android-controller.js",
      "status": "removed",
      "additions": 0,
      "deletions": 1178,
      "changes": 1178,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/android-controller.js",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/android-controller.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/android-controller.js?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,1178 +0,0 @@\n-\"use strict\";\n-\n-var errors = require('../../server/errors.js')\n-  , _ = require('underscore')\n-  , logger = require('../../server/logger.js').get('appium')\n-  , deviceCommon = require('../common.js')\n-  , helpers = require('../../helpers.js')\n-  , status = require('../../server/status.js')\n-  , NotYetImplementedError = errors.NotYetImplementedError\n-  , fs = require('fs')\n-  , temp = require('temp')\n-  , async = require('async')\n-  , mkdirp = require('mkdirp')\n-  , path = require('path')\n-  , AdmZip = require(\"adm-zip\")\n-  , helpers = require('../../helpers.js');\n-\n-var androidController = {};\n-\n-androidController.pressKeyCode = function (keycode, metastate, cb) {\n-  this.proxy([\"pressKeyCode\", {keycode: keycode, metastate: metastate}], cb);\n-};\n-\n-androidController.longPressKeyCode = function (keycode, metastate, cb) {\n-  this.proxy([\"longPressKeyCode\", {keycode: keycode, metastate: metastate}], cb);\n-};\n-\n-androidController.keyevent = function (keycode, metastate, cb) {\n-  helpers.logDeprecationWarning('function', 'keyevent', 'pressKeyCode');\n-  this.pressKeyCode(keycode, metastate, cb);\n-};\n-\n-androidController.findElement = function (strategy, selector, cb) {\n-  this.findUIElementOrElements(strategy, selector, false, \"\", cb);\n-};\n-\n-androidController.findElements = function (strategy, selector, cb) {\n-  this.findUIElementOrElements(strategy, selector, true, \"\", cb);\n-};\n-\n-androidController.findUIElementOrElements = function (strategy, selector, many, context, cb) {\n-  if (!deviceCommon.checkValidLocStrat(strategy, false, cb)) {\n-    return;\n-  }\n-  if (strategy === \"xpath\" && context) {\n-    return cb(new Error(\"Cannot use xpath locator strategy from an element. \" +\n-                        \"It can only be used from the root element\"));\n-  }\n-  var params = {\n-    strategy: strategy\n-  , selector: selector\n-  , context: context\n-  , multiple: many\n-  };\n-\n-  var doFind = function (findCb) {\n-    this.proxy([\"find\", params], function (err, res) {\n-      this.handleFindCb(err, res, many, findCb);\n-    }.bind(this));\n-  }.bind(this);\n-  this.implicitWaitForCondition(doFind, cb);\n-};\n-\n-androidController.handleFindCb = function (err, res, many, findCb) {\n-  if (err) {\n-    findCb(false, err, res);\n-  } else {\n-    if (!many && res.status === 0 && res.value !== null) {\n-      findCb(true, err, res);\n-    } else if (many && typeof res.value !== 'undefined' && res.value.length > 0) {\n-      findCb(true, err, res);\n-    } else {\n-      findCb(false, err, res);\n-    }\n-  }\n-};\n-\n-androidController.findElementFromElement = function (element, strategy, selector, cb) {\n-  this.findUIElementOrElements(strategy, selector, false, element, cb);\n-};\n-\n-androidController.findElementsFromElement = function (element, strategy, selector, cb) {\n-  this.findUIElementOrElements(strategy, selector, true, element, cb);\n-};\n-\n-androidController.setValueImmediate = function (elementId, value, cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-androidController.setValue = function (elementId, value, cb) {\n-  var params = {\n-    elementId: elementId,\n-    text: value,\n-    replace: false\n-  };\n-  if (this.args.unicodeKeyboard) {\n-    params.unicodeKeyboard = true;\n-  }\n-  this.proxy([\"element:setText\", params], cb);\n-};\n-\n-androidController.replaceValue = function (elementId, value, cb) {\n-  var params = {\n-    elementId: elementId,\n-    text: value,\n-    replace: true\n-  };\n-  if (this.args.unicodeKeyboard) {\n-    params.unicodeKeyboard = true;\n-  }\n-  this.proxy([\"element:setText\", params], cb);\n-};\n-\n-androidController.click = function (elementId, cb) {\n-  this.proxy([\"element:click\", {elementId: elementId}], cb);\n-};\n-\n-androidController.touchLongClick = function (elementId, x, y, duration, cb) {\n-  var opts = {};\n-  if (elementId) opts.elementId = elementId;\n-  if (x) opts.x = x;\n-  if (y) opts.y = y;\n-  if (duration) opts.duration = duration;\n-  this.proxy([\"element:touchLongClick\", opts], cb);\n-};\n-\n-androidController.touchDown = function (elementId, x, y, cb) {\n-  var opts = {};\n-  if (elementId) opts.elementId = elementId;\n-  if (x) opts.x = x;\n-  if (y) opts.y = y;\n-  this.proxy([\"element:touchDown\", opts], cb);\n-};\n-\n-androidController.touchUp = function (elementId, x, y, cb) {\n-  var opts = {};\n-  if (elementId) opts.elementId = elementId;\n-  if (x) opts.x = x;\n-  if (y) opts.y = y;\n-  this.proxy([\"element:touchUp\", opts], cb);\n-};\n-\n-androidController.touchMove = function (elementId, x, y, cb) {\n-  var opts = {};\n-  if (elementId) opts.elementId = elementId;\n-  if (x) opts.x = x;\n-  if (y) opts.y = y;\n-  this.proxy([\"element:touchMove\", opts], cb);\n-};\n-\n-androidController.complexTap = function (tapCount, touchCount, duration, x, y, elementId, cb) {\n-  this.proxy([\"click\", {x: x, y: y}], cb);\n-};\n-\n-androidController.clear = function (elementId, cb) {\n-  this.proxy([\"element:clear\", {elementId: elementId}], cb);\n-};\n-\n-androidController.submit = function (elementId, cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-androidController.getName = function (elementId, cb) {\n-  var p = {elementId: elementId, attribute: \"className\"};\n-  this.proxy([\"element:getAttribute\", p], cb);\n-};\n-\n-androidController.getText = function (elementId, cb) {\n-  this.proxy([\"element:getText\", {elementId: elementId}], cb);\n-};\n-\n-androidController.getAttribute = function (elementId, attributeName, cb) {\n-  var p = {elementId: elementId, attribute: attributeName};\n-  this.proxy([\"element:getAttribute\", p], cb);\n-};\n-\n-androidController.getLocation = function (elementId, cb) {\n-  this.proxy([\"element:getLocation\", {elementId: elementId}], cb);\n-};\n-\n-androidController.getSize = function (elementId, cb) {\n-  this.proxy([\"element:getSize\", {elementId: elementId}], cb);\n-};\n-\n-androidController.getWindowSize = function (windowHandle, cb) {\n-  this.proxy([\"getDeviceSize\"], cb);\n-};\n-\n-androidController.back = function (cb) {\n-  this.proxy([\"pressBack\"], cb);\n-};\n-\n-androidController.forward = function (cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-androidController.refresh = function (cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-androidController.getPageIndex = function (elementId, cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-androidController.keys = function (elementId, keys, cb) {\n-  var params = {\n-    elementId: elementId,\n-    text: keys\n-  };\n-  if (this.args.unicodeKeyboard) {\n-    params.unicodeKeyboard = true;\n-  }\n-  this.proxy([\"element:setText\", params], cb);\n-};\n-\n-androidController.frame = function (frame, cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-androidController.implicitWait = function (ms, cb) {\n-  this.implicitWaitMs = parseInt(ms, 10);\n-  logger.debug(\"Set Android implicit wait to \" + ms + \"ms\");\n-  cb(null, {\n-    status: status.codes.Success.code\n-  , value: null\n-  });\n-};\n-\n-androidController.asyncScriptTimeout = function (ms, cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-androidController.pageLoadTimeout = function (ms, cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-androidController.executeAsync = function (script, args, responseUrl, cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-androidController.elementDisplayed = function (elementId, cb) {\n-  var p = {elementId: elementId, attribute: \"displayed\"};\n-  this.proxy([\"element:getAttribute\", p], function (err, res) {\n-    if (err) return cb(err);\n-    var displayed = res.value === 'true';\n-    cb(null, {\n-      status: status.codes.Success.code\n-    , value: displayed\n-    });\n-  });\n-};\n-\n-androidController.elementEnabled = function (elementId, cb) {\n-  var p = {elementId: elementId, attribute: \"enabled\"};\n-  this.proxy([\"element:getAttribute\", p], function (err, res) {\n-    if (err) return cb(err);\n-    var enabled = res.value === 'true';\n-    cb(null, {\n-      status: status.codes.Success.code\n-    , value: enabled\n-    });\n-  });\n-};\n-\n-androidController.elementSelected = function (elementId, cb) {\n-  var p = {elementId: elementId, attribute: \"selected\"};\n-  this.proxy([\"element:getAttribute\", p], function (err, res) {\n-    if (err) return cb(err);\n-    var selected = res.value === 'true';\n-    cb(null, {\n-      status: status.codes.Success.code\n-    , value: selected\n-    });\n-  });\n-};\n-\n-androidController.getCssProperty = function (elementId, propertyName, cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-var _getNodeClass = function (node) {\n-  var nodeClass = null;\n-  _.each(node.attributes, function (attr) {\n-    if (attr.name === \"class\") {\n-      nodeClass = attr.value;\n-    }\n-  });\n-  return nodeClass;\n-};\n-\n-var _copyNodeAttributes = function (oldNode, newNode) {\n-  _.each(oldNode.attributes, function (attr) {\n-    newNode.setAttribute(attr.name, attr.value);\n-  });\n-};\n-\n-// recursively annotate xml nodes. Update tag name to be Android UIElement class name. Add an \"instance\" identifier which increments for each class separately.\n-var _annotateXmlNodes = function (newDom, newParent, oldNode, instances) {\n-  if (!instances) {\n-    instances = {};\n-  }\n-  var newNode;\n-  var nodeClass = _getNodeClass(oldNode);\n-  if (nodeClass) {\n-    newNode = newDom.createElement(nodeClass);\n-    _copyNodeAttributes(oldNode, newNode);\n-\n-    // we keep track of the number of instances of each className. We use these to create queries on the bootstrap side.\n-    if (!instances[nodeClass]) {\n-      instances[nodeClass] = 0;\n-    }\n-    newNode.setAttribute('instance', instances[nodeClass]++);\n-  } else {\n-    newNode = oldNode.cloneNode(false);\n-  }\n-  newParent.appendChild(newNode);\n-  if (oldNode.hasChildNodes()) {\n-    _.each(oldNode.childNodes, function (childNode) {\n-      _annotateXmlNodes(newDom, newNode, childNode, instances);\n-    });\n-  }\n-};\n-\n-androidController.getPageSource = function (cb) {\n-  this.proxy([\"source\", {}], cb);\n-};\n-\n-androidController.getAlertText = function (cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-androidController.setAlertText = function (text, cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-androidController.postAcceptAlert = function (cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-androidController.postDismissAlert = function (cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-androidController.lock = function (secs, cb) {\n-  this.adb.lock(function (err) {\n-    if (err) return cb(err);\n-    cb(null, {\n-      status: status.codes.Success.code\n-      , value: null\n-    });\n-  });\n-};\n-\n-androidController.isLocked = function (cb) {\n-  this.adb.isScreenLocked(function (err, isLocked) {\n-    if (err) return cb(err);\n-    cb(null, {\n-      status: status.codes.Success.code\n-      , value: isLocked\n-    });\n-  });\n-};\n-\n-androidController.pushUnlock = function (cb) {\n-  logger.debug(\"Pushing unlock helper app to device...\");\n-  var unlockPath = path.resolve(__dirname, \"..\", \"..\", \"..\", \"build\",\n-      \"unlock_apk\", \"unlock_apk-debug.apk\");\n-  fs.stat(unlockPath, function (err) {\n-    if (err) {\n-      cb(new Error(\"Could not find unlock.apk; please run \" +\n-          \"'reset.sh --android' to build it.\"));\n-    } else {\n-      this.adb.install(unlockPath, false, cb);\n-    }\n-  }.bind(this));\n-};\n-\n-androidController.unlock = function (cb) {\n-  this.adb.isScreenLocked(function (err, isLocked) {\n-    if (err) return cb(err);\n-    if (isLocked) {\n-      logger.info(\"Unlocking screen\");\n-      var timeoutMs = 10000;\n-      var start = Date.now();\n-      var unlockAndCheck = function () {\n-        logger.debug(\"Screen is locked, trying to unlock\");\n-        var onStart = function (err) {\n-          if (err) return cb(err);\n-          this.adb.isScreenLocked(function (err, isLocked) {\n-            if (err) return cb(err);\n-            if (!isLocked) {\n-              logger.debug(\"Screen is unlocked, continuing\");\n-              return cb(null, {\n-                status: status.codes.Success.code\n-                , value: null\n-              });\n-            }\n-            if ((Date.now() - timeoutMs) > start) {\n-              return cb(new Error(\"Screen did not unlock\"));\n-            } else {\n-              setTimeout(unlockAndCheck, 1000);\n-            }\n-          }.bind(this));\n-        }.bind(this);\n-        this.adb.startApp({\n-          pkg: \"io.appium.unlock\",\n-          activity: \".Unlock\",\n-          action: \"android.intent.action.MAIN\",\n-          category: \"android.intent.category.LAUNCHER\",\n-          flags: \"0x10200000\"\n-        }, onStart);\n-      }.bind(this);\n-      unlockAndCheck();\n-    } else {\n-      logger.debug('Screen already unlocked, continuing.');\n-      return cb(null, {\n-        status: status.codes.Success.code\n-        , value: null\n-      });\n-    }\n-  }.bind(this));\n-};\n-\n-androidController.equalsWebElement = function (cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-androidController.getOrientation = function (cb) {\n-  this.proxy([\"orientation\", {}], cb);\n-};\n-\n-androidController.setOrientation = function (orientation, cb) {\n-  this.proxy([\"orientation\", {orientation: orientation}], cb);\n-};\n-\n-androidController.endCoverage = function (intentToBroadcast, ecOnDevicePath, cb) {\n-  var localfile = temp.path({prefix: 'appium', suffix: '.ec'});\n-  if (fs.existsSync(localfile)) fs.unlinkSync(localfile);\n-  var b64data = \"\";\n-\n-  async.series([\n-    function (cb) {\n-      // ensure the ec we're pulling is newly created as a result of the intent.\n-      this.adb.rimraf(ecOnDevicePath, function () { cb(); });\n-    }.bind(this),\n-    function (cb) {\n-      this.adb.broadcastProcessEnd(intentToBroadcast, this.appProcess, cb);\n-    }.bind(this),\n-    function (cb) {\n-      this.adb.pull(ecOnDevicePath, localfile, cb);\n-    }.bind(this),\n-    function (cb) {\n-      fs.readFile(localfile, function (err, data) {\n-        if (err) return cb(err);\n-        b64data = new Buffer(data).toString('base64');\n-        cb();\n-      });\n-    }.bind(this),\n-  ],\n-  function (err) {\n-    if (fs.existsSync(localfile)) fs.unlinkSync(localfile);\n-    if (err) return cb(err);\n-    cb(null, {\n-      status: status.codes.Success.code\n-    , value: b64data\n-    });\n-  });\n-};\n-\n-androidController.pullFile = function (remotePath, cb) {\n-  var localFile = temp.path({prefix: 'appium', suffix: '.tmp'});\n-  var b64data = \"\";\n-\n-  async.series([\n-    function (cb) {\n-      this.adb.pull(remotePath, localFile, cb);\n-    }.bind(this),\n-    function (cb) {\n-      fs.readFile(localFile, function (err, data) {\n-        if (err) return cb(err);\n-        b64data = new Buffer(data).toString('base64');\n-        cb();\n-      });\n-    }.bind(this),\n-  ],\n-    function (err) {\n-      if (fs.existsSync(localFile)) fs.unlinkSync(localFile);\n-      if (err) return cb(err);\n-      cb(null, {\n-        status: status.codes.Success.code\n-      , value: b64data\n-      });\n-    });\n-};\n-\n-androidController.pushFile = function (base64Data, remotePath, cb) {\n-  var localFile = temp.path({prefix: 'appium', suffix: '.tmp'});\n-  mkdirp.sync(path.dirname(localFile));\n-\n-  async.series([\n-    function (cb) {\n-      var content = new Buffer(base64Data, 'base64');\n-      var fd = fs.openSync(localFile, 'w');\n-      fs.writeSync(fd, content, 0, content.length, 0);\n-      fs.closeSync(fd);\n-\n-      // adb push creates folders and overwrites existing files.\n-      this.adb.push(localFile, remotePath, cb);\n-    }.bind(this),\n-  ],\n-    function (err) {\n-      if (fs.existsSync(localFile)) fs.unlinkSync(localFile);\n-      if (err) return cb(err);\n-      cb(null, {\n-        status: status.codes.Success.code\n-      });\n-    });\n-};\n-\n-androidController.pullFolder = function (remotePath, cb) {\n-  var localFolder = temp.path({prefix: 'appium'});\n-\n-  var bufferOnSuccess = function (buffer) {\n-    logger.debug(\"Converting in-memory zip file to base64 encoded string\");\n-    var data = buffer.toString('base64');\n-    logger.debug(\"Returning in-memory zip file as base54 encoded string\");\n-    cb(null, {status: status.codes.Success.code, value: data});\n-  };\n-\n-  var bufferOnFail = function (err) {\n-    cb(new Error(err));\n-  };\n-\n-  this.adb.pull(remotePath, localFolder, function (err) {\n-    if (err) return cb(new Error(err));\n-    var zip = new AdmZip();\n-    zip.addLocalFolder(localFolder);\n-    zip.toBuffer(bufferOnSuccess, bufferOnFail);\n-  });\n-};\n-\n-androidController.getScreenshot = function (cb) {\n-  var localfile = temp.path({prefix: 'appium', suffix: '.png'});\n-  var b64data = \"\";\n-\n-  async.series([\n-    function (cb) {\n-      var png = \"/data/local/tmp/screenshot.png\";\n-      var cmd =  ['\"/system/bin/rm', png + ';', '/system/bin/screencap -p',\n-                  png, '\"'].join(' ');\n-      this.adb.shell(cmd, cb);\n-    }.bind(this),\n-    function (cb) {\n-      if (fs.existsSync(localfile)) fs.unlinkSync(localfile);\n-      this.adb.pull('/data/local/tmp/screenshot.png', localfile, cb);\n-    }.bind(this),\n-    function (cb) {\n-      fs.readFile(localfile, function (err, data) {\n-        if (err) return cb(err);\n-        b64data = new Buffer(data).toString('base64');\n-        cb();\n-      });\n-    },\n-    function (cb) {\n-      fs.unlink(localfile, function (err) {\n-        if (err) return cb(err);\n-        cb();\n-      });\n-    }\n-  ],\n-  // Top level cb\n-  function (err) {\n-    if (err) return cb(err);\n-    cb(null, {\n-      status: status.codes.Success.code\n-    , value: b64data\n-    });\n-  });\n-};\n-\n-androidController.fakeFlick = function (xSpeed, ySpeed, swipe, cb) {\n-  this.proxy([\"flick\", {xSpeed: xSpeed, ySpeed: ySpeed}], cb);\n-};\n-\n-androidController.fakeFlickElement = function (elementId, xoffset, yoffset, speed, cb) {\n-  this.proxy([\"element:flick\", {xoffset: xoffset, yoffset: yoffset, speed: speed, elementId: elementId}], cb);\n-};\n-\n-androidController.swipe = function (startX, startY, endX, endY, duration, touchCount, elId, cb) {\n-  if (startX === 'null') {\n-    startX = 0.5;\n-  }\n-  if (startY === 'null') {\n-    startY = 0.5;\n-  }\n-  var swipeOpts = {\n-    startX: startX\n-  , startY: startY\n-  , endX: endX\n-  , endY: endY\n-  , steps: Math.round(duration * this.swipeStepsPerSec)\n-  };\n-\n-  // going the long way and checking for undefined and null since\n-  // we can't be assured `elId` is a string and not an int\n-  if (typeof elId !== \"undefined\" && elId !== null) {\n-    swipeOpts.elementId = elId;\n-    this.proxy([\"element:swipe\", swipeOpts], cb);\n-  } else {\n-    this.proxy([\"swipe\", swipeOpts], cb);\n-  }\n-};\n-\n-androidController.rotate = function (x, y, radius, rotation, duration, touchCount, elId, cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-androidController.pinchClose = function (startX, startY, endX, endY, duration, percent, steps, elId, cb) {\n-  var pinchOpts = {\n-    direction: 'in'\n-  , elementId: elId\n-  , percent: percent\n-  , steps: steps\n-  };\n-  this.proxy([\"element:pinch\", pinchOpts], cb);\n-};\n-\n-androidController.pinchOpen = function (startX, startY, endX, endY, duration, percent, steps, elId, cb) {\n-  var pinchOpts = {\n-    direction: 'out'\n-  , elementId: elId\n-  , percent: percent\n-  , steps: steps\n-  };\n-  this.proxy([\"element:pinch\", pinchOpts], cb);\n-};\n-\n-androidController.flick = function (startX, startY, endX, endY, touchCount, elId, cb) {\n-  if (startX === 'null') {\n-    startX = 0.5;\n-  }\n-  if (startY === 'null') {\n-    startY = 0.5;\n-  }\n-  var swipeOpts = {\n-    startX: startX\n-  , startY: startY\n-  , endX: endX\n-  , endY: endY\n-  , steps: Math.round(0.2 * this.swipeStepsPerSec)\n-  };\n-  if (elId !== null) {\n-    swipeOpts.elementId = elId;\n-    this.proxy([\"element:swipe\", swipeOpts], cb);\n-  } else {\n-    this.proxy([\"swipe\", swipeOpts], cb);\n-  }\n-};\n-\n-androidController.drag = function (startX, startY, endX, endY, duration, touchCount, elementId, destElId, cb) {\n-  var dragOpts = {\n-    elementId: elementId\n-  , destElId: destElId\n-  , startX: startX\n-  , startY: startY\n-  , endX: endX\n-  , endY: endY\n-  , steps: Math.round(duration * this.dragStepsPerSec)\n-  };\n-\n-  if (elementId) {\n-    this.proxy([\"element:drag\", dragOpts], cb);\n-  } else {\n-    this.proxy([\"drag\", dragOpts], cb);\n-  }\n-};\n-\n-androidController.scrollTo = function (elementId, text, direction, cb) {\n-  // instead of the elementId as the element to be scrolled too,\n-  // it's the scrollable view to swipe until the uiobject that has the\n-  // text is found.\n-  var opts = {\n-    text: text\n-  , direction: direction\n-  , elementId: elementId\n-  };\n-  this.proxy([\"element:scrollTo\", opts], cb);\n-};\n-\n-androidController.scroll = function (direction, cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-androidController.shake = function (cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-androidController.setLocation = function (latitude, longitude, altitude, horizontalAccuracy, verticalAccuracy, course, speed, cb) {\n-  var cmd = \"geo fix \" + longitude + \" \" + latitude;\n-  this.adb.sendTelnetCommand(cmd, function (err, res) {\n-    if (err) {\n-      return cb(null, {\n-        status: status.codes.UnknownError.code\n-      , value: \"Could not set geolocation via telnet to device\"\n-      });\n-    }\n-    cb(null, {\n-      status: status.codes.Success.code\n-    , value: res\n-    });\n-  });\n-};\n-\n-androidController.url = function (url, cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-androidController.active = function (cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-androidController.closeWindow = function (cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-androidController.clearWebView = function (cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-androidController.execute = function (script, args, cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-androidController.convertElementForAtoms = deviceCommon.convertElementForAtoms;\n-\n-androidController.title = function (cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-androidController.moveTo = function (element, xoffset, yoffset, cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-androidController.clickCurrent = function (button, cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-androidController.getCookies = function (cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-androidController.setCookie = function (cookie, cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-androidController.deleteCookie = function (cookie, cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-androidController.deleteCookies = function (cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-androidController.resetAndStartApp = function (cb) {\n-  async.series([\n-    this.resetApp.bind(this),\n-    this.waitForActivityToStop.bind(this),\n-    this.startAppUnderTest.bind(this)\n-  ], cb);\n-};\n-\n-// controller.js#isAppInstalled expects weird response, hence this hack\n-androidController.isAppInstalled = function (appPackage, cb) {\n-  this.adb.isAppInstalled(appPackage, function (err, installed) {\n-    if (installed) {\n-      return cb(null, [true]);\n-    }\n-    cb(err, []);\n-  });\n-};\n-\n-androidController.removeApp = function (appPackage, cb) {\n-  var removeCommand = null;\n-  if (this.args.udid) {\n-    removeCommand = 'adb -s ' + this.args.udid + ' uninstall ' + appPackage;\n-  } else {\n-    removeCommand = 'adb uninstall ' + appPackage;\n-  }\n-  deviceCommon.removeApp(removeCommand, this.args.udid, appPackage, cb);\n-};\n-\n-androidController.installApp = function (appPath, cb) {\n-  var installationCommand = null;\n-  if (this.args.udid) {\n-    installationCommand = 'adb -s ' + this.args.udid + ' install ' + appPath;\n-  } else {\n-    installationCommand = 'adb install ' + appPath;\n-  }\n-  deviceCommon.installApp(installationCommand, this.args.udid, appPath, cb);\n-};\n-\n-androidController.unpackApp = function (req, cb) {\n-  deviceCommon.unpackApp(req, '.apk', cb);\n-};\n-\n-androidController.tap = function (elementId, x, y, count, cb) {\n-  if (typeof x === \"undefined\" || x === null) x = 0;\n-  if (typeof y === \"undefined\" || y === null) y = 0;\n-  if (typeof count === \"undefined\" || count === null) count = 1;\n-\n-  var i = 0;\n-  var opts = {};\n-  var loop = function (err, res) {\n-    if (err) return cb(err);\n-    if (i++ >= count) return cb(err, res);\n-\n-    this.proxy(opts, loop);\n-  }.bind(this);\n-\n-  if (elementId) {\n-    // we are either tapping on the default location of the element\n-    // or an offset from the top left corner\n-    if (x !== 0 || y !== 0) {\n-      opts = [\"element:click\", {elementId: elementId, x: x, y: y}];\n-    } else {\n-      opts = [\"element:click\", {elementId: elementId}];\n-    }\n-    loop();\n-  } else {\n-    // we have absolute coordinates\n-    opts = [\"click\", {x: x, y: y}];\n-    loop();\n-  }\n-};\n-\n-androidController.doTouchAction = function (action, opts, cb) {\n-  switch (action) {\n-    case 'tap':\n-      return this.tap(opts.element, opts.x, opts.y, opts.count, cb);\n-    case 'press':\n-      return this.touchDown(opts.element, opts.x, opts.y, cb);\n-    case 'release':\n-      return this.touchUp(opts.element, opts.x, opts.y, cb);\n-    case 'moveTo':\n-      return this.touchMove(opts.element, opts.x, opts.y, cb);\n-    case 'wait':\n-      return setTimeout(function () {\n-        cb(null, {\"value\": true, \"status\": status.codes.Success.code});\n-      }, opts.ms);\n-    case 'longPress':\n-      if (typeof opts.duration === 'undefined' || !opts.duration) {\n-        opts.duration = 1000;\n-      }\n-      return this.touchLongClick(opts.element, opts.x, opts.y, opts.duration, cb);\n-    case 'cancel':\n-      // TODO: clarify behavior of 'cancel' action and fix this\n-      logger.warn(\"Cancel action currently has no effect\");\n-      break;\n-    default:\n-      return cb(\"unknown action '\" + action + \"'\");\n-  }\n-};\n-\n-androidController.performTouch = function (gestures, cb) {\n-  var actions = _.pluck(gestures, \"action\");\n-\n-  // drag is *not* press-move-release, so we need to translate\n-  // drag works fine for scroll, as well\n-  var doTouchDrag = function (gestures, cb) {\n-    var getStartLocation = function (elementId, x, y, ncb) {\n-      var startX = x || 0\n-        , startY = y || 0;\n-      if (elementId) {\n-        this.getLocation(elementId, function (err, res) {\n-          if (err) return ncb(err);\n-\n-          startX += res.value.x || 0;\n-          startY += res.value.y || 0;\n-\n-          return ncb(null, startX, startY);\n-        }.bind(this));\n-      } else {\n-        return ncb(null, startX, startY);\n-      }\n-    }.bind(this);\n-    var getEndLocation = function (elementId, x, y, ncb) {\n-      var endX = x || 0\n-        , endY = y || 0;\n-      if (elementId) {\n-        this.getLocation(elementId, function (err, res) {\n-          if (err) return ncb(err);\n-\n-          endX += res.value.x || 0;\n-          endY += res.value.y || 0;\n-\n-          return ncb(null, endX, endY);\n-        }.bind(this));\n-      } else {\n-        return ncb(null, endX, endY);\n-      }\n-    }.bind(this);\n-\n-    var longPress = gestures[0];\n-    getStartLocation(longPress.options.element, longPress.options.x, longPress.options.y, function (err, startX, startY) {\n-      if (err) return cb(err);\n-\n-      var moveTo = gestures[1];\n-      getEndLocation(moveTo.options.element, moveTo.options.x, moveTo.options.y, function (err, endX, endY) {\n-        this.adb.getApiLevel(function (err, apiLevel) {\n-          // lollipop takes a little longer to get things rolling\n-          var duration = apiLevel >= 5 ? 2 : 1;\n-          // `drag` will take care of whether there is an element or not at that level\n-          return this.drag(startX, startY, endX, endY, duration, 1, longPress.options.element, moveTo.options.element, cb);\n-        }.bind(this));\n-      }.bind(this));\n-    }.bind(this));\n-  }.bind(this);\n-\n-\n-  // Fix last release action\n-  var fixRelease = function (cb) {\n-    if (actions[actions.length - 1] === 'release') {\n-      var release = gestures[actions.length - 1];\n-      // sometimes there are no options\n-      release.options = release.options || {};\n-\n-      // nothing to do if release options are already set\n-      if (release.options.element || (release.options.x && release.options.y)) return;\n-\n-      // without coordinates, `release` uses the center of the screen, which,\n-      // generally speaking, is not what we want\n-      // therefore: loop backwards and use the last command with an element and/or\n-      // offset coordinates\n-      var ref = _(gestures).chain().initial().filter(function (gesture) {\n-        var opts = gesture.options;\n-        return opts.element || (opts.x && opts.y);\n-      }).last().value();\n-      if (ref) {\n-        var opts = ref.options || {};\n-        if (opts.element) {\n-          // we retrieve the element location, might be useful in\n-          // case the element becomes invalid\n-          return async.parallel([\n-            this.getLocation.bind(this, opts.element),\n-            this.getSize.bind(this, opts.element)\n-          ], function (err, res) {\n-            if (err) return cb(err);\n-            var loc = res[0].value, size = res[1].value;\n-            release.options = {\n-              element: opts.element,\n-              x: loc.x + size.width / 2,\n-              y: loc.y + size.height / 2\n-            };\n-            cb();\n-          });\n-        }\n-        if (opts.x && opts.y) release.options = _.pick(opts, 'x', 'y');\n-      }\n-    }\n-    cb();\n-  }.bind(this);\n-\n-  // Perform one gesture\n-  var performGesture = function (gesture, cb) {\n-    async.waterfall([\n-      this.doTouchAction.bind(this, gesture.action, gesture.options || {}),\n-      function (res, cb) {\n-        // sometime the element is not available when releasing, retry without it\n-        if (res && res.status === 7 &&\n-           gesture.action === 'release' && gesture.options.element) {\n-           delete gesture.options.element;\n-           logger.debug('retrying release without element opts:', gestures.options, '.');\n-           return this.doTouchAction(gesture.action, gesture.options || {}, cb);\n-        }\n-        // otherwise continue normally\n-        return cb(null, res);\n-      }.bind(this)], function (err, res) {\n-        if (err) return cb(err);\n-        // check result, we wrap json errors\n-        if (res.status !== 0) {\n-          err = new Error();\n-          err.res = res;\n-          return cb(err);\n-        }\n-        cb(null, res);\n-      });\n-  }.bind(this);\n-\n-  // wrapping callback\n-  cb = _.wrap(cb, function (cb, err) {\n-    if (err) {\n-      if (err.res) return cb(null, err.res);\n-      logger.error(err, err.stack);\n-      return cb(err);\n-    }\n-    // success\n-    cb(null, { value: true, status: 0 });\n-  });\n-\n-  if (actions[0] === 'longPress' && actions[1] === 'moveTo' && actions[2] === 'release') {\n-    // some things are special\n-    doTouchDrag(gestures, cb);\n-  } else {\n-    // `press` without a wait is too slow and gets interpretted as a `longPress`\n-    if (actions[actions.length - 2] === 'press' && actions[actions.length - 1] === 'release') {\n-      actions[actions.length - 2] = 'tap';\n-      gestures[gestures.length - 2].action = 'tap';\n-    }\n-\n-    // the `longPress` and `tap` methods release on their own\n-    if ((actions[actions.length - 2] === 'tap' ||\n-      actions[actions.length - 2] === 'longPress') && actions[actions.length - 1] === 'release') {\n-      gestures.pop();\n-      actions.pop();\n-    }\n-\n-    // fix release action then perform all actions\n-    fixRelease(function (err) {\n-      if (err) return cb(err);\n-      this.parseTouch(gestures, false, function (err, fixedGestures) {\n-        if (err) return cb(err);\n-        async.eachSeries(fixedGestures, performGesture, cb);\n-      });\n-    }.bind(this));\n-  }\n-};\n-\n-androidController.parseTouch = function (gestures, multi, cb) {\n-  if (_.last(gestures).action === 'release') {\n-    gestures.pop();\n-  }\n-\n-  var needsPoint = function (action) {\n-    return _.contains(['press', 'moveTo', 'tap', 'longPress'], action);\n-  };\n-\n-  var touchStateObjects = [];\n-  async.eachSeries(gestures, function (gesture, done) {\n-    var options = gesture.options;\n-    if (needsPoint(gesture.action)) {\n-      options.offset = false;\n-      var elementId = gesture.options.element;\n-      if (elementId) {\n-        this.getLocation(elementId, function (err, res) {\n-          if (err) return done(err); // short circuit and quit\n-\n-          var pos = { x: res.value.x, y: res.value.y };\n-          this.getSize(elementId, function (err, res) {\n-            if (err) return done(err);\n-            var size = {w: res.value.width, h: res.value.height};\n-\n-            if (gesture.options.x || gesture.options.y) {\n-              options.x = pos.x + (gesture.options.x || 0);\n-              options.y = pos.y + (gesture.options.y || 0);\n-            } else {\n-              options.x =  pos.x + (size.w / 2);\n-              options.y = pos.y + (size.h / 2);\n-            }\n-\n-            var touchStateObject = {\n-              action: gesture.action,\n-              options: options,\n-              timeOffset: 0.005,\n-            };\n-            touchStateObjects.push(touchStateObject);\n-            done();\n-          });\n-        }.bind(this));\n-      } else {\n-        // expects absolute coordinates, so we need to save these as offsets\n-        // and then translate when everything is done\n-        options.offset = true;\n-        options.x = (gesture.options.x || 0);\n-        options.y = (gesture.options.y || 0);\n-\n-        touchStateObject = {\n-          action: gesture.action,\n-          options: options,\n-          timeOffset: 0.005,\n-        };\n-        touchStateObjects.push(touchStateObject);\n-        done();\n-      }\n-    } else {\n-      var offset = 0.005;\n-      if (gesture.action === 'wait') {\n-        options = gesture.options;\n-        offset = (parseInt(gesture.options.ms) / 1000);\n-      }\n-      var touchStateObject = {\n-        action: gesture.action,\n-        options: options,\n-        timeOffset: offset,\n-      };\n-      touchStateObjects.push(touchStateObject);\n-      done();\n-    }\n-  }.bind(this), function (err) {\n-    if (err) return cb(err);\n-\n-    // we need to change the time (which is now an offset)\n-    // and the position (which may be an offset)\n-    var prevPos = null,\n-        time = 0;\n-    _.each(touchStateObjects, function (state) {\n-      if (typeof state.options.x === 'undefined' && typeof state.options.x === 'undefined') {\n-        // this happens with wait\n-        state.options.x = prevPos.x;\n-        state.options.y = prevPos.y;\n-      }\n-      if (state.options.offset && prevPos) {\n-        // the current position is an offset\n-        state.options.x += prevPos.x;\n-        state.options.y += prevPos.y;\n-      }\n-      delete state.options.offset;\n-      prevPos = state.options;\n-\n-      if (multi) {\n-        var timeOffset = state.timeOffset;\n-        time += timeOffset;\n-        state.time = helpers.truncateDecimals(time, 3);\n-\n-        // multi gestures require 'touch' rather than 'options'\n-        state.touch = state.options;\n-        delete state.options;\n-      }\n-\n-      delete state.timeOffset;\n-    });\n-\n-    cb(null, touchStateObjects);\n-  });\n-};\n-\n-androidController.performMultiAction = function (elementId, actions, cb) {\n-  // Android needs at least two actions to be able to perform a multi pointer gesture\n-  if (actions.length === 1) {\n-    return cb(new Error(\"Multi Pointer Gestures need at least two actions. \" +\n-                        \"Use Touch Actions for a single action.\"));\n-  }\n-\n-  var states = [];\n-  async.eachSeries(actions, function (action, done) {\n-    this.parseTouch(action, true, function (err, val) {\n-      if (err) return done(err);\n-\n-      states.push(val);\n-      done();\n-    }.bind(this));\n-  }.bind(this), function (err) {\n-    if (err) return cb(err);\n-\n-    var opts;\n-    if (elementId) {\n-      opts = {\n-        elementId: elementId,\n-        actions: states\n-      };\n-      return this.proxy([\"element:performMultiPointerGesture\", opts], cb);\n-    } else {\n-      opts = {\n-        actions: states\n-      };\n-      return this.proxy([\"performMultiPointerGesture\", opts], cb);\n-    }\n-  }.bind(this));\n-};\n-\n-androidController.openNotifications = function (cb) {\n-  this.proxy([\"openNotification\"], cb);\n-};\n-\n-androidController.getUrl = function (cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-module.exports = androidController;"
    },
    {
      "sha": "cc93a7c6ef98d741d17fa04166a4eb906c69fd74",
      "filename": "lib/devices/android/android-hybrid.js",
      "status": "removed",
      "additions": 0,
      "deletions": 314,
      "changes": 314,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/android-hybrid.js",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/android-hybrid.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/android-hybrid.js?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,314 +0,0 @@\n-\"use strict\";\n-\n-var logger = require('../../server/logger.js').get('appium')\n-  , _ = require('underscore')\n-  , errors = require('../../server/errors.js')\n-  , path = require('path')\n-  , system = require('appium-support').system\n-  , isWindows = system.isWindows()\n-  , isLinux = system.isLinux()\n-  , exec = require('child_process').exec\n-  , UnknownError = errors.UnknownError\n-  , async = require('async')\n-  , Chromedriver = require('appium-chromedriver')\n-  , status = require(\"../../server/status.js\");\n-\n-var androidHybrid = {};\n-\n-androidHybrid.chromedriver = null;\n-androidHybrid.sessionChromedrivers = {};\n-\n-androidHybrid.listWebviews = function (cb) {\n-  logger.debug(\"Getting a list of available webviews\");\n-  var webviews = [];\n-  var definedDeviceSocket = this.args.androidDeviceSocket;\n-  this.adb.shell(\"cat /proc/net/unix\", function (err, out) {\n-    if (err) return cb(err);\n-    _.each(out.split(\"\\n\"), function (line) {\n-      line = line.trim();\n-      var webviewPid = line.match(/@?webview_devtools_remote_(\\d+)/);\n-      if (definedDeviceSocket) {\n-        if (line.indexOf(\"@\" + definedDeviceSocket) ===\n-          line.length - definedDeviceSocket.length - 1) {\n-          if (webviewPid) {\n-            webviews.push(this.WEBVIEW_BASE + webviewPid[1]);\n-          } else {\n-            webviews.push(this.CHROMIUM_WIN);\n-          }\n-        }\n-      } else if (webviewPid) {\n-        // for multiple webviews a list of 'WEBVIEW_<index>' will be returned\n-        // where <index> is zero based (same is in selendroid)\n-        webviews.push(this.WEBVIEW_BASE + webviewPid[1]);\n-      }\n-    }.bind(this));\n-    webviews = _.uniq(webviews);\n-\n-    if (definedDeviceSocket) {\n-      return cb(null, webviews);\n-    }\n-\n-    var webviewsTmp = webviews;\n-    webviews = [];\n-\n-    var getProcessNameFromWebview = function (view, cb) {\n-      this.getProcessNameFromWebview(view, function (err, pkg) {\n-        if (err) return cb(err);\n-        webviews.push(this.WEBVIEW_BASE + pkg);\n-        cb();\n-      }.bind(this));\n-    }.bind(this);\n-\n-    async.each(webviewsTmp, getProcessNameFromWebview, function (err) {\n-      if (err) return cb(err);\n-      logger.debug(\"Available contexts: \" + this.contexts);\n-      logger.debug(JSON.stringify(webviews));\n-      cb(null, webviews);\n-    }.bind(this));\n-  }.bind(this));\n-};\n-\n-var previousState = {};\n-\n-// remember whether we were previously proxying to a chromedriver or not\n-androidHybrid.rememberProxyState = function () {\n-  previousState.isProxy = this.isProxy;\n-};\n-\n-androidHybrid.restoreProxyState = function () {\n-  this.isProxy = previousState.isProxy;\n-};\n-\n-androidHybrid.getProcessNameFromWebview = function (webview, cb) {\n-  // webview_devtools_remote_4296 => 4296\n-  var pid = webview.match(/\\d+$/);\n-  if (!pid) return cb(\"No pid for webview \" + webview);\n-  pid = pid[0];\n-  logger.debug(webview + \" mapped to pid \" + pid);\n-\n-  logger.debug(\"Getting process name for webview\");\n-  this.adb.shell(\"ps\", function (err, out) {\n-    if (err) return cb(err);\n-    var pkg = \"unknown\";\n-\n-    var lines = out.split(/\\r?\\n/);\n-    /*\n-     USER     PID   PPID  VSIZE  RSS     WCHAN    PC         NAME\n-     u0_a136   6248  179   946000 48144 ffffffff 4005903e R com.example.test\n-     */\n-    var header = lines[0].trim().split(/\\s+/);\n-    // the column order may not be identical on all androids\n-    // dynamically locate the pid and name column.\n-    var pidColumn = header.indexOf(\"PID\");\n-    var pkgColumn = header.indexOf(\"NAME\") + 1;\n-\n-    _.find(lines, function (line) {\n-      line = line.trim().split(/\\s+/);\n-      if (line[pidColumn].indexOf(pid) !== -1) {\n-        logger.debug(\"Parsed pid: \" + line[pidColumn] + \" pkg: \" + line[pkgColumn]);\n-        logger.debug(\"from: \" + line);\n-        pkg = line[pkgColumn];\n-        return pkg; // exit from _.find\n-      }\n-    });\n-\n-    logger.debug(\"returning process name: \" + pkg);\n-    cb(null, pkg);\n-  });\n-};\n-\n-androidHybrid.startChromedriverProxy = function (context, cb) {\n-  cb = _.once(cb);\n-  logger.debug(\"Connecting to chrome-backed webview\");\n-  if (this.chromedriver !== null) {\n-    return cb(new Error(\"We already have a chromedriver instance running\"));\n-  }\n-\n-  if (this.sessionChromedrivers[context]) {\n-    // in the case where we've already set up a chromedriver for a context,\n-    // we want to reconnect to it, not create a whole new one\n-    this.setupExistingChromedriver(context, cb);\n-  } else {\n-    this.setupNewChromedriver(context, cb);\n-  }\n-};\n-\n-androidHybrid.setupNewChromedriver = function (context, cb) {\n-  var chromeArgs = {\n-    port: this.args.chromeDriverPort,\n-    executable: this.args.chromedriverExecutable\n-  };\n-  this.chromedriver = new Chromedriver(chromeArgs);\n-  this.proxyReqRes = this.chromedriver.proxyReq.bind(this.chromedriver);\n-  this.rememberProxyState();\n-  this.isProxy = true;\n-  var caps = {\n-    chromeOptions: {\n-      androidPackage: this.args.appPackage,\n-      androidUseRunningApp: true\n-    }\n-  };\n-  if (this.args.enablePerformanceLogging) {\n-    caps.loggingPrefs = {performance: 'ALL'};\n-  }\n-  // For now the only known arg passed this way is androidDeviceSocket used\n-  // by Operadriver (deriving from Chromedriver) // We don't know how other\n-  // Chromium embedders will call this argument so for now it's name needs to\n-  // be configurable. When Google adds the androidDeviceSocket argument to\n-  // the original Chromedriver then we will be sure about its name for all\n-  // Chromium embedders (as their Webdrivers will derive from Chromedriver)\n-  if (this.args.specialChromedriverSessionArgs) {\n-    _.each(this.args.specialChromedriverSessionArgs, function (val, option) {\n-      logger.debug(\"This method is being deprecated. Apply chromeOptions \" +\n-                   \"normally to pass along options,see sites.google.com/a/\" +\n-                   \"chromium.org/chromedriver/capabilities for more info\");\n-      caps.chromeOptions[option] = val;\n-    });\n-  }\n-  caps = this.decorateChromeOptions(caps);\n-  this.chromedriver.on(Chromedriver.EVENT_CHANGED, function (msg) {\n-    if (msg.state === Chromedriver.STATE_STOPPED) {\n-      // bind our stop/exit handler, passing in context so we know which\n-      // one stopped unexpectedly\n-      this.onChromedriverStop(context);\n-    }\n-  }.bind(this));\n-  this.chromedriver.start(caps).nodeify(function (err) {\n-    if (err) return cb(err);\n-    // save the chromedriver object under the context\n-    this.sessionChromedrivers[context] = this.chromedriver;\n-    cb();\n-  }.bind(this));\n-};\n-\n-\n-androidHybrid.setupExistingChromedriver = function (context, cb) {\n-  logger.debug(\"Found existing Chromedriver for context '\" + context + \"'.\" +\n-               \" Using it.\");\n-  this.rememberProxyState();\n-  this.chromedriver = this.sessionChromedrivers[context];\n-  this.proxyReqRes = this.chromedriver.proxyReq.bind(this.chromedriver);\n-  this.isProxy = true;\n-\n-  // check the status by sending a simple window-based command to ChromeDriver\n-  // if there is an error, we want to recreate the ChromeDriver session\n-  this.chromedriver.hasWorkingWebview().nodeify(function (err, works) {\n-    if (err) return cb(err);\n-    if (works) return cb();\n-    logger.debug(\"ChromeDriver is not associated with a window. \" +\n-                 \"Re-initializing the session.\");\n-    this.chromedriverRestartingContext = context;\n-    this.chromedriver.restart().nodeify(function (err) {\n-      if (err) return cb(err);\n-      this.chromedriverRestartingContext = null;\n-      cb();\n-    }.bind(this));\n-  }.bind(this));\n-};\n-\n-androidHybrid.onChromedriverStop = function (context) {\n-  logger.warn(\"Chromedriver for context \" + context + \" stopped unexpectedly\");\n-  if (context === this.curContext) {\n-    // if we don't have a stop callback, we exited unexpectedly and so want\n-    // to shut down the session and respond with an error\n-    // TODO: this kind of thing should be emitted and handled by a higher-level\n-    // controlling function\n-    var error = new UnknownError(\"Chromedriver quit unexpectedly during session\");\n-    logger.error(error.message);\n-    if (typeof this.cbForCurrentCmd === \"function\") {\n-      this.shutdown(function () {\n-        this.cbForCurrentCmd(error, null);\n-      }.bind(this));\n-    }\n-  } else if (context !== this.chromedriverRestartingContext) {\n-    // if a Chromedriver in the non-active context barfs, we don't really\n-    // care, we'll just make a new one next time we need the context.\n-    // The only time we ignore this is if we know we're in the middle of a\n-    // Chromedriver restart\n-    logger.warn(\"Chromedriver quit unexpectedly, but it wasn't the active \" +\n-                \"context, ignoring\");\n-    delete this.sessionChromedrivers[context];\n-  }\n-};\n-\n-androidHybrid.suspendChromedriverProxy = function (cb) {\n-  this.chromedriver = null;\n-  this.restoreProxyState();\n-  cb();\n-};\n-\n-androidHybrid.stopChromedriverProxies = function (ocb) {\n-  async.eachSeries(Object.keys(this.sessionChromedrivers), function (context, cb) {\n-    logger.debug(\"Stopping chromedriver for context \" + context);\n-    // stop listening for the stopped state event\n-    this.sessionChromedrivers[context].removeAllListeners(Chromedriver.EVENT_CHANGED);\n-    this.sessionChromedrivers[context].stop().nodeify(function (err) {\n-      if (err) logger.warn(\"Error stopping Chromedriver: \" + err.message);\n-      // chromedriver isn't valid anymore, so remove it from context list\n-      delete this.sessionChromedrivers[context];\n-      cb();\n-    }.bind(this));\n-  }.bind(this), function (err) {\n-    // if one of these fails, go back to last proxy state and error out\n-    this.restoreProxyState();\n-    ocb(err);\n-  }.bind(this));\n-};\n-\n-androidHybrid.defaultWebviewName = function () {\n-  return this.WEBVIEW_BASE + this.appProcess;\n-};\n-\n-androidHybrid.initAutoWebview = function (cb) {\n-  if (this.args.autoWebview) {\n-    logger.debug('Setting auto webview');\n-    var viewName = this.defaultWebviewName();\n-    var timeout = (this.args.autoWebviewTimeout) || 2000;\n-    this.setContext(viewName, function (err, res) {\n-      if (err && res.status !== status.codes.NoSuchContext.code) return cb(err);\n-      if (res.status === status.codes.Success.code) return cb();\n-      setTimeout(function () {\n-        logger.debug(\"Retrying context switch with timeout '\" + timeout + \"'\");\n-        this.setContext(viewName, cb);\n-      }.bind(this), timeout);\n-    }.bind(this));\n-  } else {\n-    cb();\n-  }\n-};\n-\n-// get the correct chromedriver executable path based on our system\n-// TODO: don't download/build chromedriver in reset.sh, instead let this be\n-// something that the appium-chromedriver package manages\n-androidHybrid.initChromedriverPath = function (cb) {\n-  if (this.args.chromedriverExecutable) {\n-    cb();\n-  } else {\n-    var setPath = function (platform, executable) {\n-      this.args.chromedriverExecutable = path.resolve(__dirname, \"..\", \"..\",\n-          \"..\", \"build\", \"chromedriver\", platform, executable);\n-      logger.debug(\"Set chromedriver binary as: \" + this.args.chromedriverExecutable);\n-    }.bind(this);\n-    if (isLinux) {\n-      logger.debug(\"Determining linux architecture\");\n-      exec(\"uname -m\", function (err, stdout) {\n-        var executable;\n-        if (err) return cb(err);\n-        if (stdout.trim() === \"i686\") {\n-          executable = \"chromedriver32\";\n-        } else {\n-          executable = \"chromedriver64\";\n-        }\n-        setPath(\"linux\", executable);\n-        cb();\n-      });\n-    } else {\n-      var executable = isWindows ? \"chromedriver.exe\" : \"chromedriver\";\n-      var platform = isWindows ? \"windows\" : \"mac\";\n-      setPath(platform, executable);\n-      cb();\n-    }\n-  }\n-};\n-\n-module.exports = androidHybrid;"
    },
    {
      "sha": "f16d10ff5755cc87ae148da9bdd2ea4abf0fdb0b",
      "filename": "lib/devices/android/android.js",
      "status": "removed",
      "additions": 0,
      "deletions": 591,
      "changes": 591,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/android.js",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/android.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/android.js?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,591 +0,0 @@\n-\"use strict\";\n-\n-var errors = require('../../server/errors.js')\n-  , path = require('path')\n-  , fs = require('fs')\n-  , Device = require('../device.js')\n-  , _ = require('underscore')\n-  , logger = require('../../server/logger.js').get('appium')\n-  , deviceCommon = require('../common.js')\n-  , status = require(\"../../server/status.js\")\n-  , async = require('async')\n-  , androidController = require('./android-controller.js')\n-  , androidContextController = require('./android-context-controller.js')\n-  , androidCommon = require('./android-common.js')\n-  , androidHybrid = require('./android-hybrid.js')\n-  , UiAutomator = require('./uiautomator.js')\n-  , UnknownError = errors.UnknownError;\n-\n-var Android = function () {\n-  this.init();\n-};\n-\n-_.extend(Android.prototype, Device.prototype);\n-\n-Android.prototype._deviceInit = Device.prototype.init;\n-Android.prototype.init = function () {\n-  this._deviceInit();\n-  this.appExt = \".apk\";\n-  this.capabilities = {\n-    platform: 'LINUX'\n-  , browserName: 'Android'\n-  , platformVersion: '4.1'\n-  , webStorageEnabled: false\n-  , takesScreenshot: true\n-  , javascriptEnabled: true\n-  , databaseEnabled: false\n-  , networkConnectionEnabled: true\n-  , locationContextEnabled: false\n-  };\n-  this.args.devicePort = 4724;\n-  this.appMd5Hash = null;\n-  this.args.avd = null;\n-  this.args.language = null;\n-  this.args.locale = null;\n-  this.args.javaVersion = null;\n-  this.initQueue();\n-  this.implicitWaitMs = 0;\n-  this.shuttingDown = false;\n-  this.adb = null;\n-  this.uiautomator = null;\n-  this.uiautomatorRestartOnExit = false;\n-  this.uiautomatorIgnoreExit = false;\n-  this.swipeStepsPerSec = 28;\n-  this.dragStepsPerSec = 40;\n-  this.asyncWaitMs = 0;\n-  this.remote = null;\n-  this.contexts = [];\n-  this.curContext = this.defaultContext();\n-  this.didLaunch = false;\n-  this.launchCb = function () {};\n-  this.uiautomatorExitCb = function () {};\n-  this.dataDir = null;\n-  this.isProxy = false;\n-  this.proxyHost = null;\n-  this.proxyPort = null;\n-  this.proxySessionId = null;\n-  this.avoidProxy = [\n-    ['POST', new RegExp('^/wd/hub/session/[^/]+/context')]\n-  , ['GET', new RegExp('^/wd/hub/session/[^/]+/context')]\n-  , ['GET', new RegExp('^/wd/hub/session/[^/]+/contexts')]\n-  , ['POST', new RegExp('^/wd/hub/session/[^/]+/appium')]\n-  , ['GET', new RegExp('^/wd/hub/session/[^/]+/appium')]\n-  ];\n-\n-  // listen for changes to ignoreUnimportantViews\n-  this.settings.on(\"update\", function (update) {\n-    if (update.key === \"ignoreUnimportantViews\") {\n-      this.setCompressedLayoutHierarchy(update.value, update.callback);\n-    } else {\n-      update.callback();\n-    }\n-  }.bind(this));\n-};\n-\n-Android.prototype._deviceConfigure = Device.prototype.configure;\n-\n-Android.prototype.noLaunchSetup = function (cb) {\n-  logger.debug(\"Setting up Android for 'autoLaunch: false'\");\n-  async.series([\n-    this.initJavaVersion.bind(this),\n-    this.initAdb.bind(this),\n-  ], function (err) { cb(err); });\n-};\n-\n-Android.prototype.start = function (cb, onDie) {\n-  this.launchCb = cb;\n-  this.uiautomatorExitCb = onDie;\n-  logger.info(\"Starting android appium\");\n-  async.series([\n-    this.initJavaVersion.bind(this),\n-    this.initAdb.bind(this),\n-    this.packageAndLaunchActivityFromManifest.bind(this),\n-    this.initUiautomator.bind(this),\n-    this.initChromedriverPath.bind(this),\n-    this.prepareDevice.bind(this),\n-    this.checkApiLevel.bind(this),\n-    this.pushStrings.bind(this),\n-    this.processFromManifest.bind(this),\n-    this.uninstallApp.bind(this),\n-    this.installAppForTest.bind(this),\n-    this.forwardPort.bind(this),\n-    this.pushAppium.bind(this),\n-    this.initUnicode.bind(this),\n-    this.pushSettingsApp.bind(this),\n-    this.pushUnlock.bind(this),\n-    function (cb) {this.uiautomator.start(cb);}.bind(this),\n-    this.wakeUp.bind(this),\n-    this.unlock.bind(this),\n-    this.getDataDir.bind(this),\n-    this.setupCompressedLayoutHierarchy.bind(this),\n-    this.startAppUnderTest.bind(this),\n-    this.initAutoWebview.bind(this),\n-    this.setActualCapabilities.bind(this)\n-  ], function (err) {\n-    if (err) {\n-      this.shutdown(function () {\n-        this.launchCb(err);\n-      }.bind(this));\n-    } else {\n-      this.didLaunch = true;\n-      this.launchCb(null, this.proxySessionId);\n-    }\n-  }.bind(this));\n-};\n-\n-Android.prototype.initUiautomator = function (cb) {\n-  if (this.uiautomator === null) {\n-    this.uiautomator = new UiAutomator(this.adb, this.args);\n-    this.uiautomator.setExitHandler(this.onUiautomatorExit.bind(this));\n-  }\n-  return cb();\n-};\n-\n-Android.prototype.onLaunch = function (err) {\n-  var readyToGo = function () {\n-    this.didLaunch = true;\n-    this.launchCb();\n-  }.bind(this);\n-\n-  var giveUp = function (err) {\n-    this.shutdown(function () {\n-      this.launchCb(err);\n-    }.bind(this));\n-  }.bind(this);\n-\n-  if (err) {\n-    if (this.checkShouldRelaunch(err)) {\n-      logger.error(err);\n-      logger.error(\"Above error isn't fatal, maybe relaunching adb will help....\");\n-      this.adb.waitForDevice(function (err) {\n-        if (err) return giveUp(err);\n-        readyToGo();\n-      });\n-    } else {\n-      giveUp(err);\n-    }\n-  } else {\n-    readyToGo();\n-  }\n-};\n-\n-Android.prototype.restartUiautomator = function (cb) {\n-  async.series([\n-    this.forwardPort.bind(this)\n-    , this.uiautomator.start.bind(this.uiautomator)\n-    , this.setupCompressedLayoutHierarchy.bind(this)\n-  ], cb);\n-};\n-\n-/*\n- * Execute an arbitrary function and handle potential ADB disconnection before\n- * proceeding\n- */\n-Android.prototype.wrapActionAndHandleADBDisconnect = function (action, ocb) {\n-  async.series([\n-    function (cb) {\n-      this.uiautomatorIgnoreExit = true;\n-      action(cb);\n-    }.bind(this)\n-    , this.adb.restart.bind(this.adb)\n-    , this.restartUiautomator.bind(this)\n-  ], function (err) {\n-    this.uiautomatorIgnoreExit = false;\n-    ocb(err);\n-  }.bind(this));\n-};\n-\n-Android.prototype.onUiautomatorExit = function () {\n-  logger.debug(\"UiAutomator exited\");\n-  var respondToClient = function () {\n-    this.stopChromedriverProxies(function () {\n-      this.cleanup();\n-      if (!this.didLaunch) {\n-        var msg = \"UiAutomator quit before it successfully launched\";\n-        logger.error(msg);\n-        this.launchCb(new Error(msg));\n-        return;\n-      } else if (typeof this.cbForCurrentCmd === \"function\") {\n-        var error = new UnknownError(\"UiAutomator died while responding to \" +\n-                                      \"command, please check appium logs!\");\n-        this.cbForCurrentCmd(error, null);\n-      }\n-      // make sure appium.js knows we crashed so it can clean up\n-      this.uiautomatorExitCb();\n-    }.bind(this));\n-  }.bind(this);\n-\n-  if (this.adb) {\n-    var uninstall = function () {\n-      logger.debug(\"Attempting to uninstall app\");\n-      this.uninstallApp(function () {\n-        this.shuttingDown = false;\n-        respondToClient();\n-      }.bind(this));\n-    }.bind(this);\n-\n-    if (!this.uiautomatorIgnoreExit) {\n-      this.adb.ping(function (err, ok) {\n-        if (ok) {\n-          uninstall();\n-        } else {\n-          logger.debug(err);\n-          this.adb.restart(function (err) {\n-            if (err) {\n-              logger.debug(err);\n-            }\n-            if (this.uiautomatorRestartOnExit) {\n-              this.uiautomatorRestartOnExit = false;\n-              this.restartUiautomator(function (err) {\n-                if (err) {\n-                  logger.debug(err);\n-                  uninstall();\n-                }\n-              }.bind(this));\n-            } else {\n-              uninstall();\n-            }\n-          }.bind(this));\n-        }\n-      }.bind(this));\n-    } else {\n-      this.uiautomatorIgnoreExit = false;\n-    }\n-  } else {\n-    logger.debug(\"We're in uiautomator's exit callback but adb is gone already\");\n-    respondToClient();\n-  }\n-};\n-\n-Android.prototype.checkShouldRelaunch = function (launchErr) {\n-  if (launchErr.message === null || typeof launchErr.message === 'undefined') {\n-    logger.error(\"We're checking if we should relaunch based on something \" +\n-                 \"which isn't an error object. Check the codez!\");\n-    return false;\n-  }\n-  var msg = launchErr.message.toString();\n-  var relaunchOn = [\n-    'Could not find a connected Android device'\n-    , 'Device did not become ready'\n-  ];\n-  var relaunch = false;\n-  _.each(relaunchOn, function (relaunchMsg) {\n-    relaunch = relaunch || msg.indexOf(relaunchMsg) !== -1;\n-  });\n-  return relaunch;\n-};\n-\n-Android.prototype.checkApiLevel = function (cb) {\n-  this.adb.getApiLevel(function (err, apiLevel) {\n-    if (err) return cb(err);\n-    logger.info('Device API level is:', parseInt(apiLevel, 10));\n-    if (parseInt(apiLevel) < 17) {\n-      var msg = \"Android devices must be of API level 17 or higher. Please change your device to Selendroid or upgrade Android on your device.\";\n-      logger.error(msg); // logs the error when we encounter it\n-      return cb(new Error(msg)); // send the error up the chain\n-    }\n-\n-    cb();\n-  });\n-};\n-\n-Android.prototype.decorateChromeOptions = function (caps) {\n-  // add options from appium session caps\n-  if (this.args.chromeOptions) {\n-    _.each(this.args.chromeOptions, function (val, option) {\n-      if (typeof caps.chromeOptions[option] === \"undefined\") {\n-        caps.chromeOptions[option] = val;\n-      } else {\n-        logger.warn(\"Cannot pass option \" + caps.chromeOptions[option] + \" because Appium needs it to make chromeDriver work\");\n-      }\n-    });\n-  }\n-\n-  // add device id from adb\n-  caps.chromeOptions.androidDeviceSerial = this.adb.curDeviceId;\n-\n-  return caps;\n-};\n-\n-Android.prototype.processFromManifest = function (cb) {\n-  if (!this.args.app) {\n-    return cb();\n-  } else { // apk must be local to process the manifest.\n-    this.adb.processFromManifest(this.args.app, function (err, process) {\n-      var value = process || this.args.appPackage;\n-\n-      this.appProcess = value;\n-      logger.debug(\"Set app process to: \" + this.appProcess);\n-\n-      cb();\n-    }.bind(this));\n-  }\n-};\n-\n-Android.prototype.pushStrings = function (cb, language) {\n-  var outputPath = path.resolve(this.args.tmpDir, this.args.appPackage);\n-  var remotePath = '/data/local/tmp';\n-  var stringsJson = 'strings.json';\n-  this.extractStrings(function (err) {\n-    if (err) {\n-      if (!fs.existsSync(this.args.app)) {\n-        // apk doesn't exist locally so remove old strings.json\n-        return this.adb.rimraf(remotePath + '/' + stringsJson, function (err) {\n-          if (err) return cb(new Error(\"Could not remove old strings\"));\n-          cb();\n-        });\n-      } else {\n-        // if we can't get strings, just dump an empty json and continue\n-        var remoteFile = remotePath + '/' + stringsJson;\n-        return this.adb.shell(\"echo '{}' > \" + remoteFile, cb);\n-      }\n-    }\n-    var jsonFile = path.resolve(outputPath, stringsJson);\n-    this.adb.push(jsonFile, remotePath, function (err) {\n-      if (err) return cb(new Error(\"Could not push strings.json\"));\n-      cb();\n-    });\n-  }.bind(this), language);\n-};\n-\n-Android.prototype.getStrings = function (language, stringFile, cb) {\n-  if (this.language && this.language === language) {\n-    // Return last strings\n-    return cb(null, {\n-      status: status.codes.Success.code,\n-      value: this.apkStrings\n-    });\n-  }\n-\n-  // Extract, push and return strings\n-  return this.pushStrings(function () {\n-    this.proxy([\"updateStrings\", {}], function (err, res) {\n-      if (err || res.status !== status.codes.Success.code) return cb(err, res);\n-      cb(null, {\n-        status: status.codes.Success.code,\n-        value: this.apkStrings\n-      });\n-    }.bind(this));\n-  }.bind(this), language);\n-};\n-\n-Android.prototype.pushAppium = function (cb) {\n-  logger.debug(\"Pushing appium bootstrap to device...\");\n-  var binPath = path.resolve(__dirname, \"..\", \"..\", \"..\", \"build\",\n-      \"android_bootstrap\", \"AppiumBootstrap.jar\");\n-  fs.stat(binPath, function (err) {\n-    if (err) {\n-      cb(new Error(\"Could not find AppiumBootstrap.jar; please run \" +\n-                   \"'grunt buildAndroidBootstrap'\"));\n-    } else {\n-      this.adb.push(binPath, this.remoteTempPath(), cb);\n-    }\n-  }.bind(this));\n-};\n-\n-Android.prototype.startAppUnderTest = function (cb) {\n-  this.startApp(this.args, cb);\n-};\n-\n-Android.prototype.startApp = function (args, cb) {\n-  if (args.androidCoverage) {\n-    this.adb.androidCoverage(args.androidCoverage, args.appWaitPackage,\n-      args.appWaitActivity, cb);\n-  } else {\n-    this.adb.startApp({\n-      pkg: args.appPackage,\n-      activity: args.appActivity,\n-      action: args.intentAction,\n-      category: args.intentCategory,\n-      flags: args.intentFlags,\n-      waitPkg: args.appWaitPackage,\n-      waitActivity: args.appWaitActivity,\n-      optionalIntentArguments: args.optionalIntentArguments,\n-      stopApp: args.stopAppOnReset || !args.dontStopAppOnReset\n-    }, cb);\n-  }\n-};\n-\n-Android.prototype.stop = function (cb) {\n-  if (this.shuttingDown) {\n-    logger.debug(\"Already in process of shutting down.\");\n-    return cb();\n-  }\n-  this.shuttingDown = true;\n-\n-  var completeShutdown = function (cb) {\n-    if (this.adb) {\n-      this.adb.goToHome(function () {\n-        this.shutdown(cb);\n-      }.bind(this));\n-    } else {\n-      this.shutdown(cb);\n-    }\n-  }.bind(this);\n-\n-  if (this.args.fullReset) {\n-    logger.debug(\"Removing app from device\");\n-    this.uninstallApp(function (err) {\n-      if (err) {\n-        // simply warn on error here, because we don't want to stop the shutdown\n-        // process\n-        logger.warn(err);\n-      }\n-      completeShutdown(cb);\n-    });\n-  } else {\n-    completeShutdown(cb);\n-  }\n-\n-\n-};\n-\n-Android.prototype.cleanup = function () {\n-  logger.debug(\"Cleaning up android objects\");\n-  this.adb = null;\n-  this.uiautomator = null;\n-  this.shuttingDown = false;\n-};\n-\n-Android.prototype.shutdown = function (cb) {\n-  var next = function () {\n-    this.stopChromedriverProxies(function () {\n-      if (this.uiautomator) {\n-        this.uiautomator.shutdown(function () {\n-          this.cleanup();\n-          cb();\n-        }.bind(this));\n-      } else {\n-        this.cleanup();\n-        cb();\n-      }\n-    }.bind(this));\n-  }.bind(this);\n-\n-  if (this.adb) {\n-    this.adb.endAndroidCoverage();\n-    if (this.args.unicodeKeyboard && this.args.resetKeyboard && this.defaultIME) {\n-      logger.debug('Resetting IME to \\'' + this.defaultIME + '\\'');\n-      this.adb.setIME(this.defaultIME, function (err) {\n-        if (err) {\n-          // simply warn on error here, because we don't want to stop the shutdown\n-          // process\n-          logger.warn(err);\n-        }\n-        if (this.adb) {\n-          this.adb.stopLogcat(function () {\n-            next();\n-          }.bind(this));\n-        }\n-      }.bind(this));\n-    } else {\n-      this.adb.stopLogcat(function () {\n-        next();\n-      }.bind(this));\n-    }\n-  } else {\n-    next();\n-  }\n-};\n-\n-Android.prototype.proxy = deviceCommon.proxy;\n-Android.prototype.respond = deviceCommon.respond;\n-\n-Android.prototype.initQueue = function () {\n-  this.queue = async.queue(function (task, cb) {\n-    var action = task.action,\n-        params = task.params;\n-\n-    this.cbForCurrentCmd = cb;\n-\n-    if (this.adb && !this.shuttingDown) {\n-      this.uiautomator.sendAction(action, params, function (response) {\n-        this.cbForCurrentCmd = null;\n-        if (typeof cb === 'function') {\n-          this.respond(response, cb);\n-        }\n-      }.bind(this));\n-    } else {\n-      this.cbForCurrentCmd = null;\n-      var msg = \"Tried to send command to non-existent Android device, \" +\n-                 \"maybe it shut down?\";\n-      if (this.shuttingDown) {\n-        msg = \"We're in the middle of shutting down the Android device, \" +\n-              \"so your request won't be executed. Sorry!\";\n-      }\n-      this.respond({\n-        status: status.codes.UnknownError.code\n-      , value: msg\n-      }, cb);\n-    }\n-  }.bind(this), 1);\n-};\n-\n-Android.prototype.push = function (elem) {\n-  this.queue.push({action: elem[0][0], params: elem[0][1] || {}}, elem[1]);\n-};\n-\n-Android.prototype.wakeUp = function (cb) {\n-  // requires an appium bootstrap connection loaded\n-  logger.debug(\"Waking up device if it's not alive\");\n-  this.proxy([\"wake\", {}], cb);\n-};\n-\n-Android.prototype.getDataDir = function (cb) {\n-  this.proxy([\"getDataDir\", {}], function (err, res) {\n-    if (err) return cb(err);\n-    this.dataDir = res.value;\n-    logger.debug(\"dataDir set to: \" + this.dataDir);\n-    cb();\n-  }.bind(this));\n-};\n-\n-// Set CompressedLayoutHierarchy on the device based on current settings object\n-Android.prototype.setupCompressedLayoutHierarchy = function (cb) {\n-\n-  // setup using cap\n-  if (_.has(this.args, 'ignoreUnimportantViews')) {\n-    // set the setting directly on the internal _settings object, this way we don't trigger an update event\n-    this.settings._settings.ignoreUnimportantViews = this.args.ignoreUnimportantViews;\n-  }\n-\n-  if (_.isUndefined(this.getSetting(\"ignoreUnimportantViews\"))) {\n-    return cb();\n-  }\n-  this.setCompressedLayoutHierarchy(this.getSetting(\"ignoreUnimportantViews\"), cb);\n-};\n-\n-// Set CompressedLayoutHierarchy on the device\n-Android.prototype.setCompressedLayoutHierarchy = function (compress, cb) {\n-  this.proxy([\"compressedLayoutHierarchy\", {compressLayout: compress}], cb);\n-};\n-\n-Android.prototype.waitForActivityToStop = function (cb) {\n-  this.adb.waitForNotActivity(this.args.appWaitPackage, this.args.appWaitActivity, cb);\n-};\n-\n-Android.prototype.setActualCapabilities = function (cb) {\n-  this.capabilities.deviceName = this.adb.udid || this.adb.curDeviceId;\n-  this.adb.shell(\"getprop ro.build.version.release\", function (err, version) {\n-    if (err) {\n-      logger.warn(err);\n-    } else {\n-      logger.debug(\"Device is at release version \" + version);\n-      this.capabilities.platformVersion = version;\n-    }\n-  }.bind(this));\n-  cb();\n-};\n-\n-Android.prototype.resetTimeout = deviceCommon.resetTimeout;\n-Android.prototype.waitForCondition = deviceCommon.waitForCondition;\n-Android.prototype.implicitWaitForCondition = deviceCommon.implicitWaitForCondition;\n-Android.prototype.getSettings = deviceCommon.getSettings;\n-Android.prototype.updateSettings = deviceCommon.updateSettings;\n-\n-_.extend(Android.prototype, androidController);\n-_.extend(Android.prototype, androidContextController);\n-_.extend(Android.prototype, androidCommon);\n-_.extend(Android.prototype, androidHybrid);\n-\n-module.exports = Android;"
    },
    {
      "sha": "d77d6710540c2052cf4bce6d7dfa822c0f1f1e4f",
      "filename": "lib/devices/android/bootstrap/.project",
      "status": "removed",
      "additions": 0,
      "deletions": 23,
      "changes": 23,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/.project",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/.project",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/.project?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,23 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<projectDescription>\n-\t<name>Appium</name>\n-\t<comment></comment>\n-\t<projects>\n-\t</projects>\n-\t<buildSpec>\n-\t\t<buildCommand>\n-\t\t\t<name>org.eclipse.jdt.core.javabuilder</name>\n-\t\t\t<arguments>\n-\t\t\t</arguments>\n-\t\t</buildCommand>\n-\t\t<buildCommand>\n-\t\t\t<name>org.eclipse.m2e.core.maven2Builder</name>\n-\t\t\t<arguments>\n-\t\t\t</arguments>\n-\t\t</buildCommand>\n-\t</buildSpec>\n-\t<natures>\n-\t\t<nature>org.eclipse.m2e.core.maven2Nature</nature>\n-\t\t<nature>org.eclipse.jdt.core.javanature</nature>\n-\t</natures>\n-</projectDescription>"
    },
    {
      "sha": "d4c4413f64f14dff9025aaec422947365b3639a2",
      "filename": "lib/devices/android/bootstrap/.settings/org.eclipse.jdt.core.prefs",
      "status": "removed",
      "additions": 0,
      "deletions": 292,
      "changes": 292,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/.settings/org.eclipse.jdt.core.prefs",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/.settings/org.eclipse.jdt.core.prefs",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/.settings/org.eclipse.jdt.core.prefs?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,292 +0,0 @@\n-eclipse.preferences.version=1\n-org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled\n-org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.6\n-org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve\n-org.eclipse.jdt.core.compiler.compliance=1.6\n-org.eclipse.jdt.core.compiler.debug.lineNumber=generate\n-org.eclipse.jdt.core.compiler.debug.localVariable=generate\n-org.eclipse.jdt.core.compiler.debug.sourceFile=generate\n-org.eclipse.jdt.core.compiler.problem.assertIdentifier=error\n-org.eclipse.jdt.core.compiler.problem.enumIdentifier=error\n-org.eclipse.jdt.core.compiler.problem.forbiddenReference=warning\n-org.eclipse.jdt.core.compiler.source=1.6\n-org.eclipse.jdt.core.formatter.align_type_members_on_columns=true\n-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression=16\n-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_annotation=0\n-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant=16\n-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call=16\n-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation=16\n-org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression=16\n-org.eclipse.jdt.core.formatter.alignment_for_assignment=0\n-org.eclipse.jdt.core.formatter.alignment_for_binary_expression=16\n-org.eclipse.jdt.core.formatter.alignment_for_compact_if=16\n-org.eclipse.jdt.core.formatter.alignment_for_conditional_expression=80\n-org.eclipse.jdt.core.formatter.alignment_for_enum_constants=0\n-org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer=16\n-org.eclipse.jdt.core.formatter.alignment_for_method_declaration=0\n-org.eclipse.jdt.core.formatter.alignment_for_multiple_fields=16\n-org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration=16\n-org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration=16\n-org.eclipse.jdt.core.formatter.alignment_for_resources_in_try=80\n-org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation=16\n-org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration=16\n-org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration=16\n-org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration=16\n-org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration=16\n-org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration=16\n-org.eclipse.jdt.core.formatter.alignment_for_union_type_in_multicatch=16\n-org.eclipse.jdt.core.formatter.blank_lines_after_imports=1\n-org.eclipse.jdt.core.formatter.blank_lines_after_package=1\n-org.eclipse.jdt.core.formatter.blank_lines_before_field=0\n-org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration=0\n-org.eclipse.jdt.core.formatter.blank_lines_before_imports=1\n-org.eclipse.jdt.core.formatter.blank_lines_before_member_type=1\n-org.eclipse.jdt.core.formatter.blank_lines_before_method=1\n-org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk=1\n-org.eclipse.jdt.core.formatter.blank_lines_before_package=0\n-org.eclipse.jdt.core.formatter.blank_lines_between_import_groups=1\n-org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations=1\n-org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration=end_of_line\n-org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration=end_of_line\n-org.eclipse.jdt.core.formatter.brace_position_for_array_initializer=end_of_line\n-org.eclipse.jdt.core.formatter.brace_position_for_block=end_of_line\n-org.eclipse.jdt.core.formatter.brace_position_for_block_in_case=end_of_line\n-org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration=end_of_line\n-org.eclipse.jdt.core.formatter.brace_position_for_enum_constant=end_of_line\n-org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration=end_of_line\n-org.eclipse.jdt.core.formatter.brace_position_for_method_declaration=end_of_line\n-org.eclipse.jdt.core.formatter.brace_position_for_switch=end_of_line\n-org.eclipse.jdt.core.formatter.brace_position_for_type_declaration=end_of_line\n-org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment=false\n-org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment=false\n-org.eclipse.jdt.core.formatter.comment.format_block_comments=true\n-org.eclipse.jdt.core.formatter.comment.format_header=true\n-org.eclipse.jdt.core.formatter.comment.format_html=true\n-org.eclipse.jdt.core.formatter.comment.format_javadoc_comments=true\n-org.eclipse.jdt.core.formatter.comment.format_line_comments=true\n-org.eclipse.jdt.core.formatter.comment.format_source_code=true\n-org.eclipse.jdt.core.formatter.comment.indent_parameter_description=true\n-org.eclipse.jdt.core.formatter.comment.indent_root_tags=true\n-org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags=insert\n-org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter=insert\n-org.eclipse.jdt.core.formatter.comment.line_length=80\n-org.eclipse.jdt.core.formatter.comment.new_lines_at_block_boundaries=true\n-org.eclipse.jdt.core.formatter.comment.new_lines_at_javadoc_boundaries=true\n-org.eclipse.jdt.core.formatter.comment.preserve_white_space_between_code_and_line_comments=false\n-org.eclipse.jdt.core.formatter.compact_else_if=true\n-org.eclipse.jdt.core.formatter.continuation_indentation=2\n-org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer=2\n-org.eclipse.jdt.core.formatter.disabling_tag=@formatter\\:off\n-org.eclipse.jdt.core.formatter.enabling_tag=@formatter\\:on\n-org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line=false\n-org.eclipse.jdt.core.formatter.format_line_comment_starting_on_first_column=true\n-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header=true\n-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header=true\n-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header=true\n-org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header=true\n-org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases=true\n-org.eclipse.jdt.core.formatter.indent_empty_lines=false\n-org.eclipse.jdt.core.formatter.indent_statements_compare_to_block=true\n-org.eclipse.jdt.core.formatter.indent_statements_compare_to_body=true\n-org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases=true\n-org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch=true\n-org.eclipse.jdt.core.formatter.indentation.size=2\n-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field=insert\n-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable=insert\n-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method=insert\n-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package=insert\n-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter=do not insert\n-org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type=insert\n-org.eclipse.jdt.core.formatter.insert_new_line_after_label=do not insert\n-org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer=do not insert\n-org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing=do not insert\n-org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement=do not insert\n-org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer=do not insert\n-org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement=do not insert\n-org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement=do not insert\n-org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement=do not insert\n-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_annotation_declaration=insert\n-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration=insert\n-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_block=insert\n-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_constant=insert\n-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_declaration=insert\n-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_method_body=insert\n-org.eclipse.jdt.core.formatter.insert_new_line_in_empty_type_declaration=insert\n-org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter=insert\n-org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator=insert\n-org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_after_binary_operator=insert\n-org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments=insert\n-org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters=insert\n-org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block=insert\n-org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast=insert\n-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert=insert\n-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case=insert\n-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional=insert\n-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for=insert\n-org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement=insert\n-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression=insert\n-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation=insert\n-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer=insert\n-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters=insert\n-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws=insert\n-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments=insert\n-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations=insert\n-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments=insert\n-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments=insert\n-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits=insert\n-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters=insert\n-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws=insert\n-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments=insert\n-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations=insert\n-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations=insert\n-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference=insert\n-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces=insert\n-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments=insert\n-org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters=insert\n-org.eclipse.jdt.core.formatter.insert_space_after_ellipsis=insert\n-org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer=insert\n-org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_try=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional=insert\n-org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for=insert\n-org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_try_resources=insert\n-org.eclipse.jdt.core.formatter.insert_space_after_unary_operator=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter=insert\n-org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator=insert\n-org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration=insert\n-org.eclipse.jdt.core.formatter.insert_space_before_binary_operator=insert\n-org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer=insert\n-org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_try=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert=insert\n-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional=insert\n-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for=insert\n-org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_ellipsis=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration=insert\n-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration=insert\n-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer=insert\n-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block=insert\n-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration=insert\n-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant=insert\n-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration=insert\n-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration=insert\n-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch=insert\n-org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration=insert\n-org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch=insert\n-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for=insert\n-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if=insert\n-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch=insert\n-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized=insert\n-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_try=insert\n-org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while=insert\n-org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return=insert\n-org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw=insert\n-org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional=insert\n-org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_semicolon=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_try_resources=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_before_unary_operator=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration=do not insert\n-org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation=do not insert\n-org.eclipse.jdt.core.formatter.join_lines_in_comments=true\n-org.eclipse.jdt.core.formatter.join_wrapped_lines=true\n-org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line=false\n-org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line=false\n-org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line=false\n-org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line=false\n-org.eclipse.jdt.core.formatter.lineSplit=80\n-org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column=false\n-org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column=false\n-org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body=0\n-org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve=1\n-org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line=true\n-org.eclipse.jdt.core.formatter.tabulation.char=space\n-org.eclipse.jdt.core.formatter.tabulation.size=2\n-org.eclipse.jdt.core.formatter.use_on_off_tags=true\n-org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations=false\n-org.eclipse.jdt.core.formatter.wrap_before_binary_operator=true\n-org.eclipse.jdt.core.formatter.wrap_before_or_operator_multicatch=true\n-org.eclipse.jdt.core.formatter.wrap_outer_expressions_when_nested=true"
    },
    {
      "sha": "cd5e9444d24ba2fc0ed78976a45c2b3c27311887",
      "filename": "lib/devices/android/bootstrap/.settings/org.eclipse.jdt.ui.prefs",
      "status": "removed",
      "additions": 0,
      "deletions": 109,
      "changes": 109,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/.settings/org.eclipse.jdt.ui.prefs",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/.settings/org.eclipse.jdt.ui.prefs",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/.settings/org.eclipse.jdt.ui.prefs?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,109 +0,0 @@\n-cleanup.add_default_serial_version_id=false\n-cleanup.add_generated_serial_version_id=true\n-cleanup.add_missing_annotations=true\n-cleanup.add_missing_deprecated_annotations=true\n-cleanup.add_missing_methods=false\n-cleanup.add_missing_nls_tags=false\n-cleanup.add_missing_override_annotations=true\n-cleanup.add_missing_override_annotations_interface_methods=true\n-cleanup.add_serial_version_id=true\n-cleanup.always_use_blocks=true\n-cleanup.always_use_parentheses_in_expressions=false\n-cleanup.always_use_this_for_non_static_field_access=false\n-cleanup.always_use_this_for_non_static_method_access=false\n-cleanup.convert_to_enhanced_for_loop=true\n-cleanup.correct_indentation=true\n-cleanup.format_source_code=true\n-cleanup.format_source_code_changes_only=false\n-cleanup.make_local_variable_final=true\n-cleanup.make_parameters_final=true\n-cleanup.make_private_fields_final=true\n-cleanup.make_type_abstract_if_missing_method=false\n-cleanup.make_variable_declarations_final=true\n-cleanup.never_use_blocks=false\n-cleanup.never_use_parentheses_in_expressions=true\n-cleanup.organize_imports=true\n-cleanup.qualify_static_field_accesses_with_declaring_class=false\n-cleanup.qualify_static_member_accesses_through_instances_with_declaring_class=true\n-cleanup.qualify_static_member_accesses_through_subtypes_with_declaring_class=true\n-cleanup.qualify_static_member_accesses_with_declaring_class=true\n-cleanup.qualify_static_method_accesses_with_declaring_class=false\n-cleanup.remove_private_constructors=true\n-cleanup.remove_trailing_whitespaces=true\n-cleanup.remove_trailing_whitespaces_all=true\n-cleanup.remove_trailing_whitespaces_ignore_empty=false\n-cleanup.remove_unnecessary_casts=true\n-cleanup.remove_unnecessary_nls_tags=true\n-cleanup.remove_unused_imports=true\n-cleanup.remove_unused_local_variables=true\n-cleanup.remove_unused_private_fields=true\n-cleanup.remove_unused_private_members=false\n-cleanup.remove_unused_private_methods=true\n-cleanup.remove_unused_private_types=true\n-cleanup.sort_members=true\n-cleanup.sort_members_all=false\n-cleanup.use_blocks=true\n-cleanup.use_blocks_only_for_return_and_throw=false\n-cleanup.use_parentheses_in_expressions=true\n-cleanup.use_this_for_non_static_field_access=true\n-cleanup.use_this_for_non_static_field_access_only_if_necessary=true\n-cleanup.use_this_for_non_static_method_access=true\n-cleanup.use_this_for_non_static_method_access_only_if_necessary=true\n-cleanup_profile=_appium_cleanup\n-cleanup_settings_version=2\n-eclipse.preferences.version=1\n-editor_save_participant_org.eclipse.jdt.ui.postsavelistener.cleanup=true\n-formatter_profile=_appium_format\n-formatter_settings_version=12\n-sp_cleanup.add_default_serial_version_id=true\n-sp_cleanup.add_generated_serial_version_id=false\n-sp_cleanup.add_missing_annotations=true\n-sp_cleanup.add_missing_deprecated_annotations=true\n-sp_cleanup.add_missing_methods=false\n-sp_cleanup.add_missing_nls_tags=false\n-sp_cleanup.add_missing_override_annotations=true\n-sp_cleanup.add_missing_override_annotations_interface_methods=true\n-sp_cleanup.add_serial_version_id=false\n-sp_cleanup.always_use_blocks=true\n-sp_cleanup.always_use_parentheses_in_expressions=false\n-sp_cleanup.always_use_this_for_non_static_field_access=false\n-sp_cleanup.always_use_this_for_non_static_method_access=false\n-sp_cleanup.convert_to_enhanced_for_loop=true\n-sp_cleanup.correct_indentation=true\n-sp_cleanup.format_source_code=true\n-sp_cleanup.format_source_code_changes_only=false\n-sp_cleanup.make_local_variable_final=true\n-sp_cleanup.make_parameters_final=true\n-sp_cleanup.make_private_fields_final=true\n-sp_cleanup.make_type_abstract_if_missing_method=false\n-sp_cleanup.make_variable_declarations_final=true\n-sp_cleanup.never_use_blocks=false\n-sp_cleanup.never_use_parentheses_in_expressions=true\n-sp_cleanup.on_save_use_additional_actions=true\n-sp_cleanup.organize_imports=true\n-sp_cleanup.qualify_static_field_accesses_with_declaring_class=false\n-sp_cleanup.qualify_static_member_accesses_through_instances_with_declaring_class=true\n-sp_cleanup.qualify_static_member_accesses_through_subtypes_with_declaring_class=true\n-sp_cleanup.qualify_static_member_accesses_with_declaring_class=true\n-sp_cleanup.qualify_static_method_accesses_with_declaring_class=false\n-sp_cleanup.remove_private_constructors=true\n-sp_cleanup.remove_trailing_whitespaces=true\n-sp_cleanup.remove_trailing_whitespaces_all=true\n-sp_cleanup.remove_trailing_whitespaces_ignore_empty=false\n-sp_cleanup.remove_unnecessary_casts=true\n-sp_cleanup.remove_unnecessary_nls_tags=true\n-sp_cleanup.remove_unused_imports=true\n-sp_cleanup.remove_unused_local_variables=true\n-sp_cleanup.remove_unused_private_fields=true\n-sp_cleanup.remove_unused_private_members=false\n-sp_cleanup.remove_unused_private_methods=true\n-sp_cleanup.remove_unused_private_types=true\n-sp_cleanup.sort_members=true\n-sp_cleanup.sort_members_all=false\n-sp_cleanup.use_blocks=true\n-sp_cleanup.use_blocks_only_for_return_and_throw=false\n-sp_cleanup.use_parentheses_in_expressions=true\n-sp_cleanup.use_this_for_non_static_field_access=true\n-sp_cleanup.use_this_for_non_static_field_access_only_if_necessary=true\n-sp_cleanup.use_this_for_non_static_method_access=true\n-sp_cleanup.use_this_for_non_static_method_access_only_if_necessary=true"
    },
    {
      "sha": "f897a7f1cb2389f85fe6381425d29f0a9866fb65",
      "filename": "lib/devices/android/bootstrap/.settings/org.eclipse.m2e.core.prefs",
      "status": "removed",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/.settings/org.eclipse.m2e.core.prefs",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/.settings/org.eclipse.m2e.core.prefs",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/.settings/org.eclipse.m2e.core.prefs?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,4 +0,0 @@\n-activeProfiles=\n-eclipse.preferences.version=1\n-resolveWorkspaceProjects=true\n-version=1"
    },
    {
      "sha": "60e27f67594c8765fc6a31e22f53c3f613af9b85",
      "filename": "lib/devices/android/bootstrap/README.md",
      "status": "removed",
      "additions": 0,
      "deletions": 19,
      "changes": 19,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/README.md",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/README.md",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/README.md?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,19 +0,0 @@\n-Bootstrap Android\n-===\n-\n-To install the Android Maven dependencies in your local environment, run the following:\n-\n-* Clone https://github.com/mosabua/maven-android-sdk-deployer into your workstation\n-* Set the ANDROID_HOME environment to the location of the Android SDK, eg. `export ANDROID_HOME=/Developer/adt-bundle-mac-x86_64-20130219/sdk/`\n-* Run `mvn install -P 4.4` from the `maven-android-sdk-deployer` directory. The build will fail if API 19 and some extra packages are not installed.\n-* Please install all sdk and api versions of android for building `maven-android-sdk-deployer`.\n-\n-You can then compile the bootstrap project by running\n-\n-    mvn package -P 4.4\n-\n-If mvn package fails, try deleting your ANDROID_HOME folder and downloading everything again. If it still doesn't work try:\n-\n-    android-sdk/tools/android update sdk --no-ui --obsolete --force\n-\n-and then run `mvn clean ; mvn install`"
    },
    {
      "sha": "a12a2678f02b5da3cd657570d3fde296c99c713b",
      "filename": "lib/devices/android/bootstrap/build.xml",
      "status": "removed",
      "additions": 0,
      "deletions": 92,
      "changes": 92,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/build.xml",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/build.xml",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/build.xml?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,92 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project name=\"AppiumBootstrap\" default=\"help\">\n-\n-    <!-- The local.properties file is created and updated by the 'android' tool.\n-         It contains the path to the SDK. It should *NOT* be checked into\n-         Version Control Systems. -->\n-    <property file=\"local.properties\" />\n-\n-    <!-- The ant.properties file can be created by you. It is only edited by the\n-         'android' tool to add properties to it.\n-         This is the place to change some Ant specific build properties.\n-         Here are some properties you may want to change/update:\n-\n-         source.dir\n-             The name of the source directory. Default is 'src'.\n-         out.dir\n-             The name of the output directory. Default is 'bin'.\n-\n-         For other overridable properties, look at the beginning of the rules\n-         files in the SDK, at tools/ant/build.xml\n-\n-         Properties related to the SDK location or the project target should\n-         be updated using the 'android' tool with the 'update' action.\n-\n-         This file is an integral part of the build system for your\n-         application and should be checked into Version Control Systems.\n-\n-         -->\n-    <property file=\"ant.properties\" />\n-\n-    <!-- if sdk.dir was not set from one of the property file, then\n-         get it from the ANDROID_HOME env var.\n-         This must be done before we load project.properties since\n-         the proguard config can use sdk.dir -->\n-    <property environment=\"env\" />\n-    <condition property=\"sdk.dir\" value=\"${env.ANDROID_HOME}\">\n-        <isset property=\"env.ANDROID_HOME\" />\n-    </condition>\n-\n-    <!-- The project.properties file is created and updated by the 'android'\n-         tool, as well as ADT.\n-\n-         This contains project specific properties such as project target, and library\n-         dependencies. Lower level build properties are stored in ant.properties\n-         (or in .classpath for Eclipse projects).\n-\n-         This file is an integral part of the build system for your\n-         application and should be checked into Version Control Systems. -->\n-    <loadproperties srcFile=\"project.properties\" />\n-\n-    <!-- quick check on sdk.dir -->\n-    <fail\n-            message=\"sdk.dir is missing. Make sure to generate local.properties using 'android update project' or to inject it through the ANDROID_HOME environment variable.\"\n-            unless=\"sdk.dir\"\n-    />\n-\n-    <!--\n-        Import per project custom build rules if present at the root of the project.\n-        This is the place to put custom intermediary targets such as:\n-            -pre-build\n-            -pre-compile\n-            -post-compile (This is typically used for code obfuscation.\n-                           Compiled code location: ${out.classes.absolute.dir}\n-                           If this is not done in place, override ${out.dex.input.absolute.dir})\n-            -post-package\n-            -post-build\n-            -pre-clean\n-    -->\n-    <import file=\"custom_rules.xml\" optional=\"true\" />\n-\n-    <!-- Import the actual build file.\n-\n-         To customize existing targets, there are two options:\n-         - Customize only one target:\n-             - copy/paste the target into this file, *before* the\n-               <import> task.\n-             - customize it to your needs.\n-         - Customize the whole content of build.xml\n-             - copy/paste the content of the rules files (minus the top node)\n-               into this file, replacing the <import> task.\n-             - customize to your needs.\n-\n-         ***********************\n-         ****** IMPORTANT ******\n-         ***********************\n-         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,\n-         in order to avoid having your file be overridden by tools such as \"android update project\"\n-    -->\n-    <!-- version-tag: VERSION_TAG -->\n-    <import file=\"${sdk.dir}/tools/ant/uibuild.xml\" />\n-\n-</project>"
    },
    {
      "sha": "c3b4b49541d92675a5b3c7f5663aa25ee9935fbf",
      "filename": "lib/devices/android/bootstrap/pom.xml",
      "status": "removed",
      "additions": 0,
      "deletions": 56,
      "changes": 56,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/pom.xml",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/pom.xml",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/pom.xml?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,56 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n-         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n-    <modelVersion>4.0.0</modelVersion>\n-\n-    <groupId>io.appium.android</groupId>\n-    <artifactId>bootstrap</artifactId>\n-    <description>Maven project for the Appium Android Bootstrap</description>\n-    <version>1.0.0-SNAPSHOT</version>\n-\n-    <build>\n-        <sourceDirectory>${basedir}/src</sourceDirectory>\n-        <plugins>\n-\n-            <plugin>\n-                <artifactId>maven-compiler-plugin</artifactId>\n-                <configuration>\n-                    <source>1.6</source>\n-                    <target>1.6</target>\n-                </configuration>\n-            </plugin>\n-            <plugin>\n-                <artifactId>maven-dependency-plugin</artifactId>\n-            </plugin>\n-        </plugins>\n-    </build>\n-\n-    <dependencies>\n-        <dependency>\n-            <groupId>org.json</groupId>\n-            <artifactId>json</artifactId>\n-            <version>20080701</version>\n-        </dependency>\n-\n-        <dependency>\n-          <groupId>android</groupId>\n-          <artifactId>android</artifactId>\n-          <version>4.4.2_r3</version>\n-        </dependency>\n-\n-        <dependency>\n-          <groupId>android.test.uiautomator</groupId>\n-          <artifactId>uiautomator</artifactId>\n-          <version>4.4.2_r3</version>\n-        </dependency>\n-\n-        <dependency>\n-            <groupId>junit</groupId>\n-            <artifactId>junit</artifactId>\n-            <version>4.11</version>\n-        </dependency>\n-\n-    </dependencies>\n-\n-</project>"
    },
    {
      "sha": "50abf181912ce8cbe23d93ec608a36f6879bd380",
      "filename": "lib/devices/android/bootstrap/src/com/android/uiautomator/common/UiWatchers.java",
      "status": "removed",
      "additions": 0,
      "deletions": 160,
      "changes": 160,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/com/android/uiautomator/common/UiWatchers.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/com/android/uiautomator/common/UiWatchers.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/com/android/uiautomator/common/UiWatchers.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,160 +0,0 @@\n-// https://android.googlesource.com/platform/frameworks/testing/+/master/uiautomator_test_libraries/src/com/android/uiautomator/common/UiWatchers.java\n-/*\n- * Copyright (C) 2013 The Android Open Source Project\n- * \n- * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n- * use this file except in compliance with the License. You may obtain a copy of\n- * the License at\n- * \n- * http://www.apache.org/licenses/LICENSE-2.0\n- * \n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n- * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n- * License for the specific language governing permissions and limitations under\n- * the License.\n- */\n-\n-package com.android.uiautomator.common;\n-\n-import android.util.Log;\n-import com.android.uiautomator.core.*;\n-\n-import java.util.ArrayList;\n-import java.util.Collections;\n-import java.util.List;\n-\n-public class UiWatchers {\n-  private static final String LOG_TAG = UiWatchers.class.getSimpleName();\n-  private final List<String>  mErrors = new ArrayList<String>();\n-\n-  /**\n-   * We can use the UiDevice registerWatcher to register a small script to be\n-   * executed when the framework is waiting for a control to appear. Waiting may\n-   * be the cause of an unexpected dialog on the screen and it is the time when\n-   * the framework runs the registered watchers. This is a sample watcher\n-   * looking for ANR and crashes. it closes it and moves on. You should create\n-   * your own watchers and handle error logging properly for your type of tests.\n-   */\n-  public void registerAnrAndCrashWatchers() {\n-\n-    UiDevice.getInstance().registerWatcher(\"ANR\", new UiWatcher() {\n-      @Override\n-      public boolean checkForCondition() {\n-        UiObject window = new UiObject(new UiSelector()\n-            .className(\"com.android.server.am.AppNotRespondingDialog\"));\n-        String errorText = null;\n-        if (window.exists()) {\n-          try {\n-            errorText = window.getText();\n-          } catch (UiObjectNotFoundException e) {\n-            Log.e(LOG_TAG, \"dialog gone?\", e);\n-          }\n-          onAnrDetected(errorText);\n-          postHandler();\n-          return true; // triggered\n-        }\n-        return false; // no trigger\n-      }\n-    });\n-\n-    // class names may have changed\n-    UiDevice.getInstance().registerWatcher(\"ANR2\", new UiWatcher() {\n-      @Override\n-      public boolean checkForCondition() {\n-        UiObject window = new UiObject(new UiSelector().packageName(\"android\")\n-            .textContains(\"isn't responding.\"));\n-        if (window.exists()) {\n-          String errorText = null;\n-          try {\n-            errorText = window.getText();\n-          } catch (UiObjectNotFoundException e) {\n-            Log.e(LOG_TAG, \"dialog gone?\", e);\n-          }\n-          onAnrDetected(errorText);\n-          postHandler();\n-          return true; // triggered\n-        }\n-        return false; // no trigger\n-      }\n-    });\n-\n-    UiDevice.getInstance().registerWatcher(\"CRASH\", new UiWatcher() {\n-      @Override\n-      public boolean checkForCondition() {\n-        UiObject window = new UiObject(new UiSelector()\n-            .className(\"com.android.server.am.AppErrorDialog\"));\n-        if (window.exists()) {\n-          String errorText = null;\n-          try {\n-            errorText = window.getText();\n-          } catch (UiObjectNotFoundException e) {\n-            Log.e(LOG_TAG, \"dialog gone?\", e);\n-          }\n-          onCrashDetected(errorText);\n-          postHandler();\n-          return true; // triggered\n-        }\n-        return false; // no trigger\n-      }\n-    });\n-\n-    UiDevice.getInstance().registerWatcher(\"CRASH2\", new UiWatcher() {\n-      @Override\n-      public boolean checkForCondition() {\n-        UiObject window = new UiObject(new UiSelector().packageName(\"android\")\n-            .textContains(\"has stopped\"));\n-        if (window.exists()) {\n-          String errorText = null;\n-          try {\n-            errorText = window.getText();\n-          } catch (UiObjectNotFoundException e) {\n-            Log.e(LOG_TAG, \"dialog gone?\", e);\n-          }\n-          onCrashDetected(errorText);\n-          postHandler();\n-          return true; // triggered\n-        }\n-        return false; // no trigger\n-      }\n-    });\n-\n-    Log.i(LOG_TAG, \"Registed GUI Exception watchers\");\n-  }\n-\n-  public void onAnrDetected(String errorText) {\n-    mErrors.add(errorText);\n-  }\n-\n-  public void onCrashDetected(String errorText) {\n-    mErrors.add(errorText);\n-  }\n-\n-  public void reset() {\n-    mErrors.clear();\n-  }\n-\n-  public List<String> getErrors() {\n-    return Collections.unmodifiableList(mErrors);\n-  }\n-\n-  /**\n-   * Current implementation ignores the exception and continues.\n-   */\n-  public void postHandler() {\n-    // TODO: Add custom error logging here\n-\n-    String formatedOutput = String.format(\"UI Exception Message: %-20s\\n\",\n-        UiDevice.getInstance().getCurrentPackageName());\n-    Log.e(LOG_TAG, formatedOutput);\n-\n-    UiObject buttonOK = new UiObject(new UiSelector().text(\"OK\").enabled(true));\n-    // sometimes it takes a while for the OK button to become enabled\n-    buttonOK.waitForExists(5000);\n-    try {\n-      buttonOK.click();\n-    } catch (UiObjectNotFoundException e) {\n-      Log.e(LOG_TAG, \"Exception\", e);\n-    }\n-  }\n-}\n\\ No newline at end of file"
    },
    {
      "sha": "5010b16d29e64cf550c5e7bde0c916f2d0eaa1db",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/AndroidCommand.java",
      "status": "removed",
      "additions": 0,
      "deletions": 118,
      "changes": 118,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/AndroidCommand.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/AndroidCommand.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/AndroidCommand.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,118 +0,0 @@\n-package io.appium.android.bootstrap;\n-\n-import io.appium.android.bootstrap.exceptions.CommandTypeException;\n-import org.json.JSONException;\n-import org.json.JSONObject;\n-\n-import java.util.Hashtable;\n-import java.util.Iterator;\n-\n-/**\n- * This proxy embodies the command that the handlers execute.\n- * \n- */\n-public class AndroidCommand {\n-\n-  JSONObject         json;\n-  AndroidCommandType cmdType;\n-\n-  public AndroidCommand(final String jsonStr) throws JSONException,\n-      CommandTypeException {\n-    json = new JSONObject(jsonStr);\n-    setType(json.getString(\"cmd\"));\n-  }\n-\n-  /**\n-   * Return the action string for this command.\n-   * \n-   * @return String\n-   * @throws JSONException\n-   */\n-  public String action() throws JSONException {\n-    if (isElementCommand()) {\n-      return json.getString(\"action\").substring(8);\n-    }\n-    return json.getString(\"action\");\n-  }\n-\n-  public AndroidCommandType commandType() {\n-    return cmdType;\n-  }\n-\n-  /**\n-   * Get the {@link AndroidElement destEl} this command is to operate on (must\n-   * provide the \"desElId\" parameter).\n-   * \n-   * @return {@link AndroidElement}\n-   * @throws JSONException\n-   */\n-  public AndroidElement getDestElement() throws JSONException {\n-    String destElId = (String) params().get(\"destElId\");\n-    return AndroidElementsHash.getInstance().getElement(destElId);\n-  }\n-\n-  /**\n-   * Get the {@link AndroidElement element} this command is to operate on (must\n-   * provide the \"elementId\" parameter).\n-   * \n-   * @return {@link AndroidElement}\n-   * @throws JSONException\n-   */\n-  public AndroidElement getElement() throws JSONException {\n-    String elId = (String) params().get(\"elementId\");\n-    return AndroidElementsHash.getInstance().getElement(elId);\n-  }\n-\n-  /**\n-   * Returns whether or not this command is on an element (true) or device\n-   * (false).\n-   * \n-   * @return boolean\n-   */\n-  public boolean isElementCommand() {\n-    if (cmdType == AndroidCommandType.ACTION) {\n-      try {\n-        return json.getString(\"action\").startsWith(\"element:\");\n-      } catch (final JSONException e) {\n-        return false;\n-      }\n-    }\n-    return false;\n-  }\n-\n-  /**\n-   * Return a hash table of name, value pairs as arguments to the handlers\n-   * executing this command.\n-   * \n-   * @return Hashtable<String, Object>\n-   * @throws JSONException\n-   */\n-  public Hashtable<String, Object> params() throws JSONException {\n-    final JSONObject paramsObj = json.getJSONObject(\"params\");\n-    final Hashtable<String, Object> newParams = new Hashtable<String, Object>();\n-    final Iterator<?> keys = paramsObj.keys();\n-\n-    while (keys.hasNext()) {\n-      final String param = (String) keys.next();\n-      newParams.put(param, paramsObj.get(param));\n-    }\n-    return newParams;\n-  }\n-\n-  /**\n-   * Set the command {@link AndroidCommandType type}\n-   * \n-   * @param stringType\n-   *          The string of the type (i.e. \"shutdown\" or \"action\")\n-   * @throws CommandTypeException\n-   */\n-  public void setType(final String stringType) throws CommandTypeException {\n-    if (stringType.equals(\"shutdown\")) {\n-      cmdType = AndroidCommandType.SHUTDOWN;\n-    } else if (stringType.equals(\"action\")) {\n-      cmdType = AndroidCommandType.ACTION;\n-    } else {\n-      throw new CommandTypeException(\"Got bad command type: \" + stringType);\n-    }\n-  }\n-}\n\\ No newline at end of file"
    },
    {
      "sha": "b494c3a104539f3b6df660369854515b5b3c3cf6",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/AndroidCommandExecutor.java",
      "status": "removed",
      "additions": 0,
      "deletions": 75,
      "changes": 75,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/AndroidCommandExecutor.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/AndroidCommandExecutor.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/AndroidCommandExecutor.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,75 +0,0 @@\n-package io.appium.android.bootstrap;\n-\n-import io.appium.android.bootstrap.handler.*;\n-import org.json.JSONException;\n-\n-import java.util.HashMap;\n-\n-/**\n- * Command execution dispatch class. This class relays commands to the various\n- * handlers.\n- *\n- */\n-class AndroidCommandExecutor {\n-\n-  private static HashMap<String, CommandHandler> map = new HashMap<String, CommandHandler>();\n-\n-  static {\n-    map.put(\"waitForIdle\", new WaitForIdle());\n-    map.put(\"clear\", new Clear());\n-    map.put(\"orientation\", new Orientation());\n-    map.put(\"swipe\", new Swipe());\n-    map.put(\"flick\", new Flick());\n-    map.put(\"drag\", new Drag());\n-    map.put(\"pinch\", new Pinch());\n-    map.put(\"click\", new Click());\n-    map.put(\"touchLongClick\", new TouchLongClick());\n-    map.put(\"touchDown\", new TouchDown());\n-    map.put(\"touchUp\", new TouchUp());\n-    map.put(\"touchMove\", new TouchMove());\n-    map.put(\"getText\", new GetText());\n-    map.put(\"setText\", new SetText());\n-    map.put(\"getName\", new GetName());\n-    map.put(\"getAttribute\", new GetAttribute());\n-    map.put(\"getDeviceSize\", new GetDeviceSize());\n-    map.put(\"scrollTo\", new ScrollTo());\n-    map.put(\"find\", new Find());\n-    map.put(\"getLocation\", new GetLocation());\n-    map.put(\"getSize\", new GetSize());\n-    map.put(\"wake\", new Wake());\n-    map.put(\"pressBack\", new PressBack());\n-    map.put(\"pressKeyCode\", new PressKeyCode());\n-    map.put(\"longPressKeyCode\", new LongPressKeyCode());\n-    map.put(\"takeScreenshot\", new TakeScreenshot());\n-    map.put(\"updateStrings\", new UpdateStrings());\n-    map.put(\"getDataDir\", new GetDataDir());\n-    map.put(\"performMultiPointerGesture\", new MultiPointerGesture());\n-    map.put(\"openNotification\", new OpenNotification());\n-    map.put(\"source\", new Source());\n-    map.put(\"compressedLayoutHierarchy\", new CompressedLayoutHierarchy());\n-  }\n-\n-  /**\n-   * Gets the handler out of the map, and executes the command.\n-   *\n-   * @param command\n-   *          The {@link AndroidCommand}\n-   * @return {@link AndroidCommandResult}\n-   */\n-  public AndroidCommandResult execute(final AndroidCommand command) {\n-    try {\n-      Logger.debug(\"Got command action: \" + command.action());\n-\n-      if (map.containsKey(command.action())) {\n-        return map.get(command.action()).execute(command);\n-      } else {\n-        return new AndroidCommandResult(WDStatus.UNKNOWN_COMMAND,\n-            \"Unknown command: \" + command.action());\n-      }\n-    } catch (final JSONException e) {\n-      Logger.error(\"Could not decode action/params of command\");\n-      return new AndroidCommandResult(WDStatus.JSON_DECODER_ERROR,\n-          \"Could not decode action/params of command, please check format!\");\n-    }\n-  }\n-}"
    },
    {
      "sha": "f404df175739ceb2754c5a30f839adb054f80a34",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/AndroidCommandResult.java",
      "status": "removed",
      "additions": 0,
      "deletions": 59,
      "changes": 59,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/AndroidCommandResult.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/AndroidCommandResult.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/AndroidCommandResult.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,59 +0,0 @@\n-package io.appium.android.bootstrap;\n-\n-import org.json.JSONException;\n-import org.json.JSONObject;\n-\n-/**\n- * Results class that converts status to JSON messages.\n- * \n- */\n-public class AndroidCommandResult {\n-\n-  JSONObject json;\n-\n-  public AndroidCommandResult(final WDStatus status) {\n-    try {\n-      json = new JSONObject();\n-      json.put(\"status\", status.code());\n-      json.put(\"value\", status.message());\n-    } catch (final JSONException e) {\n-      Logger.error(\"Couldn't create android command result!\");\n-    }\n-  }\n-\n-  public AndroidCommandResult(final WDStatus status, final JSONObject val) {\n-    json = new JSONObject();\n-    try {\n-      json.put(\"status\", status.code());\n-      json.put(\"value\", val);\n-    } catch (final JSONException e) {\n-      Logger.error(\"Couldn't create android command result!\");\n-    }\n-  }\n-\n-  public AndroidCommandResult(final WDStatus status, final Object val) {\n-    json = new JSONObject();\n-    try {\n-      json.put(\"status\", status.code());\n-      json.put(\"value\", val);\n-    } catch (final JSONException e) {\n-      Logger.error(\"Couldn't create android command result!\");\n-    }\n-  }\n-\n-  public AndroidCommandResult(final WDStatus status, final String val) {\n-    try {\n-      json = new JSONObject();\n-      json.put(\"status\", status.code());\n-      json.put(\"value\", val);\n-    } catch (final JSONException e) {\n-      Logger.error(\"Couldn't create android command result!\");\n-    }\n-  }\n-\n-  @Override\n-  public String toString() {\n-    return json.toString();\n-  }\n-\n-}"
    },
    {
      "sha": "2400861753caedffcaf8c5567128aa8b189c4ad0",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/AndroidCommandType.java",
      "status": "removed",
      "additions": 0,
      "deletions": 9,
      "changes": 9,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/AndroidCommandType.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/AndroidCommandType.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/AndroidCommandType.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,9 +0,0 @@\n-package io.appium.android.bootstrap;\n-\n-/**\n- * Enumeration for all the command types.\n- * \n- */\n-public enum AndroidCommandType {\n-  ACTION, SHUTDOWN\n-}\n\\ No newline at end of file"
    },
    {
      "sha": "4e214c2bf760974ce9b81907f145f041fa685589",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/AndroidElement.java",
      "status": "removed",
      "additions": 0,
      "deletions": 261,
      "changes": 261,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/AndroidElement.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/AndroidElement.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/AndroidElement.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,261 +0,0 @@\n-package io.appium.android.bootstrap;\n-\n-import android.graphics.Rect;\n-import android.view.MotionEvent.PointerCoords;\n-import android.view.accessibility.AccessibilityNodeInfo;\n-import com.android.uiautomator.core.Configurator;\n-import com.android.uiautomator.core.UiObject;\n-import com.android.uiautomator.core.UiObjectNotFoundException;\n-import com.android.uiautomator.core.UiSelector;\n-import io.appium.android.bootstrap.exceptions.InvalidCoordinatesException;\n-import io.appium.android.bootstrap.exceptions.NoAttributeFoundException;\n-import io.appium.android.bootstrap.utils.Point;\n-import io.appium.android.bootstrap.utils.UnicodeEncoder;\n-\n-import static io.appium.android.bootstrap.utils.ReflectionUtils.invoke;\n-import static io.appium.android.bootstrap.utils.ReflectionUtils.method;\n-import static io.appium.android.bootstrap.utils.API.API_18;\n-\n-/**\n- * Proxy class for UiObject.\n- *\n- */\n-public class AndroidElement {\n-\n-  private final UiObject el;\n-  private String         id;\n-\n-  AndroidElement(final String id, final UiObject el) {\n-    this.el = el;\n-    this.id = id;\n-  }\n-\n-  public AndroidElement(final UiObject uiObj) {\n-    el = uiObj;\n-  }\n-\n-  public void clearText() throws UiObjectNotFoundException {\n-    el.clearTextField();\n-  }\n-\n-  public boolean click() throws UiObjectNotFoundException {\n-    return el.click();\n-  }\n-  \n-  public boolean exists() {\n-    return el.exists();\n-  }\n-\n-  public boolean dragTo(final int destX, final int destY, final int steps)\n-      throws UiObjectNotFoundException {\n-    if (API_18) {\n-      return el.dragTo(destX, destY, steps);\n-    } else {\n-      Logger.error(\"Device does not support API >= 18!\");\n-      return false;\n-    }\n-  }\n-\n-  public boolean dragTo(final UiObject destObj, final int steps)\n-      throws UiObjectNotFoundException {\n-    if (API_18) {\n-      return el.dragTo(destObj, steps);\n-    } else {\n-      Logger.error(\"Device does not support API >= 18!\");\n-      return false;\n-    }\n-  }\n-  \n-  public Point getAbsolutePosition(final Point point)\n-      throws UiObjectNotFoundException, InvalidCoordinatesException {\n-    final Rect rect = this.getBounds();\n-    \n-    Logger.debug(\"Element bounds: \" + rect.toShortString());\n-    \n-    return PositionHelper.getAbsolutePosition(point, rect, new Point(rect.left, rect.top), false);\n-  }\n-\n-  public boolean getBoolAttribute(final String attr)\n-      throws UiObjectNotFoundException, NoAttributeFoundException {\n-    boolean res;\n-    if (attr.equals(\"enabled\")) {\n-      res = el.isEnabled();\n-    } else if (attr.equals(\"checkable\")) {\n-      res = el.isCheckable();\n-    } else if (attr.equals(\"checked\")) {\n-      res = el.isChecked();\n-    } else if (attr.equals(\"clickable\")) {\n-      res = el.isClickable();\n-    } else if (attr.equals(\"focusable\")) {\n-      res = el.isFocusable();\n-    } else if (attr.equals(\"focused\")) {\n-      res = el.isFocused();\n-    } else if (attr.equals(\"longClickable\")) {\n-      res = el.isLongClickable();\n-    } else if (attr.equals(\"scrollable\")) {\n-      res = el.isScrollable();\n-    } else if (attr.equals(\"selected\")) {\n-      res = el.isSelected();\n-    } else if (attr.equals(\"displayed\")) {\n-      res = el.exists();\n-    } else {\n-      throw new NoAttributeFoundException(attr);\n-    }\n-    return res;\n-  }\n-\n-  public Rect getBounds() throws UiObjectNotFoundException {\n-    return el.getBounds();\n-  }\n-\n-  public UiObject getChild(final UiSelector sel)\n-      throws UiObjectNotFoundException {\n-    return el.getChild(sel);\n-  }\n-\n-  public String getClassName() throws UiObjectNotFoundException {\n-    if (API_18) {\n-      return el.getClassName();\n-    } else {\n-      Logger.error(\"Device does not support API >= 18!\");\n-      return \"\";\n-    }\n-  }\n-\n-  public String getResourceId() throws UiObjectNotFoundException {\n-    String resourceId = \"\";\n-\n-    if (!API_18) {\n-      Logger.error(\"Device does not support API >= 18!\");\n-      return resourceId;\n-    }\n-\n-    try {\n-      /*\n-       * Unfortunately UiObject does not implement a getResourceId method.\n-       * There is currently no way to determine the resource-id of a given\n-       * element represented by UiObject. Until this support is added to\n-       * UiAutomater, we try to match the implementation pattern that is\n-       * already used by UiObject for getting attributes using reflection.\n-       * The returned string matches exactly what is displayed in the\n-       * UiAutomater inspector.\n-       */\n-      AccessibilityNodeInfo node = (AccessibilityNodeInfo) invoke( method(el.getClass(), \"findAccessibilityNodeInfo\", long.class),\n-              el, Configurator.getInstance().getWaitForSelectorTimeout());\n-\n-      if (node == null) {\n-        throw new UiObjectNotFoundException(el.getSelector().toString());\n-      }\n-\n-      resourceId = node.getViewIdResourceName();\n-    } catch (final Exception e) {\n-      Logger.error(\"Exception: \" + e + \" (\" + e.getMessage() + \")\");\n-    }\n-\n-    return resourceId;\n-  }\n-\n-  public String getContentDesc() throws UiObjectNotFoundException {\n-    return el.getContentDescription();\n-  }\n-\n-  public String getId() {\n-    return id;\n-  }\n-\n-  public String getStringAttribute(final String attr)\n-      throws UiObjectNotFoundException, NoAttributeFoundException {\n-    String res;\n-    if (attr.equals(\"name\")) {\n-      res = getContentDesc();\n-      if (res.equals(\"\")) {\n-        res = getText();\n-      }\n-    } else if (attr.equals(\"text\")) {\n-      res = getText();\n-    } else if (attr.equals(\"className\")) {\n-      res = getClassName();\n-    } else if (attr.equals(\"resourceId\")) {\n-      res = getResourceId();\n-    } else {\n-      throw new NoAttributeFoundException(attr);\n-    }\n-    return res;\n-  }\n-\n-  public String getText() throws UiObjectNotFoundException {\n-    return el.getText();\n-  }\n-\n-  public UiObject getUiObject() {\n-    return el;\n-  }\n-\n-  public Rect getVisibleBounds() throws UiObjectNotFoundException {\n-    return el.getVisibleBounds();\n-  }\n-\n-  public boolean longClick() throws UiObjectNotFoundException {\n-    return el.longClick();\n-  }\n-\n-  public boolean pinchIn(final int percent, final int steps)\n-      throws UiObjectNotFoundException {\n-    if (API_18) {\n-      return el.pinchIn(percent, steps);\n-    } else {\n-      Logger.error(\"Device does not support API >= 18!\");\n-      return false;\n-    }\n-  }\n-\n-  public boolean pinchOut(final int percent, final int steps)\n-      throws UiObjectNotFoundException {\n-    if (API_18) {\n-      return el.pinchOut(percent, steps);\n-    } else {\n-      Logger.error(\"Device does not support API >= 18!\");\n-      return false;\n-    }\n-  }\n-\n-  public void setId(final String id) {\n-    this.id = id;\n-  }\n-\n-  public boolean setText(final String text) throws UiObjectNotFoundException {\n-    return setText(text, false);\n-  }\n-\n-  public boolean setText(final String text, boolean unicodeKeyboard)\n-      throws UiObjectNotFoundException {\n-    if (unicodeKeyboard && UnicodeEncoder.needsEncoding(text)) {\n-      Logger.debug(\"Sending Unicode text to element: \" + text);\n-      String encodedText = UnicodeEncoder.encode(text);\n-      Logger.debug(\"Encoded text: \" + encodedText);\n-      return el.setText(encodedText);\n-    } else {\n-      Logger.debug(\"Sending plain text to element: \" + text);\n-      return el.setText(text);\n-    }\n-  }\n-\n-  public boolean performMultiPointerGesture(PointerCoords[] ...touches) {\n-    try {\n-      if (API_18) {\n-        // The compile-time SDK expects the wrong arguments, but the runtime\n-        // version in the emulator is correct. So we cannot do:\n-        //   `return el.performMultiPointerGesture(touches);`\n-        // Instead we need to use Reflection to do it all at runtime.\n-        return (Boolean) invoke(method(el.getClass(), \"performMultiPointerGesture\", PointerCoords[][].class),\n-                el, (Object)touches);\n-      } else {\n-        Logger.error(\"Device does not support API < 18!\");\n-        return false;\n-      }\n-    } catch (final Exception e) {\n-      Logger.error(\"Exception: \" + e + \" (\" + e.getMessage() + \")\");\n-      return false;\n-    }\n-  }\n-}"
    },
    {
      "sha": "b1cdeaf6f05ecd990c6ec19e185f0ccfc63d9836",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/AndroidElementsHash.java",
      "status": "removed",
      "additions": 0,
      "deletions": 162,
      "changes": 162,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/AndroidElementsHash.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/AndroidElementsHash.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/AndroidElementsHash.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,162 +0,0 @@\n-package io.appium.android.bootstrap;\n-\n-import com.android.uiautomator.core.UiObject;\n-import com.android.uiautomator.core.UiObjectNotFoundException;\n-import com.android.uiautomator.core.UiSelector;\n-import io.appium.android.bootstrap.exceptions.ElementNotFoundException;\n-\n-import java.util.ArrayList;\n-import java.util.Hashtable;\n-import java.util.regex.Pattern;\n-\n-/**\n- * A cache of elements that the app has seen.\n- *\n- */\n-public class AndroidElementsHash {\n-\n-  private static final Pattern endsWithInstancePattern = Pattern.compile(\".*INSTANCE=\\\\d+]$\");\n-\n-  public static AndroidElementsHash getInstance() {\n-    if (AndroidElementsHash.instance == null) {\n-      AndroidElementsHash.instance = new AndroidElementsHash();\n-    }\n-    return AndroidElementsHash.instance;\n-  }\n-\n-  private final Hashtable<String, AndroidElement> elements;\n-  private       Integer                           counter;\n-\n-  private static AndroidElementsHash instance;\n-\n-  /**\n-   * Constructor\n-   */\n-  public AndroidElementsHash() {\n-    counter = 0;\n-    elements = new Hashtable<String, AndroidElement>();\n-  }\n-\n-  /**\n-   * @param element\n-   * @return\n-   */\n-  public AndroidElement addElement(final UiObject element) {\n-    counter++;\n-    final String key = counter.toString();\n-    final AndroidElement el = new AndroidElement(key, element);\n-    elements.put(key, el);\n-    return el;\n-  }\n-\n-  /**\n-   * Return an element given an Id.\n-   * \n-   * @param key\n-   * @return {@link AndroidElement}\n-   */\n-  public AndroidElement getElement(final String key) {\n-    return elements.get(key);\n-  }\n-\n-  /**\n-   * Return an elements child given the key (context id), or uses the selector\n-   * to get the element.\n-   * \n-   * @param sel\n-   * @param key\n-   *          Element id.\n-   * @return {@link AndroidElement}\n-   * @throws ElementNotFoundException\n-   */\n-  public AndroidElement getElement(final UiSelector sel, final String key)\n-      throws ElementNotFoundException {\n-    AndroidElement baseEl;\n-    baseEl = elements.get(key);\n-    UiObject el;\n-\n-    if (baseEl == null) {\n-      el = new UiObject(sel);\n-    } else {\n-      try {\n-        el = baseEl.getChild(sel);\n-      } catch (final UiObjectNotFoundException e) {\n-        throw new ElementNotFoundException();\n-      }\n-    }\n-\n-    if (el.exists()) {\n-      return addElement(el);\n-    } else {\n-      throw new ElementNotFoundException();\n-    }\n-  }\n-\n-  /**\n-   * Same as {@link #getElement(UiSelector, String)} but for multiple elements\n-   * at once.\n-   * \n-   * @param sel\n-   * @param key\n-   * @return ArrayList<{@link AndroidElement}>\n-   * @throws UiObjectNotFoundException\n-   */\n-  public ArrayList<AndroidElement> getElements(final UiSelector sel,\n-                                               final String key) throws UiObjectNotFoundException {\n-    boolean keepSearching = true;\n-    final String selectorString = sel.toString();\n-    final boolean useIndex = selectorString.contains(\"CLASS_REGEX=\");\n-    final boolean endsWithInstance = endsWithInstancePattern.matcher(selectorString).matches();\n-    Logger.debug(\"getElements selector:\" + selectorString);\n-    final ArrayList<AndroidElement> elements = new ArrayList<AndroidElement>();\n-\n-    // If sel is UiSelector[CLASS=android.widget.Button, INSTANCE=0]\n-    // then invoking instance with a non-0 argument will corrupt the selector.\n-    //\n-    // sel.instance(1) will transform the selector into:\n-    // UiSelector[CLASS=android.widget.Button, INSTANCE=1]\n-    //\n-    // The selector now points to an entirely different element.\n-    if (endsWithInstance) {\n-      Logger.debug(\"Selector ends with instance.\");\n-      // There's exactly one element when using instance.\n-      UiObject instanceObj = new UiObject(sel);\n-      if (instanceObj != null && instanceObj.exists()) {\n-        elements.add(addElement(instanceObj));\n-      }\n-      return elements;\n-    }\n-\n-    UiObject lastFoundObj;\n-    final AndroidElement baseEl = this.getElement(key);\n-\n-    UiSelector tmp;\n-    int counter = 0;\n-    while (keepSearching) {\n-      if (baseEl == null) {\n-        Logger.debug(\"Element[\" + key + \"] is null: (\" + counter + \")\");\n-\n-        if (useIndex) {\n-          Logger.debug(\"  using index...\");\n-          tmp = sel.index(counter);\n-        } else {\n-          tmp = sel.instance(counter);\n-        }\n-\n-        Logger.debug(\"getElements tmp selector:\" + tmp.toString());\n-        lastFoundObj = new UiObject(tmp);\n-      } else {\n-        Logger.debug(\"Element[\" + key + \"] is \" + baseEl.getId() + \", counter: \"\n-            + counter);\n-        lastFoundObj = baseEl.getChild(sel.instance(counter));\n-      }\n-      counter++;\n-      if (lastFoundObj != null && lastFoundObj.exists()) {\n-        elements.add(addElement(lastFoundObj));\n-      } else {\n-        keepSearching = false;\n-      }\n-    }\n-    return elements;\n-  }\n-}\n\\ No newline at end of file"
    },
    {
      "sha": "1d3c9ff535f5f48344735448a6b8097b9eaba2f6",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/Bootstrap.java",
      "status": "removed",
      "additions": 0,
      "deletions": 27,
      "changes": 27,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/Bootstrap.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/Bootstrap.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/Bootstrap.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,27 +0,0 @@\n-package io.appium.android.bootstrap;\n-\n-import com.android.uiautomator.testrunner.UiAutomatorTestCase;\n-import io.appium.android.bootstrap.exceptions.SocketServerException;\n-import io.appium.android.bootstrap.handler.Find;\n-\n-/**\n- * The Bootstrap class runs the socket server.\n- *\n- */\n-public class Bootstrap extends UiAutomatorTestCase {\n-\n-  public void testRunServer() {\n-    Find.params = getParams();\n-    boolean disableAndroidWatchers = Boolean.parseBoolean(getParams().getString(\"disableAndroidWatchers\"));\n-\n-    SocketServer server;\n-    try {\n-      server = new SocketServer(4724);\n-      server.listenForever(disableAndroidWatchers);\n-    } catch (final SocketServerException e) {\n-      Logger.error(e.getError());\n-      System.exit(1);\n-    }\n-\n-  }\n-}"
    },
    {
      "sha": "f1ce9026d5202655fd005b921a9256471cecf8c4",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/CommandHandler.java",
      "status": "removed",
      "additions": 0,
      "deletions": 48,
      "changes": 48,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/CommandHandler.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/CommandHandler.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/CommandHandler.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,48 +0,0 @@\n-package io.appium.android.bootstrap;\n-\n-import android.graphics.Rect;\n-import com.android.uiautomator.core.UiDevice;\n-import com.android.uiautomator.core.UiObjectNotFoundException;\n-import io.appium.android.bootstrap.exceptions.InvalidCoordinatesException;\n-import io.appium.android.bootstrap.utils.Point;\n-import org.json.JSONException;\n-\n-import java.util.ArrayList;\n-\n-/**\n- * Base class for all handlers.\n- *\n- */\n-public abstract class CommandHandler {\n-\n-  /**\n-   * Abstract method that handlers must implement.\n-   *\n-   * @param command A {@link AndroidCommand}\n-   * @return {@link AndroidCommandResult}\n-   * @throws JSONException\n-   */\n-  public abstract AndroidCommandResult execute(final AndroidCommand command)\n-      throws JSONException;\n-\n-  /**\n-   * Returns a generic unknown error message along with your own message.\n-   *\n-   * @param msg\n-   * @return {@link AndroidCommandResult}\n-   */\n-  protected AndroidCommandResult getErrorResult(final String msg) {\n-    return new AndroidCommandResult(WDStatus.UNKNOWN_ERROR, msg);\n-  }\n-\n-  /**\n-   * Returns success along with the payload.\n-   *\n-   * @param value\n-   * @return {@link AndroidCommandResult}\n-   */\n-  protected AndroidCommandResult getSuccessResult(final Object value) {\n-    return new AndroidCommandResult(WDStatus.SUCCESS, value);\n-  }\n-\n-}"
    },
    {
      "sha": "2895a86e02d7216a4b6679fbcdc9432c89bbd2a6",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/Dynamic.java",
      "status": "removed",
      "additions": 0,
      "deletions": 211,
      "changes": 211,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/Dynamic.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/Dynamic.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/Dynamic.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,211 +0,0 @@\n-package io.appium.android.bootstrap;\n-\n-import com.android.uiautomator.core.UiSelector;\n-import org.json.JSONArray;\n-import org.json.JSONException;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-\n-// Constants from\n-// https://android.googlesource.com/platform/frameworks/testing/+/master/uiautomator/library/core-src/com/android/uiautomator/core/UiSelector.java\n-public class Dynamic {\n-  // static final int SELECTOR_NIL = 0; // nothing.\n-  /** text(String text) */\n-  private static final int SELECTOR_TEXT                 = 1;\n-  /** textStartsWith(String text) */\n-  private static final int SELECTOR_START_TEXT           = 2;\n-  /** textContains(String text) */\n-  private static final int SELECTOR_CONTAINS_TEXT        = 3;\n-  /** className(String className), className(Class<T> type) */\n-  private static final int SELECTOR_CLASS                = 4;\n-  /** description(String desc) */\n-  private static final int SELECTOR_DESCRIPTION          = 5;\n-  /** descriptionStartsWith(String desc) */\n-  private static final int SELECTOR_START_DESCRIPTION    = 6;\n-  /** descriptionContains(String desc) */\n-  private static final int SELECTOR_CONTAINS_DESCRIPTION = 7;\n-  /** index(final int index) */\n-  private static final int SELECTOR_INDEX                = 8;\n-  /** instance(final int instance) */\n-  private static final int SELECTOR_INSTANCE             = 9;\n-  /** enabled(boolean val) */\n-  private static final int SELECTOR_ENABLED              = 10;\n-  /** focused(boolean val) */\n-  private static final int SELECTOR_FOCUSED              = 11;\n-  /** focusable(boolean val) */\n-  private static final int SELECTOR_FOCUSABLE            = 12;\n-  /** scrollable(boolean val) */\n-  private static final int SELECTOR_SCROLLABLE           = 13;\n-  /** clickable(boolean val) */\n-  private static final int SELECTOR_CLICKABLE            = 14;\n-  /** checked(boolean val) */\n-  private static final int SELECTOR_CHECKED              = 15;\n-  /** selected(boolean val) */\n-  private static final int SELECTOR_SELECTED             = 16;\n-  // static final int SELECTOR_ID = 17; // nothing.\n-  /** packageName(String name) */\n-  private static final int SELECTOR_PACKAGE_NAME         = 18;\n-  // @formatter:off\n-// private  static final int SELECTOR_CHILD              = 19; // childSelector(UiSelector selector)\n-// private  static final int SELECTOR_CONTAINER          = 20; // containerSelector(UiSelector selector)\n-// private  static final int SELECTOR_PATTERN            = 21; // ! private ! patternSelector(UiSelector selector)\n-// private  static final int SELECTOR_PARENT             = 22; // fromParent(UiSelector selector)\n-// private  static final int SELECTOR_COUNT              = 23; // nothing.\n-  // @formatter:on\n-  /** longClickable(boolean val) */\n-  private static final int SELECTOR_LONG_CLICKABLE       = 24;\n-  /** textMatches(String regex) */\n-  private static final int SELECTOR_TEXT_REGEX           = 25;\n-  /** classNameMatches(String regex) */\n-  private static final int SELECTOR_CLASS_REGEX          = 26;\n-  /** descriptionMatches(String regex) */\n-  private static final int SELECTOR_DESCRIPTION_REGEX    = 27;\n-  /** packageNameMatches(String regex) */\n-  private static final int SELECTOR_PACKAGE_NAME_REGEX   = 28;\n-  /** resourceId(String id) */\n-  private static final int SELECTOR_RESOURCE_ID = 29;\n-  /** checkable(boolean val) */\n-  private static final int SELECTOR_CHECKABLE = 30;\n-  /** resourceIdMatches(String regex) */\n-  private static final int SELECTOR_RESOURCE_ID_REGEX = 31;\n-  // start internal methods at 100\n-  /**\n-   * Gets name (content desc) with a fall back to text if name is empty.\n-   * \n-   * getStringAttribute(\"name\")\n-   */\n-  private static final int GET_NAME                      = 100;\n-\n-  public static String finalize(final AndroidElement result, final int finalizer)\n-      throws Exception {\n-    // Invoke the int 100+ method on the resulting element.\n-    String value = \"\";\n-    switch (finalizer) {\n-      case GET_NAME:\n-        value = result.getStringAttribute(\"name\");\n-        break;\n-      default:\n-        break;\n-    }\n-\n-    return value;\n-  }\n-\n-  public static List<String> finalize(\n-      final List<AndroidElement> elements, final int finalizer)\n-      throws Exception {\n-    final ArrayList<String> results = new ArrayList<String>();\n-    for (final AndroidElement e : elements) {\n-      final String result = finalize(e, finalizer);\n-      Logger.debug(\"Adding: \" + result);\n-      results.add(result);\n-    }\n-    return results;\n-  }\n-\n-  private UiSelector s = new UiSelector();\n-\n-  public UiSelector get(final JSONArray array) throws JSONException {\n-    // Reset selector.\n-    s = new UiSelector();\n-    // Example pair.\n-    // Find everything containing the text sign.\n-    // [ [3, 'sign'] ]\n-    for (int a = 0; a < array.length(); a++) {\n-      final JSONArray pair = array.getJSONArray(a);\n-      final int int0 = pair.getInt(0);\n-      if (int0 >= 100) {\n-        // 100+ are finalizers only.\n-        continue;\n-      }\n-      final Object param1 = pair.get(1);\n-      Logger.debug(\"Updating \" + int0 + \", \" + param1);\n-      update(int0, param1);\n-    }\n-\n-    return s;\n-  }\n-\n-  private void update(final int method, final Object param) {\n-    switch (method) {\n-      case SELECTOR_TEXT:\n-        s = s.text((String) param);\n-        break;\n-      case SELECTOR_START_TEXT:\n-        s = s.textStartsWith((String) param);\n-        break;\n-      case SELECTOR_CONTAINS_TEXT:\n-        s = s.textContains((String) param);\n-        break;\n-      case SELECTOR_CLASS:\n-        s = s.className((String) param);\n-        break;\n-      case SELECTOR_DESCRIPTION:\n-        s = s.description((String) param);\n-        break;\n-      case SELECTOR_START_DESCRIPTION:\n-        s = s.descriptionStartsWith((String) param);\n-        break;\n-      case SELECTOR_CONTAINS_DESCRIPTION:\n-        s = s.descriptionContains((String) param);\n-        break;\n-      case SELECTOR_INDEX:\n-        s = s.index((Integer) param);\n-        break;\n-      case SELECTOR_INSTANCE:\n-        s = s.instance((Integer) param);\n-        break;\n-      case SELECTOR_ENABLED:\n-        s = s.enabled((Boolean) param);\n-        break;\n-      case SELECTOR_FOCUSED:\n-        s = s.focused((Boolean) param);\n-        break;\n-      case SELECTOR_FOCUSABLE:\n-        s = s.focusable((Boolean) param);\n-        break;\n-      case SELECTOR_SCROLLABLE:\n-        s = s.scrollable((Boolean) param);\n-        break;\n-      case SELECTOR_CLICKABLE:\n-        s = s.clickable((Boolean) param);\n-        break;\n-      case SELECTOR_CHECKED:\n-        s = s.checked((Boolean) param);\n-        break;\n-      case SELECTOR_SELECTED:\n-        s = s.selected((Boolean) param);\n-        break;\n-      case SELECTOR_PACKAGE_NAME:\n-        s = s.packageName((String) param);\n-        break;\n-      case SELECTOR_LONG_CLICKABLE:\n-        s = s.longClickable((Boolean) param);\n-        break;\n-      case SELECTOR_TEXT_REGEX:\n-        s = s.textMatches((String) param);\n-        break;\n-      case SELECTOR_CLASS_REGEX:\n-        s = s.classNameMatches((String) param);\n-        break;\n-      case SELECTOR_DESCRIPTION_REGEX:\n-        s = s.descriptionMatches((String) param);\n-        break;\n-      case SELECTOR_PACKAGE_NAME_REGEX:\n-        s = s.packageNameMatches((String) param);\n-        break;\n-      case SELECTOR_RESOURCE_ID:\n-        s = s.resourceId((String) param);\n-        break;\n-      case SELECTOR_CHECKABLE:\n-        s = s.checkable((Boolean) param);\n-        break;\n-      case SELECTOR_RESOURCE_ID_REGEX:\n-        s = s.resourceIdMatches((String) param);\n-        break;\n-      default:\n-        break;\n-    }\n-  }\n-}\n\\ No newline at end of file"
    },
    {
      "sha": "162e21cc6e60ff09d2a617b2107bb18d7208e0b8",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/Logger.java",
      "status": "removed",
      "additions": 0,
      "deletions": 23,
      "changes": 23,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/Logger.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/Logger.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/Logger.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,23 +0,0 @@\n-package io.appium.android.bootstrap;\n-\n-/**\n- * Log to standard out so that the Appium framework can pick it up.\n- *\n- */\n-public class Logger {\n-\n-  private static String prefix = \"[APPIUM-UIAUTO]\";\n-  private static String suffix = \"[/APPIUM-UIAUTO]\";\n-\n-  public static void debug(final String msg) {\n-    System.out.println(Logger.prefix + \" [debug] \" + msg + Logger.suffix);\n-  }\n-\n-  public static void error(final String msg) {\n-    System.out.println(Logger.prefix + \" [error] \" + msg + Logger.suffix);\n-  }\n-\n-  public static void info(final String msg) {\n-    System.out.println(Logger.prefix + \" [info] \" + msg + Logger.suffix);\n-  }\n-}"
    },
    {
      "sha": "c77593dfc442ab86f05834523308a1e3ac499b1b",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/OrientationEnum.java",
      "status": "removed",
      "additions": 0,
      "deletions": 33,
      "changes": 33,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/OrientationEnum.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/OrientationEnum.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/OrientationEnum.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,33 +0,0 @@\n-package io.appium.android.bootstrap;\n-\n-/**\n- * An enumeration that mirrors {@link android.view.Surface}.\n- * \n- */\n-public enum OrientationEnum {\n-  ROTATION_0(0), ROTATION_90(1), ROTATION_180(2), ROTATION_270(3);\n-\n-  public static OrientationEnum fromInteger(final int x) {\n-    switch (x) {\n-      case 0:\n-        return ROTATION_0;\n-      case 1:\n-        return ROTATION_90;\n-      case 2:\n-        return ROTATION_180;\n-      case 3:\n-        return ROTATION_270;\n-    }\n-    return null;\n-  }\n-\n-  private final int value;\n-\n-  private OrientationEnum(final int value) {\n-    this.value = value;\n-  }\n-\n-  public int getValue() {\n-    return value;\n-  }\n-}"
    },
    {
      "sha": "6f2c43fdf11b24d6126b731a75da179644a3d897",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/PositionHelper.java",
      "status": "removed",
      "additions": 0,
      "deletions": 74,
      "changes": 74,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/PositionHelper.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/PositionHelper.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/PositionHelper.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,74 +0,0 @@\n-package io.appium.android.bootstrap;\n-\n-import android.graphics.Rect;\n-import com.android.uiautomator.core.UiDevice;\n-import com.android.uiautomator.core.UiObjectNotFoundException;\n-import io.appium.android.bootstrap.exceptions.InvalidCoordinatesException;\n-import io.appium.android.bootstrap.utils.Point;\n-\n-public abstract class PositionHelper {\n-  \n-  /**\n-   * Given a position, it will return either the position based on percentage\n-   * (by passing in a double between 0 and 1) or absolute position based on the\n-   * coordinates entered.\n-   *\n-   * @param pointCoord The position to translate.\n-   * @param length Length of side to use for percentage positions.\n-   * @param offset Position offset.\n-   * @return\n-   */\n-  private static double translateCoordinate(double pointCoord, double length, double offset) {\n-    double translatedCoord = 0;\n-    \n-    if (pointCoord == 0) {\n-      translatedCoord = length * 0.5;\n-    } else if (Math.abs(pointCoord) > 0 && Math.abs(pointCoord) < 1) {\n-      translatedCoord = length * pointCoord;\n-    } else {\n-      translatedCoord = pointCoord;\n-    }\n-    \n-    return translatedCoord + offset;\n-  }\n-  \n-  /**\n-   * Translates coordinates relative to an element rectangle into absolute coordinates.\n-   *\n-   * @param point A point in relative coordinates.\n-   * @param displayRect The display rectangle to which the point is relative.\n-   * @param offsets X and Y values by which to offset the point. These are typically\n-   * the absolute coordinates of the display rectangle.\n-   * @param shouldCheckBounds Throw if the translated point is outside displayRect?\n-   * @return\n-   * @throws UiObjectNotFoundException\n-   * @throws InvalidCoordinatesException\n-   */\n-  public static Point getAbsolutePosition(final Point point, final Rect displayRect, \n-                                          final Point offsets, final boolean shouldCheckBounds)\n-      throws UiObjectNotFoundException, InvalidCoordinatesException {\n-    final Point absolutePosition = new Point();\n-    \n-    absolutePosition.x = translateCoordinate(point.x, displayRect.width(), offsets.x);\n-    absolutePosition.y = translateCoordinate(point.y, displayRect.height(), offsets.y);\n-    \n-    if (shouldCheckBounds &&\n-        !displayRect.contains(absolutePosition.x.intValue(), absolutePosition.y.intValue())) {\n-      throw new InvalidCoordinatesException(\"Coordinate \" + absolutePosition.toString() +\n-          \" is outside of element rect: \" + displayRect.toShortString());\n-    }\n-      \n-    return absolutePosition;\n-  }\n-\n-  public static Point getDeviceAbsPos(final Point point)\n-      throws UiObjectNotFoundException, InvalidCoordinatesException {\n-    final UiDevice d = UiDevice.getInstance();\n-    final Rect displayRect = new Rect(0, 0, d.getDisplayWidth(), d.getDisplayHeight());\n-    \n-    Logger.debug(\"Display bounds: \" + displayRect.toShortString());\n-    \n-    return getAbsolutePosition(point, displayRect, new Point(), true);\n-  }\n-  \n-}"
    },
    {
      "sha": "9865004c8ddb8c43160076eec24047fabe497030",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/SocketServer.java",
      "status": "removed",
      "additions": 0,
      "deletions": 187,
      "changes": 187,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/SocketServer.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/SocketServer.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/SocketServer.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,187 +0,0 @@\n-package io.appium.android.bootstrap;\n-\n-import com.android.uiautomator.common.UiWatchers;\n-import io.appium.android.bootstrap.exceptions.CommandTypeException;\n-import io.appium.android.bootstrap.exceptions.SocketServerException;\n-import io.appium.android.bootstrap.handler.UpdateStrings;\n-import io.appium.android.bootstrap.utils.TheWatchers;\n-import org.json.JSONException;\n-\n-import java.io.*;\n-import java.net.ServerSocket;\n-import java.net.Socket;\n-import java.util.Timer;\n-import java.util.TimerTask;\n-import java.util.NoSuchElementException;\n-\n-/**\n- * The SocketServer class listens on a specific port for commands from Appium,\n- * and then passes them on to the {@link AndroidCommandExecutor} class. It will\n- * continue to listen until the command is sent to exit.\n- */\n-class SocketServer {\n-\n-  ServerSocket   server;\n-  Socket         client;\n-  BufferedReader in;\n-  BufferedWriter out;\n-  boolean        keepListening;\n-  private final AndroidCommandExecutor executor;\n-  private final TheWatchers watchers = TheWatchers.getInstance();\n-  private final Timer       timer    = new Timer(\"WatchTimer\");\n-\n-  /**\n-   * Constructor\n-   *\n-   * @param port\n-   * @throws SocketServerException\n-   */\n-  public SocketServer(final int port) throws SocketServerException {\n-    keepListening = true;\n-    executor = new AndroidCommandExecutor();\n-    try {\n-      server = new ServerSocket(port);\n-      Logger.debug(\"Socket opened on port \" + port);\n-    } catch (final IOException e) {\n-      throw new SocketServerException(\n-          \"Could not start socket server listening on \" + port);\n-    }\n-\n-  }\n-\n-  /**\n-   * Constructs an @{link AndroidCommand} and returns it.\n-   *\n-   * @param data\n-   * @return @{link AndroidCommand}\n-   * @throws JSONException\n-   * @throws CommandTypeException\n-   */\n-  private AndroidCommand getCommand(final String data) throws JSONException,\n-      CommandTypeException {\n-    return new AndroidCommand(data);\n-  }\n-\n-  private StringBuilder input = new StringBuilder();\n-\n-  /**\n-   * When data is available on the socket, this method is called to run the\n-   * command or throw an error if it can't.\n-   *\n-   * @throws SocketServerException\n-   */\n-  private void handleClientData() throws SocketServerException {\n-    try {\n-      input.setLength(0); // clear\n-\n-      String res;\n-      int a;\n-      // (char) -1 is not equal to -1.\n-      // ready is checked to ensure the read call doesn't block.\n-      while ((a = in.read()) != -1 && in.ready()) {\n-        input.append((char) a);\n-      }\n-      String inputString = input.toString();\n-      Logger.debug(\"Got data from client: \" + inputString);\n-      try {\n-        AndroidCommand cmd = getCommand(inputString);\n-        Logger.debug(\"Got command of type \" + cmd.commandType().toString());\n-        res = runCommand(cmd);\n-        Logger.debug(\"Returning result: \" + res);\n-      } catch (final CommandTypeException e) {\n-        res = new AndroidCommandResult(WDStatus.UNKNOWN_ERROR, e.getMessage())\n-            .toString();\n-      } catch (final JSONException e) {\n-        res = new AndroidCommandResult(WDStatus.UNKNOWN_ERROR,\n-            \"Error running and parsing command\").toString();\n-      }\n-      out.write(res);\n-      out.flush();\n-    } catch (final IOException e) {\n-      throw new SocketServerException(\"Error processing data to/from socket (\"\n-          + e.toString() + \")\");\n-    }\n-  }\n-\n-  /**\n-   * Listens on the socket for data, and calls {@link #handleClientData()} when\n-   * it's available.\n-   *\n-   * @throws SocketServerException\n-   */\n-  public void listenForever(boolean disableAndroidWatchers) throws SocketServerException {\n-    Logger.debug(\"Appium Socket Server Ready\");\n-    UpdateStrings.loadStringsJson();\n-    if (disableAndroidWatchers) {\n-      Logger.debug(\"Skipped registering crash watchers.\");\n-    } else {\n-      dismissCrashAlerts();\n-    }\n-    final TimerTask updateWatchers = new TimerTask() {\n-      @Override\n-      public void run() {\n-        try {\n-          watchers.check();\n-        } catch (final Exception e) {\n-        }\n-      }\n-    };\n-    timer.scheduleAtFixedRate(updateWatchers, 100, 100);\n-\n-    try {\n-      client = server.accept();\n-      Logger.debug(\"Client connected\");\n-      in = new BufferedReader(new InputStreamReader(client.getInputStream(), \"UTF-8\"));\n-      out = new BufferedWriter(new OutputStreamWriter(client.getOutputStream(), \"UTF-8\"));\n-      while (keepListening) {\n-        handleClientData();\n-      }\n-      in.close();\n-      out.close();\n-      client.close();\n-      Logger.debug(\"Closed client connection\");\n-    } catch (final IOException e) {\n-      throw new SocketServerException(\"Error when client was trying to connect\");\n-    }\n-  }\n-\n-  public void dismissCrashAlerts() {\n-    try {\n-      new UiWatchers().registerAnrAndCrashWatchers();\n-      Logger.debug(\"Registered crash watchers.\");\n-    } catch (Exception e) {\n-      Logger.debug(\"Unable to register crash watchers.\");\n-    }\n-  }\n-\n-  /**\n-   * When {@link #handleClientData()} has valid data, this method delegates the\n-   * command.\n-   *\n-   * @param cmd\n-   *     AndroidCommand\n-   * @return Result\n-   */\n-  private String runCommand(final AndroidCommand cmd) {\n-    AndroidCommandResult res;\n-    if (cmd.commandType() == AndroidCommandType.SHUTDOWN) {\n-      keepListening = false;\n-      res = new AndroidCommandResult(WDStatus.SUCCESS, \"OK, shutting down\");\n-    } else if (cmd.commandType() == AndroidCommandType.ACTION) {\n-      try {\n-        res = executor.execute(cmd);\n-      } catch (final NoSuchElementException e) {\n-         res = new AndroidCommandResult(WDStatus.NO_SUCH_ELEMENT, e.getMessage());\n-      } catch (final Exception e) { // Here we catch all possible exceptions and return a JSON Wire Protocol UnknownError\n-                                    // This prevents exceptions from halting the bootstrap app\n-        Logger.debug(\"Command returned error:\" + e);\n-        res = new AndroidCommandResult(WDStatus.UNKNOWN_ERROR, e.getMessage());\n-      }\n-    } else {\n-      // this code should never be executed, here for future-proofing\n-      res = new AndroidCommandResult(WDStatus.UNKNOWN_ERROR,\n-          \"Unknown command type, could not execute!\");\n-    }\n-    return res.toString();\n-  }\n-}"
    },
    {
      "sha": "a5a7c8885f66e7a9675aa50b84fa833d69a20406",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/WDStatus.java",
      "status": "removed",
      "additions": 0,
      "deletions": 57,
      "changes": 57,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/WDStatus.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/WDStatus.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/WDStatus.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,57 +0,0 @@\n-package io.appium.android.bootstrap;\n-\n-//@formatter:off\n-/**\n- * An enumeration of status codes and messages to be relayed back to the Appium\n- * server.\n- * \n- */\n-public enum WDStatus {\n-  SUCCESS (0, \"The command executed successfully.\"), \n-  NO_SUCH_DRIVER (6, \"A session is either terminated or not started\"), \n-  NO_SUCH_ELEMENT (7, \"An element could not be located on the page using the given search parameters.\"), \n-  NO_SUCH_FRAME (8, \"A request to switch to a frame could not be satisfied because the frame could not be found.\"), \n-  UNKNOWN_COMMAND (9, \"The requested resource could not be found, or a request was received using an HTTP method that is not supported by the mapped resource.\"), \n-  STALE_ELEMENT_REFERENCE (10, \"An element command failed because the referenced element is no longer attached to the DOM.\"), \n-  ELEMENT_NOT_VISIBLE (11, \"An element command could not be completed because the element is not visible on the page.\"),\n-  INVALID_ELEMENT_STATE (12, \"An element command could not be completed because the element is in an invalid state (e.g. attempting to click a disabled element).\"), \n-  UNKNOWN_ERROR (13, \"An unknown server-side error occurred while processing the command.\"), \n-  ELEMENT_IS_NOT_SELECTABLE (15, \"An attempt was made to select an element that cannot be selected.\"), \n-  JAVASCRIPT_ERROR (17, \"An error occurred while executing user supplied JavaScript.\"), \n-  XPATH_LOOKUP_ERROR (19, \"An error occurred while searching for an element by XPath.\"), \n-  TIMEOUT (21, \"An operation did not complete before its timeout expired.\"),\n-  NO_SUCH_WINDOW (23, \"A request to switch to a different window could not be satisfied because the window could not be found.\"),\n-  INVALID_COOKIE_DOMAIN (24, \"An illegal attempt was made to set a cookie under a different domain than the current page.\"), \n-  UNABLE_TO_SET_COOKIE (25, \"A request to set a cookie's value could not be satisfied.\"), \n-  UNEXPECTED_ALERT_OPEN (26, \"A modal dialog was open, blocking this operation\"), \n-  NO_ALERT_OPEN_ERROR (27, \"An attempt was made to operate on a modal dialog when one was not open.\"), \n-  SCRIPT_TIMEOUT (28, \"A script did not complete before its timeout expired.\"),\n-  INVALID_ELEMENT_COORDINATES (29, \"The coordinates provided to an interactions operation are invalid.\"), \n-  IME_NOT_AVAILABLE (30, \"IME was not available.\"), \n-  IME_ENGINE_ACTIVATION_FAILED (31, \"An IME engine could not be started.\"), \n-  INVALID_SELECTOR (32, \"Argument was an invalid selector (e.g. XPath/CSS).\"), \n-  SESSION_NOT_CREATED_EXCEPTION (33, \"A new session could not be created.\"),\n-  MOVE_TARGET_OUT_OF_BOUNDS (34, \"Target provided for a move action is out of bounds.\"),\n-  JSON_DECODER_ERROR (35, \"Could not decode action/params of command, please check format!\");\n-  // formatter:on\n-  private final int    statusCode;\n-  private final String statusMessage;\n-\n-  private WDStatus(final int code) {\n-    statusCode = code;\n-    statusMessage = \"\";\n-  }\n-\n-  private WDStatus(final int code, final String message) {\n-    statusCode = code;\n-    statusMessage = message;\n-  }\n-\n-  public int code() {\n-    return statusCode;\n-  }\n-\n-  public String message() {\n-    return statusMessage;\n-  }\n-}\n\\ No newline at end of file"
    },
    {
      "sha": "c9c0e216edbf554bab12ddb9c5c8aad9f3c1c1ab",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/exceptions/CommandTypeException.java",
      "status": "removed",
      "additions": 0,
      "deletions": 15,
      "changes": 15,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/exceptions/CommandTypeException.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/exceptions/CommandTypeException.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/exceptions/CommandTypeException.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,15 +0,0 @@\n-package io.appium.android.bootstrap.exceptions;\n-\n-\n-@SuppressWarnings(\"serial\")\n-public class CommandTypeException extends Exception {\n-  /**\n-   * Exception for command type errors.\n-   *\n-   * @param msg\n-   *          A descriptive message describing the error.\n-   */\n-  public CommandTypeException(final String msg) {\n-    super(msg);\n-  }\n-}"
    },
    {
      "sha": "f215b94ca267aa479767d8f8fd9d1cf7774a3a07",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/exceptions/ElementNotFoundException.java",
      "status": "removed",
      "additions": 0,
      "deletions": 19,
      "changes": 19,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/exceptions/ElementNotFoundException.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/exceptions/ElementNotFoundException.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/exceptions/ElementNotFoundException.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,19 +0,0 @@\n-package io.appium.android.bootstrap.exceptions;\n-\n-/**\n- * An exception thrown when the element can not be found.\n- * \n- */\n-\n-@SuppressWarnings(\"serial\")\n-public class ElementNotFoundException extends Exception {\n-  final static String error = \"Could not find an element using supplied strategy. \";\n-\n-  public ElementNotFoundException() {\n-    super(error);\n-  }\n-\n-  public ElementNotFoundException(final String extra) {\n-    super(error + extra);\n-  }\n-}\n\\ No newline at end of file"
    },
    {
      "sha": "d1b01466c3326fee772b57404cf8c5b093105c9b",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/exceptions/InvalidCoordinatesException.java",
      "status": "removed",
      "additions": 0,
      "deletions": 14,
      "changes": 14,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/exceptions/InvalidCoordinatesException.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/exceptions/InvalidCoordinatesException.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/exceptions/InvalidCoordinatesException.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,14 +0,0 @@\n-package io.appium.android.bootstrap.exceptions;\n-\n-@SuppressWarnings(\"serial\")\n-public class InvalidCoordinatesException extends Exception {\n-  /**\n-   * An exception that is thrown when an invalid coordinate is used.\n-   *\n-   * @param msg\n-   *          A descriptive message describing the error.\n-   */\n-  public InvalidCoordinatesException(final String msg) {\n-    super(msg);\n-  }\n-}"
    },
    {
      "sha": "629a4001b0dea82f34266cc969f6d6e5f4de8906",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/exceptions/InvalidSelectorException.java",
      "status": "removed",
      "additions": 0,
      "deletions": 8,
      "changes": 8,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/exceptions/InvalidSelectorException.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/exceptions/InvalidSelectorException.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/exceptions/InvalidSelectorException.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,8 +0,0 @@\n-package io.appium.android.bootstrap.exceptions;\n-\n-/**\n- * If an invalid element selector is encountered\n- */\n-public class InvalidSelectorException extends Throwable {\n-  public InvalidSelectorException(String message) { super(message); }\n-}"
    },
    {
      "sha": "f0feba23e26f338177352958c9b44e4f438aa2fa",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/exceptions/InvalidStrategyException.java",
      "status": "removed",
      "additions": 0,
      "deletions": 17,
      "changes": 17,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/exceptions/InvalidStrategyException.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/exceptions/InvalidStrategyException.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/exceptions/InvalidStrategyException.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,17 +0,0 @@\n-package io.appium.android.bootstrap.exceptions;\n-\n-import io.appium.android.bootstrap.selector.Strategy;\n-\n-@SuppressWarnings(\"serial\")\n-public class InvalidStrategyException extends Exception {\n-  /**\n-   * An exception that is thrown when an invalid strategy is used.\n-   *\n-   * @param msg\n-   *          A descriptive message describing the error.\n-   * @see {@link Strategy}\n-   */\n-  public InvalidStrategyException(final String msg) {\n-    super(msg);\n-  }\n-}"
    },
    {
      "sha": "8a8abb40569222848342b4722c6de34895f2775e",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/exceptions/NoAttributeFoundException.java",
      "status": "removed",
      "additions": 0,
      "deletions": 15,
      "changes": 15,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/exceptions/NoAttributeFoundException.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/exceptions/NoAttributeFoundException.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/exceptions/NoAttributeFoundException.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,15 +0,0 @@\n-package io.appium.android.bootstrap.exceptions;\n-\n-@SuppressWarnings(\"serial\")\n-public class NoAttributeFoundException extends Exception {\n-  /**\n-   * This exception is thrown when the element doesn't have the attribute searched\n-   * for.\n-   *\n-   * @param attr\n-   *          The attribute searched for.\n-   */\n-  public NoAttributeFoundException(final String attr) {\n-    super(\"This element does not have the '\" + attr + \"' attribute\");\n-  }\n-}"
    },
    {
      "sha": "a8f4c69010abb6463b6d8789427f87d63f34821d",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/exceptions/PairCreationException.java",
      "status": "removed",
      "additions": 0,
      "deletions": 8,
      "changes": 8,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/exceptions/PairCreationException.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/exceptions/PairCreationException.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/exceptions/PairCreationException.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,8 +0,0 @@\n-package io.appium.android.bootstrap.exceptions;\n-\n-/**\n- * For trying to create a ClassInstancePair and something goes wrong.\n- */\n-public class PairCreationException extends Throwable {\n-  public PairCreationException(String msg) { super(msg); }\n-}"
    },
    {
      "sha": "e857f014c6255b53fcd202de7c3798fae7fddfe4",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/exceptions/SocketServerException.java",
      "status": "removed",
      "additions": 0,
      "deletions": 22,
      "changes": 22,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/exceptions/SocketServerException.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/exceptions/SocketServerException.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/exceptions/SocketServerException.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,22 +0,0 @@\n-package io.appium.android.bootstrap.exceptions;\n-\n-@SuppressWarnings(\"serial\")\n-public class SocketServerException extends Exception {\n-\n-  String reason;\n-\n-  /**\n-   * Exception for socket errors.\n-   *\n-   * @param msg\n-   *          A descriptive message describing the error.\n-   */\n-  public SocketServerException(final String msg) {\n-    super(msg);\n-    reason = msg;\n-  }\n-\n-  public String getError() {\n-    return reason;\n-  }\n-}"
    },
    {
      "sha": "fa177d036d2b26f404ed8900340046fd4bcab710",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/exceptions/UiSelectorSyntaxException.java",
      "status": "removed",
      "additions": 0,
      "deletions": 17,
      "changes": 17,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/exceptions/UiSelectorSyntaxException.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/exceptions/UiSelectorSyntaxException.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/exceptions/UiSelectorSyntaxException.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,17 +0,0 @@\n-package io.appium.android.bootstrap.exceptions;\n-\n-import io.appium.android.bootstrap.utils.UiSelectorParser;\n-\n-@SuppressWarnings(\"serial\")\n-public class UiSelectorSyntaxException extends Exception {\n-\n-  /**\n-   * An exception involving an {@link UiSelectorParser}.\n-   *\n-   * @param msg\n-   *          A descriptive message describing the error.\n-   */\n-  public UiSelectorSyntaxException(final String msg) {\n-    super(msg);\n-  }\n-}"
    },
    {
      "sha": "18082c0ab13a666dfdc644c540cc55851282669e",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/exceptions/UnallowedTagNameException.java",
      "status": "removed",
      "additions": 0,
      "deletions": 14,
      "changes": 14,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/exceptions/UnallowedTagNameException.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/exceptions/UnallowedTagNameException.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/exceptions/UnallowedTagNameException.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,14 +0,0 @@\n-package io.appium.android.bootstrap.exceptions;\n-\n-@SuppressWarnings(\"serial\")\n-public class UnallowedTagNameException extends Exception {\n-  /**\n-   * This exception is thrown when the tag name is not supported\n-   *\n-   * @param tag\n-   *          The tag that was searched for.\n-   */\n-  public UnallowedTagNameException(final String tag) {\n-    super(\"Tag name '\" + tag + \"' is not supported in Android\");\n-  }\n-}"
    },
    {
      "sha": "1049a1964d98e87125cbe01c80318930c28d129c",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/Clear.java",
      "status": "removed",
      "additions": 0,
      "deletions": 179,
      "changes": 179,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/Clear.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/Clear.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/Clear.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,179 +0,0 @@\n-package io.appium.android.bootstrap.handler;\n-\n-import android.graphics.Rect;\n-import android.os.SystemClock;\n-import android.view.InputDevice;\n-import android.view.KeyCharacterMap;\n-import android.view.KeyEvent;\n-import com.android.uiautomator.core.UiObject;\n-import com.android.uiautomator.core.UiObjectNotFoundException;\n-import com.android.uiautomator.core.UiSelector;\n-import io.appium.android.bootstrap.AndroidCommand;\n-import io.appium.android.bootstrap.AndroidCommandResult;\n-import io.appium.android.bootstrap.AndroidElement;\n-import io.appium.android.bootstrap.CommandHandler;\n-import io.appium.android.bootstrap.Logger;\n-import io.appium.android.bootstrap.WDStatus;\n-import io.appium.uiautomator.core.InteractionController;\n-import io.appium.uiautomator.core.UiAutomatorBridge;\n-import org.json.JSONException;\n-\n-import java.lang.reflect.InvocationTargetException;\n-\n-/**\n- * This handler is used to clear elements in the Android UI.\n- *\n- * Based on the element Id, clear that element.\n- *\n- * UiAutomator method clearText is flaky hence overriding it with custom implementation.\n- */\n-public class Clear extends CommandHandler {\n-\n-  /*\n-   * Trying to select entire text with correctLongClick and increasing time intervals.\n-   * Checking if element still has text in them and and if true falling back on UiAutomator clearText\n-   *\n-   * @param command The {@link AndroidCommand}\n-   *\n-   * @return {@link AndroidCommandResult}\n-   *\n-   * @throws JSONException\n-   *\n-   * @see io.appium.android.bootstrap.CommandHandler#execute(io.appium.android.\n-   * bootstrap.AndroidCommand)\n-   */\n-  @Override\n-  public AndroidCommandResult execute(final AndroidCommand command)\n-          throws JSONException {\n-    if (command.isElementCommand()) {\n-      try {\n-        final AndroidElement el = command.getElement();\n-\n-        // first, try to do native clearing\n-        Logger.debug(\"Attempting to clear using UiObject.clearText().\");\n-        el.clearText();\n-        if (el.getText().isEmpty()) {\n-          return getSuccessResult(true);\n-        }\n-\n-        // see if there is hint text\n-        if (hasHintText(el)) {\n-          Logger.debug(\"Text remains after clearing, \"\n-              + \"but it appears to be hint text.\");\n-          return getSuccessResult(true);\n-        }\n-\n-        // next try to select everything and delete\n-        Logger.debug(\"Clearing text not successful. Attempting to clear \" +\n-                \"by selecting all and deleting.\");\n-        if (selectAndDelete(el)) {\n-          return getSuccessResult(true);\n-        }\n-\n-        // see if there is hint text\n-        if (hasHintText(el)) {\n-          Logger.debug(\"Text remains after clearing, \"\n-              + \"but it appears to be hint text.\");\n-          return getSuccessResult(true);\n-        }\n-\n-        // finally try to send delete keys\n-        Logger.debug(\"Clearing text not successful. Attempting to clear \" +\n-                \"by sending delete keys.\");\n-        if (sendDeleteKeys(el)) {\n-          return getSuccessResult(true);\n-        }\n-\n-        if (!el.getText().isEmpty()) {\n-          // either there was a failure, or there is hint text\n-          if (hasHintText(el)) {\n-            Logger.debug(\"Text remains after clearing, \" +\n-                    \"but it appears to be hint text.\");\n-            return getSuccessResult(true);\n-          } else if (!el.getText().isEmpty()) {\n-            Logger.debug(\"Exhausted all means to clear text but '\" +\n-                    el.getText() + \"' remains.\");\n-            return getErrorResult(\"Clear text not successful.\");\n-          }\n-        }\n-        return getSuccessResult(true);\n-      } catch (final UiObjectNotFoundException e) {\n-        return new AndroidCommandResult(WDStatus.NO_SUCH_ELEMENT,\n-            e.getMessage());\n-      } catch (final Exception e) { // handle NullPointerException\n-        return getErrorResult(\"Unknown error clearing text\");\n-      }\n-    }\n-    return getErrorResult(\"Unknown error\");\n-  }\n-\n-  private boolean selectAndDelete(AndroidElement el)\n-      throws UiObjectNotFoundException, IllegalAccessException,\n-        InvocationTargetException, NoSuchMethodException {\n-    Rect rect = el.getVisibleBounds();\n-    // Trying to select entire text.\n-    TouchLongClick.correctLongClick(rect.left + 20, rect.centerY(), 2000);\n-    UiObject selectAll = new UiObject(new UiSelector().descriptionContains(\"Select all\"));\n-    if (selectAll.waitForExists(2000)) {\n-      selectAll.click();\n-    }\n-    // wait for the selection\n-    SystemClock.sleep(500);\n-    // delete it\n-    UiAutomatorBridge.getInstance().getInteractionController().sendKey(KeyEvent.KEYCODE_DEL, 0);\n-\n-    return el.getText().isEmpty();\n-  }\n-\n-  private boolean sendDeleteKeys(AndroidElement el)\n-      throws UiObjectNotFoundException, IllegalAccessException,\n-        InvocationTargetException, NoSuchMethodException {\n-    String tempTextHolder = \"\";\n-\n-    // Preventing infinite while loop.\n-    while (!el.getText().isEmpty() && !tempTextHolder.equalsIgnoreCase(el.getText())) {\n-      // Trying send delete keys after clicking in text box.\n-      el.click();\n-      // Sending delete keys asynchronously, both forward and backward\n-      for (int key : new int[] { KeyEvent.KEYCODE_DEL, KeyEvent.KEYCODE_FORWARD_DEL }) {\n-        tempTextHolder = el.getText();\n-        final int length = tempTextHolder.length();\n-        final long eventTime = SystemClock.uptimeMillis();\n-        KeyEvent deleteEvent = new KeyEvent(eventTime, eventTime, KeyEvent.ACTION_DOWN,\n-                key, 0, 0, KeyCharacterMap.VIRTUAL_KEYBOARD, 0, 0,\n-                InputDevice.SOURCE_KEYBOARD);\n-        for (int count = 0; count < length; count++) {\n-          UiAutomatorBridge.getInstance().injectInputEvent(deleteEvent, false);\n-        }\n-      }\n-    }\n-\n-    return el.getText().isEmpty();\n-  }\n-\n-  private boolean hasHintText(AndroidElement el)\n-      throws UiObjectNotFoundException, IllegalAccessException,\n-        InvocationTargetException, NoSuchMethodException {\n-    // to test if the remaining text is hint text, try sending a single\n-    // delete key and testing if there is any change.\n-    // ignore the off-chance that the delete silently fails and we get a false\n-    // positive.\n-    String currText = el.getText();\n-\n-    try {\n-      if (!el.getBoolAttribute(\"focused\")) {\n-        Logger.debug(\"Could not check for hint text because the element is not focused!\");\n-        return false;\n-      }\n-    } catch (final Exception e) {\n-      Logger.debug(\"Could not check for hint text: \" + e.getMessage());\n-      return false;\n-    }\n-\n-    InteractionController interactionController = UiAutomatorBridge.getInstance().getInteractionController();\n-    interactionController.sendKey(KeyEvent.KEYCODE_DEL, 0);\n-    interactionController.sendKey(KeyEvent.KEYCODE_FORWARD_DEL, 0);\n-\n-    return currText.equals(el.getText());\n-  }\n-}"
    },
    {
      "sha": "60bdc95cd1d24c0124e9caee727a7171e37f1d52",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/Click.java",
      "status": "removed",
      "additions": 0,
      "deletions": 64,
      "changes": 64,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/Click.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/Click.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/Click.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,64 +0,0 @@\n-package io.appium.android.bootstrap.handler;\n-\n-import com.android.uiautomator.core.UiDevice;\n-import com.android.uiautomator.core.UiObjectNotFoundException;\n-import io.appium.android.bootstrap.*;\n-import io.appium.android.bootstrap.exceptions.InvalidCoordinatesException;\n-import io.appium.android.bootstrap.utils.Point;\n-import org.json.JSONException;\n-\n-import java.util.ArrayList;\n-import java.util.Hashtable;\n-\n-/**\n- * This handler is used to click elements in the Android UI.\n- * \n- * Based on the element Id, click that element.\n- * \n- */\n-public class Click extends CommandHandler {\n-\n-  /*\n-   * @param command The {@link AndroidCommand}\n-   * \n-   * @return {@link AndroidCommandResult}\n-   * \n-   * @throws JSONException\n-   * \n-   * @see io.appium.android.bootstrap.CommandHandler#execute(io.appium.android.\n-   * bootstrap.AndroidCommand)\n-   */\n-  @Override\n-  public AndroidCommandResult execute(final AndroidCommand command)\n-      throws JSONException {\n-    if (command.isElementCommand()) {\n-      try {\n-        final AndroidElement el = command.getElement();\n-        el.click();\n-        return getSuccessResult(true);\n-      } catch (final UiObjectNotFoundException e) {\n-        return new AndroidCommandResult(WDStatus.NO_SUCH_ELEMENT,\n-            e.getMessage());\n-      } catch (final Exception e) { // handle NullPointerException\n-        return getErrorResult(\"Unknown error\");\n-      }\n-    } else {\n-      final Hashtable<String, Object> params = command.params();\n-      Point coords = new Point(Double.parseDouble(params.get(\"x\").toString()),\n-          Double.parseDouble(params.get(\"y\").toString()) );\n-      \n-      try {\n-        coords = PositionHelper.getDeviceAbsPos(coords);\n-      } catch (final UiObjectNotFoundException e) {\n-        return new AndroidCommandResult(WDStatus.NO_SUCH_ELEMENT,\n-            e.getMessage());\n-      } catch (final InvalidCoordinatesException e) {\n-        return new AndroidCommandResult(WDStatus.INVALID_ELEMENT_COORDINATES,\n-            e.getMessage());\n-      }\n-      \n-      final boolean res = UiDevice.getInstance().click(coords.x.intValue(), coords.y.intValue());\n-      return getSuccessResult(res);\n-    }\n-  }\n-}"
    },
    {
      "sha": "aa35c713339b9109bdc729146300e89d29a614aa",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/CompressedLayoutHierarchy.java",
      "status": "removed",
      "additions": 0,
      "deletions": 32,
      "changes": 32,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/CompressedLayoutHierarchy.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/CompressedLayoutHierarchy.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/CompressedLayoutHierarchy.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,32 +0,0 @@\n-package io.appium.android.bootstrap.handler;\n-\n-import io.appium.android.bootstrap.AndroidCommand;\n-import io.appium.android.bootstrap.AndroidCommandResult;\n-import io.appium.android.bootstrap.CommandHandler;\n-import io.appium.android.bootstrap.utils.NotImportantViews;\n-import org.json.JSONException;\n-\n-import java.util.Hashtable;\n-\n-/**\n- * Calls the uiautomator setCompressedLayoutHierarchy() function. If set to true, ignores some views during all Accessibility operations.\n- */\n-public class CompressedLayoutHierarchy extends CommandHandler {\n-  @Override\n-  public AndroidCommandResult execute(AndroidCommand command) throws JSONException {\n-\n-    boolean compressLayout;\n-\n-    try {\n-      final Hashtable<String, Object> params = command.params();\n-      compressLayout = (Boolean) params.get(\"compressLayout\");\n-      NotImportantViews.discard(compressLayout);\n-    } catch (ClassCastException  e) {\n-      return getErrorResult(\"must supply a 'compressLayout' boolean parameter\");\n-    } catch (Exception e) {\n-      return getErrorResult(\"error setting compressLayoutHierarchy \" + e.getMessage());\n-    }\n-\n-    return getSuccessResult(compressLayout);\n-  }\n-}"
    },
    {
      "sha": "78eb49c78b631fc2b7b4c31a6ca96fff49e11d06",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/Drag.java",
      "status": "removed",
      "additions": 0,
      "deletions": 148,
      "changes": 148,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/Drag.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/Drag.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/Drag.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,148 +0,0 @@\n-package io.appium.android.bootstrap.handler;\n-\n-import com.android.uiautomator.core.UiDevice;\n-import com.android.uiautomator.core.UiObjectNotFoundException;\n-import io.appium.android.bootstrap.*;\n-import io.appium.android.bootstrap.exceptions.InvalidCoordinatesException;\n-import io.appium.android.bootstrap.utils.Point;\n-import org.json.JSONException;\n-import org.json.JSONObject;\n-\n-import java.util.Hashtable;\n-\n-/**\n- * This handler is used to drag in the Android UI.\n- * \n- */\n-public class Drag extends CommandHandler {\n-\n-  /*\n-   * @param command The {@link AndroidCommand} used for this handler.\n-   * \n-   * @return {@link AndroidCommandResult}\n-   * \n-   * @throws JSONException\n-   * \n-   * @see io.appium.android.bootstrap.CommandHandler#execute(io.appium.android.\n-   * bootstrap.AndroidCommand)\n-   */\n-\n-  private static class DragArguments {\n-\n-    public AndroidElement el;\n-    public AndroidElement destEl;\n-    public final Point    start;\n-    public final Point    end;\n-    public final Integer  steps;\n-\n-    public DragArguments(final AndroidCommand command) throws JSONException {\n-\n-      final Hashtable<String, Object> params = command.params();\n-\n-      try {\n-        if (params.get(\"elementId\") != JSONObject.NULL) {\n-          el = command.getElement();\n-        }\n-      } catch (final Exception e) {\n-        el = null;\n-      }\n-\n-      try {\n-        if (params.get(\"destElId\") != JSONObject.NULL) {\n-          destEl = command.getDestElement();\n-        }\n-      } catch (final Exception e) {\n-        destEl = null;\n-      }\n-      start = new Point(params.get(\"startX\"), params.get(\"startY\"));\n-      end = new Point(params.get(\"endX\"), params.get(\"endY\"));\n-      steps = (Integer) params.get(\"steps\");\n-    }\n-  }\n-\n-  private AndroidCommandResult drag(final DragArguments dragArgs) {\n-    Point absStartPos = new Point();\n-    Point absEndPos = new Point();\n-    final UiDevice device = UiDevice.getInstance();\n-\n-    try {\n-      absStartPos = PositionHelper.getDeviceAbsPos(dragArgs.start);\n-      absEndPos = PositionHelper.getDeviceAbsPos(dragArgs.end);\n-    } catch (final InvalidCoordinatesException e) {\n-      return getErrorResult(e.getMessage());\n-    } catch (final UiObjectNotFoundException e) {\n-        return getErrorResult(e.getMessage());\n-      } \n-\n-    Logger.debug(\"Dragging from \" + absStartPos.toString() + \" to \"\n-        + absEndPos.toString() + \" with steps: \" + dragArgs.steps.toString());\n-    final boolean rv = device.drag(absStartPos.x.intValue(),\n-        absStartPos.y.intValue(), absEndPos.x.intValue(),\n-        absEndPos.y.intValue(), dragArgs.steps);\n-    if (!rv) {\n-      return getErrorResult(\"Drag did not complete successfully\");\n-    }\n-    return getSuccessResult(rv);\n-  }\n-\n-  private AndroidCommandResult dragElement(final DragArguments dragArgs) {\n-    Point absEndPos = new Point();\n-\n-    if (dragArgs.destEl == null) {\n-      try {\n-        absEndPos = PositionHelper.getDeviceAbsPos(dragArgs.end);\n-      } catch (final InvalidCoordinatesException e) {\n-        return getErrorResult(e.getMessage());\n-      } catch (final UiObjectNotFoundException e) {\n-        return getErrorResult(e.getMessage());\n-      } \n-\n-      Logger.debug(\"Dragging the element with id \" + dragArgs.el.getId()\n-          + \" to \" + absEndPos.toString() + \" with steps: \"\n-          + dragArgs.steps.toString());\n-      try {\n-        final boolean rv = dragArgs.el.dragTo(absEndPos.x.intValue(),\n-            absEndPos.y.intValue(), dragArgs.steps);\n-        if (!rv) {\n-          return getErrorResult(\"Drag did not complete successfully\");\n-        } else {\n-          return getSuccessResult(rv);\n-        }\n-      } catch (final UiObjectNotFoundException e) {\n-        return getErrorResult(\"Drag did not complete successfully\"\n-            + e.getMessage());\n-      }\n-    } else {\n-      Logger.debug(\"Dragging the element with id \" + dragArgs.el.getId()\n-          + \" to destination element with id \" + dragArgs.destEl.getId()\n-          + \" with steps: \" + dragArgs.steps);\n-      try {\n-        final boolean rv = dragArgs.el.dragTo(dragArgs.destEl.getUiObject(),\n-            dragArgs.steps);\n-        if (!rv) {\n-          return getErrorResult(\"Drag did not complete successfully\");\n-        } else {\n-          return getSuccessResult(rv);\n-        }\n-      } catch (final UiObjectNotFoundException e) {\n-        return getErrorResult(\"Drag did not complete successfully\"\n-            + e.getMessage());\n-      }\n-    }\n-\n-  }\n-\n-  @Override\n-  public AndroidCommandResult execute(final AndroidCommand command)\n-      throws JSONException {\n-    // DragArguments is created on each execute which prevents leaking state\n-    // across executions.\n-    final DragArguments dragArgs = new DragArguments(command);\n-\n-    if (command.isElementCommand()) {\n-      return dragElement(dragArgs);\n-    } else {\n-      return drag(dragArgs);\n-    }\n-  }\n-}"
    },
    {
      "sha": "15ca38a8f9d6374adcdd780d914858172355c82b",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/Find.java",
      "status": "removed",
      "additions": 0,
      "deletions": 407,
      "changes": 407,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/Find.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/Find.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/Find.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,407 +0,0 @@\n-package io.appium.android.bootstrap.handler;\n-\n-import com.android.uiautomator.core.UiObjectNotFoundException;\n-import com.android.uiautomator.core.UiSelector;\n-import android.os.Bundle;\n-import static io.appium.android.bootstrap.utils.API.API_18;\n-import io.appium.android.bootstrap.AndroidCommand;\n-import io.appium.android.bootstrap.AndroidCommandResult;\n-import io.appium.android.bootstrap.AndroidElement;\n-import io.appium.android.bootstrap.AndroidElementsHash;\n-import io.appium.android.bootstrap.CommandHandler;\n-import io.appium.android.bootstrap.Logger;\n-import io.appium.android.bootstrap.WDStatus;\n-import io.appium.android.bootstrap.exceptions.ElementNotFoundException;\n-import io.appium.android.bootstrap.exceptions.InvalidSelectorException;\n-import io.appium.android.bootstrap.exceptions.InvalidStrategyException;\n-import io.appium.android.bootstrap.exceptions.UiSelectorSyntaxException;\n-import io.appium.android.bootstrap.selector.Strategy;\n-import io.appium.android.bootstrap.utils.ClassInstancePair;\n-import io.appium.android.bootstrap.utils.ElementHelpers;\n-import io.appium.android.bootstrap.utils.ReflectionUtils;\n-import io.appium.android.bootstrap.utils.UiAutomatorParser;\n-import io.appium.android.bootstrap.utils.XMLHierarchy;\n-\n-import java.util.ArrayList;\n-import java.util.Hashtable;\n-import java.util.List;\n-import java.util.regex.Pattern;\n-\n-import javax.xml.parsers.ParserConfigurationException;\n-\n-import org.json.JSONArray;\n-import org.json.JSONException;\n-import org.json.JSONObject;\n-\n-/**\n- * This handler is used to find elements in the Android UI.\n- * <p/>\n- * Based on which {@link Strategy}, {@link UiSelector}, and optionally the\n- * contextId, the element Id or Ids are returned to the user.\n- */\n-public class Find extends CommandHandler {\n-  // These variables are expected to persist across executions.\n-  AndroidElementsHash  elements          = AndroidElementsHash.getInstance();\n-  static JSONObject    apkStrings        = null;\n-  public static Bundle params            = null;\n-  UiAutomatorParser    uiAutomatorParser = new UiAutomatorParser();\n-  /**\n-   * java_package : type / name\n-   *\n-   * com.example.Test:id/enter\n-   *\n-   * ^[a-zA-Z_] - Java package must start with letter or underscore\n-   * [a-zA-Z0-9\\._]* - Java package may contain letters, numbers, periods and\n-   * underscores : - : ends the package and starts the type [^\\/]+ - type is\n-   * made up of at least one non-/ characters \\\\/ - / ends the type and starts\n-   * the name [\\S]+$ - the name contains at least one non-space character and\n-   * then the line is ended\n-   */\n-  static final Pattern resourceIdRegex   = Pattern\n-                                             .compile(\"^[a-zA-Z_][a-zA-Z0-9\\\\._]*:[^\\\\/]+\\\\/[\\\\S]+$\");\n-\n-  /**\n-   * Get a JSONArray to represent a collection of AndroidElements\n-   *\n-   * @param els\n-   *          collection of AndroidElement objects\n-   * @return elements in the format which appium server returns\n-   * @throws JSONException\n-   */\n-  private JSONArray elementsToJSONArray(final List<AndroidElement> els)\n-      throws JSONException {\n-    final JSONArray resArray = new JSONArray();\n-    for (final AndroidElement el : els) {\n-      resArray.put(ElementHelpers.toJSON(el));\n-    }\n-    return resArray;\n-  }\n-\n-  /*\n-   * @param command The {@link AndroidCommand} used for this handler.\n-   *\n-   * @return {@link AndroidCommandResult}\n-   *\n-   * @throws JSONException\n-   *\n-   * @see io.appium.android.bootstrap.CommandHandler#execute(io.appium.android.\n-   * bootstrap.AndroidCommand)\n-   */\n-  @Override\n-  public AndroidCommandResult execute(final AndroidCommand command)\n-      throws JSONException {\n-    return execute(command, false);\n-  }\n-\n-  /**\n-   * execute implementation.\n-   *\n-   * @see io.appium.android.bootstrap.handler.Find#execute(io.appium.android.\n-   *      bootstrap.AndroidCommand)\n-   *\n-   * @param command\n-   *          The {@link AndroidCommand} used for this handler.\n-   *\n-   * @param isRetry\n-   *          Is this invocation a second attempt?\n-   *\n-   * @return {@link AndroidCommandResult}\n-   * @throws JSONException\n-   */\n-  private AndroidCommandResult execute(final AndroidCommand command,\n-      final boolean isRetry) throws JSONException {\n-    final Hashtable<String, Object> params = command.params();\n-\n-    // only makes sense on a device\n-    final Strategy strategy;\n-    try {\n-      strategy = Strategy.fromString((String) params.get(\"strategy\"));\n-    } catch (final InvalidStrategyException e) {\n-      return new AndroidCommandResult(WDStatus.UNKNOWN_COMMAND, e.getMessage());\n-    }\n-\n-    final String contextId = (String) params.get(\"context\");\n-    final String text = (String) params.get(\"selector\");\n-    final boolean multiple = (Boolean) params.get(\"multiple\");\n-\n-    Logger.debug(\"Finding \" + text + \" using \" + strategy.toString()\n-        + \" with the contextId: \" + contextId + \" multiple: \" + multiple);\n-    boolean found = false;\n-    try {\n-      Object result = null;\n-      final List<UiSelector> selectors = getSelectors(strategy, text, multiple);\n-      if (!multiple) {\n-        for (int i = 0; i < selectors.size() && !found; i++) {\n-          try {\n-            Logger.debug(\"Using: \" + selectors.get(i).toString());\n-            result = fetchElement(selectors.get(i), contextId);\n-            found = result != null;\n-          } catch (final ElementNotFoundException ignored) {\n-          }\n-        }\n-      } else {\n-        List<AndroidElement> foundElements = new ArrayList<AndroidElement>();\n-        for (final UiSelector sel : selectors) {\n-          // With multiple selectors, we expect that some elements may not\n-          // exist.\n-          try {\n-            Logger.debug(\"Using: \" + sel.toString());\n-            final List<AndroidElement> elementsFromSelector = fetchElements(\n-                sel, contextId);\n-            foundElements.addAll(elementsFromSelector);\n-          } catch (final UiObjectNotFoundException ignored) {\n-          }\n-        }\n-        if (strategy == Strategy.ANDROID_UIAUTOMATOR) {\n-          foundElements = ElementHelpers.dedupe(foundElements);\n-        }\n-        found = foundElements.size() > 0;\n-        result = elementsToJSONArray(foundElements);\n-      }\n-\n-      if (!found) {\n-        if (!isRetry) {\n-          Logger\n-              .debug(\"Failed to locate element. Clearing Accessibility cache and retrying.\");\n-          // some control updates fail to trigger AccessibilityEvents, resulting\n-          // in stale AccessibilityNodeInfo instances. In these cases, UIAutomator \n-          // will fail to locate visible elements. As a work-around, force clear \n-          // the AccessibilityInteractionClient's cache and search again. This \n-          // technique also appears to make Appium's searches conclude more quickly.\n-          // See Appium issue #4200 https://github.com/appium/appium/issues/4200\n-          if (ReflectionUtils.clearAccessibilityCache()) {\n-            return execute(command, true);\n-          }\n-        }\n-        // JSONWP spec does not return NoSuchElement\n-        if (!multiple) {\n-          // If there are no results and we've already retried, return an error.\n-          return new AndroidCommandResult(WDStatus.NO_SUCH_ELEMENT,\n-              \"No element found\");\n-        }\n-      }\n-\n-      return getSuccessResult(result);\n-    } catch (final InvalidStrategyException e) {\n-      return getErrorResult(e.getMessage());\n-    } catch (final UiSelectorSyntaxException e) {\n-      return new AndroidCommandResult(WDStatus.UNKNOWN_COMMAND, e.getMessage());\n-    } catch (final ElementNotFoundException e) {\n-      return new AndroidCommandResult(WDStatus.NO_SUCH_ELEMENT, e.getMessage());\n-    } catch (final ParserConfigurationException e) {\n-      return getErrorResult(\"Error parsing xml hierarchy dump: \"\n-          + e.getMessage());\n-    } catch (final InvalidSelectorException e) {\n-      return new AndroidCommandResult(WDStatus.INVALID_SELECTOR, e.getMessage());\n-    }\n-  }\n-\n-  /**\n-   * Get the element from the {@link AndroidElementsHash} and return the element\n-   * id using JSON.\n-   *\n-   * @param sel\n-   *          A UiSelector that targets the element to fetch.\n-   * @param contextId\n-   *          The Id of the element used for the context.\n-   * @return JSONObject\n-   * @throws JSONException\n-   * @throws ElementNotFoundException\n-   */\n-  private JSONObject fetchElement(final UiSelector sel, final String contextId)\n-      throws JSONException, ElementNotFoundException {\n-    final JSONObject res = new JSONObject();\n-    final AndroidElement el = elements.getElement(sel, contextId);\n-    return res.put(\"ELEMENT\", el.getId());\n-  }\n-\n-  /**\n-   * Get an array of AndroidElement objects from the {@link AndroidElementsHash}\n-   *\n-   * @param sel\n-   *          A UiSelector that targets the element to fetch.\n-   * @param contextId\n-   *          The Id of the element used for the context.\n-   * @return ArrayList<AndroidElement>\n-   * @throws UiObjectNotFoundException\n-   */\n-  private ArrayList<AndroidElement> fetchElements(final UiSelector sel,\n-      final String contextId) throws UiObjectNotFoundException {\n-\n-    return elements.getElements(sel, contextId);\n-  }\n-\n-  /**\n-   * Create and return a UiSelector based on the strategy, text, and how many\n-   * you want returned.\n-   *\n-   * @param strategy\n-   *          The {@link Strategy} used to search for the element.\n-   * @param text\n-   *          Any text used in the search (i.e. match, regex, etc.)\n-   * @param many\n-   *          Boolean that is either only one element (false), or many (true)\n-   * @return UiSelector\n-   * @throws InvalidStrategyException\n-   * @throws ElementNotFoundException\n-   */\n-  private List<UiSelector> getSelectors(final Strategy strategy,\n-      final String text, final boolean many) throws InvalidStrategyException,\n-      ElementNotFoundException, UiSelectorSyntaxException,\n-      ParserConfigurationException, InvalidSelectorException {\n-    final List<UiSelector> selectors = new ArrayList<UiSelector>();\n-    UiSelector sel = new UiSelector();\n-\n-    switch (strategy) {\n-      case XPATH:\n-        for (final UiSelector selector : getXPathSelectors(text, many)) {\n-          selectors.add(selector);\n-        }\n-        break;\n-      case CLASS_NAME:\n-        sel = sel.className(text);\n-        if (!many) {\n-          sel = sel.instance(0);\n-        }\n-        selectors.add(sel);\n-        break;\n-      case ID:\n-        // There are three types of ids on Android.\n-        // 1. resourceId (API >= 18)\n-        // 2. accessibility id (content description)\n-        // 3. strings.xml id\n-        //\n-        // If text is a resource id then only use the resource id selector.\n-        if (API_18) {\n-          if (resourceIdRegex.matcher(text).matches()) {\n-            sel = sel.resourceId(text);\n-            if (!many) {\n-              sel = sel.instance(0);\n-            }\n-            selectors.add(sel);\n-            break;\n-          } else {\n-            // not a fully qualified resource id\n-            // transform \"textToBeChanged\" into:\n-            // com.example.android.testing.espresso.BasicSample:id/textToBeChanged\n-            // android:id/textToBeChanged\n-            // either it's prefixed with the app package or the android system page.\n-            String pkg = (String) params.get(\"pkg\");\n-\n-            if (pkg != null) {\n-              sel = sel.resourceId(pkg + \":id/\" + text);\n-              if (!many) {\n-                sel = sel.instance(0);\n-              }\n-              selectors.add(sel);\n-            }\n-\n-            sel = sel.resourceId(\"android:id/\" + text);\n-            if (!many) {\n-              sel = sel.instance(0);\n-            }\n-            selectors.add(sel);\n-          }\n-        }\n-\n-        // must create a new selector or the selector from\n-        // the resourceId search will cause problems\n-        sel = new UiSelector().description(text);\n-        if (!many) {\n-          sel = sel.instance(0);\n-        }\n-        selectors.add(sel);\n-\n-        // resource id and content description failed to match\n-        // so the strings.xml selector is used\n-        final UiSelector stringsXmlSelector = stringsXmlId(many, text);\n-        if (stringsXmlSelector != null) {\n-          selectors.add(stringsXmlSelector);\n-        }\n-        break;\n-      case ACCESSIBILITY_ID:\n-        sel = sel.description(text);\n-        if (!many) {\n-          sel = sel.instance(0);\n-        }\n-        selectors.add(sel);\n-        break;\n-      case NAME:\n-        sel = new UiSelector().description(text);\n-        if (!many) {\n-          sel = sel.instance(0);\n-        }\n-        selectors.add(sel);\n-\n-        sel = new UiSelector().text(text);\n-        if (!many) {\n-          sel = sel.instance(0);\n-        }\n-        selectors.add(sel);\n-        break;\n-      case ANDROID_UIAUTOMATOR:\n-        List<UiSelector> parsedSelectors;\n-        try {\n-          parsedSelectors = uiAutomatorParser.parse(text);\n-        } catch (final UiSelectorSyntaxException e) {\n-          throw new UiSelectorSyntaxException(\n-              \"Could not parse UiSelector argument: \" + e.getMessage());\n-        }\n-\n-        for (final UiSelector selector : parsedSelectors) {\n-          selectors.add(selector);\n-        }\n-\n-        break;\n-      case LINK_TEXT:\n-      case PARTIAL_LINK_TEXT:\n-      case CSS_SELECTOR:\n-      default:\n-        throw new InvalidStrategyException(\"Sorry, we don't support the '\"\n-            + strategy.getStrategyName() + \"' locator strategy yet\");\n-    }\n-\n-    return selectors;\n-  }\n-\n-  /** returns List of UiSelectors for an xpath expression **/\n-  private List<UiSelector> getXPathSelectors(final String expression,\n-      final boolean multiple) throws ElementNotFoundException,\n-      ParserConfigurationException, InvalidSelectorException {\n-    final List<UiSelector> selectors = new ArrayList<UiSelector>();\n-\n-    final ArrayList<ClassInstancePair> pairs = XMLHierarchy\n-        .getClassInstancePairs(expression);\n-\n-    if (!multiple) {\n-      if (pairs.size() == 0) {\n-        throw new ElementNotFoundException();\n-      }\n-      selectors.add(pairs.get(0).getSelector());\n-    } else {\n-      for (final ClassInstancePair pair : pairs) {\n-        selectors.add(pair.getSelector());\n-      }\n-    }\n-\n-    return selectors;\n-  }\n-\n-  /** Returns null on failure to match **/\n-  private UiSelector stringsXmlId(final boolean many, final String text) {\n-    UiSelector sel = null;\n-    try {\n-      final String xmlValue = apkStrings.getString(text);\n-      if (xmlValue == null || xmlValue.isEmpty()) {\n-        return null;\n-      }\n-      sel = new UiSelector().text(xmlValue);\n-      if (!many) {\n-        sel = sel.instance(0);\n-      }\n-    } catch (final JSONException e) {\n-    } finally {\n-      return sel;\n-    }\n-  }\n-}"
    },
    {
      "sha": "3a54df4eaaa1ea8912420aab300d032c7ff56cb9",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/Flick.java",
      "status": "removed",
      "additions": 0,
      "deletions": 112,
      "changes": 112,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/Flick.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/Flick.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/Flick.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,112 +0,0 @@\n-package io.appium.android.bootstrap.handler;\n-\n-import com.android.uiautomator.core.UiDevice;\n-import com.android.uiautomator.core.UiObjectNotFoundException;\n-import io.appium.android.bootstrap.*;\n-import io.appium.android.bootstrap.exceptions.InvalidCoordinatesException;\n-import io.appium.android.bootstrap.utils.Point;\n-import org.json.JSONException;\n-\n-import java.util.Hashtable;\n-\n-/**\n- * This handler is used to flick elements in the Android UI.\n- * \n- * Based on the element Id, flick that element.\n- * \n- */\n-public class Flick extends CommandHandler {\n-\n-  private Point calculateEndPoint(final Point start, final Integer xSpeed,\n-      final Integer ySpeed) {\n-    final UiDevice d = UiDevice.getInstance();\n-    final Point end = new Point();\n-    final double speedRatio = (double) xSpeed / ySpeed;\n-    double xOff;\n-    double yOff;\n-\n-    final double value = Math.min(d.getDisplayHeight(), d.getDisplayWidth());\n-\n-    if (speedRatio < 1) {\n-      yOff = value / 4;\n-      xOff = value / 4 * speedRatio;\n-    } else {\n-      xOff = value / 4;\n-      yOff = value / 4 / speedRatio;\n-    }\n-\n-    xOff = Integer.signum(xSpeed) * xOff;\n-    yOff = Integer.signum(ySpeed) * yOff;\n-\n-    end.x = start.x + xOff;\n-    end.y = start.y + yOff;\n-    return end;\n-  }\n-\n-  /*\n-   * @param command The {@link AndroidCommand} used for this handler.\n-   * \n-   * @return {@link AndroidCommandResult}\n-   * \n-   * @throws JSONException\n-   * \n-   * @see io.appium.android.bootstrap.CommandHandler#execute(io.appium.android.\n-   * bootstrap.AndroidCommand)\n-   */\n-  @Override\n-  public AndroidCommandResult execute(final AndroidCommand command)\n-      throws JSONException {\n-    Point start = new Point(0.5, 0.5);\n-    Point end = new Point();\n-    Double steps;\n-\n-    final Hashtable<String, Object> params = command.params();\n-    final UiDevice d = UiDevice.getInstance();\n-\n-    if (command.isElementCommand()) {\n-      AndroidElement el;\n-      try {\n-        el = command.getElement();\n-        start = el.getAbsolutePosition(start);\n-        final Integer xoffset = (Integer) params.get(\"xoffset\");\n-        final Integer yoffset = (Integer) params.get(\"yoffset\");\n-        final Integer speed = (Integer) params.get(\"speed\");\n-\n-        steps = 1250.0 / speed + 1;\n-        end.x = start.x + xoffset;\n-        end.y = start.y + yoffset;\n-\n-      } catch (final Exception e) {\n-        return getErrorResult(e.getMessage());\n-      }\n-    } else {\n-      try {\n-        final Integer xSpeed = (Integer) params.get(\"xSpeed\");\n-        final Integer ySpeed = (Integer) params.get(\"ySpeed\");\n-\n-        final Double speed = Math.min(1250.0,\n-            Math.sqrt(xSpeed * xSpeed + ySpeed * ySpeed));\n-        steps = 1250.0 / speed + 1;\n-\n-        start = PositionHelper.getDeviceAbsPos(start);\n-        end = calculateEndPoint(start, xSpeed, ySpeed);\n-      } catch (final InvalidCoordinatesException e) {\n-        return getErrorResult(e.getMessage());\n-      } catch (final UiObjectNotFoundException e) {\n-        return getErrorResult(e.getMessage());\n-      } \n-    }\n-\n-    steps = Math.abs(steps);\n-    Logger.debug(\"Flicking from \" + start.toString() + \" to \" + end.toString()\n-        + \" with steps: \" + steps.intValue());\n-    final boolean res = d.swipe(start.x.intValue(), start.y.intValue(),\n-        end.x.intValue(), end.y.intValue(), steps.intValue());\n-\n-    if (res) {\n-      return getSuccessResult(res);\n-    } else {\n-      return getErrorResult(\"Flick did not complete successfully\");\n-    }\n-  }\n-}"
    },
    {
      "sha": "82cfcde8077dad8f0e292362c1f4f842e271d900",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/GetAttribute.java",
      "status": "removed",
      "additions": 0,
      "deletions": 56,
      "changes": 56,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/GetAttribute.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/GetAttribute.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/GetAttribute.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,56 +0,0 @@\n-package io.appium.android.bootstrap.handler;\n-\n-import com.android.uiautomator.core.UiObjectNotFoundException;\n-import io.appium.android.bootstrap.*;\n-import io.appium.android.bootstrap.exceptions.NoAttributeFoundException;\n-import org.json.JSONException;\n-\n-import java.util.Hashtable;\n-\n-/**\n- * This handler is used to get an attribute of an element.\n- *\n- */\n-public class GetAttribute extends CommandHandler {\n-\n-  /*\n-   * @param command The {@link AndroidCommand} used for this handler.\n-   *\n-   * @return {@link AndroidCommandResult}\n-   *\n-   * @throws JSONException\n-   *\n-   * @see io.appium.android.bootstrap.CommandHandler#execute(io.appium.android.\n-   * bootstrap.AndroidCommand)\n-   */\n-  @Override\n-  public AndroidCommandResult execute(final AndroidCommand command)\n-      throws JSONException {\n-    if (command.isElementCommand()) {\n-      // only makes sense on an element\n-      final Hashtable<String, Object> params = command.params();\n-\n-      try {\n-        final AndroidElement el = command.getElement();\n-        final String attr = params.get(\"attribute\").toString();\n-        if (attr.equals(\"name\") || attr.equals(\"text\")\n-            || attr.equals(\"className\") || attr.equals(\"resourceId\")) {\n-          return getSuccessResult(el.getStringAttribute(attr));\n-        } else {\n-          return getSuccessResult(String.valueOf(el.getBoolAttribute(attr)));\n-        }\n-      } catch (final NoAttributeFoundException e) {\n-        return new AndroidCommandResult(WDStatus.NO_SUCH_ELEMENT,\n-            e.getMessage());\n-      } catch (final UiObjectNotFoundException e) {\n-        return new AndroidCommandResult(WDStatus.NO_SUCH_ELEMENT,\n-            e.getMessage());\n-      } catch (final Exception e) { // el is null\n-        return new AndroidCommandResult(WDStatus.NO_SUCH_ELEMENT,\n-            e.getMessage());\n-      }\n-    } else {\n-      return getErrorResult(\"Unable to get attribute without an element.\");\n-    }\n-  }\n-}"
    },
    {
      "sha": "90c43d587dc4f1ebd320d56e837b13257f82a6ee",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/GetDataDir.java",
      "status": "removed",
      "additions": 0,
      "deletions": 28,
      "changes": 28,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/GetDataDir.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/GetDataDir.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/GetDataDir.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,28 +0,0 @@\n-package io.appium.android.bootstrap.handler;\n-\n-import android.os.Environment;\n-import io.appium.android.bootstrap.AndroidCommand;\n-import io.appium.android.bootstrap.AndroidCommandResult;\n-import io.appium.android.bootstrap.CommandHandler;\n-\n-/**\n- * This handler is used to get the data dir.\n- * \n- */\n-public class GetDataDir extends CommandHandler {\n-\n-  /*\n-   * @param command The {@link AndroidCommand} used for this handler.\n-   * \n-   * @return {@link AndroidCommandResult}\n-   * \n-   * @throws JSONException\n-   * \n-   * @see io.appium.android.bootstrap.CommandHandler#execute(io.appium.android.\n-   * bootstrap.AndroidCommand)\n-   */\n-  @Override\n-  public AndroidCommandResult execute(final AndroidCommand command) {\n-    return getSuccessResult(Environment.getDataDirectory());\n-  }\n-}"
    },
    {
      "sha": "8f13fd1402284830f26d580ca1c12d84d9f279c4",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/GetDeviceSize.java",
      "status": "removed",
      "additions": 0,
      "deletions": 43,
      "changes": 43,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/GetDeviceSize.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/GetDeviceSize.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/GetDeviceSize.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,43 +0,0 @@\n-package io.appium.android.bootstrap.handler;\n-\n-import com.android.uiautomator.core.UiDevice;\n-import io.appium.android.bootstrap.AndroidCommand;\n-import io.appium.android.bootstrap.AndroidCommandResult;\n-import io.appium.android.bootstrap.CommandHandler;\n-import org.json.JSONException;\n-import org.json.JSONObject;\n-\n-/**\n- * This handler is used to get the size of the screen.\n- *\n- */\n-public class GetDeviceSize extends CommandHandler {\n-\n-  /*\n-   * @param command The {@link AndroidCommand} used for this handler.\n-   *\n-   * @return {@link AndroidCommandResult}\n-   *\n-   * @throws JSONException\n-   *\n-   * @see io.appium.android.bootstrap.CommandHandler#execute(io.appium.android.\n-   * bootstrap.AndroidCommand)\n-   */\n-  @Override\n-  public AndroidCommandResult execute(final AndroidCommand command) {\n-    if (!command.isElementCommand()) {\n-      // only makes sense on a device\n-      final UiDevice d = UiDevice.getInstance();\n-      final JSONObject res = new JSONObject();\n-      try {\n-        res.put(\"height\", d.getDisplayHeight());\n-        res.put(\"width\", d.getDisplayWidth());\n-      } catch (final JSONException e) {\n-        getErrorResult(\"Error serializing height/width data into JSON\");\n-      }\n-      return getSuccessResult(res);\n-    } else {\n-      return getErrorResult(\"Unable to get device size on an element.\");\n-    }\n-  }\n-}"
    },
    {
      "sha": "e52da204468ef8fec5753f88ba64af28c6270a01",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/GetLocation.java",
      "status": "removed",
      "additions": 0,
      "deletions": 42,
      "changes": 42,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/GetLocation.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/GetLocation.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/GetLocation.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,42 +0,0 @@\n-package io.appium.android.bootstrap.handler;\n-\n-import android.graphics.Rect;\n-import io.appium.android.bootstrap.*;\n-import org.json.JSONException;\n-import org.json.JSONObject;\n-\n-/**\n- * This handler is used to get the text of elements that support it.\n- * \n- */\n-public class GetLocation extends CommandHandler {\n-\n-  /*\n-   * @param command The {@link AndroidCommand} used for this handler.\n-   * \n-   * @return {@link AndroidCommandResult}\n-   * \n-   * @throws JSONException\n-   * \n-   * @see io.appium.android.bootstrap.CommandHandler#execute(io.appium.android.\n-   * bootstrap.AndroidCommand)\n-   */\n-  @Override\n-  public AndroidCommandResult execute(final AndroidCommand command)\n-      throws JSONException {\n-    if (!command.isElementCommand()) {\n-      return getErrorResult(\"Unable to get location without an element.\");\n-    }\n-\n-    try {\n-      final JSONObject res = new JSONObject();\n-      final AndroidElement el = command.getElement();\n-      final Rect bounds = el.getBounds();\n-      res.put(\"x\", bounds.left);\n-      res.put(\"y\", bounds.top);\n-      return getSuccessResult(res);\n-    } catch (final Exception e) {\n-      return new AndroidCommandResult(WDStatus.NO_SUCH_ELEMENT, e.getMessage());\n-    }\n-  }\n-}"
    },
    {
      "sha": "729a3fc9a7c765558111160a0e1c6042fbbf8292",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/GetName.java",
      "status": "removed",
      "additions": 0,
      "deletions": 39,
      "changes": 39,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/GetName.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/GetName.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/GetName.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,39 +0,0 @@\n-package io.appium.android.bootstrap.handler;\n-\n-import com.android.uiautomator.core.UiObjectNotFoundException;\n-import io.appium.android.bootstrap.*;\n-import org.json.JSONException;\n-\n-/**\n- * This handler is used to get the text of elements that support it.\n- * \n- */\n-public class GetName extends CommandHandler {\n-\n-  /*\n-   * @param command The {@link AndroidCommand} used for this handler.\n-   * \n-   * @return {@link AndroidCommandResult}\n-   * \n-   * @throws JSONException\n-   * \n-   * @see io.appium.android.bootstrap.CommandHandler#execute(io.appium.android.\n-   * bootstrap.AndroidCommand)\n-   */\n-  @Override\n-  public AndroidCommandResult execute(final AndroidCommand command)\n-      throws JSONException {\n-    if (!command.isElementCommand()) {\n-      return getErrorResult(\"Unable to get name without an element.\");\n-    }\n-\n-    try {\n-      final AndroidElement el = command.getElement();\n-      return getSuccessResult(el.getContentDesc());\n-    } catch (final UiObjectNotFoundException e) {\n-      return new AndroidCommandResult(WDStatus.NO_SUCH_ELEMENT, e.getMessage());\n-    } catch (final Exception e) { // handle NullPointerException\n-      return getErrorResult(\"Unknown error\");\n-    }\n-  }\n-}"
    },
    {
      "sha": "eb97079b27471459452b3e606c932fbbb425966a",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/GetSize.java",
      "status": "removed",
      "additions": 0,
      "deletions": 48,
      "changes": 48,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/GetSize.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/GetSize.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/GetSize.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,48 +0,0 @@\n-package io.appium.android.bootstrap.handler;\n-\n-import android.graphics.Rect;\n-import com.android.uiautomator.core.UiObjectNotFoundException;\n-import io.appium.android.bootstrap.*;\n-import org.json.JSONException;\n-import org.json.JSONObject;\n-\n-/**\n- * This handler is used to get the size of elements that support it.\n- * \n- */\n-public class GetSize extends CommandHandler {\n-\n-  /*\n-   * @param command The {@link AndroidCommand} used for this handler.\n-   * \n-   * @return {@link AndroidCommandResult}\n-   * \n-   * @throws JSONException\n-   * \n-   * @see io.appium.android.bootstrap.CommandHandler#execute(io.appium.android.\n-   * bootstrap.AndroidCommand)\n-   */\n-  @Override\n-  public AndroidCommandResult execute(final AndroidCommand command)\n-      throws JSONException {\n-\n-    if (command.isElementCommand()) {\n-      // Only makes sense on an element\n-      final JSONObject res = new JSONObject();\n-      try {\n-        final AndroidElement el = command.getElement();\n-        final Rect rect = el.getBounds();\n-        res.put(\"width\", rect.width());\n-        res.put(\"height\", rect.height());\n-      } catch (final UiObjectNotFoundException e) {\n-        return new AndroidCommandResult(WDStatus.NO_SUCH_ELEMENT,\n-            e.getMessage());\n-      } catch (final Exception e) { // handle NullPointerException\n-        return getErrorResult(\"Unknown error\");\n-      }\n-      return getSuccessResult(res);\n-    } else {\n-      return getErrorResult(\"Unable to get text without an element.\");\n-    }\n-  }\n-}"
    },
    {
      "sha": "1b0202a158f1bd35c6333b808e6c2b97f3e78ac6",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/GetText.java",
      "status": "removed",
      "additions": 0,
      "deletions": 41,
      "changes": 41,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/GetText.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/GetText.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/GetText.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,41 +0,0 @@\n-package io.appium.android.bootstrap.handler;\n-\n-import com.android.uiautomator.core.UiObjectNotFoundException;\n-import io.appium.android.bootstrap.*;\n-import org.json.JSONException;\n-\n-/**\n- * This handler is used to get the text of elements that support it.\n- * \n- */\n-public class GetText extends CommandHandler {\n-\n-  /*\n-   * @param command The {@link AndroidCommand} used for this handler.\n-   * \n-   * @return {@link AndroidCommandResult}\n-   * \n-   * @throws JSONException\n-   * \n-   * @see io.appium.android.bootstrap.CommandHandler#execute(io.appium.android.\n-   * bootstrap.AndroidCommand)\n-   */\n-  @Override\n-  public AndroidCommandResult execute(final AndroidCommand command)\n-      throws JSONException {\n-    if (command.isElementCommand()) {\n-      // Only makes sense on an element\n-      try {\n-        final AndroidElement el = command.getElement();\n-        return getSuccessResult(el.getText());\n-      } catch (final UiObjectNotFoundException e) {\n-        return new AndroidCommandResult(WDStatus.NO_SUCH_ELEMENT,\n-            e.getMessage());\n-      } catch (final Exception e) { // handle NullPointerException\n-        return getErrorResult(\"Unknown error\");\n-      }\n-    } else {\n-      return getErrorResult(\"Unable to get text without an element.\");\n-    }\n-  }\n-}"
    },
    {
      "sha": "f99127b87e0532575b987b3e42202aae5c5a39bc",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/LongPressKeyCode.java",
      "status": "removed",
      "additions": 0,
      "deletions": 67,
      "changes": 67,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/LongPressKeyCode.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/LongPressKeyCode.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/LongPressKeyCode.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,67 +0,0 @@\n-package io.appium.android.bootstrap.handler;\n-\n-import android.os.SystemClock;\n-import android.view.InputDevice;\n-import android.view.KeyCharacterMap;\n-import android.view.KeyEvent;\n-import io.appium.android.bootstrap.AndroidCommand;\n-import io.appium.android.bootstrap.AndroidCommandResult;\n-import io.appium.android.bootstrap.CommandHandler;\n-import io.appium.uiautomator.core.InteractionController;\n-import io.appium.uiautomator.core.UiAutomatorBridge;\n-import org.json.JSONException;\n-import org.json.JSONObject;\n-\n-import java.util.Hashtable;\n-\n-/**\n- * This handler is used to LongPressKeyCode.\n- * \n- */\n-public class LongPressKeyCode extends CommandHandler {\n-  public Integer keyCode;\n-\n-  public Integer metaState;\n-\n-  /*\n-   * @param command The {@link AndroidCommand} used for this handler.\n-   * \n-   * @return {@link AndroidCommandResult}\n-   * \n-   * @throws JSONException\n-   * \n-   * @see io.appium.android.bootstrap.CommandHandler#execute(io.appium.android.\n-   * bootstrap.AndroidCommand)\n-   */\n-  @Override\n-  public AndroidCommandResult execute(final AndroidCommand command)\n-      throws JSONException {\n-    try {\n-      InteractionController interactionController = UiAutomatorBridge.getInstance().getInteractionController();\n-\n-      final Hashtable<String, Object> params = command.params();\n-      keyCode = (Integer) params.get(\"keycode\");\n-      metaState = params.get(\"metastate\") != JSONObject.NULL ? (Integer) params\n-          .get(\"metastate\") : 0;\n-      final long eventTime = SystemClock.uptimeMillis();\n-      // Send an initial down event\n-      final KeyEvent downEvent = new KeyEvent(eventTime, eventTime,\n-          KeyEvent.ACTION_DOWN, keyCode, 0, metaState,\n-          KeyCharacterMap.VIRTUAL_KEYBOARD, 0, 0, InputDevice.SOURCE_KEYBOARD);\n-      if (interactionController.injectEventSync(downEvent)) {\n-        // Send a repeat event. This will cause the FLAG_LONG_PRESS to be set.\n-        final KeyEvent repeatEvent = KeyEvent.changeTimeRepeat(downEvent,\n-            eventTime, 1);\n-        interactionController.injectEventSync(repeatEvent);\n-        // Finally, send the up event\n-        final KeyEvent upEvent = new KeyEvent(eventTime, eventTime,\n-            KeyEvent.ACTION_UP, keyCode, 0, metaState,\n-            KeyCharacterMap.VIRTUAL_KEYBOARD, 0, 0, InputDevice.SOURCE_KEYBOARD);\n-        interactionController.injectEventSync(upEvent);\n-      }\n-      return getSuccessResult(true);\n-    } catch (final Exception e) {\n-      return getErrorResult(e.getMessage());\n-    }\n-  }\n-}"
    },
    {
      "sha": "0aefa4128dd53bacfb76bc798b99781742863fcc",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/MultiPointerGesture.java",
      "status": "removed",
      "additions": 0,
      "deletions": 136,
      "changes": 136,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/MultiPointerGesture.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/MultiPointerGesture.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/MultiPointerGesture.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,136 +0,0 @@\n-package io.appium.android.bootstrap.handler;\n-\n-import android.view.MotionEvent.PointerCoords;\n-import io.appium.android.bootstrap.AndroidCommand;\n-import io.appium.android.bootstrap.AndroidCommandResult;\n-import io.appium.android.bootstrap.AndroidElement;\n-import io.appium.android.bootstrap.CommandHandler;\n-import io.appium.android.bootstrap.Logger;\n-import io.appium.android.bootstrap.WDStatus;\n-import io.appium.uiautomator.core.UiAutomatorBridge;\n-import org.json.JSONArray;\n-import org.json.JSONException;\n-import org.json.JSONObject;\n-\n-import static io.appium.android.bootstrap.utils.API.API_18;\n-\n-public class MultiPointerGesture extends CommandHandler {\n-\n-  private double computeLongestTime(final JSONArray actions)\n-      throws JSONException {\n-    double max = 0.0;\n-    for (int i = 0; i < actions.length(); i++) {\n-      final JSONArray gestures = actions.getJSONArray(i);\n-      final double endTime = gestures.getJSONObject(gestures.length() - 1)\n-          .getDouble(\"time\");\n-      if (endTime > max) {\n-        max = endTime;\n-      }\n-    }\n-\n-    return max;\n-  }\n-\n-  private PointerCoords createPointerCoords(final JSONObject obj)\n-      throws JSONException {\n-    final JSONObject o = obj.getJSONObject(\"touch\");\n-\n-    final int x = o.getInt(\"x\");\n-    final int y = o.getInt(\"y\");\n-\n-    final PointerCoords p = new PointerCoords();\n-    p.size = 1;\n-    p.pressure = 1;\n-    p.x = x;\n-    p.y = y;\n-\n-    return p;\n-  }\n-\n-  @Override\n-  public AndroidCommandResult execute(final AndroidCommand command)\n-      throws JSONException {\n-    try {\n-      final PointerCoords[][] pcs = parsePointerCoords(command);\n-\n-      if (command.isElementCommand()) {\n-        final AndroidElement el = command.getElement();\n-        if (el.performMultiPointerGesture(pcs)) {\n-          return getSuccessResult(\"OK\");\n-        } else {\n-          return getErrorResult(\"Unable to perform multi pointer gesture\");\n-        }\n-      } else {\n-        if (API_18) {\n-          Boolean rt = UiAutomatorBridge.getInstance().getInteractionController().performMultiPointerGesture(pcs);\n-          if (rt) {\n-            return getSuccessResult(\"OK\");\n-          } else {\n-            return getErrorResult(\"Unable to perform multi pointer gesture\");\n-          }\n-        } else {\n-          Logger.error(\"Device does not support API < 18!\");\n-          return new AndroidCommandResult(WDStatus.UNKNOWN_ERROR,\n-              \"Cannot perform multi pointer gesture on device below API level 18\");\n-        }\n-      }\n-    } catch (final Exception e) {\n-      Logger.debug(\"Exception: \" + e);\n-      e.printStackTrace();\n-      return new AndroidCommandResult(WDStatus.UNKNOWN_ERROR, e.getMessage());\n-    }\n-  }\n-\n-  private PointerCoords[] gesturesToPointerCoords(final double maxTime,\n-      final JSONArray gestures) throws JSONException {\n-    // gestures, e.g.:\n-    // [\n-    // {\"touch\":{\"y\":529.5,\"x\":120},\"time\":0.2},\n-    // {\"touch\":{\"y\":529.5,\"x\":130},\"time\":0.4},\n-    // {\"touch\":{\"y\":454.5,\"x\":140},\"time\":0.6},\n-    // {\"touch\":{\"y\":304.5,\"x\":150},\"time\":0.8}\n-    // ]\n-\n-    // From the docs:\n-    // \"Steps are injected about 5 milliseconds apart, so 100 steps may take\n-    // around 0.5 seconds to complete.\"\n-    final int steps = (int) (maxTime * 200) + 2;\n-\n-    final PointerCoords[] pc = new PointerCoords[steps];\n-\n-    int i = 1;\n-    JSONObject current = gestures.getJSONObject(0);\n-    double currentTime = current.getDouble(\"time\");\n-    double runningTime = 0.0;\n-    final int gesturesLength = gestures.length();\n-    for (int j = 0; j < steps; j++) {\n-      if (runningTime > currentTime && i < gesturesLength) {\n-        current = gestures.getJSONObject(i++);\n-        currentTime = current.getDouble(\"time\");\n-      }\n-\n-      pc[j] = createPointerCoords(current);\n-\n-      runningTime += 0.005;\n-    }\n-\n-    return pc;\n-  }\n-\n-  private PointerCoords[][] parsePointerCoords(final AndroidCommand command)\n-      throws JSONException {\n-    final JSONArray actions = (org.json.JSONArray) command.params().get(\n-        \"actions\");\n-\n-    final double time = computeLongestTime(actions);\n-\n-    final PointerCoords[][] pcs = new PointerCoords[actions.length()][];\n-    for (int i = 0; i < actions.length(); i++) {\n-      final JSONArray gestures = actions.getJSONArray(i);\n-\n-      pcs[i] = gesturesToPointerCoords(time, gestures);\n-    }\n-\n-    return pcs;\n-  }\n-}"
    },
    {
      "sha": "0da6fbcb3b7a625670c96137d9398a9e25aea7d4",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/OpenNotification.java",
      "status": "removed",
      "additions": 0,
      "deletions": 43,
      "changes": 43,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/OpenNotification.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/OpenNotification.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/OpenNotification.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,43 +0,0 @@\n-package io.appium.android.bootstrap.handler;\n-\n-import com.android.uiautomator.core.UiDevice;\n-import io.appium.android.bootstrap.AndroidCommand;\n-import io.appium.android.bootstrap.AndroidCommandResult;\n-import io.appium.android.bootstrap.CommandHandler;\n-\n-import static io.appium.android.bootstrap.utils.API.API_18;\n-\n-/**\n- * This handler is used to open the notification shade on the device.\n- *\n- */\n-public class OpenNotification extends CommandHandler {\n-\n-  /*\n-   * @param command The {@link AndroidCommand} used for this handler.\n-   *\n-   * @return {@link AndroidCommandResult}\n-   *\n-   * @see io.appium.android.bootstrap.CommandHandler#execute(io.appium.android.\n-   * bootstrap.AndroidCommand)\n-   */\n-  @Override\n-  public AndroidCommandResult execute(final AndroidCommand command) {\n-    // method was only introduced in API Level 18\n-    if (!API_18) {\n-      return getErrorResult(\"Unable to open notifications on device below API level 18\");\n-    }\n-\n-    // does not make sense on an element\n-    if (command.isElementCommand()) {\n-      return getErrorResult(\"Unable to open notifications on an element.\");\n-    }\n-\n-    final UiDevice device = UiDevice.getInstance();\n-    if (device.openNotification()) {\n-      return getSuccessResult(true);\n-    } else {\n-      return getErrorResult(\"Device failed to open notifications.\");\n-    }\n-  }\n-}"
    },
    {
      "sha": "c990a60db903c5f86a149f8a115e22351ba5a14a",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/Orientation.java",
      "status": "removed",
      "additions": 0,
      "deletions": 135,
      "changes": 135,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/Orientation.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/Orientation.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/Orientation.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,135 +0,0 @@\n-package io.appium.android.bootstrap.handler;\n-\n-import android.os.RemoteException;\n-import com.android.uiautomator.core.UiDevice;\n-import io.appium.android.bootstrap.*;\n-import org.json.JSONException;\n-\n-import java.util.Hashtable;\n-\n-/**\n- * This handler is used to get or set the orientation of the device.\n- * \n- */\n-public class Orientation extends CommandHandler {\n-\n-  /*\n-   * @param command The {@link AndroidCommand} used for this handler.\n-   * \n-   * @return {@link AndroidCommandResult}\n-   * \n-   * @throws JSONException\n-   * \n-   * @see io.appium.android.bootstrap.CommandHandler#execute(io.appium.android.\n-   * bootstrap.AndroidCommand)\n-   */\n-  @Override\n-  public AndroidCommandResult execute(final AndroidCommand command)\n-      throws JSONException {\n-\n-    final Hashtable<String, Object> params = command.params();\n-    if (params.containsKey(\"orientation\")) {\n-      // Set the rotation\n-\n-      final String orientation = (String) params.get(\"orientation\");\n-      try {\n-        return handleRotation(orientation);\n-      } catch (final Exception e) {\n-        return getErrorResult(\"Unable to rotate screen: \" + e.getMessage());\n-      }\n-    } else {\n-      // Get the rotation\n-      return getRotation();\n-    }\n-\n-  }\n-\n-  /**\n-   * Returns the current rotation\n-   * \n-   * @return {@link AndroidCommandResult}\n-   */\n-  private AndroidCommandResult getRotation() {\n-    String res = null;\n-    final UiDevice d = UiDevice.getInstance();\n-    final OrientationEnum currentRotation = OrientationEnum.fromInteger(d\n-        .getDisplayRotation());\n-    Logger.debug(\"Current rotation: \" + currentRotation);\n-    switch (currentRotation) {\n-      case ROTATION_0:\n-      case ROTATION_180:\n-        res = \"PORTRAIT\";\n-        break;\n-      case ROTATION_90:\n-      case ROTATION_270:\n-        res = \"LANDSCAPE\";\n-        break;\n-    }\n-\n-    if (res != null) {\n-      return getSuccessResult(res);\n-    } else {\n-      return getErrorResult(\"Get orientation did not complete successfully\");\n-    }\n-  }\n-\n-  /**\n-   * Set the desired rotation\n-   * \n-   * @param orientation\n-   *          The rotation desired (LANDSCAPE or PORTRAIT)\n-   * @return {@link AndroidCommandResult}\n-   * @throws RemoteException\n-   * @throws InterruptedException\n-   */\n-  private AndroidCommandResult handleRotation(final String orientation)\n-      throws RemoteException, InterruptedException {\n-    final UiDevice d = UiDevice.getInstance();\n-    OrientationEnum desired;\n-    OrientationEnum current = OrientationEnum.fromInteger(d\n-        .getDisplayRotation());\n-\n-    Logger.debug(\"Desired orientation: \" + orientation);\n-    Logger.debug(\"Current rotation: \" + current);\n-\n-    if (orientation.equalsIgnoreCase(\"LANDSCAPE\")) {\n-      switch (current) {\n-        case ROTATION_0:\n-          d.setOrientationRight();\n-          desired = OrientationEnum.ROTATION_270;\n-          break;\n-        case ROTATION_180:\n-          d.setOrientationLeft();\n-          desired = OrientationEnum.ROTATION_270;\n-          break;\n-        default:\n-          return getSuccessResult(\"Already in landscape mode.\");\n-      }\n-    } else {\n-      switch (current) {\n-        case ROTATION_90:\n-        case ROTATION_270:\n-          d.setOrientationNatural();\n-          desired = OrientationEnum.ROTATION_0;\n-          break;\n-        default:\n-          return getSuccessResult(\"Already in portrait mode.\");\n-      }\n-    }\n-    current = OrientationEnum.fromInteger(d.getDisplayRotation());\n-    // If the orientation has not changed,\n-    // busy wait until the TIMEOUT has expired\n-    final int TIMEOUT = 2000;\n-    final long then = System.currentTimeMillis();\n-    long now = then;\n-    while (current != desired && now - then < TIMEOUT) {\n-      Thread.sleep(100);\n-      now = System.currentTimeMillis();\n-      current = OrientationEnum.fromInteger(d.getDisplayRotation());\n-    }\n-    if (current != desired) {\n-      return getErrorResult(\"Set the orientation, but app refused to rotate.\");\n-    }\n-    return getSuccessResult(\"Rotation (\" + orientation + \") successful.\");\n-  }\n-}"
    },
    {
      "sha": "f93df93e9800f24f7097e106089b4a1264e83b3f",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/Pinch.java",
      "status": "removed",
      "additions": 0,
      "deletions": 69,
      "changes": 69,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/Pinch.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/Pinch.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/Pinch.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,69 +0,0 @@\n-package io.appium.android.bootstrap.handler;\n-\n-import com.android.uiautomator.core.UiObjectNotFoundException;\n-import io.appium.android.bootstrap.*;\n-import org.json.JSONException;\n-\n-import java.util.Hashtable;\n-\n-/**\n- * This handler is used to pinch in/out elements in the Android UI.\n- * \n- * Based on the element Id, pinch in/out that element.\n- * \n- */\n-public class Pinch extends CommandHandler {\n-\n-  /*\n-   * @param command The {@link AndroidCommand} used for this handler.\n-   * \n-   * @return {@link AndroidCommandResult}\n-   * \n-   * @throws JSONException\n-   * \n-   * @see io.appium.android.bootstrap.CommandHandler#execute(io.appium.android.\n-   * bootstrap.AndroidCommand)\n-   */\n-  @Override\n-  public AndroidCommandResult execute(final AndroidCommand command)\n-      throws JSONException {\n-    final Hashtable<String, Object> params = command.params();\n-\n-    AndroidElement el;\n-    final String direction = params.get(\"direction\").toString();\n-    final Integer percent = (Integer) params.get(\"percent\");\n-    final Integer steps = (Integer) params.get(\"steps\");\n-    try {\n-      el = command.getElement();\n-      if (el == null) {\n-        return getErrorResult(\"Could not find an element with elementId: \"\n-            + params.get(\"elementId\"));\n-      }\n-    } catch (final Exception e) { // JSONException, NullPointerException, etc.\n-      return getErrorResult(\"Unknown error:\" + e.getMessage());\n-    }\n-\n-    Logger.debug(\"Pinching \" + direction + \" \" + percent.toString() + \"%\"\n-        + \" with steps: \" + steps.toString());\n-    boolean res;\n-    if (direction.equals(\"in\")) {\n-      try {\n-        res = el.pinchIn(percent, steps);\n-      } catch (final UiObjectNotFoundException e) {\n-        return getErrorResult(\"Selector could not be matched to any UI element displayed\");\n-      }\n-    } else {\n-      try {\n-        res = el.pinchOut(percent, steps);\n-      } catch (final UiObjectNotFoundException e) {\n-        return getErrorResult(\"Selector could not be matched to any UI element displayed\");\n-      }\n-    }\n-\n-    if (res) {\n-      return getSuccessResult(res);\n-    } else {\n-      return getErrorResult(\"Pinch did not complete successfully\");\n-    }\n-  }\n-}"
    },
    {
      "sha": "ee5a68dd27705a179a3b768a5dcc469d96423855",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/PressBack.java",
      "status": "removed",
      "additions": 0,
      "deletions": 31,
      "changes": 31,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/PressBack.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/PressBack.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/PressBack.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,31 +0,0 @@\n-package io.appium.android.bootstrap.handler;\n-\n-import com.android.uiautomator.core.UiDevice;\n-import io.appium.android.bootstrap.AndroidCommand;\n-import io.appium.android.bootstrap.AndroidCommandResult;\n-import io.appium.android.bootstrap.CommandHandler;\n-\n-/**\n- * This handler is used to press back.\n- * \n- */\n-public class PressBack extends CommandHandler {\n-\n-  /*\n-   * @param command The {@link AndroidCommand} used for this handler.\n-   * \n-   * @return {@link AndroidCommandResult}\n-   * \n-   * @throws JSONException\n-   * \n-   * @see io.appium.android.bootstrap.CommandHandler#execute(io.appium.android.\n-   * bootstrap.AndroidCommand)\n-   */\n-  @Override\n-  public AndroidCommandResult execute(final AndroidCommand command) {\n-    UiDevice.getInstance().pressBack();\n-    // Press back returns false even when back was successfully pressed.\n-    // Always return true.\n-    return getSuccessResult(true);\n-  }\n-}"
    },
    {
      "sha": "c5be54c3ab1bea6f57eba1cc4f62f185edd4f3ea",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/PressKeyCode.java",
      "status": "removed",
      "additions": 0,
      "deletions": 56,
      "changes": 56,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/PressKeyCode.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/PressKeyCode.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/PressKeyCode.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,56 +0,0 @@\n-package io.appium.android.bootstrap.handler;\n-\n-import com.android.uiautomator.core.UiDevice;\n-import io.appium.android.bootstrap.AndroidCommand;\n-import io.appium.android.bootstrap.AndroidCommandResult;\n-import io.appium.android.bootstrap.CommandHandler;\n-import org.json.JSONException;\n-import org.json.JSONObject;\n-\n-import java.util.Hashtable;\n-\n-/**\n- * This handler is used to PressKeyCode.\n- *\n- */\n-public class PressKeyCode extends CommandHandler {\n-  public Integer keyCode;\n-  public Integer metaState;\n-\n-  /*\n-   * @param command The {@link AndroidCommand} used for this handler.\n-   *\n-   * @return {@link AndroidCommandResult}\n-   *\n-   * @throws JSONException\n-   *\n-   * @see io.appium.android.bootstrap.CommandHandler#execute(io.appium.android.\n-   * bootstrap.AndroidCommand)\n-   */\n-  @Override\n-  public AndroidCommandResult execute(final AndroidCommand command)\n-      throws JSONException {\n-    try {\n-      final Hashtable<String, Object> params = command.params();\n-      Object kc = params.get(\"keycode\");\n-      if (kc instanceof Integer) {\n-        keyCode = (Integer) kc;\n-      } else if (kc instanceof String) {\n-        keyCode = Integer.parseInt((String) kc);\n-      } else {\n-        throw new IllegalArgumentException(\"Keycode of type \" + kc.getClass() + \"not supported.\");\n-      }\n-\n-      if (params.get(\"metastate\") != JSONObject.NULL) {\n-        metaState = (Integer) params.get(\"metastate\");\n-        UiDevice.getInstance().pressKeyCode(keyCode, metaState);\n-      } else {\n-        UiDevice.getInstance().pressKeyCode(keyCode);\n-      }\n-\n-      return getSuccessResult(true);\n-    } catch (final Exception e) {\n-      return getErrorResult(e.getMessage());\n-    }\n-  }\n-}"
    },
    {
      "sha": "d4186abc4624e18e97ec605f1e0869c2bb547b3e",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/ScrollTo.java",
      "status": "removed",
      "additions": 0,
      "deletions": 79,
      "changes": 79,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/ScrollTo.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/ScrollTo.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/ScrollTo.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,79 +0,0 @@\n-package io.appium.android.bootstrap.handler;\n-\n-import com.android.uiautomator.core.UiObject;\n-import com.android.uiautomator.core.UiObjectNotFoundException;\n-import com.android.uiautomator.core.UiScrollable;\n-import com.android.uiautomator.core.UiSelector;\n-import io.appium.android.bootstrap.*;\n-import org.json.JSONException;\n-\n-import java.util.Hashtable;\n-\n-/**\n- * This handler is used to scroll to elements in the Android UI.\n- * \n- * Based on the element Id of the scrollable, scroll to the object with the\n- * text.\n- * \n- */\n-public class ScrollTo extends CommandHandler {\n-\n-  /*\n-   * @param command The {@link AndroidCommand}\n-   * \n-   * @return {@link AndroidCommandResult}\n-   * \n-   * @throws JSONException\n-   * \n-   * @see io.appium.android.bootstrap.CommandHandler#execute(io.appium.android.\n-   * bootstrap.AndroidCommand)\n-   */\n-  @Override\n-  public AndroidCommandResult execute(final AndroidCommand command)\n-      throws JSONException {\n-    if (!command.isElementCommand()) {\n-      return getErrorResult(\"A scrollable view is required for this command.\");\n-    }\n-\n-    try {\n-      Boolean result;\n-      final Hashtable<String, Object> params = command.params();\n-      final String text = params.get(\"text\").toString();\n-      final String direction = params.get(\"direction\").toString();\n-\n-      final AndroidElement el = command.getElement();\n-\n-      if (!el.getUiObject().isScrollable()) {\n-        return getErrorResult(\"The provided view is not scrollable.\");\n-      }\n-\n-      final UiScrollable view = new UiScrollable(el.getUiObject().getSelector());\n-\n-      if (direction.toLowerCase().contentEquals(\"horizontal\")\n-          || view.getClassName().contentEquals(\n-              \"android.widget.HorizontalScrollView\")) {\n-        view.setAsHorizontalList();\n-      }\n-      view.scrollToBeginning(100);\n-      view.setMaxSearchSwipes(100);\n-      result = view.scrollTextIntoView(text);\n-      view.waitForExists(5000);\n-\n-      // make sure we can get to the item\n-      UiObject listViewItem = view.getChildByInstance(\n-          new UiSelector().text(text), 0);\n-\n-      // We need to make sure that the item exists (visible)\n-      if (!(result && listViewItem.exists())) {\n-        return getErrorResult(\"Could not scroll element into view: \" + text);\n-      }\n-      return getSuccessResult(result);\n-    } catch (final UiObjectNotFoundException e) {\n-      return new AndroidCommandResult(WDStatus.NO_SUCH_ELEMENT, e.getMessage());\n-    } catch (final NullPointerException e) { // el is null\n-      return new AndroidCommandResult(WDStatus.NO_SUCH_ELEMENT, e.getMessage());\n-    } catch (final Exception e) {\n-      return new AndroidCommandResult(WDStatus.UNKNOWN_ERROR, e.getMessage());\n-    }\n-  }\n-}"
    },
    {
      "sha": "620e8d59118794985aaf516408b9f59af924b027",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/SetText.java",
      "status": "removed",
      "additions": 0,
      "deletions": 76,
      "changes": 76,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/SetText.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/SetText.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/SetText.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,76 +0,0 @@\n-package io.appium.android.bootstrap.handler;\n-\n-import com.android.uiautomator.core.UiDevice;\n-import com.android.uiautomator.core.UiObjectNotFoundException;\n-import io.appium.android.bootstrap.*;\n-import org.json.JSONException;\n-\n-import java.util.Hashtable;\n-\n-/**\n- * This handler is used to set text in elements that support it.\n- *\n- */\n-public class SetText extends CommandHandler {\n-\n-  /*\n-   * @param command The {@link AndroidCommand} used for this handler.\n-   *\n-   * @return {@link AndroidCommandResult}\n-   *\n-   * @throws JSONException\n-   *\n-   * @see io.appium.android.bootstrap.CommandHandler#execute(io.appium.android.\n-   * bootstrap.AndroidCommand)\n-   */\n-  @Override\n-  public AndroidCommandResult execute(final AndroidCommand command)\n-      throws JSONException {\n-    if (command.isElementCommand()) {\n-      // Only makes sense on an element\n-      try {\n-        final Hashtable<String, Object> params = command.params();\n-        final AndroidElement el = command.getElement();\n-        boolean replace = Boolean.parseBoolean(params.get(\"replace\").toString());\n-        String text = params.get(\"text\").toString();\n-        boolean pressEnter = false;\n-        if (text.endsWith(\"\\\\n\")) {\n-          pressEnter = true;\n-          text = text.replace(\"\\\\n\", \"\");\n-          Logger.debug(\"Will press enter after setting text\");\n-        }\n-        boolean unicodeKeyboard = false;\n-        if (params.get(\"unicodeKeyboard\") != null) {\n-          unicodeKeyboard = Boolean.parseBoolean(params.get(\"unicodeKeyboard\").toString());\n-        }\n-        String currText = el.getText();\n-        new Clear().execute(command);\n-        if (!el.getText().isEmpty()) {\n-          // clear could have failed, or we could have a hint in the field\n-          // we'll assume it is the latter\n-          Logger.debug(\"Text not cleared. Assuming remainder is hint text.\");\n-          currText = \"\";\n-        }\n-        if (!replace) {\n-          text = currText + text;\n-        }\n-        final boolean result = el.setText(text, unicodeKeyboard);\n-        if (!result) {\n-          return getErrorResult(\"el.setText() failed!\");\n-        }\n-        if (pressEnter) {\n-          final UiDevice d = UiDevice.getInstance();\n-          d.pressEnter();\n-        }\n-        return getSuccessResult(result);\n-      } catch (final UiObjectNotFoundException e) {\n-        return new AndroidCommandResult(WDStatus.NO_SUCH_ELEMENT,\n-            e.getMessage());\n-      } catch (final Exception e) { // handle NullPointerException\n-        return getErrorResult(\"Unknown error\");\n-      }\n-    } else {\n-      return getErrorResult(\"Unable to set text without an element.\");\n-    }\n-  }\n-}"
    },
    {
      "sha": "6f63933d0f1e82555bda3ee4a63bcaaf2f967213",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/Source.java",
      "status": "removed",
      "additions": 0,
      "deletions": 49,
      "changes": 49,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/Source.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/Source.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/Source.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,49 +0,0 @@\n-package io.appium.android.bootstrap.handler;\n-\n-import io.appium.android.bootstrap.utils.ReflectionUtils;\n-import io.appium.android.bootstrap.AndroidCommand;\n-import io.appium.android.bootstrap.AndroidCommandResult;\n-import io.appium.android.bootstrap.CommandHandler;\n-import io.appium.android.bootstrap.utils.XMLHierarchy;\n-import org.json.JSONException;\n-import org.w3c.dom.Document;\n-\n-import javax.xml.transform.Transformer;\n-import javax.xml.transform.TransformerConfigurationException;\n-import javax.xml.transform.TransformerException;\n-import javax.xml.transform.TransformerFactory;\n-import javax.xml.transform.dom.DOMSource;\n-import javax.xml.transform.stream.StreamResult;\n-import java.io.StringWriter;\n-\n-/**\n- * Get page source. Return as string of XML doc\n- */\n-public class Source extends CommandHandler {\n-  @Override\n-  public AndroidCommandResult execute(final AndroidCommand command) throws JSONException {\n-    ReflectionUtils.clearAccessibilityCache();\n-\n-    final Document doc = (Document) XMLHierarchy.getFormattedXMLDoc();\n-\n-    final TransformerFactory tf = TransformerFactory.newInstance();\n-    final StringWriter writer = new StringWriter();\n-    Transformer transformer;\n-    String xmlString;\n-\n-\n-    try {\n-      transformer = tf.newTransformer();\n-      transformer.transform(new DOMSource(doc), new StreamResult(writer));\n-      xmlString = writer.getBuffer().toString();\n-\n-    } catch (final TransformerConfigurationException e) {\n-      e.printStackTrace();\n-      throw new RuntimeException(\"Something went terribly wrong while converting xml document to string\");\n-    } catch (final TransformerException e) {\n-      return getErrorResult(\"Could not parse xml hierarchy to string: \" + e.getMessage());\n-    }\n-\n-    return getSuccessResult(xmlString);\n-  }\n-}"
    },
    {
      "sha": "4240131eeffa54067658ee1940c57d7e264604c8",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/Swipe.java",
      "status": "removed",
      "additions": 0,
      "deletions": 67,
      "changes": 67,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/Swipe.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/Swipe.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/Swipe.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,67 +0,0 @@\n-package io.appium.android.bootstrap.handler;\n-\n-import com.android.uiautomator.core.UiDevice;\n-import com.android.uiautomator.core.UiObjectNotFoundException;\n-import io.appium.android.bootstrap.*;\n-import io.appium.android.bootstrap.exceptions.InvalidCoordinatesException;\n-import io.appium.android.bootstrap.utils.Point;\n-import org.json.JSONException;\n-\n-import java.util.Hashtable;\n-\n-/**\n- * This handler is used to swipe.\n- * \n- */\n-public class Swipe extends CommandHandler {\n-\n-  /*\n-   * @param command The {@link AndroidCommand} used for this handler.\n-   * \n-   * @return {@link AndroidCommandResult}\n-   * \n-   * @throws JSONException\n-   * \n-   * @see io.appium.android.bootstrap.CommandHandler#execute(io.appium.android.\n-   * bootstrap.AndroidCommand)\n-   */\n-  @Override\n-  public AndroidCommandResult execute(final AndroidCommand command)\n-      throws JSONException {\n-    final Hashtable<String, Object> params = command.params();\n-    final Point start = new Point(params.get(\"startX\"), params.get(\"startY\"));\n-    final Point end = new Point(params.get(\"endX\"), params.get(\"endY\"));\n-    final Integer steps = (Integer) params.get(\"steps\");\n-    final UiDevice device = UiDevice.getInstance();\n-\n-    Point absStartPos = new Point();\n-    Point absEndPos = new Point();\n-\n-    try {\n-      if (command.isElementCommand()) {\n-        final AndroidElement el = command.getElement();\n-        absStartPos = el.getAbsolutePosition(start);\n-        absEndPos = el.getAbsolutePosition(end);\n-      } else {\n-        absStartPos = PositionHelper.getDeviceAbsPos(start);\n-        absEndPos = PositionHelper.getDeviceAbsPos(end);\n-      }\n-    } catch (final UiObjectNotFoundException e) {\n-      return getErrorResult(e.getMessage());\n-    } catch (final InvalidCoordinatesException e) {\n-      return getErrorResult(e.getMessage());\n-    } catch (final Exception e) { // handle NullPointerException\n-      return getErrorResult(\"Unknown error\");\n-    }\n-\n-    Logger.debug(\"Swiping from \" + absStartPos.toString() + \" to \"\n-        + absEndPos.toString() + \" with steps: \" + steps.toString());\n-    final boolean rv = device.swipe(absStartPos.x.intValue(),\n-        absStartPos.y.intValue(), absEndPos.x.intValue(),\n-        absEndPos.y.intValue(), steps);\n-    if (!rv) {\n-      return getErrorResult(\"The swipe did not complete successfully\");\n-    }\n-    return getSuccessResult(rv);\n-  }\n-}"
    },
    {
      "sha": "c9a109cddaf886eed8391da5298005320c9117d8",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/TakeScreenshot.java",
      "status": "removed",
      "additions": 0,
      "deletions": 42,
      "changes": 42,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/TakeScreenshot.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/TakeScreenshot.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/TakeScreenshot.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,42 +0,0 @@\n-package io.appium.android.bootstrap.handler;\n-\n-import com.android.uiautomator.core.UiDevice;\n-import io.appium.android.bootstrap.AndroidCommand;\n-import io.appium.android.bootstrap.AndroidCommandResult;\n-import io.appium.android.bootstrap.CommandHandler;\n-\n-import java.io.File;\n-\n-/**\n- * This handler is used to TakeScreenshot.\n- * \n- */\n-public class TakeScreenshot extends CommandHandler {\n-\n-  /*\n-   * @param command The {@link AndroidCommand} used for this handler.\n-   * \n-   * @return {@link AndroidCommandResult}\n-   * \n-   * @throws JSONException\n-   * \n-   * @see io.appium.android.bootstrap.CommandHandler#execute(io.appium.android.\n-   * bootstrap.AndroidCommand)\n-   */\n-  @Override\n-  public AndroidCommandResult execute(final AndroidCommand command) {\n-    final File screenshot = new File(\"/data/local/tmp/screenshot.png\");\n-\n-    try {\n-      screenshot.getParentFile().mkdirs();\n-    } catch (final Exception e) {\n-    }\n-\n-    if (screenshot.exists()) {\n-      screenshot.delete();\n-    }\n-\n-    UiDevice.getInstance().takeScreenshot(screenshot);\n-    return getSuccessResult(screenshot.exists());\n-  }\n-}\n\\ No newline at end of file"
    },
    {
      "sha": "0866dd348fbcf23b9c86ff043689124ba552c0d4",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/TouchDown.java",
      "status": "removed",
      "additions": 0,
      "deletions": 24,
      "changes": 24,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/TouchDown.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/TouchDown.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/TouchDown.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,24 +0,0 @@\n-package io.appium.android.bootstrap.handler;\n-\n-import com.android.uiautomator.core.UiObjectNotFoundException;\n-import io.appium.android.bootstrap.Logger;\n-import io.appium.uiautomator.core.UiAutomatorBridge;\n-\n-/**\n- * This handler is used to perform a touchDown event on an element in the\n- * Android UI.\n- * \n- */\n-public class TouchDown extends TouchEvent {\n-\n-  @Override\n-  protected boolean executeTouchEvent() throws UiObjectNotFoundException {\n-    printEventDebugLine(\"TouchDown\");\n-    try {\n-      return UiAutomatorBridge.getInstance().getInteractionController().touchDown(clickX, clickY);\n-    } catch (final Exception e) {\n-      Logger.debug(\"Problem invoking touchDown: \" + e);\n-      return false;\n-    }\n-  }\n-}\n\\ No newline at end of file"
    },
    {
      "sha": "9bfc95a675e6f4cf094fc29a8447b2709b7cbdc1",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/TouchEvent.java",
      "status": "removed",
      "additions": 0,
      "deletions": 128,
      "changes": 128,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/TouchEvent.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/TouchEvent.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/TouchEvent.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,128 +0,0 @@\n-package io.appium.android.bootstrap.handler;\n-\n-import android.graphics.Rect;\n-import com.android.uiautomator.core.UiObjectNotFoundException;\n-import io.appium.android.bootstrap.*;\n-import io.appium.android.bootstrap.exceptions.InvalidCoordinatesException;\n-import io.appium.android.bootstrap.utils.Point;\n-import org.json.JSONException;\n-\n-import java.util.ArrayList;\n-import java.util.Hashtable;\n-\n-/**\n- * This handler is and abstract class that contains all the common code for\n- * touch event handlers.\n- * \n- */\n-public abstract class TouchEvent extends CommandHandler {\n-  protected AndroidElement            el;\n-\n-  protected int                       clickX;\n-\n-  protected int                       clickY;\n-\n-  protected Hashtable<String, Object> params;\n-\n-  protected boolean                   isElement;\n-\n-  /**\n-   * \n-   * @param command\n-   *          The {@link AndroidCommand}\n-   * @return {@link AndroidCommandResult}\n-   * @throws JSONException\n-   * @see io.appium.android.bootstrap.CommandHandler#execute(io.appium.android.bootstrap.AndroidCommand)\n-   */\n-  @Override\n-  public AndroidCommandResult execute(final AndroidCommand command)\n-      throws JSONException {\n-    initalize();\n-    try {\n-      params = command.params();\n-\n-      // isElementCommand doesn't check to see if we actually have an element\n-      // so getElement is used instead.\n-      try {\n-        if (command.getElement() != null) {\n-          isElement = true;\n-        }\n-      } catch (final Exception e) {\n-        isElement = false;\n-      }\n-\n-      if (isElement) {\n-        // extract x and y from the element.\n-        el = command.getElement();\n-\n-        // check if element exists without wait\n-        if(! el.exists()) {\n-          throw new UiObjectNotFoundException(\"TouchEvent element does not exist.\");\n-        }\n-\n-        final Rect bounds = el.getVisibleBounds();\n-        clickX = bounds.centerX();\n-        clickY = bounds.centerY();\n-      } else { // no element so extract x and y from params\n-        final Object paramX = params.get(\"x\");\n-        final Object paramY = params.get(\"y\");\n-        \n-        // these will be defaulted to 0.5 when passed to getDeviceAbsPos\n-        double targetX = 0;\n-        double targetY = 0;\n-        \n-        if (paramX != null) {\n-          targetX = Double.parseDouble(paramX.toString());\n-        }\n-\n-        if (paramY != null) {\n-          targetY = Double.parseDouble(paramY.toString());\n-        }\n-        \n-        Point coords = new Point(targetX, targetY);\n-        coords = PositionHelper.getDeviceAbsPos(coords);\n-       \n-        clickX = coords.x.intValue();\n-        clickY = coords.y.intValue();\n-      }\n-\n-      if (executeTouchEvent()) {\n-        return getSuccessResult(true);\n-      }\n-\n-    } catch (final UiObjectNotFoundException e) {\n-      return new AndroidCommandResult(WDStatus.NO_SUCH_ELEMENT, e.getMessage());\n-    } catch (final InvalidCoordinatesException e) {\n-      return new AndroidCommandResult(WDStatus.INVALID_ELEMENT_COORDINATES, \n-          e.getMessage());\n-    } catch (final Exception e) {\n-      return getErrorResult(e.getMessage());\n-    }\n-    return getErrorResult(\"Failed to execute touch event\");\n-  }\n-\n-  protected abstract boolean executeTouchEvent()\n-      throws UiObjectNotFoundException;\n-\n-  /**\n-   * Variables persist across executions. initialize must be called at the start\n-   * of execute.\n-   **/\n-  private void initalize() {\n-    el = null;\n-    clickX = -1;\n-    clickY = -1;\n-    params = null;\n-    isElement = false;\n-  }\n-\n-  protected void printEventDebugLine(final String methodName,\n-      final Integer... duration) {\n-    String extra = \"\";\n-    if (duration.length > 0) {\n-      extra = \", duration: \" + duration[0];\n-    }\n-    Logger.debug(\"Performing \" + methodName + \" using element? \" + isElement\n-        + \" x: \" + clickX + \", y: \" + clickY + extra);\n-  }\n-}"
    },
    {
      "sha": "9b94aa84f7d5a6d6708f7875cbd6fad539460a7f",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/TouchLongClick.java",
      "status": "removed",
      "additions": 0,
      "deletions": 62,
      "changes": 62,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/TouchLongClick.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/TouchLongClick.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/TouchLongClick.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,62 +0,0 @@\n-package io.appium.android.bootstrap.handler;\n-\n-import android.os.SystemClock;\n-import com.android.uiautomator.core.UiObjectNotFoundException;\n-import io.appium.android.bootstrap.Logger;\n-import io.appium.uiautomator.core.InteractionController;\n-import io.appium.uiautomator.core.UiAutomatorBridge;\n-\n-/**\n- * This handler is used to long click elements in the Android UI.\n- *\n- */\n-public class TouchLongClick extends TouchEvent {\n-  /*\n-   * UiAutomator has a broken longClick, so we'll try to implement it using the\n-   * touchDown / touchUp events.\n-   */\n-  protected static boolean correctLongClick(final int x, final int y, final int duration) {\n-    try {\n-      /*\n-       * bridge.getClass() returns ShellUiAutomatorBridge on API 18/19 so use\n-       * the super class.\n-       */\n-\n-      InteractionController interactionController = UiAutomatorBridge.getInstance().getInteractionController();\n-\n-      if (interactionController.touchDown(x, y)) {\n-        SystemClock.sleep(duration);\n-        if (interactionController.touchUp(x, y)) {\n-          return true;\n-        }\n-      }\n-      return false;\n-\n-    } catch (final Exception e) {\n-      Logger.debug(\"Problem invoking correct long click: \" + e);\n-      return false;\n-    }\n-  }\n-\n-  @Override\n-  protected boolean executeTouchEvent() throws UiObjectNotFoundException {\n-    final Object paramDuration = params.get(\"duration\");\n-    int duration = 2000; // two seconds\n-    if (paramDuration != null) {\n-      duration = Integer.parseInt(paramDuration.toString());\n-    }\n-\n-    printEventDebugLine(\"TouchLongClick\", duration);\n-    if (correctLongClick(clickX, clickY, duration)) {\n-      return true;\n-    }\n-    // if correctLongClick failed and we have an element\n-    // then uiautomator's longClick is used as a fallback.\n-    if (isElement) {\n-      Logger.debug(\"Falling back to broken longClick\");\n-\n-      return el.longClick();\n-    }\n-    return false;\n-  }\n-}\n\\ No newline at end of file"
    },
    {
      "sha": "2af3ccfd6eebb8b8bc9e5a71dc5f29ca10cfc883",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/TouchMove.java",
      "status": "removed",
      "additions": 0,
      "deletions": 24,
      "changes": 24,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/TouchMove.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/TouchMove.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/TouchMove.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,24 +0,0 @@\n-package io.appium.android.bootstrap.handler;\n-\n-import com.android.uiautomator.core.UiObjectNotFoundException;\n-import io.appium.android.bootstrap.Logger;\n-import io.appium.uiautomator.core.UiAutomatorBridge;\n-\n-/**\n- * This handler is used to perform a touchMove event on an element in the\n- * Android UI.\n- * \n- */\n-public class TouchMove extends TouchEvent {\n-\n-  @Override\n-  protected boolean executeTouchEvent() throws UiObjectNotFoundException {\n-    printEventDebugLine(\"TouchMove\");\n-    try {\n-      return UiAutomatorBridge.getInstance().getInteractionController().touchMove(clickX, clickY);\n-    } catch (final Exception e) {\n-      Logger.debug(\"Problem invoking touchMove: \" + e);\n-      return false;\n-    }\n-  }\n-}\n\\ No newline at end of file"
    },
    {
      "sha": "9d9267b8d9614a70feee077a9d7a30ec0c9ed5f9",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/TouchUp.java",
      "status": "removed",
      "additions": 0,
      "deletions": 24,
      "changes": 24,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/TouchUp.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/TouchUp.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/TouchUp.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,24 +0,0 @@\n-package io.appium.android.bootstrap.handler;\n-\n-import com.android.uiautomator.core.UiObjectNotFoundException;\n-import io.appium.android.bootstrap.Logger;\n-import io.appium.uiautomator.core.UiAutomatorBridge;\n-\n-/**\n- * This handler is used to perform a touchUp event on an element in the Android\n- * UI.\n- * \n- */\n-public class TouchUp extends TouchEvent {\n-\n-  @Override\n-  protected boolean executeTouchEvent() throws UiObjectNotFoundException {\n-    printEventDebugLine(\"TouchUp\");\n-    try {\n-      return UiAutomatorBridge.getInstance().getInteractionController().touchUp(clickX, clickY);\n-    } catch (final Exception e) {\n-      Logger.debug(\"Problem invoking touchUp: \" + e);\n-      return false;\n-    }\n-  }\n-}\n\\ No newline at end of file"
    },
    {
      "sha": "f7c6a4cfda4236ec74cd53812c42f7dbf7053a4c",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/UpdateStrings.java",
      "status": "removed",
      "additions": 0,
      "deletions": 60,
      "changes": 60,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/UpdateStrings.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/UpdateStrings.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/UpdateStrings.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,60 +0,0 @@\n-package io.appium.android.bootstrap.handler;\n-\n-import io.appium.android.bootstrap.AndroidCommand;\n-import io.appium.android.bootstrap.AndroidCommandResult;\n-import io.appium.android.bootstrap.CommandHandler;\n-import io.appium.android.bootstrap.Logger;\n-import org.json.JSONObject;\n-\n-import java.io.DataInputStream;\n-import java.io.File;\n-import java.io.FileInputStream;\n-\n-/**\n- * This handler is used to update the apk strings.\n- *\n- */\n-public class UpdateStrings extends CommandHandler {\n-\n-  /*\n-   * @param command The {@link AndroidCommand} used for this handler.\n-   *\n-   * @return {@link AndroidCommandResult}\n-   *\n-   * @see io.appium.android.bootstrap.CommandHandler#execute(io.appium.android.\n-   * bootstrap.AndroidCommand)\n-   */\n-  @Override\n-  public AndroidCommandResult execute(final AndroidCommand command) {\n-    if (!loadStringsJson()) {\n-      return getErrorResult(\"Unable to load json file and update strings.\");\n-    }\n-    return getSuccessResult(true);\n-  }\n-\n-  public static boolean loadStringsJson() {\n-    Logger.debug(\"Loading json...\");\n-    try {\n-      String filePath = \"/data/local/tmp/strings.json\";\n-      final File jsonFile = new File(filePath);\n-      // json will not exist for apks that are only on device\n-      // because the node server can't extract the json from the apk.\n-      if (!jsonFile.exists()) {\n-        return false;\n-      }\n-      final DataInputStream dataInput = new DataInputStream(\n-          new FileInputStream(jsonFile));\n-      final byte[] jsonBytes = new byte[(int) jsonFile.length()];\n-      dataInput.readFully(jsonBytes);\n-      // this closes FileInputStream\n-      dataInput.close();\n-      final String jsonString = new String(jsonBytes, \"UTF-8\");\n-      Find.apkStrings = new JSONObject(jsonString);\n-      Logger.debug(\"json loading complete.\");\n-    } catch (final Exception e) {\n-      Logger.error(\"Error loading json: \" + e.getMessage());\n-      return false;\n-    }\n-    return true;\n-  }\n-}\n\\ No newline at end of file"
    },
    {
      "sha": "b5ffa7e7c3bea00eac4eab94e724b7047701bac5",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/WaitForIdle.java",
      "status": "removed",
      "additions": 0,
      "deletions": 42,
      "changes": 42,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/WaitForIdle.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/WaitForIdle.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/WaitForIdle.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,42 +0,0 @@\n-package io.appium.android.bootstrap.handler;\n-\n-import com.android.uiautomator.core.UiDevice;\n-import io.appium.android.bootstrap.AndroidCommand;\n-import io.appium.android.bootstrap.AndroidCommandResult;\n-import io.appium.android.bootstrap.CommandHandler;\n-import org.json.JSONException;\n-\n-import java.util.Hashtable;\n-\n-/**\n- * This handler is used to clear elements in the Android UI.\n- * \n- * Based on the element Id, clear that element.\n- * \n- */\n-public class WaitForIdle extends CommandHandler {\n-\n-  /*\n-   * @param command The {@link AndroidCommand}\n-   * \n-   * @return {@link AndroidCommandResult}\n-   * \n-   * @throws JSONException\n-   * \n-   * @see io.appium.android.bootstrap.CommandHandler#execute(io.appium.android.\n-   * bootstrap.AndroidCommand)\n-   */\n-  @Override\n-  public AndroidCommandResult execute(final AndroidCommand command)\n-      throws JSONException {\n-    final Hashtable<String, Object> params = command.params();\n-    long timeout = 10;\n-    if (params.containsKey(\"timeout\")) {\n-      timeout = (Integer) params.get(\"timeout\");\n-    }\n-\n-    UiDevice d = UiDevice.getInstance();\n-    d.waitForIdle(timeout);\n-    return getSuccessResult(true);\n-  }\n-}"
    },
    {
      "sha": "beda8bac25851c6ce4aee35b18de187e4155f526",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/Wake.java",
      "status": "removed",
      "additions": 0,
      "deletions": 35,
      "changes": 35,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/Wake.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/Wake.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/handler/Wake.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,35 +0,0 @@\n-package io.appium.android.bootstrap.handler;\n-\n-import android.os.RemoteException;\n-import com.android.uiautomator.core.UiDevice;\n-import io.appium.android.bootstrap.AndroidCommand;\n-import io.appium.android.bootstrap.AndroidCommandResult;\n-import io.appium.android.bootstrap.CommandHandler;\n-\n-/**\n- * This handler is used to power on the device if it's not currently awake.\n- * \n- */\n-public class Wake extends CommandHandler {\n-\n-  /*\n-   * @param command The {@link AndroidCommand} used for this handler.\n-   * \n-   * @return {@link AndroidCommandResult}\n-   * \n-   * @throws JSONException\n-   * \n-   * @see io.appium.android.bootstrap.CommandHandler#execute(io.appium.android.\n-   * bootstrap.AndroidCommand)\n-   */\n-  @Override\n-  public AndroidCommandResult execute(final AndroidCommand command) {\n-    // only makes sense on a device\n-    try {\n-      UiDevice.getInstance().wakeUp();\n-      return getSuccessResult(true);\n-    } catch (final RemoteException e) {\n-      return getErrorResult(\"Error waking up device\");\n-    }\n-  }\n-}"
    },
    {
      "sha": "9fe74668d8ca2040d8c32eea213c694b987c996a",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/selector/Strategy.java",
      "status": "removed",
      "additions": 0,
      "deletions": 41,
      "changes": 41,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/selector/Strategy.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/selector/Strategy.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/selector/Strategy.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,41 +0,0 @@\n-package io.appium.android.bootstrap.selector;\n-\n-import io.appium.android.bootstrap.exceptions.InvalidStrategyException;\n-\n-/**\n- * An emumeration of possible strategies.\n- */\n-public enum Strategy {\n-  CLASS_NAME(\"class name\"),\n-  CSS_SELECTOR(\"css selector\"),\n-  ID(\"id\"),\n-  NAME(\"name\"),\n-  LINK_TEXT(\"link text\"),\n-  PARTIAL_LINK_TEXT(\"partial link text\"),\n-  XPATH(\"xpath\"),\n-  ACCESSIBILITY_ID(\"accessibility id\"),\n-  ANDROID_UIAUTOMATOR(\"-android uiautomator\");\n-\n-  public static Strategy fromString(final String text)\n-      throws InvalidStrategyException {\n-    if (text != null) {\n-      for (final Strategy s : Strategy.values()) {\n-        if (text.equalsIgnoreCase(s.strategyName)) {\n-          return s;\n-        }\n-      }\n-    }\n-    throw new InvalidStrategyException(\"Locator strategy '\" + text\n-        + \"' is not supported on Android\");\n-  }\n-\n-  private final String strategyName;\n-\n-  private Strategy(final String name) {\n-    strategyName = name;\n-  }\n-\n-  public String getStrategyName() {\n-    return strategyName;\n-  }\n-}\n\\ No newline at end of file"
    },
    {
      "sha": "01157434de5b634e38b49169a7d73c90aab71f05",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/API.java",
      "status": "removed",
      "additions": 0,
      "deletions": 9,
      "changes": 9,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/API.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/API.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/API.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,9 +0,0 @@\n-package io.appium.android.bootstrap.utils;\n-\n-import android.os.Build;\n-\n-public class API {\n-\n-  /** True if the device is >= API 18 **/\n-  public static final boolean API_18 = Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR2;\n-}\n\\ No newline at end of file"
    },
    {
      "sha": "e4167262b43fd2c4b5e9738572a6d999d9107991",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/ClassInstancePair.java",
      "status": "removed",
      "additions": 0,
      "deletions": 32,
      "changes": 32,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/ClassInstancePair.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/ClassInstancePair.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/ClassInstancePair.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,32 +0,0 @@\n-package io.appium.android.bootstrap.utils;\n-\n-import com.android.uiautomator.core.UiSelector;\n-\n-/**\n- * Simple class for holding a String 2-tuple. An android class, and instance number, used for finding elements by xpath.\n- */\n-public class ClassInstancePair {\n-\n-  private String androidClass;\n-  private String instance;\n-\n-  public ClassInstancePair(String clazz, String inst) {\n-    androidClass = clazz;\n-    instance = inst;\n-  }\n-\n-  public String getAndroidClass() {\n-    return androidClass;\n-  }\n-\n-  public String getInstance() {\n-    return instance;\n-  }\n-\n-  public UiSelector getSelector() {\n-    String androidClass = getAndroidClass();\n-    String instance = getInstance();\n-\n-    return new UiSelector().className(androidClass).instance(Integer.parseInt(instance));\n-  }\n-}"
    },
    {
      "sha": "88052f7a60d98b9609d40f8573ae37640e258fe9",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/ElementHelpers.java",
      "status": "removed",
      "additions": 0,
      "deletions": 64,
      "changes": 64,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/ElementHelpers.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/ElementHelpers.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/ElementHelpers.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,64 +0,0 @@\n-package io.appium.android.bootstrap.utils;\n-\n-import android.view.accessibility.AccessibilityNodeInfo;\n-import com.android.uiautomator.core.UiObject;\n-import io.appium.android.bootstrap.AndroidElement;\n-import org.json.JSONException;\n-import org.json.JSONObject;\n-\n-import java.lang.reflect.Method;\n-import java.util.ArrayList;\n-import java.util.List;\n-\n-import static io.appium.android.bootstrap.utils.ReflectionUtils.method;\n-\n-public abstract class ElementHelpers {\n-\n-  private static Method findAccessibilityNodeInfo;\n-\n-  private static AccessibilityNodeInfo elementToNode(AndroidElement element) {\n-    AccessibilityNodeInfo result = null;\n-    try {\n-      result = (AccessibilityNodeInfo) findAccessibilityNodeInfo.invoke(element.getUiObject(), 5000L);\n-    } catch (Exception e) {\n-      e.printStackTrace();\n-    }\n-    return result;\n-  }\n-\n-  /**\n-   * Remove all duplicate elements from the provided list\n-   *\n-   * @param elements - elements to remove duplicates from\n-   * @return a new list with duplicates removed\n-   */\n-  public static List<AndroidElement> dedupe(List<AndroidElement> elements) {\n-    try {\n-      findAccessibilityNodeInfo = method(UiObject.class, \"findAccessibilityNodeInfo\", long.class);\n-    } catch (Exception e) {\n-      e.printStackTrace();\n-    }\n-\n-    List<AndroidElement> result = new ArrayList<AndroidElement>();\n-    List<AccessibilityNodeInfo> nodes = new ArrayList<AccessibilityNodeInfo>();\n-\n-    for (AndroidElement element : elements) {\n-      AccessibilityNodeInfo node = elementToNode(element);\n-      if (!nodes.contains(node)) {\n-        nodes.add(node);\n-        result.add(element);\n-      }\n-    }\n-\n-    return result;\n-  }\n-\n-  /**\n-   * Return the JSONObject which Appium returns for an element\n-   *\n-   * For example, appium returns elements like [{\"ELEMENT\":1}, {\"ELEMENT\":2}]\n-   */\n-  public static JSONObject toJSON(AndroidElement el) throws JSONException {\n-    return new JSONObject().put(\"ELEMENT\", el.getId());\n-  }\n-}"
    },
    {
      "sha": "c99c2499b17349d8b3b7e327ab35ebf42ec40ed6",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/NotImportantViews.java",
      "status": "removed",
      "additions": 0,
      "deletions": 17,
      "changes": 17,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/NotImportantViews.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/NotImportantViews.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/NotImportantViews.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,17 +0,0 @@\n-package io.appium.android.bootstrap.utils;\n-\n-import com.android.uiautomator.core.UiDevice;\n-\n-import static io.appium.android.bootstrap.utils.API.API_18;\n-\n-public abstract class NotImportantViews {\n-  // setCompressedLayoutHeirarchy doesn't exist on API <= 17\n-  // http://developer.android.com/reference/android/accessibilityservice/AccessibilityServiceInfo.html#FLAG_INCLUDE_NOT_IMPORTANT_VIEWS\n-  private static boolean canDiscard = API_18;\n-\n-  public static void discard(boolean discard) {\n-    if (canDiscard) {\n-      UiDevice.getInstance().setCompressedLayoutHeirarchy(discard);\n-    }\n-  }\n-}\n\\ No newline at end of file"
    },
    {
      "sha": "a90367d7664532fde2d0c665c218441c6b3b728d",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/Point.java",
      "status": "removed",
      "additions": 0,
      "deletions": 71,
      "changes": 71,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/Point.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/Point.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/Point.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,71 +0,0 @@\n-package io.appium.android.bootstrap.utils;\n-\n-public class Point {\n-\n-  public Double x;\n-  public Double y;\n-\n-  public Point() {\n-    x = 0.0;\n-    y = 0.0;\n-  }\n-\n-  public Point(final Double x, final Double y) {\n-    this.x = x;\n-    this.y = y;\n-  }\n-\n-  public Point(final Object x, final Object y) {\n-    this.x = Double.parseDouble(x.toString());\n-    this.y = Double.parseDouble(y.toString());\n-  }\n-\n-  public Point(final Point other) {\n-    x = other.x;\n-    y = other.y;\n-  }\n-\n-  @Override\n-  public boolean equals(final Object obj) {\n-    if (this == obj) {\n-      return true;\n-    }\n-    if (obj == null) {\n-      return false;\n-    }\n-    if (getClass() != obj.getClass()) {\n-      return false;\n-    }\n-    final Point other = (Point) obj;\n-    if (x == null) {\n-      if (other.x != null) {\n-        return false;\n-      }\n-    } else if (!x.equals(other.x)) {\n-      return false;\n-    }\n-    if (y == null) {\n-      if (other.y != null) {\n-        return false;\n-      }\n-    } else if (!y.equals(other.y)) {\n-      return false;\n-    }\n-    return true;\n-  }\n-\n-  @Override\n-  public int hashCode() {\n-    final int prime = 31;\n-    int result = 1;\n-    result = prime * result + (x == null ? 0 : x.hashCode());\n-    result = prime * result + (y == null ? 0 : y.hashCode());\n-    return result;\n-  }\n-\n-  @Override\n-  public String toString() {\n-    return \"[x=\" + x + \", y=\" + y + \"]\";\n-  }\n-\n-}"
    },
    {
      "sha": "4527d92945800ea4eb187f4932be885797098b95",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/ReflectionUtils.java",
      "status": "removed",
      "additions": 0,
      "deletions": 108,
      "changes": 108,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/ReflectionUtils.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/ReflectionUtils.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/ReflectionUtils.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,108 +0,0 @@\n-package io.appium.android.bootstrap.utils;\n-\n-import io.appium.android.bootstrap.Logger;\n-\n-import java.lang.reflect.Field;\n-import java.lang.reflect.Method;\n-import java.util.Arrays;\n-\n-public class ReflectionUtils {\n-\n-  /**\n-   * Clears the in-process Accessibility cache, removing any stale references.\n-   * Because the AccessibilityInteractionClient singleton stores copies of\n-   * AccessibilityNodeInfo instances, calls to public APIs such as `recycle` do\n-   * not guarantee cached references get updated. See the\n-   * android.view.accessibility AIC and ANI source code for more information.\n-   */\n-  public static boolean clearAccessibilityCache() {\n-    boolean success = false;\n-\n-    try {\n-      final Class c = Class\n-          .forName(\"android.view.accessibility.AccessibilityInteractionClient\");\n-      final Method getInstance = ReflectionUtils.method(c, \"getInstance\");\n-      final Object instance = getInstance.invoke(null);\n-      final Method clearCache = ReflectionUtils.method(instance.getClass(),\n-          \"clearCache\");\n-      clearCache.invoke(instance);\n-      success = true;\n-    } catch (final Exception ex) {\n-      // Expected: ClassNotFoundException, NoSuchMethodException,\n-      // IllegalAccessException,\n-      // InvocationTargetException, NoSuchFieldException\n-      Logger.error(\"Failed to clear Accessibility Node cache. \"\n-          + ex.getMessage());\n-    }\n-\n-    return success;\n-  }\n-\n-  public static Class getClass(final String name) {\n-    try {\n-      return Class.forName(name);\n-    } catch (final ClassNotFoundException e) {\n-      final String msg = String.format(\"unable to find class %s\", name);\n-      throw new RuntimeException(msg, e);\n-    }\n-  }\n-\n-  public static Object getField(final Class clazz, final String fieldName,\n-      final Object object) {\n-    try {\n-      final Field field = clazz.getDeclaredField(fieldName);\n-      field.setAccessible(true);\n-\n-      return field.get(object);\n-    } catch (final Exception e) {\n-      final String msg = String.format(\n-          \"error while getting field %s from object %s\", fieldName, object);\n-      Logger.error(msg + \" \" + e.getMessage());\n-      throw new RuntimeException(msg, e);\n-    }\n-  }\n-\n-  public static Object getField(final String field, final Object object) {\n-    return getField(object.getClass(), field, object);\n-  }\n-\n-  public static Object getField(final String className, final String field,\n-      final Object object) {\n-    return getField(getClass(className), field, object);\n-  }\n-\n-  public static Object invoke(final Method method, final Object object,\n-      final Object... parameters) {\n-    try {\n-      return method.invoke(object, parameters);\n-    } catch (final Exception e) {\n-      final String msg = String.format(\n-          \"error while invoking method %s on object %s with parameters %s\",\n-          method, object, Arrays.toString(parameters));\n-      Logger.error(msg + \" \" + e.getMessage());\n-      throw new RuntimeException(msg, e);\n-    }\n-  }\n-\n-  public static Method method(final Class clazz, final String methodName,\n-      final Class... parameterTypes) {\n-    try {\n-      final Method method = clazz.getDeclaredMethod(methodName, parameterTypes);\n-      method.setAccessible(true);\n-\n-      return method;\n-    } catch (final Exception e) {\n-      final String msg = String\n-          .format(\n-              \"error while getting method %s from class %s with parameter types %s\",\n-              methodName, clazz, Arrays.toString(parameterTypes));\n-      Logger.error(msg + \" \" + e.getMessage());\n-      throw new RuntimeException(msg, e);\n-    }\n-  }\n-\n-  public static Method method(final String className, final String method,\n-      final Class... parameterTypes) {\n-    return method(getClass(className), method, parameterTypes);\n-  }\n-}"
    },
    {
      "sha": "81230aaac02633b83ac873355c4cddaa2c61ead1",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/TheWatchers.java",
      "status": "removed",
      "additions": 0,
      "deletions": 37,
      "changes": 37,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/TheWatchers.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/TheWatchers.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/TheWatchers.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,37 +0,0 @@\n-package io.appium.android.bootstrap.utils;\n-\n-import com.android.uiautomator.core.UiObject;\n-import com.android.uiautomator.core.UiSelector;\n-import io.appium.android.bootstrap.Logger;\n-\n-public class TheWatchers {\n-  private static TheWatchers ourInstance = new TheWatchers();\n-  private boolean            alerted     = false;\n-\n-  public static TheWatchers getInstance() {\n-    return ourInstance;\n-  }\n-\n-  private TheWatchers() {\n-  }\n-\n-  public boolean check() {\n-    // Send only one alert message...\n-    if (isDialogPresent() && (!alerted)) {\n-      Logger.debug(\"Emitting system alert message\");\n-      alerted = true;\n-    }\n-\n-    // if the dialog went away, make sure we can send an alert again\n-    if (!isDialogPresent() && alerted) {\n-      alerted = false;\n-    }\n-    return alerted;\n-  }\n-\n-  public boolean isDialogPresent() {\n-    UiObject alertDialog = new UiObject(\n-        new UiSelector().packageName(\"com.android.systemui\"));\n-    return alertDialog.exists();\n-  }\n-}"
    },
    {
      "sha": "5461f47708ec26488cb54a67e56b3d51bae144ea",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/UiAutomatorParser.java",
      "status": "removed",
      "additions": 0,
      "deletions": 91,
      "changes": 91,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/UiAutomatorParser.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/UiAutomatorParser.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/UiAutomatorParser.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,91 +0,0 @@\n-package io.appium.android.bootstrap.utils;\n-\n-import com.android.uiautomator.core.UiSelector;\n-import io.appium.android.bootstrap.Logger;\n-import io.appium.android.bootstrap.exceptions.UiSelectorSyntaxException;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-\n-/**\n- * For parsing strings passed in for the \"-android uiautomator\" locator strategy\n- */\n-public class UiAutomatorParser {\n-\n-  private String text;\n-  private List<UiSelector> selectors;\n-  private UiScrollableParser scrollableParser = new UiScrollableParser();\n-  private UiSelectorParser selectorParser = new UiSelectorParser();\n-\n-  public List<UiSelector> parse(String textToParse) throws UiSelectorSyntaxException {\n-    if (textToParse.isEmpty()) {\n-      throw new UiSelectorSyntaxException(\"Tried to parse an empty string. Expected to see a string consisting of text to be interpreted as UiAutomator java code.\");\n-    }\n-    selectors = new ArrayList<UiSelector>();\n-    text = textToParse.trim();\n-    removeTailingSemicolon();\n-    trimWhitespace();\n-\n-    consumeStatement();\n-    while (text.length() > 0) {\n-      trimWhitespace();\n-      consumeSemicolon();\n-      trimWhitespace();\n-      consumeStatement();\n-    }\n-\n-    return selectors;\n-  }\n-\n-  private void trimWhitespace() {\n-    text = text.trim();\n-  }\n-\n-  private void removeTailingSemicolon() {\n-    if (text.charAt(text.length()-1) == ';') {\n-      text = text.substring(0, text.length()-1);\n-    }\n-  }\n-\n-  private void consumeSemicolon() throws UiSelectorSyntaxException {\n-    if (text.charAt(0) != ';') {\n-      throw new UiSelectorSyntaxException(\"Expected ';' but saw '\" + text.charAt(0) +\"'\");\n-    }\n-\n-    text = text.substring(1);\n-  }\n-\n-  private void consumeStatement() throws UiSelectorSyntaxException {\n-    String statement;\n-    int index = 0;\n-    int parenCount = -1; // semicolons could appear inside String arguments, so we make sure we only count occurrences outside of a parenthesis pair\n-    while (index < text.length()) {\n-      if (text.charAt(index) == ';' && parenCount == 0) {\n-        break;\n-      }\n-      if (text.charAt(index) == '(') {\n-        if (parenCount < 0) {\n-          parenCount = 1;\n-        } else {\n-          parenCount++;\n-        }\n-      }\n-      if (text.charAt(index) == ')') {\n-        parenCount--;\n-      }\n-      index++;\n-    }\n-\n-    statement = text.substring(0, index);\n-    if (UiScrollableParser.isUiScrollable(statement)) {\n-      Logger.debug(\"Parsing scrollable: \" + statement);\n-      selectors.add(scrollableParser.parse(statement));\n-    } else {\n-      Logger.debug(\"Parsing selector: \" + statement);\n-      selectors.add(selectorParser.parse(statement));\n-    }\n-\n-    text = text.substring(index);\n-  }\n-\n-}"
    },
    {
      "sha": "bee3fbf868a323c742cfb7bde4b53082af4cbfa8",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/UiScrollableParser.java",
      "status": "removed",
      "additions": 0,
      "deletions": 364,
      "changes": 364,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/UiScrollableParser.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/UiScrollableParser.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/UiScrollableParser.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,364 +0,0 @@\n-package io.appium.android.bootstrap.utils;\n-\n-import com.android.uiautomator.core.UiObject;\n-import com.android.uiautomator.core.UiObjectNotFoundException;\n-import com.android.uiautomator.core.UiScrollable;\n-import com.android.uiautomator.core.UiSelector;\n-import io.appium.android.bootstrap.Logger;\n-import io.appium.android.bootstrap.exceptions.UiSelectorSyntaxException;\n-\n-import java.lang.reflect.InvocationTargetException;\n-import java.lang.reflect.Method;\n-import java.lang.reflect.Type;\n-import java.util.ArrayList;\n-import java.util.Collection;\n-\n-/**\n- * For parsing strings that create UiScrollable objects into UiScrollable objects\n- */\n-public class UiScrollableParser {\n-\n-  private String text;\n-  private UiScrollable scrollable;\n-  private UiObject uiObject;\n-  private boolean returnedUiObject;\n-  private final static Method[] methods = UiScrollable.class.getDeclaredMethods();\n-  private static String[] prefixes = {\"new UiScrollable\", \"UiScrollable\"};\n-\n-  /*\n-   * Returns whether or not the input string is trying to instantiate a UiScrollable, and use its methods\n-   */\n-  public static boolean isUiScrollable(String textToParse) {\n-    for (String prefix : prefixes) {\n-      if (textToParse.startsWith(prefix)) {\n-        return true;\n-      }\n-    }\n-    return false;\n-  }\n-\n-  /*\n-   * Parse a string into a UiSelector, but use UiScrollable class and methods\n-   */\n-  public UiSelector parse(String textToParse) throws UiSelectorSyntaxException {\n-    text = textToParse.trim();\n-    returnedUiObject = false;\n-\n-    consumePrefix();\n-    consumeConstructor();\n-\n-    while (text.length() > 0) {\n-      consumePeriod();\n-      consumeFunctionCall();\n-    }\n-\n-    if (!returnedUiObject) {\n-      throw new UiSelectorSyntaxException(\"Last method called on a UiScrollable object must return a UiObject object\");\n-    }\n-\n-    return uiObject.getSelector();\n-  }\n-\n-  private void consumePeriod() throws UiSelectorSyntaxException {\n-    if (text.startsWith(\".\")) {\n-      text = text.substring(1);\n-    }\n-    else {\n-      throw new UiSelectorSyntaxException(\"Expected \\\".\\\" but saw \\\"\" + text.charAt(0) + \"\\\"\");\n-    }\n-  }\n-\n-  /*\n-   * You can start a UiScrollable like: \"new UiScrollable(UiSelector).somemethod()\" or \"Uiscrollable(UiSelector).somemethod()\"\n-   */\n-  private void consumePrefix() throws UiSelectorSyntaxException {\n-    boolean removedPrefix = false;\n-    for (String prefix : prefixes) {\n-      if (text.startsWith(prefix)) {\n-        text = text.substring(prefix.length());\n-        removedPrefix = true;\n-        break;\n-      }\n-    }\n-    if (!removedPrefix) {\n-      throw new UiSelectorSyntaxException(\"Was trying to parse as UiScrollable, but didn't start with an acceptable prefix. Acceptable prefixes are: 'new UiScrollable' or 'UiScrollable'. Saw: \" + text);\n-    }\n-  }\n-\n-  /*\n-   * consume UiScrollable constructor argument: parens surrounding a uiSelector. eg - \"(new UiSelector().scrollable(true))\"\n-   * initialize the UiScrollable object for this parser\n-   */\n-  private void consumeConstructor() throws UiSelectorSyntaxException {\n-    if (text.charAt(0) != '(') {\n-      throw new UiSelectorSyntaxException(\"Was expecting \\\"\" + \")\" + \"\\\" but instead saw \\\"\" + text.charAt(0) + \"\\\"\" );\n-    }\n-    StringBuilder argument = new StringBuilder();\n-\n-    int index = 1;\n-    int parenCount = 1;\n-    while (parenCount > 0) {\n-      try {\n-        switch (text.charAt(index)) {\n-          case ')':\n-            parenCount--;\n-            if (parenCount > 0) {\n-              argument.append(text.charAt(index));\n-            }\n-            break;\n-          case '(':\n-            parenCount++;\n-            argument.append(text.charAt(index));\n-            break;\n-          default:\n-            argument.append(text.charAt(index));\n-        }\n-      } catch (StringIndexOutOfBoundsException e) {\n-        throw new UiSelectorSyntaxException(\"unclosed paren in expression\");\n-      }\n-      index++;\n-    }\n-    if (argument.length() < 1) {\n-      throw new UiSelectorSyntaxException(\"UiScrollable constructor expects an argument\");\n-    }\n-\n-    UiSelector selector = new UiSelectorParser().parse(argument.toString());\n-    scrollable = new UiScrollable(selector);\n-\n-    // add two for parentheses surrounding arg\n-    text = text.substring(argument.length() + 2);\n-  }\n-\n-  /*\n-   * consume [a-z]* then an open paren, this is our methodName\n-   * consume .* and count open/close parens until the original open paren is close, this is our argument\n-   *\n-   */\n-  private void consumeFunctionCall() throws UiSelectorSyntaxException {\n-    String methodName;\n-    StringBuilder argument = new StringBuilder();\n-\n-    int parenIndex = text.indexOf('(');\n-    methodName = text.substring(0, parenIndex);\n-\n-    int index = parenIndex+1;\n-    int parenCount = 1;\n-    while (parenCount > 0) {\n-      try {\n-        switch (text.charAt(index)) {\n-          case ')':\n-            parenCount--;\n-            if (parenCount > 0) {\n-              argument.append(text.charAt(index));\n-            }\n-            break;\n-          case '(':\n-            parenCount++;\n-            argument.append(text.charAt(index));\n-            break;\n-          default:\n-            argument.append(text.charAt(index));\n-        }\n-      } catch (StringIndexOutOfBoundsException e) {\n-        throw new UiSelectorSyntaxException(\"unclosed paren in expression\");\n-      }\n-      index++;\n-    }\n-\n-    ArrayList<String> args = splitArgs(argument.toString());\n-\n-    Method method = getUiScrollableMethod(methodName, args);\n-\n-    applyArgsToMethod(method, args);\n-\n-    // add two for parentheses surrounding arg\n-    text = text.substring(methodName.length() + argument.length() + 2);\n-  }\n-\n-  private Method getUiScrollableMethod(String methodName, Collection<String> args) throws UiSelectorSyntaxException {\n-    for (Method method : methods) {\n-      if (method.getName().equals(methodName) && method.getGenericParameterTypes().length == args.size()) {\n-        return method;\n-      }\n-    }\n-    throw new UiSelectorSyntaxException(\"UiScrollable has no \\\"\" + methodName + \"\\\" method that takes \" + args.size() + \" arguments\");\n-  }\n-\n-  private void applyArgsToMethod(Method method, ArrayList<String> arguments) throws UiSelectorSyntaxException {\n-    StringBuilder sb = new StringBuilder();\n-    for (String arg : arguments) {\n-      sb.append(arg + \", \");\n-    }\n-    Logger.debug(\"UiScrollable invoking method: \" + method + \" args: \" + sb.toString());\n-\n-    if (method.getGenericReturnType() == UiScrollable.class && returnedUiObject) {\n-      throw new UiSelectorSyntaxException(\"Cannot call UiScrollable method \\\"\" + method.getName() + \"\\\" on a UiObject instance\");\n-    }\n-\n-    if (method.getGenericParameterTypes().length == 0) {\n-      try {\n-        scrollable = (UiScrollable)method.invoke(scrollable);\n-      } catch (IllegalAccessException e) {\n-        e.printStackTrace();\n-        throw new UiSelectorSyntaxException(\"problem using reflection to call this method\");\n-      } catch (InvocationTargetException e) {\n-        e.printStackTrace();\n-        throw new UiSelectorSyntaxException(\"problem using reflection to call this method\");\n-      } catch (ClassCastException e) {\n-        throw new UiSelectorSyntaxException(\"methods must return UiScrollable or UiObject instances\");\n-      }\n-    }\n-\n-    else {\n-      ArrayList<Object> convertedArgs = new ArrayList<Object>();\n-      Type[] parameterTypes = method.getGenericParameterTypes();\n-      for (int i = 0; i < parameterTypes.length; i++) {\n-        convertedArgs.add(coerceArgToType(parameterTypes[i], arguments.get(i)));\n-      }\n-\n-      String methodName = method.getName();\n-      Logger.debug(\"Method name: \" + methodName);\n-      boolean scrollIntoView = methodName.contentEquals(\"scrollIntoView\");\n-\n-      if (method.getGenericReturnType() == UiScrollable.class || scrollIntoView) {\n-        if (convertedArgs.size() > 1) {\n-          throw new UiSelectorSyntaxException(\"No UiScrollable method that returns type UiScrollable takes more than 1 argument\");\n-        }\n-        try {\n-          if (scrollIntoView) {\n-            Logger.debug(\"Setting uiObject for scrollIntoView\");\n-            UiSelector arg = (UiSelector) convertedArgs.get(0);\n-            returnedUiObject = true;\n-            uiObject = new UiObject(arg);\n-            // scrollIntoView must return the object if it's already in view.\n-            // without the exists check, the parser will error because there's no scrollable.\n-            if (uiObject.exists()) {\n-              return;\n-            }\n-            Logger.debug(\"Invoking method: \" + method + \" with: \" + uiObject);\n-            method.invoke(scrollable, uiObject);\n-            Logger.debug(\"Invoke complete.\");\n-          } else {\n-            scrollable = (UiScrollable)method.invoke(scrollable, convertedArgs.get(0));\n-          }\n-        } catch (IllegalAccessException e) {\n-          e.printStackTrace();\n-          throw new UiSelectorSyntaxException(\"problem using reflection to call this method\");\n-        } catch (InvocationTargetException e) {\n-          // Ignoring UiObjectNotFoundException as this handled during actual find.\n-          if (e.getCause() instanceof UiObjectNotFoundException) {\n-            Logger.debug(\"Ignoring UiObjectNotFoundException when using reflection to invoke method.\");\n-            return;\n-          }\n-          Logger.error(e.getCause().toString()); // we're only interested in the cause. InvocationTarget wraps the underlying problem.\n-          throw new UiSelectorSyntaxException(\"problem using reflection to call this method\");\n-        }\n-      }\n-\n-      else if (method.getGenericReturnType() == UiObject.class) {\n-        returnedUiObject = true;\n-\n-        if (convertedArgs.size() == 2) {\n-          try {\n-            uiObject = (UiObject)method.invoke(scrollable, convertedArgs.get(0), convertedArgs.get(1));\n-          } catch (IllegalAccessException e) {\n-            e.printStackTrace();\n-            throw new UiSelectorSyntaxException(\"problem using reflection to call this method\");\n-          } catch (InvocationTargetException e) {\n-            e.printStackTrace();\n-            throw new UiSelectorSyntaxException(\"problem using reflection to call this method\");\n-          }\n-        } else if (convertedArgs.size() == 3) {\n-          try {\n-            uiObject = (UiObject)method.invoke(scrollable, convertedArgs.get(0), convertedArgs.get(1), convertedArgs.get(2));\n-          } catch (IllegalAccessException e) {\n-            e.printStackTrace();\n-            throw new UiSelectorSyntaxException(\"problem using reflection to call this method\");\n-          } catch (InvocationTargetException e) {\n-            e.printStackTrace();\n-            throw new UiSelectorSyntaxException(\"problem using reflection to call this method\");\n-          }\n-        }\n-        else {\n-          throw new UiSelectorSyntaxException(\"UiScrollable methods which return a UiObject have 2-3 args\");\n-        }\n-      }\n-\n-      else {\n-        throw new UiSelectorSyntaxException(\"Must only call the 'scrollIntoView' method OR methods on UiScrollable which return UiScrollable or UiObject objects\");\n-      }\n-    }\n-  }\n-\n-  private Object coerceArgToType(Type type, String argument) throws UiSelectorSyntaxException {\n-    Logger.debug(\"UiScrollable coerce type: \" + type + \" arg: \" + argument);\n-    if (type == boolean.class) {\n-      if (argument.equals(\"true\")) {\n-        return true;\n-      }\n-      if (argument.equals(\"false\")) {\n-        return false;\n-      }\n-      throw new UiSelectorSyntaxException(argument + \" is not a boolean\");\n-    }\n-\n-    if (type == String.class) {\n-      if (argument.charAt(0) != '\"' || argument.charAt(argument.length()-1) != '\"') {\n-        throw new UiSelectorSyntaxException(argument + \" is not a string\");\n-      }\n-      return argument.substring(1, argument.length()-1);\n-    }\n-\n-    if (type == int.class) {\n-      return Integer.parseInt(argument);\n-    }\n-\n-    if (type.toString().equals(\"java.lang.Class<T>\")) {\n-      try {\n-        return Class.forName(argument);\n-      } catch (ClassNotFoundException e) {\n-        throw new UiSelectorSyntaxException(argument + \" class could not be found\");\n-      }\n-    }\n-\n-    if (type == UiSelector.class || type == UiObject.class) {\n-      UiSelectorParser parser = new UiSelectorParser();\n-      return parser.parse(argument);\n-    }\n-\n-    throw new UiSelectorSyntaxException(\"Could not coerce \" + argument + \" to any sort of Type\");\n-  }\n-\n-  private ArrayList<String> splitArgs(String argumentString) throws UiSelectorSyntaxException {\n-    ArrayList<String> args = new ArrayList<String>();\n-    if (argumentString.isEmpty()) {\n-      return args;\n-    }\n-    if (argumentString.charAt(0) == ',' || argumentString.charAt(argumentString.length()-1) == ',') {\n-      throw new UiSelectorSyntaxException(\"Missing argument. Trying to parse: \" + argumentString);\n-    }\n-\n-    int prevIndex = 0;\n-    int index = 1;\n-    boolean inQuotes = false;\n-    while (index < argumentString.length()) {\n-      switch (argumentString.charAt(index)) {\n-        case ',':\n-          if (!inQuotes) {\n-            if (prevIndex == index) {\n-              throw new UiSelectorSyntaxException(\"Missing argument. Trying to parse: \" + argumentString);\n-            }\n-            args.add(argumentString.substring(prevIndex, index).trim());\n-            prevIndex = index+1;\n-          }\n-        case '\"':\n-          inQuotes = !inQuotes;\n-          break;\n-      }\n-      index++;\n-    }\n-    args.add(argumentString.substring(prevIndex, index).trim());\n-\n-    return args;\n-  }\n-}"
    },
    {
      "sha": "afe451d28955adf1e6aa5105afa5d2bd36e2ffdf",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/UiSelectorParser.java",
      "status": "removed",
      "additions": 0,
      "deletions": 192,
      "changes": 192,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/UiSelectorParser.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/UiSelectorParser.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/UiSelectorParser.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,192 +0,0 @@\n-package io.appium.android.bootstrap.utils;\n-\n-import com.android.uiautomator.core.UiSelector;\n-import io.appium.android.bootstrap.Logger;\n-import io.appium.android.bootstrap.exceptions.UiSelectorSyntaxException;\n-\n-import java.lang.reflect.InvocationTargetException;\n-import java.lang.reflect.Method;\n-import java.lang.reflect.Type;\n-import java.util.ArrayList;\n-\n-/**\n- * For parsing strings which create new UiSelector objects into UiSelector object.\n- */\n-public class UiSelectorParser {\n-\n-  private String text;\n-  private UiSelector selector;\n-  private final static Method[] methods = UiSelector.class.getDeclaredMethods();\n-\n-  public UiSelector parse(String textToParse) throws UiSelectorSyntaxException {\n-    selector = new UiSelector();\n-    text = cleanseText(textToParse);\n-\n-    while (text.length() > 0) {\n-      consumePeriod();\n-      consumeFunctionCall();\n-    }\n-\n-    return selector;\n-  }\n-\n-  // prepares text for the main parsing loop\n-  private String cleanseText(String dirtyText) {\n-    String cleanText = dirtyText.trim();\n-\n-    if (cleanText.startsWith(\"new UiSelector()\")) {\n-      cleanText = cleanText.substring(16);\n-    }\n-    else if (cleanText.startsWith(\"UiSelector()\")) {\n-      cleanText = cleanText.substring(12);\n-    }\n-    else if (!cleanText.startsWith(\".\")){\n-      cleanText = \".\" + cleanText;\n-    }\n-\n-    return cleanText;\n-  }\n-\n-  private void consumePeriod() throws UiSelectorSyntaxException {\n-    if (text.startsWith(\".\")) {\n-      text = text.substring(1);\n-    }\n-    else {\n-      throw new UiSelectorSyntaxException(\"Expected \\\".\\\" but saw \\\"\" + text.charAt(0) + \"\\\"\");\n-    }\n-  }\n-\n-  /*\n-   * consume [a-z]* then an open paren, this is our methodName\n-   * consume .* and count open/close parens until the original open paren is close, this is our argument\n-   *\n-   */\n-  private void consumeFunctionCall() throws UiSelectorSyntaxException {\n-    String methodName;\n-    StringBuilder argument = new StringBuilder();\n-\n-    int parenIndex = text.indexOf('(');\n-    methodName = text.substring(0, parenIndex);\n-\n-    int index = parenIndex+1;\n-    int parenCount = 1;\n-    while (parenCount > 0) {\n-      try {\n-        switch (text.charAt(index)) {\n-          case ')':\n-            parenCount--;\n-            if (parenCount > 0) {\n-              argument.append(text.charAt(index));\n-            }\n-            break;\n-          case '(':\n-            parenCount++;\n-            argument.append(text.charAt(index));\n-            break;\n-          default:\n-            argument.append(text.charAt(index));\n-        }\n-      } catch (StringIndexOutOfBoundsException e) {\n-        throw new UiSelectorSyntaxException(\"unclosed paren in expression\");\n-      }\n-      index++;\n-    }\n-    if (argument.length() < 1) {\n-      throw new UiSelectorSyntaxException(methodName + \" method expects an argument\");\n-    }\n-\n-    // add two for parentheses surrounding arg\n-    text = text.substring(methodName.length() + argument.length() + 2);\n-\n-    ArrayList<Method> overloadedMethods = getSelectorMethods(methodName);\n-    if (overloadedMethods.size() < 1) {\n-      throw new UiSelectorSyntaxException(\"UiSelector has no \" + methodName + \" method\");\n-    }\n-\n-    selector = applyArgToMethods(overloadedMethods, argument.toString());\n-  }\n-\n-  private ArrayList<Method> getSelectorMethods(String methodName) {\n-    ArrayList<Method> ret = new ArrayList<Method>();\n-    for (Method method : methods) {\n-      if (method.getName().equals(methodName)) {\n-        ret.add(method);\n-      }\n-    }\n-    return ret;\n-  }\n-\n-  private UiSelector applyArgToMethods(ArrayList<Method> methods, String argument) throws UiSelectorSyntaxException {\n-\n-    Object arg = null;\n-    Method ourMethod = null;\n-    UiSelectorSyntaxException exThrown = null;\n-    for (Method method : methods) {\n-      try {\n-        Type parameterType = method.getGenericParameterTypes()[0];\n-        arg = coerceArgToType(parameterType, argument);\n-        ourMethod = method;\n-      } catch (UiSelectorSyntaxException e) {\n-        exThrown = e;\n-      }\n-    }\n-\n-    if (ourMethod == null || arg == null) {\n-      if (exThrown != null) {\n-        throw exThrown;\n-      } else {\n-        throw new UiSelectorSyntaxException(\"Could not apply argument \" + argument + \" to UiSelector method\");\n-      }\n-    }\n-\n-    try {\n-      return (UiSelector)ourMethod.invoke(selector, arg);\n-    } catch (IllegalAccessException e) {\n-      e.printStackTrace();\n-      throw new UiSelectorSyntaxException(\"problem using reflection to call this method\");\n-    } catch (InvocationTargetException e) {\n-      e.printStackTrace();\n-      throw new UiSelectorSyntaxException(\"problem using reflection to call this method\");\n-    }\n-\n-  }\n-\n-  private Object coerceArgToType(Type type, String argument) throws UiSelectorSyntaxException {\n-    Logger.debug(\"UiSelector coerce type: \" + type + \" arg: \" + argument);\n-    if (type == boolean.class) {\n-      if (argument.equals(\"true\")) {\n-        return true;\n-      }\n-      if (argument.equals(\"false\")) {\n-        return false;\n-      }\n-      throw new UiSelectorSyntaxException(argument + \" is not a boolean\");\n-    }\n-\n-    if (type == String.class) {\n-      if (argument.charAt(0) != '\"' || argument.charAt(argument.length()-1) != '\"') {\n-        throw new UiSelectorSyntaxException(argument + \" is not a string\");\n-      }\n-      return argument.substring(1, argument.length()-1);\n-    }\n-\n-    if (type == int.class) {\n-      return Integer.parseInt(argument);\n-    }\n-\n-    if (type.toString().equals(\"java.lang.Class<T>\")) {\n-      try {\n-        return Class.forName(argument);\n-      } catch (ClassNotFoundException e) {\n-        throw new UiSelectorSyntaxException(argument + \" class could not be found\");\n-      }\n-    }\n-\n-    if (type == UiSelector.class) {\n-      UiSelectorParser parser = new UiSelectorParser();\n-      return parser.parse(argument);\n-    }\n-\n-    throw new UiSelectorSyntaxException(\"Could not coerce \" + argument + \" to any sort of Type\");\n-  }\n-}"
    },
    {
      "sha": "700e849171bd90c2e0ed487023eec34f84eec94b",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/UnicodeEncoder.java",
      "status": "removed",
      "additions": 0,
      "deletions": 38,
      "changes": 38,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/UnicodeEncoder.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/UnicodeEncoder.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/UnicodeEncoder.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,38 +0,0 @@\n-package io.appium.android.bootstrap.utils;\n-\n-import java.nio.charset.Charset;\n-\n-import io.appium.android.bootstrap.Logger;\n-\n-\n-public class UnicodeEncoder {\n-  private static final Charset M_UTF7 = Charset.forName(\"x-IMAP-mailbox-name\");\n-  private static final Charset ASCII  = Charset.forName(\"US-ASCII\");\n-\n-\n-  public static String encode(final String text) {\n-    byte[] encoded = text.getBytes(M_UTF7);\n-    String ret = new String(encoded, ASCII);\n-    if (ret.charAt(ret.length()-1) != text.charAt(text.length()-1) && !ret.endsWith(\"-\")) {\n-      // in some cases there is a problem and the closing tag is not added\n-      // to the encoded text (for instance, with `ü`)\n-      Logger.debug(\"Closing tag missing. Adding.\");\n-      ret = ret + \"-\";\n-    }\n-    return ret;\n-  }\n-\n-  public static boolean needsEncoding(final String text) {\n-    char[] chars = text.toCharArray();\n-    for (int i = 0; i < chars.length; i++) {\n-      int cp = Character.codePointAt(chars, i);\n-      if (cp > 0x7F || cp == '&') {\n-        // Selenium uses a Unicode PUA to cover certain special characters\n-        // see https://code.google.com/p/selenium/source/browse/java/client/src/org/openqa/selenium/Keys.java\n-        // these should juse be passed through as is.\n-        return !(cp >= 0xE000 && cp <= 0xE040);\n-      }\n-    }\n-    return false;\n-  }\n-}"
    },
    {
      "sha": "e6d8c128f99d39e782bc1b202dbb5ccfc4d4236a",
      "filename": "lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/XMLHierarchy.java",
      "status": "removed",
      "additions": 0,
      "deletions": 189,
      "changes": 189,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/XMLHierarchy.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/XMLHierarchy.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/android/bootstrap/utils/XMLHierarchy.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,189 +0,0 @@\n-package io.appium.android.bootstrap.utils;\n-\n-import android.graphics.Point;\n-import android.os.Environment;\n-import android.view.Display;\n-import android.view.accessibility.AccessibilityNodeInfo;\n-import io.appium.android.bootstrap.exceptions.ElementNotFoundException;\n-import io.appium.android.bootstrap.exceptions.InvalidSelectorException;\n-import io.appium.android.bootstrap.exceptions.PairCreationException;\n-import io.appium.uiautomator.core.AccessibilityNodeInfoDumper;\n-import io.appium.uiautomator.core.UiAutomatorBridge;\n-import org.w3c.dom.Document;\n-import org.w3c.dom.NamedNodeMap;\n-import org.w3c.dom.Node;\n-import org.w3c.dom.NodeList;\n-import org.xml.sax.InputSource;\n-\n-import javax.xml.parsers.ParserConfigurationException;\n-import javax.xml.xpath.XPath;\n-import javax.xml.xpath.XPathConstants;\n-import javax.xml.xpath.XPathExpression;\n-import javax.xml.xpath.XPathExpressionException;\n-import javax.xml.xpath.XPathFactory;\n-import java.io.File;\n-import java.io.FileReader;\n-import java.util.ArrayList;\n-import java.util.HashMap;\n-\n-/**\n- * Created by jonahss on 8/12/14.\n- */\n-public abstract class XMLHierarchy {\n-\n-  public static ArrayList<ClassInstancePair> getClassInstancePairs(String xpathExpression)\n-          throws ElementNotFoundException, InvalidSelectorException, ParserConfigurationException {\n-    XPath xpath = XPathFactory.newInstance().newXPath();\n-    XPathExpression exp = null;\n-    try {\n-      exp = xpath.compile(xpathExpression);\n-    } catch (XPathExpressionException e) {\n-      throw new InvalidSelectorException(e.getMessage());\n-    }\n-\n-    Node formattedXmlRoot;\n-\n-    formattedXmlRoot = getFormattedXMLDoc();\n-\n-    return getClassInstancePairs(exp, formattedXmlRoot);\n-  }\n-\n-  public static ArrayList<ClassInstancePair> getClassInstancePairs(XPathExpression xpathExpression, Node root) throws ElementNotFoundException {\n-\n-    NodeList nodes;\n-    try {\n-      nodes = (NodeList) xpathExpression.evaluate(root, XPathConstants.NODESET);\n-    } catch (XPathExpressionException e) {\n-      e.printStackTrace();\n-      throw new ElementNotFoundException(\"XMLWindowHierarchy could not be parsed: \" + e.getMessage());\n-    }\n-\n-    ArrayList<ClassInstancePair> pairs = new ArrayList<ClassInstancePair>();\n-    for (int i = 0; i < nodes.getLength(); i++) {\n-      if (nodes.item(i).getNodeType() == Node.ELEMENT_NODE) {\n-        try {\n-          pairs.add(getPairFromNode(nodes.item(i)));\n-        } catch (PairCreationException e) { }\n-      }\n-    }\n-\n-    return pairs;\n-  }\n-\n-  public static InputSource getRawXMLHierarchy() {\n-    AccessibilityNodeInfo root = getRootAccessibilityNode();\n-    return serializeAccessibilityNode(root);\n-  }\n-\n-  private static AccessibilityNodeInfo getRootAccessibilityNode() {\n-    while(true){\n-      AccessibilityNodeInfo root = UiAutomatorBridge.getInstance().getQueryController().getAccessibilityRootNode();\n-      if (root != null) {\n-        return root;\n-      }\n-    }\n-  }\n-\n-  private static InputSource serializeAccessibilityNode(AccessibilityNodeInfo root) {\n-    try {\n-\n-      final File dumpFolder = new File(Environment.getDataDirectory(), \"local/tmp\");\n-      final File dumpFile = new File(dumpFolder, \"dump.xml\");\n-\n-      dumpFolder.mkdirs();\n-      dumpFile.delete();\n-\n-      AccessibilityNodeInfoDumper.dumpWindowToFile(root, dumpFile);\n-\n-      return new InputSource(new FileReader(dumpFile));\n-    } catch (Exception e) {\n-      throw new RuntimeException(\"Failed to Dump Window Hierarchy\", e);\n-    }\n-  }\n-\n-  public static Node getFormattedXMLDoc() {\n-    return formatXMLInput(getRawXMLHierarchy());\n-  }\n-\n-  public static Node formatXMLInput(InputSource input) {\n-    XPath xpath = XPathFactory.newInstance().newXPath();\n-\n-    Node root = null;\n-    try {\n-      root = (Node) xpath.evaluate(\"/\", input, XPathConstants.NODE);\n-    } catch (XPathExpressionException e) {\n-      throw new RuntimeException(\"Could not read xml hierarchy: \" + e.getMessage());\n-    }\n-\n-    HashMap<String, Integer> instances = new HashMap<String, Integer>();\n-\n-    // rename all the nodes with their \"class\" attribute\n-    // add an instance attribute\n-    annotateNodes(root, instances);\n-\n-    return root;\n-  }\n-\n-  private static ClassInstancePair getPairFromNode(Node node) throws PairCreationException {\n-\n-    NamedNodeMap attrElements = node.getAttributes();\n-    String androidClass;\n-    String instance;\n-\n-    try {\n-      androidClass = attrElements.getNamedItem(\"class\").getNodeValue();\n-      instance = attrElements.getNamedItem(\"instance\").getNodeValue();\n-    } catch (Exception e) {\n-      throw new PairCreationException(\"Could not create ClassInstancePair object: \" + e.getMessage());\n-    }\n-\n-    return new ClassInstancePair(androidClass, instance);\n-  }\n-\n-  private static void annotateNodes(Node node, HashMap<String, Integer> instances) {\n-    NodeList children = node.getChildNodes();\n-    for (int i = 0; i < children.getLength(); i++) {\n-      if (children.item(i).getNodeType() == Node.ELEMENT_NODE) {\n-        visitNode(children.item(i), instances);\n-        annotateNodes(children.item(i), instances);\n-      }\n-    }\n-  }\n-\n-  // set the node's tag name to the same as it's android class.\n-  // also number all instances of each class with an \"instance\" number. It increments for each class separately.\n-  // this allows use to use class and instance to identify a node.\n-  // we also take this chance to clean class names that might have dollar signs in them (and other odd characters)\n-  private static void visitNode(Node node, HashMap<String, Integer> instances) {\n-\n-    Document doc = node.getOwnerDocument();\n-    NamedNodeMap attributes = node.getAttributes();\n-\n-    String androidClass;\n-    try {\n-      androidClass = attributes.getNamedItem(\"class\").getNodeValue();\n-    } catch (Exception e) {\n-      return;\n-    }\n-\n-    androidClass = cleanTagName(androidClass);\n-\n-    if (!instances.containsKey(androidClass)) {\n-      instances.put(androidClass, 0);\n-    }\n-    Integer instance = instances.get(androidClass);\n-\n-    Node attrNode = doc.createAttribute(\"instance\");\n-    attrNode.setNodeValue(instance.toString());\n-    attributes.setNamedItem(attrNode);\n-\n-    doc.renameNode(node, node.getNamespaceURI(), androidClass);\n-\n-    instances.put(androidClass, instance + 1);\n-  }\n-\n-  private static String cleanTagName(String name) {\n-    name = name.replaceAll(\"[$@#&]\", \".\");\n-    return name.replaceAll(\"\\\\s\", \"\");\n-  }\n-}"
    },
    {
      "sha": "61a9234f528f2d2de08f454bf88c67d91a5c9817",
      "filename": "lib/devices/android/bootstrap/src/io/appium/uiautomator/core/AccessibilityNodeInfoDumper.java",
      "status": "removed",
      "additions": 0,
      "deletions": 226,
      "changes": 226,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/uiautomator/core/AccessibilityNodeInfoDumper.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/uiautomator/core/AccessibilityNodeInfoDumper.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/uiautomator/core/AccessibilityNodeInfoDumper.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,226 +0,0 @@\n-/*\n- * Copyright (C) 2012 The Android Open Source Project\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package io.appium.uiautomator.core;\n-import android.graphics.Point;\n-import android.os.SystemClock;\n-import android.util.Log;\n-import android.util.Xml;\n-import android.view.Display;\n-import android.view.accessibility.AccessibilityNodeInfo;\n-import io.appium.android.bootstrap.utils.API;\n-import org.xmlpull.v1.XmlSerializer;\n-import java.io.File;\n-import java.io.FileWriter;\n-import java.io.IOException;\n-import java.io.StringWriter;\n-import java.util.regex.Pattern;\n-\n-\n-\n-/**\n- *\n- * The AccessibilityNodeInfoDumper in Android Open Source Project contains a\n- * lot of bugs which will stay in old android versions forever. By coping the\n- * code of the latest version it is ensured that all patches become available on\n- * old android versions.\n- * \n- * down ported bugs are e.g.\n- * { @link https://code.google.com/p/android/issues/detail?id=62906 }\n- * { @link https://code.google.com/p/android/issues/detail?id=58733 }\n- * \n- */\n-public class AccessibilityNodeInfoDumper {\n-    private static final String LOGTAG = AccessibilityNodeInfoDumper.class.getSimpleName();\n-    private static final String[] NAF_EXCLUDED_CLASSES = new String[] {\n-            android.widget.GridView.class.getName(), android.widget.GridLayout.class.getName(),\n-            android.widget.ListView.class.getName(), android.widget.TableLayout.class.getName()\n-    };\n-    // XML 1.0 Legal Characters (http://stackoverflow.com/a/4237934/347155)\n-    // #x9 | #xA | #xD | [#x20-#xD7FF] | [#xE000-#xFFFD] | [#x10000-#x10FFFF]\n-    private static Pattern XML10Pattern = Pattern.compile(\"[^\"\n-                                                        + \"\\u0009\\r\\n\"\n-                                                        + \"\\u0020-\\uD7FF\"\n-                                                        + \"\\uE000-\\uFFFD\"\n-                                                        + \"\\ud800\\udc00-\\udbff\\udfff\"\n-                                                        + \"]\");\n-    /**\n-     * Using {@link AccessibilityNodeInfo} this method will walk the layout hierarchy\n-     * and generates an xml dump to the location specified by <code>dumpFile</code>\n-     * @param root The root accessibility node.\n-     * @param dumpFile The file to dump to.\n-     */\n-    public static void dumpWindowToFile(AccessibilityNodeInfo root, File dumpFile) {\n-        final long startTime = SystemClock.uptimeMillis();\n-        try {\n-            FileWriter writer = new FileWriter(dumpFile);\n-            XmlSerializer serializer = Xml.newSerializer();\n-            StringWriter stringWriter = new StringWriter();\n-            serializer.setOutput(stringWriter);\n-            serializer.startDocument(\"UTF-8\", true);\n-            serializer.startTag(\"\", \"hierarchy\");\n-\n-            if (root != null) {\n-                int width = -1;\n-                int height = -1;\n-                if(API.API_18){\n-                    // getDefaultDisplay method available since API level 18\n-                    Display display = UiAutomatorBridge.getInstance().getDefaultDisplay();\n-                    Point size = new android.graphics.Point();\n-                    display.getSize(size);\n-                    width = size.x;\n-                    height = size.y;\n-      \n-                    serializer.attribute(\"\", \"rotation\", Integer.toString(display.getRotation()));\n-              }\n-            \n-              dumpNodeRec(root, serializer, 0, width, height);\n-          }\n-\n-          serializer.endTag(\"\", \"hierarchy\");\n-          serializer.endDocument();\n-          writer.write(stringWriter.toString());\n-          writer.close();\n-        } catch (IOException e) {\n-            Log.e(LOGTAG, \"failed to dump window to file\", e);\n-        }\n-        final long endTime = SystemClock.uptimeMillis();\n-        Log.w(LOGTAG, \"Fetch time: \" + (endTime - startTime) + \"ms\");\n-    }\n-    private static void dumpNodeRec(AccessibilityNodeInfo node, XmlSerializer serializer,int index,\n-            int width, int height) throws IOException {\n-        serializer.startTag(\"\", \"node\");\n-        if (!nafExcludedClass(node) && !nafCheck(node))\n-            serializer.attribute(\"\", \"NAF\", Boolean.toString(true));\n-        serializer.attribute(\"\", \"index\", Integer.toString(index));\n-        serializer.attribute(\"\", \"text\", safeCharSeqToString(node.getText()));\n-        serializer.attribute(\"\", \"class\", safeCharSeqToString(node.getClassName()));\n-        serializer.attribute(\"\", \"package\", safeCharSeqToString(node.getPackageName()));\n-        serializer.attribute(\"\", \"content-desc\", safeCharSeqToString(node.getContentDescription()));\n-        serializer.attribute(\"\", \"checkable\", Boolean.toString(node.isCheckable()));\n-        serializer.attribute(\"\", \"checked\", Boolean.toString(node.isChecked()));\n-        serializer.attribute(\"\", \"clickable\", Boolean.toString(node.isClickable()));\n-        serializer.attribute(\"\", \"enabled\", Boolean.toString(node.isEnabled()));\n-        serializer.attribute(\"\", \"focusable\", Boolean.toString(node.isFocusable()));\n-        serializer.attribute(\"\", \"focused\", Boolean.toString(node.isFocused()));\n-        serializer.attribute(\"\", \"scrollable\", Boolean.toString(node.isScrollable()));\n-        serializer.attribute(\"\", \"long-clickable\", Boolean.toString(node.isLongClickable()));\n-        serializer.attribute(\"\", \"password\", Boolean.toString(node.isPassword()));\n-        serializer.attribute(\"\", \"selected\", Boolean.toString(node.isSelected()));\n-\n-        if(API.API_18){\n-          serializer.attribute(\"\", \"bounds\", AccessibilityNodeInfoHelper.getVisibleBoundsInScreen(\n-              node, width, height).toShortString());\n-          \n-        \tserializer.attribute(\"\", \"resource-id\", safeCharSeqToString(node.getViewIdResourceName()));\n-        }\n-\n-        int count = node.getChildCount();\n-        for (int i = 0; i < count; i++) {\n-            AccessibilityNodeInfo child = node.getChild(i);\n-            if (child != null) {\n-                if (child.isVisibleToUser()) {\n-                    dumpNodeRec(child, serializer, i, width, height);\n-                    child.recycle();\n-                } else {\n-                    Log.i(LOGTAG, String.format(\"Skipping invisible child: %s\", child.toString()));\n-                }\n-            } else {\n-                Log.i(LOGTAG, String.format(\"Null child %d/%d, parent: %s\",\n-                        i, count, node.toString()));\n-            }\n-        }\n-        serializer.endTag(\"\", \"node\");\n-    }\n-    /**\n-     * The list of classes to exclude my not be complete. We're attempting to\n-     * only reduce noise from standard layout classes that may be falsely\n-     * configured to accept clicks and are also enabled.\n-     *\n-     * @param node\n-     * @return true if node is excluded.\n-     */\n-    private static boolean nafExcludedClass(AccessibilityNodeInfo node) {\n-        String className = safeCharSeqToString(node.getClassName());\n-        for(String excludedClassName : NAF_EXCLUDED_CLASSES) {\n-            if(className.endsWith(excludedClassName))\n-                return true;\n-        }\n-        return false;\n-    }\n-    /**\n-     * We're looking for UI controls that are enabled, clickable but have no\n-     * text nor content-description. Such controls configuration indicate an\n-     * interactive control is present in the UI and is most likely not\n-     * accessibility friendly. We refer to such controls here as NAF controls\n-     * (Not Accessibility Friendly)\n-     *\n-     * @param node\n-     * @return false if a node fails the check, true if all is OK\n-     */\n-    private static boolean nafCheck(AccessibilityNodeInfo node) {\n-        boolean isNaf = node.isClickable() && node.isEnabled()\n-                && safeCharSeqToString(node.getContentDescription()).isEmpty()\n-                && safeCharSeqToString(node.getText()).isEmpty();\n-        if (!isNaf)\n-            return true;\n-        // check children since sometimes the containing element is clickable\n-        // and NAF but a child's text or description is available. Will assume\n-        // such layout as fine.\n-        return childNafCheck(node);\n-    }\n-    /**\n-     * This should be used when it's already determined that the node is NAF and\n-     * a further check of its children is in order. A node maybe a container\n-     * such as LinerLayout and may be set to be clickable but have no text or\n-     * content description but it is counting on one of its children to fulfill\n-     * the requirement for being accessibility friendly by having one or more of\n-     * its children fill the text or content-description. Such a combination is\n-     * considered by this dumper as acceptable for accessibility.\n-     *\n-     * @param node\n-     * @return false if node fails the check.\n-     */\n-    private static boolean childNafCheck(AccessibilityNodeInfo node) {\n-        int childCount = node.getChildCount();\n-        for (int x = 0; x < childCount; x++) {\n-            AccessibilityNodeInfo childNode = node.getChild(x);\n-            if (childNode == null) {\n-                Log.i(LOGTAG, String.format(\"Null child %d/%d, parent: %s\",\n-                        x, childCount, node.toString()));\n-                continue;\n-            }\n-            if (!safeCharSeqToString(childNode.getContentDescription()).isEmpty()\n-                    || !safeCharSeqToString(childNode.getText()).isEmpty())\n-                return true;\n-            if (childNafCheck(childNode))\n-                return true;\n-        }\n-        return false;\n-    }\n-    private static String safeCharSeqToString(CharSequence cs) {\n-        if (cs == null)\n-            return \"\";\n-        else {\n-            return stripInvalidXMLChars(cs);\n-        }\n-    }\n-    // Original Google code here broke UTF characters\n-    private static String stripInvalidXMLChars(CharSequence charSequence) {\n-        final StringBuilder sb = new StringBuilder(charSequence.length());\n-        sb.append(charSequence);\n-        return XML10Pattern.matcher(sb.toString()).replaceAll(\"?\");\n-    }\n-}\n\\ No newline at end of file"
    },
    {
      "sha": "98c1b99850d5178f58b663a26fb0ea5eae2d1ec3",
      "filename": "lib/devices/android/bootstrap/src/io/appium/uiautomator/core/AccessibilityNodeInfoHelper.java",
      "status": "removed",
      "additions": 0,
      "deletions": 47,
      "changes": 47,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/uiautomator/core/AccessibilityNodeInfoHelper.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/uiautomator/core/AccessibilityNodeInfoHelper.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/uiautomator/core/AccessibilityNodeInfoHelper.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,47 +0,0 @@\n-/*\n- * Copyright (C) 2012 The Android Open Source Project\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *      http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package io.appium.uiautomator.core;\n-import android.graphics.Rect;\n-import android.view.accessibility.AccessibilityNodeInfo;\n-/**\n- * This class contains static helper methods to work with\n- * {@link AccessibilityNodeInfo}\n- */\n-class AccessibilityNodeInfoHelper {\n-    /**\n-     * Returns the node's bounds clipped to the size of the display\n-     *\n-     * @param node\n-     * @param width pixel width of the display\n-     * @param height pixel height of the display\n-     * @return null if node is null, else a Rect containing visible bounds\n-     */\n-    static Rect getVisibleBoundsInScreen(AccessibilityNodeInfo node, int width, int height) {\n-        if (node == null) {\n-            return null;\n-        }\n-        // targeted node's bounds\n-        Rect nodeRect = new Rect();\n-        node.getBoundsInScreen(nodeRect);\n-        Rect displayRect = new Rect();\n-        displayRect.top = 0;\n-        displayRect.left = 0;\n-        displayRect.right = width;\n-        displayRect.bottom = height;\n-        nodeRect.intersect(displayRect);\n-        return nodeRect;\n-    }\n-}\n\\ No newline at end of file"
    },
    {
      "sha": "89daece5d75a7c982f1d909416243d92385a8d94",
      "filename": "lib/devices/android/bootstrap/src/io/appium/uiautomator/core/InteractionController.java",
      "status": "removed",
      "additions": 0,
      "deletions": 49,
      "changes": 49,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/uiautomator/core/InteractionController.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/uiautomator/core/InteractionController.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/uiautomator/core/InteractionController.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,49 +0,0 @@\n-package io.appium.uiautomator.core;\n-\n-import android.view.InputEvent;\n-import android.view.MotionEvent;\n-import android.view.MotionEvent.PointerCoords;\n-\n-import static io.appium.android.bootstrap.utils.ReflectionUtils.invoke;\n-import static io.appium.android.bootstrap.utils.ReflectionUtils.method;\n-\n-public class InteractionController {\n-\n-  private static final String CLASS_INTERACTION_CONTROLLER = \"com.android.uiautomator.core.InteractionController\";\n-  private static final String METHOD_SEND_KEY = \"sendKey\";\n-  private static final String METHOD_INJECT_EVENT_SYNC = \"injectEventSync\";\n-  private static final String METHOD_TOUCH_DOWN = \"touchDown\";\n-  private static final String METHOD_TOUCH_UP = \"touchUp\";\n-  private static final String METHOD_TOUCH_MOVE = \"touchMove\";\n-  public static final String METHOD_PERFORM_MULTI_POINTER_GESTURE = \"performMultiPointerGesture\";\n-\n-  private final Object interactionController;\n-\n-  public InteractionController(Object interactionController) {\n-    this.interactionController = interactionController;\n-  }\n-\n-  public boolean sendKey(int keyCode, int metaState){\n-    return (Boolean) invoke(method(CLASS_INTERACTION_CONTROLLER, METHOD_SEND_KEY, int.class, int.class), interactionController, keyCode, metaState);\n-  }\n-\n-  public boolean injectEventSync(InputEvent event) {\n-    return (Boolean) invoke(method(CLASS_INTERACTION_CONTROLLER, METHOD_INJECT_EVENT_SYNC, InputEvent.class), interactionController, event);\n-  }\n-\n-  public boolean touchDown(int x, int y) {\n-    return (Boolean) invoke(method(CLASS_INTERACTION_CONTROLLER, METHOD_TOUCH_DOWN, int.class, int.class), interactionController, x, y);\n-  }\n-\n-  public boolean touchUp(int x, int y) {\n-    return (Boolean) invoke(method(CLASS_INTERACTION_CONTROLLER, METHOD_TOUCH_UP, int.class, int.class), interactionController, x, y);\n-  }\n-\n-  public boolean touchMove(int x, int y) {\n-    return (Boolean) invoke(method(CLASS_INTERACTION_CONTROLLER, METHOD_TOUCH_MOVE, int.class, int.class), interactionController, x, y);\n-  }\n-\n-  public Boolean performMultiPointerGesture(MotionEvent.PointerCoords[][] pcs) {\n-    return (Boolean) invoke(method(CLASS_INTERACTION_CONTROLLER, METHOD_PERFORM_MULTI_POINTER_GESTURE, PointerCoords[][].class), interactionController, (Object) pcs);\n-  }\n-}"
    },
    {
      "sha": "1753907193af191cbae334d22cc61935695887ac",
      "filename": "lib/devices/android/bootstrap/src/io/appium/uiautomator/core/QueryController.java",
      "status": "removed",
      "additions": 0,
      "deletions": 23,
      "changes": 23,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/uiautomator/core/QueryController.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/uiautomator/core/QueryController.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/uiautomator/core/QueryController.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,23 +0,0 @@\n-package io.appium.uiautomator.core;\n-\n-import android.view.accessibility.AccessibilityNodeInfo;\n-\n-import static io.appium.android.bootstrap.utils.ReflectionUtils.invoke;\n-import static io.appium.android.bootstrap.utils.ReflectionUtils.method;\n-\n-public class QueryController {\n-\n-  private static final String CLASS_QUERY_CONTROLLER = \"com.android.uiautomator.core.QueryController\";\n-  private static final String METHOD_GET_ACCESSIBILITY_ROOT_NODE = \"getAccessibilityRootNode\";\n-\n-  private final Object queryController;\n-\n-  public QueryController(Object queryController) {\n-    this.queryController = queryController;\n-  }\n-\n-  public AccessibilityNodeInfo getAccessibilityRootNode() {\n-    return (AccessibilityNodeInfo) invoke(method(CLASS_QUERY_CONTROLLER, METHOD_GET_ACCESSIBILITY_ROOT_NODE), queryController);\n-  }\n-\n-}"
    },
    {
      "sha": "5d4cdeb4503274473237e87149b657c58f2fb2fd",
      "filename": "lib/devices/android/bootstrap/src/io/appium/uiautomator/core/UiAutomatorBridge.java",
      "status": "removed",
      "additions": 0,
      "deletions": 59,
      "changes": 59,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/uiautomator/core/UiAutomatorBridge.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/src/io/appium/uiautomator/core/UiAutomatorBridge.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/src/io/appium/uiautomator/core/UiAutomatorBridge.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,59 +0,0 @@\n-package io.appium.uiautomator.core;\n-\n-import android.util.Log;\n-import android.view.Display;\n-import android.view.InputEvent;\n-import com.android.uiautomator.core.UiDevice;\n-import io.appium.android.bootstrap.utils.ReflectionUtils;\n-\n-import static io.appium.android.bootstrap.utils.ReflectionUtils.getField;\n-import static io.appium.android.bootstrap.utils.ReflectionUtils.invoke;\n-import static io.appium.android.bootstrap.utils.ReflectionUtils.method;\n-\n-public class UiAutomatorBridge {\n-\n-  private static final String CLASS_UI_AUTOMATOR_BRIDGE = \"com.android.uiautomator.core.UiAutomatorBridge\";\n-\n-  private static final String FIELD_UI_AUTOMATOR_BRIDGE = \"mUiAutomationBridge\";\n-  private static final String FIELD_QUERY_CONTROLLER = \"mQueryController\";\n-  private static final String FIELD_INTERACTION_CONTROLLER = \"mInteractionController\";\n-\n-  private static final String METHOD_GET_DEFAULT_DISPLAY = \"getDefaultDisplay\";\n-  private static final String METHOD_INJECT_INPUT_EVENT = \"injectInputEvent\";\n-\n-  private static UiAutomatorBridge INSTANCE = new UiAutomatorBridge();\n-\n-  private final Object uiAutomatorBridge;\n-\n-  public UiAutomatorBridge() {\n-    try {\n-      final UiDevice device = UiDevice.getInstance();\n-\n-      this.uiAutomatorBridge = getField(UiDevice.class, FIELD_UI_AUTOMATOR_BRIDGE, device);\n-    } catch ( Error error){\n-      Log.e(\"ERROR\", \"error\", error);\n-      throw error;\n-    }\n-  }\n-\n-  public InteractionController getInteractionController() {\n-    return new InteractionController(getField(CLASS_UI_AUTOMATOR_BRIDGE, FIELD_INTERACTION_CONTROLLER, uiAutomatorBridge));\n-  }\n-\n-  public QueryController getQueryController() {\n-    return new QueryController(getField(CLASS_UI_AUTOMATOR_BRIDGE, FIELD_QUERY_CONTROLLER, uiAutomatorBridge));\n-  }\n-\n-  public Display getDefaultDisplay() {\n-    return (Display) invoke(method(CLASS_UI_AUTOMATOR_BRIDGE, METHOD_GET_DEFAULT_DISPLAY), uiAutomatorBridge);\n-  }\n-\n-  public boolean injectInputEvent(InputEvent event, boolean sync) {\n-    return (Boolean) invoke(method(CLASS_UI_AUTOMATOR_BRIDGE, METHOD_INJECT_INPUT_EVENT, InputEvent.class, Boolean.class),\n-            uiAutomatorBridge, event, sync);\n-  }\n-\n-  public static UiAutomatorBridge getInstance() {\n-    return INSTANCE;\n-  }\n-}"
    },
    {
      "sha": "547ff4b53aa0f27829e5388081c40d6b3425cbb4",
      "filename": "lib/devices/android/bootstrap/test/io/appium/android/bootstrap/utils/XMLHierarchyTest.java",
      "status": "removed",
      "additions": 0,
      "deletions": 90,
      "changes": 90,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/test/io/appium/android/bootstrap/utils/XMLHierarchyTest.java",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/bootstrap/test/io/appium/android/bootstrap/utils/XMLHierarchyTest.java",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/bootstrap/test/io/appium/android/bootstrap/utils/XMLHierarchyTest.java?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,90 +0,0 @@\n-package io.appium.android.bootstrap.utils;\n-\n-import junit.framework.TestCase;\n-import org.w3c.dom.Document;\n-import org.w3c.dom.Node;\n-import org.xml.sax.InputSource;\n-\n-import javax.xml.transform.Transformer;\n-import javax.xml.transform.TransformerFactory;\n-import javax.xml.transform.dom.DOMSource;\n-import javax.xml.transform.stream.StreamResult;\n-import javax.xml.xpath.XPath;\n-import javax.xml.xpath.XPathConstants;\n-import javax.xml.xpath.XPathExpression;\n-import javax.xml.xpath.XPathFactory;\n-import java.io.StringReader;\n-import java.io.StringWriter;\n-import java.util.ArrayList;\n-\n-public class XMLHierarchyTest extends TestCase {\n-\n-  private static XPath xpath = XPathFactory.newInstance().newXPath();\n-\n-  public void testGetClassInstancePairs() throws Exception {\n-\n-    String xmlString = \"<?xml version='1.0' encoding='UTF-8' standalone='yes'?><hierarchy rotation=\\\"0\\\"><android.widget.FrameLayout index=\\\"0\\\" text=\\\"\\\" resource-id=\\\"\\\" class=\\\"android.widget.FrameLayout\\\" package=\\\"com.droidzilla.testapp\\\" content-desc=\\\"\\\" checkable=\\\"false\\\" checked=\\\"false\\\" clickable=\\\"false\\\" enabled=\\\"true\\\" focusable=\\\"false\\\" focused=\\\"false\\\" scrollable=\\\"false\\\" long-clickable=\\\"false\\\" password=\\\"false\\\" selected=\\\"false\\\" bounds=\\\"[0,0][480,800]\\\" instance=\\\"0\\\"><android.view.View index=\\\"0\\\" text=\\\"\\\" resource-id=\\\"android:id/action_bar\\\" class=\\\"android.view.View\\\" package=\\\"com.droidzilla.testapp\\\" content-desc=\\\"\\\" checkable=\\\"false\\\" checked=\\\"false\\\" clickable=\\\"false\\\" enabled=\\\"true\\\" focusable=\\\"false\\\" focused=\\\"false\\\" scrollable=\\\"false\\\" long-clickable=\\\"false\\\" password=\\\"false\\\" selected=\\\"false\\\" bounds=\\\"[0,38][480,110]\\\" instance=\\\"0\\\"><android.widget.TextView index=\\\"0\\\" text=\\\"TestApp\\\" resource-id=\\\"android:id/action_bar_title\\\" class=\\\"android.widget.TextView\\\" package=\\\"com.droidzilla.testapp\\\" content-desc=\\\"\\\" checkable=\\\"false\\\" checked=\\\"false\\\" clickable=\\\"false\\\" enabled=\\\"true\\\" focusable=\\\"false\\\" focused=\\\"false\\\" scrollable=\\\"false\\\" long-clickable=\\\"false\\\" password=\\\"false\\\" selected=\\\"false\\\" bounds=\\\"[73,55][173,92]\\\" instance=\\\"0\\\"/><android.widget.ImageButton index=\\\"1\\\" text=\\\"\\\" resource-id=\\\"\\\" class=\\\"android.widget.ImageButton\\\" package=\\\"com.droidzilla.testapp\\\" content-desc=\\\"More options\\\" checkable=\\\"false\\\" checked=\\\"false\\\" clickable=\\\"true\\\" enabled=\\\"true\\\" focusable=\\\"true\\\" focused=\\\"false\\\" scrollable=\\\"false\\\" long-clickable=\\\"false\\\" password=\\\"false\\\" selected=\\\"false\\\" bounds=\\\"[396,38][480,110]\\\" instance=\\\"0\\\"/></android.view.View><android.widget.GridView index=\\\"1\\\" text=\\\"\\\" resource-id=\\\"com.droidzilla.testapp:id/cm_course_books_grid\\\" class=\\\"android.widget.GridView\\\" package=\\\"com.droidzilla.testapp\\\" content-desc=\\\"\\\" checkable=\\\"false\\\" checked=\\\"false\\\" clickable=\\\"true\\\" enabled=\\\"true\\\" focusable=\\\"true\\\" focused=\\\"true\\\" scrollable=\\\"false\\\" long-clickable=\\\"false\\\" password=\\\"false\\\" selected=\\\"false\\\" bounds=\\\"[3,113][477,797]\\\" instance=\\\"0\\\"><android.widget.RelativeLayout index=\\\"0\\\" text=\\\"\\\" resource-id=\\\"\\\" class=\\\"android.widget.RelativeLayout\\\" package=\\\"com.droidzilla.testapp\\\" content-desc=\\\"\\\" checkable=\\\"false\\\" checked=\\\"false\\\" clickable=\\\"true\\\" enabled=\\\"true\\\" focusable=\\\"false\\\" focused=\\\"false\\\" scrollable=\\\"false\\\" long-clickable=\\\"false\\\" password=\\\"false\\\" selected=\\\"false\\\" bounds=\\\"[3,113][238,413]\\\" instance=\\\"0\\\"><android.widget.TextView index=\\\"0\\\" text=\\\"Image 0\\\" resource-id=\\\"com.droidzilla.testapp:id/bookStatus\\\" class=\\\"android.widget.TextView\\\" package=\\\"com.droidzilla.testapp\\\" content-desc=\\\"\\\" checkable=\\\"false\\\" checked=\\\"false\\\" clickable=\\\"false\\\" enabled=\\\"true\\\" focusable=\\\"false\\\" focused=\\\"false\\\" scrollable=\\\"false\\\" long-clickable=\\\"false\\\" password=\\\"false\\\" selected=\\\"false\\\" bounds=\\\"[82,136][158,165]\\\" instance=\\\"1\\\"/><android.widget.TextView index=\\\"1\\\" text=\\\"John\\\" resource-id=\\\"com.droidzilla.testapp:id/bookTitle\\\" class=\\\"android.widget.TextView\\\" package=\\\"com.droidzilla.testapp\\\" content-desc=\\\"\\\" checkable=\\\"false\\\" checked=\\\"false\\\" clickable=\\\"false\\\" enabled=\\\"true\\\" focusable=\\\"false\\\" focused=\\\"false\\\" scrollable=\\\"false\\\" long-clickable=\\\"false\\\" password=\\\"false\\\" selected=\\\"false\\\" bounds=\\\"[96,361][144,390]\\\" instance=\\\"2\\\"/></android.widget.RelativeLayout><android.widget.RelativeLayout index=\\\"1\\\" text=\\\"\\\" resource-id=\\\"\\\" class=\\\"android.widget.RelativeLayout\\\" package=\\\"com.droidzilla.testapp\\\" content-desc=\\\"\\\" checkable=\\\"false\\\" checked=\\\"false\\\" clickable=\\\"true\\\" enabled=\\\"true\\\" focusable=\\\"false\\\" focused=\\\"false\\\" scrollable=\\\"false\\\" long-clickable=\\\"false\\\" password=\\\"false\\\" selected=\\\"false\\\" bounds=\\\"[241,113][476,413]\\\" instance=\\\"1\\\"><android.widget.TextView index=\\\"0\\\" text=\\\"Image 1\\\" resource-id=\\\"com.droidzilla.testapp:id/bookStatus\\\" class=\\\"android.widget.TextView\\\" package=\\\"com.droidzilla.testapp\\\" content-desc=\\\"\\\" checkable=\\\"false\\\" checked=\\\"false\\\" clickable=\\\"false\\\" enabled=\\\"true\\\" focusable=\\\"false\\\" focused=\\\"false\\\" scrollable=\\\"false\\\" long-clickable=\\\"false\\\" password=\\\"false\\\" selected=\\\"false\\\" bounds=\\\"[320,136][396,165]\\\" instance=\\\"3\\\"/><android.widget.TextView index=\\\"1\\\" text=\\\"Dan\\\" resource-id=\\\"com.droidzilla.testapp:id/bookTitle\\\" class=\\\"android.widget.TextView\\\" package=\\\"com.droidzilla.testapp\\\" content-desc=\\\"\\\" checkable=\\\"false\\\" checked=\\\"false\\\" clickable=\\\"false\\\" enabled=\\\"true\\\" focusable=\\\"false\\\" focused=\\\"false\\\" scrollable=\\\"false\\\" long-clickable=\\\"false\\\" password=\\\"false\\\" selected=\\\"false\\\" bounds=\\\"[339,361][377,390]\\\" instance=\\\"4\\\"/></android.widget.RelativeLayout><android.widget.RelativeLayout index=\\\"2\\\" text=\\\"\\\" resource-id=\\\"\\\" class=\\\"android.widget.RelativeLayout\\\" package=\\\"com.droidzilla.testapp\\\" content-desc=\\\"\\\" checkable=\\\"false\\\" checked=\\\"false\\\" clickable=\\\"true\\\" enabled=\\\"true\\\" focusable=\\\"false\\\" focused=\\\"false\\\" scrollable=\\\"false\\\" long-clickable=\\\"false\\\" password=\\\"false\\\" selected=\\\"false\\\" bounds=\\\"[3,416][238,716]\\\" instance=\\\"2\\\"><android.widget.TextView index=\\\"0\\\" text=\\\"Image 2\\\" resource-id=\\\"com.droidzilla.testapp:id/bookStatus\\\" class=\\\"android.widget.TextView\\\" package=\\\"com.droidzilla.testapp\\\" content-desc=\\\"\\\" checkable=\\\"false\\\" checked=\\\"false\\\" clickable=\\\"false\\\" enabled=\\\"true\\\" focusable=\\\"false\\\" focused=\\\"false\\\" scrollable=\\\"false\\\" long-clickable=\\\"false\\\" password=\\\"false\\\" selected=\\\"false\\\" bounds=\\\"[82,439][158,468]\\\" instance=\\\"5\\\"/><android.widget.TextView index=\\\"1\\\" text=\\\"Mary\\\" resource-id=\\\"com.droidzilla.testapp:id/bookTitle\\\" class=\\\"android.widget.TextView\\\" package=\\\"com.droidzilla.testapp\\\" content-desc=\\\"\\\" checkable=\\\"false\\\" checked=\\\"false\\\" clickable=\\\"false\\\" enabled=\\\"true\\\" focusable=\\\"false\\\" focused=\\\"false\\\" scrollable=\\\"false\\\" long-clickable=\\\"false\\\" password=\\\"false\\\" selected=\\\"false\\\" bounds=\\\"[96,664][145,693]\\\" instance=\\\"6\\\"/></android.widget.RelativeLayout><android.widget.RelativeLayout index=\\\"3\\\" text=\\\"\\\" resource-id=\\\"\\\" class=\\\"android.widget.RelativeLayout\\\" package=\\\"com.droidzilla.testapp\\\" content-desc=\\\"\\\" checkable=\\\"false\\\" checked=\\\"false\\\" clickable=\\\"true\\\" enabled=\\\"true\\\" focusable=\\\"false\\\" focused=\\\"false\\\" scrollable=\\\"false\\\" long-clickable=\\\"false\\\" password=\\\"false\\\" selected=\\\"false\\\" bounds=\\\"[241,416][476,716]\\\" instance=\\\"3\\\"><android.widget.TextView index=\\\"0\\\" text=\\\"Image 3\\\" resource-id=\\\"com.droidzilla.testapp:id/bookStatus\\\" class=\\\"android.widget.TextView\\\" package=\\\"com.droidzilla.testapp\\\" content-desc=\\\"\\\" checkable=\\\"false\\\" checked=\\\"false\\\" clickable=\\\"false\\\" enabled=\\\"true\\\" focusable=\\\"false\\\" focused=\\\"false\\\" scrollable=\\\"false\\\" long-clickable=\\\"false\\\" password=\\\"false\\\" selected=\\\"false\\\" bounds=\\\"[320,439][396,468]\\\" instance=\\\"7\\\"/><android.widget.TextView index=\\\"1\\\" text=\\\"Diana\\\" resource-id=\\\"com.droidzilla.testapp:id/bookTitle\\\" class=\\\"android.widget.TextView\\\" package=\\\"com.droidzilla.testapp\\\" content-desc=\\\"\\\" checkable=\\\"false\\\" checked=\\\"false\\\" clickable=\\\"false\\\" enabled=\\\"true\\\" focusable=\\\"false\\\" focused=\\\"false\\\" scrollable=\\\"false\\\" long-clickable=\\\"false\\\" password=\\\"false\\\" selected=\\\"false\\\" bounds=\\\"[331,664][386,693]\\\" instance=\\\"8\\\"/></android.widget.RelativeLayout></android.widget.GridView></android.widget.FrameLayout></hierarchy>\\n\";\n-    InputSource testInput = new InputSource(new StringReader(xmlString));\n-\n-    Node root = (Node) xpath.evaluate(\"/\", testInput, XPathConstants.NODE);\n-\n-\n-    XPathExpression expression = xpath.compile(\"//android.widget.GridView/android.widget.RelativeLayout\");\n-    ArrayList<ClassInstancePair> pairs = XMLHierarchy.getClassInstancePairs(expression, root);\n-    assertEquals(4, pairs.size());\n-    assertEquals(\"android.widget.RelativeLayout\", pairs.get(0).getAndroidClass());\n-    assertEquals(\"0\", pairs.get(0).getInstance());\n-    assertEquals(\"2\", pairs.get(2).getInstance());\n-\n-  }\n-\n-  public void testFormatXMLInput() throws Exception {\n-    String xmlString = \"<?xml version='1.0' encoding='UTF-8' standalone='yes'?><hierarchy><foo0 class='class0'><foo1 class='class1'></foo1><foo0 class='class0'></foo0><foo1 class='class1'></foo1></foo0><foo1 class='class1'></foo1></hierarchy>\";\n-    InputSource testInput = new InputSource(new StringReader(xmlString));\n-\n-    Node formatted = XMLHierarchy.formatXMLInput(testInput);\n-\n-    Node childNode = formatted.getFirstChild().getFirstChild();\n-\n-    assertEquals(\"class0\", childNode.getNodeName());\n-    assertEquals(\"0\", childNode.getAttributes().getNamedItem(\"instance\").getNodeValue());\n-\n-    childNode = formatted.getFirstChild().getLastChild();\n-\n-    assertEquals(\"class1\", childNode.getNodeName());\n-    assertEquals(\"2\", childNode.getAttributes().getNamedItem(\"instance\").getNodeValue());\n-\n-  }\n-\n-  public void testCleaningTags() throws Exception {\n-    String[] samples = {\"foo $ bar\", \"foo$bar\", \"foo.bar\", \"foo.   bar\"};\n-    String expected = \"foo.bar\";\n-    for (String sample : samples) {\n-      String test = \"<tag class=\\\"\" + sample + \"\\\">teeeeeext</tag>\";\n-      InputSource testInput = new InputSource(new StringReader(test));\n-      Node formatted = XMLHierarchy.formatXMLInput(testInput);\n-      assertEquals(expected, formatted.getFirstChild().getNodeName());\n-    }\n-  }\n-\n-  public void testOutput() throws Exception {\n-    String xmlString = \"<?xml version='1.0' encoding='UTF-8' standalone='yes'?><hierarchy rotation=\\\"0\\\"><android.widget.FrameLayout index=\\\"0\\\" text=\\\"\\\" resource-id=\\\"\\\" class=\\\"android.widget.FrameLayout\\\" package=\\\"com.droidzilla.testapp\\\" content-desc=\\\"\\\" checkable=\\\"false\\\" checked=\\\"false\\\" clickable=\\\"false\\\" enabled=\\\"true\\\" focusable=\\\"false\\\" focused=\\\"false\\\" scrollable=\\\"false\\\" long-clickable=\\\"false\\\" password=\\\"false\\\" selected=\\\"false\\\" bounds=\\\"[0,0][480,800]\\\" instance=\\\"0\\\"><android.view.View index=\\\"0\\\" text=\\\"\\\" resource-id=\\\"android:id/action_bar\\\" class=\\\"android.view.View\\\" package=\\\"com.droidzilla.testapp\\\" content-desc=\\\"\\\" checkable=\\\"false\\\" checked=\\\"false\\\" clickable=\\\"false\\\" enabled=\\\"true\\\" focusable=\\\"false\\\" focused=\\\"false\\\" scrollable=\\\"false\\\" long-clickable=\\\"false\\\" password=\\\"false\\\" selected=\\\"false\\\" bounds=\\\"[0,38][480,110]\\\" instance=\\\"0\\\"><android.widget.TextView index=\\\"0\\\" text=\\\"TestApp\\\" resource-id=\\\"android:id/action_bar_title\\\" class=\\\"android.widget.TextView\\\" package=\\\"com.droidzilla.testapp\\\" content-desc=\\\"\\\" checkable=\\\"false\\\" checked=\\\"false\\\" clickable=\\\"false\\\" enabled=\\\"true\\\" focusable=\\\"false\\\" focused=\\\"false\\\" scrollable=\\\"false\\\" long-clickable=\\\"false\\\" password=\\\"false\\\" selected=\\\"false\\\" bounds=\\\"[73,55][173,92]\\\" instance=\\\"0\\\"/><android.widget.ImageButton index=\\\"1\\\" text=\\\"\\\" resource-id=\\\"\\\" class=\\\"android.widget.ImageButton\\\" package=\\\"com.droidzilla.testapp\\\" content-desc=\\\"More options\\\" checkable=\\\"false\\\" checked=\\\"false\\\" clickable=\\\"true\\\" enabled=\\\"true\\\" focusable=\\\"true\\\" focused=\\\"false\\\" scrollable=\\\"false\\\" long-clickable=\\\"false\\\" password=\\\"false\\\" selected=\\\"false\\\" bounds=\\\"[396,38][480,110]\\\" instance=\\\"0\\\"/></android.view.View><android.widget.GridView index=\\\"1\\\" text=\\\"\\\" resource-id=\\\"com.droidzilla.testapp:id/cm_course_books_grid\\\" class=\\\"android.widget.GridView\\\" package=\\\"com.droidzilla.testapp\\\" content-desc=\\\"\\\" checkable=\\\"false\\\" checked=\\\"false\\\" clickable=\\\"true\\\" enabled=\\\"true\\\" focusable=\\\"true\\\" focused=\\\"true\\\" scrollable=\\\"false\\\" long-clickable=\\\"false\\\" password=\\\"false\\\" selected=\\\"false\\\" bounds=\\\"[3,113][477,797]\\\" instance=\\\"0\\\"><android.widget.RelativeLayout index=\\\"0\\\" text=\\\"\\\" resource-id=\\\"\\\" class=\\\"android.widget.RelativeLayout\\\" package=\\\"com.droidzilla.testapp\\\" content-desc=\\\"\\\" checkable=\\\"false\\\" checked=\\\"false\\\" clickable=\\\"true\\\" enabled=\\\"true\\\" focusable=\\\"false\\\" focused=\\\"false\\\" scrollable=\\\"false\\\" long-clickable=\\\"false\\\" password=\\\"false\\\" selected=\\\"false\\\" bounds=\\\"[3,113][238,413]\\\" instance=\\\"0\\\"><android.widget.TextView index=\\\"0\\\" text=\\\"Image 0\\\" resource-id=\\\"com.droidzilla.testapp:id/bookStatus\\\" class=\\\"android.widget.TextView\\\" package=\\\"com.droidzilla.testapp\\\" content-desc=\\\"\\\" checkable=\\\"false\\\" checked=\\\"false\\\" clickable=\\\"false\\\" enabled=\\\"true\\\" focusable=\\\"false\\\" focused=\\\"false\\\" scrollable=\\\"false\\\" long-clickable=\\\"false\\\" password=\\\"false\\\" selected=\\\"false\\\" bounds=\\\"[82,136][158,165]\\\" instance=\\\"1\\\"/><android.widget.TextView index=\\\"1\\\" text=\\\"John\\\" resource-id=\\\"com.droidzilla.testapp:id/bookTitle\\\" class=\\\"android.widget.TextView\\\" package=\\\"com.droidzilla.testapp\\\" content-desc=\\\"\\\" checkable=\\\"false\\\" checked=\\\"false\\\" clickable=\\\"false\\\" enabled=\\\"true\\\" focusable=\\\"false\\\" focused=\\\"false\\\" scrollable=\\\"false\\\" long-clickable=\\\"false\\\" password=\\\"false\\\" selected=\\\"false\\\" bounds=\\\"[96,361][144,390]\\\" instance=\\\"2\\\"/></android.widget.RelativeLayout><android.widget.RelativeLayout index=\\\"1\\\" text=\\\"\\\" resource-id=\\\"\\\" class=\\\"android.widget.RelativeLayout\\\" package=\\\"com.droidzilla.testapp\\\" content-desc=\\\"\\\" checkable=\\\"false\\\" checked=\\\"false\\\" clickable=\\\"true\\\" enabled=\\\"true\\\" focusable=\\\"false\\\" focused=\\\"false\\\" scrollable=\\\"false\\\" long-clickable=\\\"false\\\" password=\\\"false\\\" selected=\\\"false\\\" bounds=\\\"[241,113][476,413]\\\" instance=\\\"1\\\"><android.widget.TextView index=\\\"0\\\" text=\\\"Image 1\\\" resource-id=\\\"com.droidzilla.testapp:id/bookStatus\\\" class=\\\"android.widget.TextView\\\" package=\\\"com.droidzilla.testapp\\\" content-desc=\\\"\\\" checkable=\\\"false\\\" checked=\\\"false\\\" clickable=\\\"false\\\" enabled=\\\"true\\\" focusable=\\\"false\\\" focused=\\\"false\\\" scrollable=\\\"false\\\" long-clickable=\\\"false\\\" password=\\\"false\\\" selected=\\\"false\\\" bounds=\\\"[320,136][396,165]\\\" instance=\\\"3\\\"/><android.widget.TextView index=\\\"1\\\" text=\\\"Dan\\\" resource-id=\\\"com.droidzilla.testapp:id/bookTitle\\\" class=\\\"android.widget.TextView\\\" package=\\\"com.droidzilla.testapp\\\" content-desc=\\\"\\\" checkable=\\\"false\\\" checked=\\\"false\\\" clickable=\\\"false\\\" enabled=\\\"true\\\" focusable=\\\"false\\\" focused=\\\"false\\\" scrollable=\\\"false\\\" long-clickable=\\\"false\\\" password=\\\"false\\\" selected=\\\"false\\\" bounds=\\\"[339,361][377,390]\\\" instance=\\\"4\\\"/></android.widget.RelativeLayout><android.widget.RelativeLayout index=\\\"2\\\" text=\\\"\\\" resource-id=\\\"\\\" class=\\\"android.widget.RelativeLayout\\\" package=\\\"com.droidzilla.testapp\\\" content-desc=\\\"\\\" checkable=\\\"false\\\" checked=\\\"false\\\" clickable=\\\"true\\\" enabled=\\\"true\\\" focusable=\\\"false\\\" focused=\\\"false\\\" scrollable=\\\"false\\\" long-clickable=\\\"false\\\" password=\\\"false\\\" selected=\\\"false\\\" bounds=\\\"[3,416][238,716]\\\" instance=\\\"2\\\"><android.widget.TextView index=\\\"0\\\" text=\\\"Image 2\\\" resource-id=\\\"com.droidzilla.testapp:id/bookStatus\\\" class=\\\"android.widget.TextView\\\" package=\\\"com.droidzilla.testapp\\\" content-desc=\\\"\\\" checkable=\\\"false\\\" checked=\\\"false\\\" clickable=\\\"false\\\" enabled=\\\"true\\\" focusable=\\\"false\\\" focused=\\\"false\\\" scrollable=\\\"false\\\" long-clickable=\\\"false\\\" password=\\\"false\\\" selected=\\\"false\\\" bounds=\\\"[82,439][158,468]\\\" instance=\\\"5\\\"/><android.widget.TextView index=\\\"1\\\" text=\\\"Mary\\\" resource-id=\\\"com.droidzilla.testapp:id/bookTitle\\\" class=\\\"android.widget.TextView\\\" package=\\\"com.droidzilla.testapp\\\" content-desc=\\\"\\\" checkable=\\\"false\\\" checked=\\\"false\\\" clickable=\\\"false\\\" enabled=\\\"true\\\" focusable=\\\"false\\\" focused=\\\"false\\\" scrollable=\\\"false\\\" long-clickable=\\\"false\\\" password=\\\"false\\\" selected=\\\"false\\\" bounds=\\\"[96,664][145,693]\\\" instance=\\\"6\\\"/></android.widget.RelativeLayout><android.widget.RelativeLayout index=\\\"3\\\" text=\\\"\\\" resource-id=\\\"\\\" class=\\\"android.widget.RelativeLayout\\\" package=\\\"com.droidzilla.testapp\\\" content-desc=\\\"\\\" checkable=\\\"false\\\" checked=\\\"false\\\" clickable=\\\"true\\\" enabled=\\\"true\\\" focusable=\\\"false\\\" focused=\\\"false\\\" scrollable=\\\"false\\\" long-clickable=\\\"false\\\" password=\\\"false\\\" selected=\\\"false\\\" bounds=\\\"[241,416][476,716]\\\" instance=\\\"3\\\"><android.widget.TextView index=\\\"0\\\" text=\\\"Image 3\\\" resource-id=\\\"com.droidzilla.testapp:id/bookStatus\\\" class=\\\"android.widget.TextView\\\" package=\\\"com.droidzilla.testapp\\\" content-desc=\\\"\\\" checkable=\\\"false\\\" checked=\\\"false\\\" clickable=\\\"false\\\" enabled=\\\"true\\\" focusable=\\\"false\\\" focused=\\\"false\\\" scrollable=\\\"false\\\" long-clickable=\\\"false\\\" password=\\\"false\\\" selected=\\\"false\\\" bounds=\\\"[320,439][396,468]\\\" instance=\\\"7\\\"/><android.widget.TextView index=\\\"1\\\" text=\\\"Diana\\\" resource-id=\\\"com.droidzilla.testapp:id/bookTitle\\\" class=\\\"android.widget.TextView\\\" package=\\\"com.droidzilla.testapp\\\" content-desc=\\\"\\\" checkable=\\\"false\\\" checked=\\\"false\\\" clickable=\\\"false\\\" enabled=\\\"true\\\" focusable=\\\"false\\\" focused=\\\"false\\\" scrollable=\\\"false\\\" long-clickable=\\\"false\\\" password=\\\"false\\\" selected=\\\"false\\\" bounds=\\\"[331,664][386,693]\\\" instance=\\\"8\\\"/></android.widget.RelativeLayout></android.widget.GridView></android.widget.FrameLayout></hierarchy>\\n\";\n-    InputSource testInput = new InputSource(new StringReader(xmlString));\n-\n-    Node node = XMLHierarchy.formatXMLInput(testInput);\n-    Document doc = (Document) node;\n-\n-    TransformerFactory tf = TransformerFactory.newInstance();\n-    StringWriter writer = new StringWriter();\n-    Transformer transformer;\n-    String out;\n-\n-    transformer = tf.newTransformer();\n-    transformer.transform(new DOMSource(doc), new StreamResult(writer));\n-    out = writer.getBuffer().toString();\n-\n-    assertEquals(xmlString, out); //close enough\n-\n-\n-  }\n-}\n\\ No newline at end of file"
    },
    {
      "sha": "1dca063db4953f713fc66f24e176f3d4aa474c15",
      "filename": "lib/devices/android/chrome.js",
      "status": "removed",
      "additions": 0,
      "deletions": 223,
      "changes": 223,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/chrome.js",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/chrome.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/chrome.js?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,223 +0,0 @@\n-\"use strict\";\n-\n-var Android = require('./android.js')\n-  , Chromedriver = require('appium-chromedriver')\n-  , _ = require('underscore')\n-  , logger = require('../../server/logger.js').get('appium')\n-  , status = require('../../server/status.js')\n-  , deviceCommon = require('../common.js')\n-  , jwpSuccess = deviceCommon.jwpSuccess\n-  , async = require('async')\n-  , ADB = require('./adb.js')\n-  , UiAutomator = require('./uiautomator.js');\n-\n-var NATIVE_WIN = \"NATIVE_APP\";\n-var WEBVIEW_WIN = \"WEBVIEW\";\n-var WEBVIEW_BASE = WEBVIEW_WIN + \"_\";\n-\n-var ChromeAndroid = function () {\n-  this.init();\n-};\n-\n-_.extend(ChromeAndroid.prototype, Android.prototype);\n-ChromeAndroid.prototype._androidInit = Android.prototype.init;\n-ChromeAndroid.prototype.init = function () {\n-  this._androidInit();\n-  this.adb = null;\n-  this.onDieCb = null;\n-  this.setChromedriverMode();\n-};\n-\n-ChromeAndroid.prototype.setChromedriverMode = function () {\n-  logger.info(\"Set mode: Proxying straight through to Chromedriver\");\n-  this.isProxy = true;\n-  // when proxying to chromedriver, we need to make sure the context endpoints\n-  // are trapped by appium for its own purposes\n-  this.avoidProxy = [\n-    ['POST', new RegExp('^/wd/hub/session/[^/]+/context')],\n-    ['GET', new RegExp('^/wd/hub/session/[^/]+/context')],\n-    ['POST', new RegExp('^/wd/hub/session/[^/]+/touch/perform')],\n-    ['POST', new RegExp('^/wd/hub/session/[^/]+/touch/multi/perform')]\n-  ];\n-};\n-\n-ChromeAndroid.prototype.setNativeMode = function () {\n-  logger.info(\"Set mode: Proxying to Appium Bootstrap\");\n-  this.isProxy = false;\n-};\n-\n-ChromeAndroid.prototype.configure = function (args, caps, cb) {\n-  logger.debug(\"Looks like we want chrome on android\");\n-  this._deviceConfigure(args, caps);\n-  var bName = this.args.browserName || \"\";\n-  var app = this.appString().toLowerCase() ||\n-            bName.toString().toLowerCase();\n-  if (app === \"chromium\") {\n-    this.args.androidPackage = \"org.chromium.chrome.shell\";\n-    this.args.androidActivity = \".ChromeShellActivity\";\n-  } else if (app === \"chromebeta\") {\n-    this.args.androidPackage = \"com.chrome.beta\";\n-    this.args.androidActivity = \"com.google.android.apps.chrome.Main\";\n-  } else if (app === \"browser\") {\n-    this.args.androidPackage = \"com.android.browser\";\n-    this.args.androidActivity = \"com.android.browser.BrowserActivity\";\n-  } else {\n-    this.args.androidPackage = \"com.android.chrome\";\n-    this.args.androidActivity = \"com.google.android.apps.chrome.Main\";\n-  }\n-  // don't allow setAndroidArgs to reclobber our androidPackage/activity\n-  delete this.capabilities.appPackage;\n-  delete this.capabilities.appActivity;\n-  this.setAndroidArgs();\n-  this.args.app = null;\n-  this.args.proxyPort = this.args.chromeDriverPort;\n-  cb();\n-};\n-\n-ChromeAndroid.prototype.startAutomation = function (cb) {\n-  // this wrapper is required because uiautomator is not instantiated\n-  // at the beginning of the async#series call\n-  this.uiautomator.start(cb);\n-};\n-\n-ChromeAndroid.prototype.start = function (cb, onDie) {\n-  this.adb = new ADB(this.args);\n-  this.uiautomator = new UiAutomator(this.adb, this.args);\n-  this.uiautomator.setExitHandler(this.onUiautomatorExit.bind(this));\n-  this.onDieCb = onDie;\n-\n-  async.series([\n-    this.initAdb.bind(this),\n-    this.initUiautomator.bind(this),\n-    this.prepareDevice.bind(this),\n-    this.initChromedriverPath.bind(this),\n-    this.prepareChromedriver.bind(this),\n-    this.pushAndUnlock.bind(this),\n-    this.forwardPort.bind(this),\n-    this.pushAppium.bind(this),\n-    this.startAutomation.bind(this),\n-    this.getDataDir.bind(this),\n-    this.createSession.bind(this)\n-  ], function (err, results) {\n-    if (err) return cb(err);\n-    this.didLaunch = true;\n-    var sessionId = results[results.length - 1];\n-    cb(null, sessionId);\n-  }.bind(this));\n-};\n-\n-ChromeAndroid.prototype.prepareChromedriver = function (cb) {\n-  var chromeArgs = {\n-    port: this.args.proxyPort,\n-    executable: this.args.chromedriverExecutable\n-  };\n-  this.chromedriver = new Chromedriver(chromeArgs);\n-  this.proxyReqRes = this.chromedriver.proxyReq.bind(this.chromedriver);\n-  cb();\n-};\n-\n-ChromeAndroid.prototype.pushAndUnlock = function (cb) {\n-  this.pushUnlock(function (err) {\n-    if (err) return cb(err);\n-    this.unlock(cb);\n-  }.bind(this));\n-};\n-\n-ChromeAndroid.prototype.createSession = function (cb) {\n-  var caps = {\n-    chromeOptions: {\n-      androidPackage: this.args.appPackage\n-    }\n-  };\n-  if (this.args.enablePerformanceLogging) {\n-    caps.loggingPrefs = {performance: 'ALL'};\n-  }\n-\n-  var knownPackages = [\"org.chromium.chrome.shell\",\n-                       \"com.android.chrome\",\n-                       \"com.chrome.beta\"];\n-\n-  if (!_.contains(knownPackages, this.args.appPackage)) {\n-    caps.chromeOptions.androidActivity = this.args.appActivity;\n-  }\n-\n-  caps = this.decorateChromeOptions(caps);\n-  this.chromedriver.on(Chromedriver.EVENT_CHANGED, function (msg) {\n-    if (msg.state === Chromedriver.STATE_STOPPED) {\n-      logger.info(\"Chromedriver stopped unexpectedly on us, shutting down \" +\n-                  \"then calling back up with the on-die callback\");\n-      this.onChromedriverStop(this.onDieCb);\n-    }\n-  }.bind(this));\n-  this.chromedriver.start(caps).nodeify(cb);\n-};\n-\n-ChromeAndroid.prototype.stop = function (cb) {\n-  // stop listening for the stopped state event\n-  this.chromedriver.removeAllListeners(Chromedriver.EVENT_CHANGED);\n-  // now we can handle the stop on our own\n-  this.chromedriver.stop().nodeify(function (err) {\n-    if (err) logger.warn(\"Error stopping Chromedriver: \" + err.message);\n-    this.onChromedriverStop(cb);\n-  }.bind(this));\n-};\n-\n-ChromeAndroid.prototype.onChromedriverStop = function (cb) {\n-  if (this.adb) {\n-    this.uiautomator.shutdown(function () {\n-      this.adb.forceStop(this.args.appPackage, function (err) {\n-        if (err) return cb(err);\n-        this.adb.stopLogcat(cb);\n-      }.bind(this));\n-    }.bind(this));\n-  } else {\n-    cb();\n-  }\n-};\n-\n-// since we're in chrome, our default context is not the native mode, but web\n-ChromeAndroid.prototype.defaultContext = function () {\n-  return WEBVIEW_BASE + \"1\";\n-};\n-\n-// write a new getContexts function that hard-codes the two available contexts\n-ChromeAndroid.prototype.getContexts = function (cb) {\n-  this.contexts = [NATIVE_WIN, this.defaultContext()];\n-  logger.info(\"Available contexts: \" + this.contexts);\n-  cb(null, {\n-    status: status.codes.Success.code\n-  , value: this.contexts\n-  });\n-};\n-\n-// write a new setContext function that handles starting and stopping of\n-// chrome mode; the default android context controller method won't work here\n-// because here we don't need to worry about starting/stopping chromedriver\n-// itself; it's already on\n-ChromeAndroid.prototype.setContext = function (name, cb) {\n-  if (name === null) {\n-    name = this.defaultContext();\n-  } else if (name === WEBVIEW_WIN) {\n-    name = this.defaultContext();\n-  }\n-  this.getContexts(function () {\n-    if (!_.contains(this.contexts, name)) {\n-      return cb(null, {\n-        status: status.codes.NoSuchContext.code\n-      , value: \"Context '\" + name + \"' does not exist\"\n-      });\n-    }\n-    if (name === this.curContext) {\n-      return jwpSuccess(cb);\n-    }\n-    if (name.indexOf(WEBVIEW_WIN) !== -1) {\n-      this.setChromedriverMode();\n-    } else {\n-      this.setNativeMode();\n-    }\n-    this.curContext = name;\n-    jwpSuccess(cb);\n-  }.bind(this));\n-};\n-\n-module.exports = ChromeAndroid;"
    },
    {
      "sha": "7cc8e13522a0351da98c1c6bfafc004f51ac67cc",
      "filename": "lib/devices/android/selendroid.js",
      "status": "removed",
      "additions": 0,
      "deletions": 561,
      "changes": 561,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/selendroid.js",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/selendroid.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/selendroid.js?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,561 +0,0 @@\n-\"use strict\";\n-\n-var Device = require('../device.js')\n-  , mkdirp = require('mkdirp')\n-  , _ = require('underscore')\n-  , deviceCommon = require('../common.js')\n-  , androidController = require('./android-controller.js')\n-  , androidContextController = require('./android-context-controller.js')\n-  , proxyTo = deviceCommon.proxyTo\n-  , doRequest = deviceCommon.doRequest\n-  , logger = require('../../server/logger.js').get('appium')\n-  , status = require(\"../../server/status.js\")\n-  , fs = require('fs')\n-  , async = require('async')\n-  , androidCommon = require('./android-common.js')\n-  , androidHybrid = require('./android-hybrid.js')\n-  , path = require('path')\n-  , md5 = require('md5calculator')\n-  , utf7 = require('utf7').imap;\n-\n-var Selendroid = function () {\n-  this.init();\n-};\n-\n-_.extend(Selendroid.prototype, Device.prototype);\n-Selendroid.prototype._deviceInit = Device.prototype.init;\n-Selendroid.prototype.init = function () {\n-  this._deviceInit();\n-  this.selendroidHost = 'localhost';\n-  this.selendroidPort = 8080;\n-  this.selendroidSessionId = null;\n-  this.appExt = \".apk\";\n-  this.args.devicePort = this.selendroidPort;\n-  this.serverApk = null;\n-  this.onStop = function () {};\n-  this.adb = null;\n-  this.isProxy = true;\n-  this.mobileMethodsSupported = [\n-    'setLocation'\n-    , 'setCommandTimeout'\n-    , 'reset'\n-    , 'lock'\n-    , 'background'\n-    , 'keyevent'\n-    , 'currentActivity'\n-    , 'installApp'\n-    , 'uninstallApp'\n-    , 'removeApp'\n-    , 'closeApp'\n-    , 'isAppInstalled'\n-    , 'launchApp'\n-    , 'toggleData'\n-    , 'toggleFlightMode'\n-    , 'toggleWiFi'\n-    , 'toggleLocationServices'\n-    , 'getStrings'\n-  ];\n-  this.proxyHost = this.selendroidHost;\n-  this.avoidProxy = [\n-    ['GET', new RegExp('^/wd/hub/session/[^/]+/log/types$')]\n-    , ['POST', new RegExp('^/wd/hub/session/[^/]+/log')]\n-    , ['POST', new RegExp('^/wd/hub/session/[^/]+/location')]\n-    , ['POST', new RegExp('^/wd/hub/session/[^/]+/appium')]\n-    , ['GET', new RegExp('^/wd/hub/session/[^/]+/appium')]\n-    , ['POST', new RegExp('^/wd/hub/session/[^/]+/context')]\n-    , ['GET', new RegExp('^/wd/hub/session/[^/]+/context')]\n-    , ['GET', new RegExp('^/wd/hub/session/[^/]+/contexts')]\n-    , ['POST', new RegExp('^/wd/hub/session/[^/]+/element/[^/]+/value')]\n-    , ['GET', new RegExp('^/wd/hub/session/[^/]+/network_connection')]\n-    , ['POST', new RegExp('^/wd/hub/session/[^/]+/network_connection')]\n-    , ['POST', new RegExp('^/wd/hub/session/[^/]+/ime')]\n-    , ['GET', new RegExp('^/wd/hub/session/[^/]+/ime')]\n-  ];\n-  this.curContext = this.defaultContext();\n-};\n-\n-Selendroid.prototype.getSettings = deviceCommon.getSettings;\n-Selendroid.prototype.updateSettings = deviceCommon.updateSettings;\n-\n-Selendroid.prototype.pushUnlock = androidController.pushUnlock;\n-Selendroid.prototype.unlock = androidController.unlock;\n-\n-Selendroid.prototype.installApp = androidController.installApp;\n-Selendroid.prototype.isAppInstalled = androidController.isAppInstalled;\n-Selendroid.prototype.removeApp = androidController.removeApp;\n-\n-_.extend(Selendroid.prototype, androidCommon);\n-Selendroid.prototype._deviceConfigure = Device.prototype.configure;\n-Selendroid.prototype._setAndroidArgs = androidCommon.setAndroidArgs;\n-Selendroid.prototype.setAndroidArgs = function () {\n-  this._setAndroidArgs();\n-  this.args.systemPort = this.args.selendroidPort;\n-  this.proxyPort = this.args.systemPort;\n-};\n-\n-Selendroid.prototype.start = function (cb) {\n-  logger.debug(\"Starting selendroid server\");\n-\n-  var modServerExists = false\n-    , modAppPkg = null\n-    , resignedServerMd5Hash = null;\n-\n-  var checkModServerExists = function (cb) {\n-    this.selendroidServerPath = path.resolve(this.args.tmpDir,\n-        'selendroid.' + this.args.appPackage + '.apk');\n-    modAppPkg = this.args.appPackage + '.selendroid';\n-    fs.exists(this.selendroidServerPath, function (exists) {\n-      modServerExists = exists;\n-      cb();\n-    });\n-  }.bind(this);\n-\n-  var checkServerResigned = function (cb) {\n-    if (modServerExists) {\n-      md5(this.selendroidServerPath, function (err, md5Hash) {\n-        if (err) return cb(err);\n-        logger.debug(\"MD5 for selendroid server is \" + md5Hash);\n-        if (resignedServerMd5Hash !== md5Hash) {\n-          resignedServerMd5Hash = md5Hash;\n-          modServerExists = false;\n-        }\n-      }.bind(this));\n-    }\n-    cb();\n-  }.bind(this);\n-\n-  var conditionalUninstallSelendroid = function (cb) {\n-    if (!modServerExists) {\n-      logger.debug(\"Rebuilt selendroid apk does not exist, uninstalling \" +\n-                  \"any instances of it on device to make way for new one\");\n-      this.adb.uninstallApk(modAppPkg, cb);\n-    } else {\n-      logger.debug(\"Rebuilt selendroid apk exists, doing nothing\");\n-      cb();\n-    }\n-  }.bind(this);\n-\n-  var conditionalInsertManifest = function (cb) {\n-    if (!modServerExists) {\n-      logger.debug(\"Rebuilt selendroid server does not exist, inserting \" +\n-                  \"modified manifest\");\n-      this.insertSelendroidManifest(this.serverApk, cb);\n-    } else {\n-      logger.debug(\"Rebuilt selendroid server already exists, no need to \" +\n-                  \"rebuild it with a new manifest\");\n-      cb();\n-    }\n-  }.bind(this);\n-\n-  var conditionalInstallSelendroid = function (cb) {\n-    this.adb.isAppInstalled(modAppPkg, function (e, installed) {\n-      if (!installed) {\n-        logger.debug(\"Rebuilt selendroid is not installed, installing it\");\n-        this.adb.install(this.selendroidServerPath, cb);\n-      } else {\n-        logger.debug(\"Rebuilt selendroid is already installed\");\n-        cb();\n-      }\n-    }.bind(this));\n-  }.bind(this);\n-\n-  async.series([\n-    this.initJavaVersion.bind(this),\n-    this.initAdb.bind(this),\n-    this.ensureServerExists.bind(this),\n-    this.prepareDevice.bind(this),\n-    this.checkInternetPermissionForApp.bind(this),\n-    this.packageAndLaunchActivityFromManifest.bind(this),\n-    checkModServerExists,\n-    conditionalInsertManifest,\n-    this.checkSelendroidCerts.bind(this),\n-    checkServerResigned,\n-    conditionalUninstallSelendroid,\n-    conditionalInstallSelendroid,\n-    this.extractStringsSelendroid.bind(this),\n-    this.uninstallApp.bind(this),\n-    this.installAppForTest.bind(this),\n-    this.forwardPort.bind(this),\n-    this.initUnicode.bind(this),\n-    this.pushSettingsApp.bind(this),\n-    this.pushUnlock.bind(this),\n-    this.unlock.bind(this),\n-    this.pushSelendroid.bind(this),\n-    this.waitForServer.bind(this)\n-  ], function (err) {\n-    if (err) return cb(err);\n-    async.series([\n-      this.createSession.bind(this),\n-      this.initAutoWebview.bind(this)\n-    ], function (err, res) {\n-      if (err) return cb(err);\n-      // `createSession` returns session id, so send that along\n-      cb(null, res[0]);\n-    });\n-  }.bind(this));\n-};\n-\n-Selendroid.prototype.pushSelendroid = function (cb) {\n-  var instrumentWith = this.args.appPackage + \".selendroid/\" +\n-                       \"io.selendroid.server.ServerInstrumentation\";\n-  this.adb.instrument(this.args.appPackage, this.args.appActivity, instrumentWith, cb);\n-};\n-\n-Selendroid.prototype.checkInternetPermissionForApp = function (cb) {\n-  var apk = this.args.app;\n-  this.adb.hasInternetPermissionFromManifest(apk, function (err, hasInternetPermission) {\n-    if (err) return cb(err);\n-    if (hasInternetPermission) {\n-      return cb();\n-    }\n-    else {\n-      var errorMessg = \"apk does not have INTERNET permissions. Selendroid needs internet \" +\n-                       \"permission to proceed, please check if you have <uses-permission \" +\n-                       \"android:name=\\\"android.**permission.INTERNET\\\"/> in your \" +\n-                       \"AndroidManifest.xml\";\n-      cb(new Error(errorMessg));\n-    }\n-  });\n-};\n-\n-Selendroid.prototype.checkSelendroidCerts = function (cb) {\n-  var alreadyReturned = false\n-    , checks = 0;\n-\n-  var onDoneSigning = function () {\n-    checks++;\n-    if (checks === 2 && !alreadyReturned) {\n-      cb();\n-    }\n-  };\n-\n-  // these run in parallel\n-  var apks = [this.selendroidServerPath, this.args.app];\n-  _.each(apks, function (apk) {\n-    logger.debug(\"Checking signed status of \" + apk);\n-    this.adb.checkApkCert(apk, this.args.appPackage, function (err, isSigned) {\n-      if (err) return cb(err);\n-      if (isSigned) return onDoneSigning();\n-      this.adb.sign(apk, function (err) {\n-        if (err && !alreadyReturned) {\n-          alreadyReturned = true;\n-          return cb(err);\n-        }\n-        onDoneSigning();\n-      });\n-    }.bind(this));\n-  }.bind(this));\n-};\n-\n-Selendroid.prototype.stop = function (ocb) {\n-  var completeShutdown = function (cb) {\n-    if (this.args.unicodeKeyboard && this.args.resetKeyboard && this.defaultIME) {\n-      logger.debug('Resetting IME to \\'' + this.defaultIME + '\\'');\n-      this.adb.setIME(this.defaultIME, function (err) {\n-        if (err) {\n-          // simply warn on error here, because we don't want to stop the shutdown\n-          // process\n-          logger.warn(err);\n-        }\n-        logger.debug(\"Stopping selendroid server\");\n-        this.deleteSession(cb);\n-      }.bind(this));\n-    } else {\n-      logger.debug(\"Stopping selendroid server\");\n-      this.deleteSession(cb);\n-    }\n-  }.bind(this);\n-\n-  completeShutdown(function (err) {\n-    if (err) return ocb(err);\n-\n-    // Remove the app _after_ stopping Selendroid, or Selendroid will fail\n-    if (this.args.fullReset) {\n-      logger.debug(\"Removing app from device\");\n-      this.uninstallApp(function (err) {\n-        if (err) {\n-          // simply warn on error here, because we don't want to stop the shutdown\n-          // process\n-          logger.warn(err);\n-        }\n-        ocb();\n-      });\n-    } else {\n-      ocb();\n-    }\n-  }.bind(this));\n-};\n-\n-Selendroid.prototype.keyevent = function (keycode, metastate, cb) {\n-  this.adb.keyevent(keycode, function () {\n-    cb(null, {\n-      status: status.codes.Success.code\n-    , value: null\n-    });\n-  });\n-};\n-\n-/*\n- * Execute an arbitrary function and handle potential ADB disconnection before\n- * proceeding\n- */\n-Selendroid.prototype.wrapActionAndHandleADBDisconnect = function (action, ocb) {\n-  async.series([\n-    function (cb) {\n-      action(cb);\n-    }.bind(this)\n-    , this.adb.restart.bind(this.adb)\n-    , this.forwardPort.bind(this)\n-  ], function (err) {\n-    ocb(err);\n-  }.bind(this));\n-};\n-\n-Selendroid.prototype.ensureServerExists = function (cb) {\n-  logger.debug(\"Checking whether selendroid is built yet\");\n-  var selBin = path.resolve(__dirname, \"..\", \"..\", \"..\", \"build\", \"selendroid\",\n-      \"selendroid.apk\");\n-  fs.stat(selBin, function (err) {\n-    if (err) {\n-      logger.debug(\"Selendroid needs to be built; please run ./reset.sh \" +\n-                  \"--selendroid\");\n-      return cb(err);\n-    }\n-    logger.debug(\"Selendroid server exists!\");\n-    this.serverApk = selBin;\n-    cb(null);\n-  }.bind(this));\n-};\n-\n-Selendroid.prototype.waitForServer = function (cb) {\n-  var waitMs = 20000\n-    , intMs = 800\n-    , start = Date.now();\n-\n-  var pingServer = function () {\n-    this.proxyTo('/wd/hub/status', 'GET', null, function (err, res, body) {\n-      if (body === null || typeof body === \"undefined\" || !body.trim()) {\n-        if (Date.now() - start < waitMs) {\n-          setTimeout(pingServer, intMs);\n-        } else {\n-          cb(new Error(\"Waited \" + (waitMs / 1000) + \" secs for \" +\n-                       \"selendroid server and it never showed up\"));\n-        }\n-      } else {\n-        logger.debug(\"Selendroid server is alive!\");\n-        cb(null);\n-      }\n-    });\n-  }.bind(this);\n-\n-  pingServer();\n-};\n-\n-Selendroid.prototype.createSession = function (cb) {\n-  logger.debug(\"Listening for Selendroid logs\");\n-  this.adb.logcat.on('log', function (logObj) {\n-    if (/System/.test(logObj.message)) {\n-      var type = \"\";\n-      if (/System\\.err/.test(logObj.message)) {\n-        type = \" ERR\";\n-      }\n-      var msg = logObj.message.replace(/^.+: /, '');\n-      logger.debug(\"[SELENDROID\" + type + \"] \" + msg);\n-    }\n-  }.bind(this));\n-  logger.debug(\"Creating Selendroid session\");\n-  var data = {desiredCapabilities: this.capabilities};\n-  this.proxyTo('/wd/hub/session', 'POST', data, function (err, res, body) {\n-    if (err) return cb(err);\n-\n-    if (res.statusCode === 200 && body.sessionId) {\n-      logger.debug(\"Successfully started selendroid session\");\n-      this.selendroidSessionId = body.sessionId;\n-      this.proxySessionId = this.selendroidSessionId;\n-      this.adb.waitForActivity(this.args.appWaitPackage, this.args.appWaitActivity, 1800,\n-          function (err) {\n-        if (err) {\n-          logger.debug(\"Selendroid hasn't started app yet, let's do it \" +\n-                      \"manually with adb.startApp\");\n-          var onStart = function (err) {\n-            if (err) return cb(err);\n-            return cb(null, body.sessionId);\n-          }.bind(this);\n-\n-          return this.adb.startApp({\n-                   pkg: this.args.appPackage,\n-                   activity: this.args.appActivity,\n-                   action: this.args.intentAction,\n-                   category: this.args.intentCategory,\n-                   flags: this.args.intentFlags,\n-                   waitPkg: this.args.appWaitPackage,\n-                   waitActivity: this.args.appWaitActivity,\n-                   optionalIntentArguments: this.args.optionalIntentArguments,\n-                   stopApp: !this.args.dontStopAppOnReset,\n-                   retry: false\n-                 }, onStart);\n-        }\n-        return cb(null, body.sessionId);\n-      }.bind(this), 1800);\n-    } else {\n-      logger.error(\"Selendroid create session did not work. Status was \" +\n-                   res.statusCode + \" and body was \" + body);\n-      cb(new Error(\"Selendroid session creation did not work.\"));\n-    }\n-  }.bind(this));\n-};\n-\n-Selendroid.prototype.deleteSession = function (cb) {\n-  var url = '/wd/hub/session/' + this.selendroidSessionId;\n-  this.proxyTo(url, 'DELETE', null, function (err, res) {\n-    if (err) return cb(err);\n-    if (res.statusCode !== 200) return cb(new Error(\"Status was not 200\"));\n-    this.adb.forceStop(this.args.appPackage, function (err) {\n-      if (err) return cb(err);\n-      this.adb.stopLogcat(cb);\n-    }.bind(this));\n-  }.bind(this));\n-};\n-\n-Selendroid.prototype.proxyTo = proxyTo;\n-\n-Selendroid.prototype.insertSelendroidManifest = function (serverPath, cb) {\n-  logger.debug(\"Inserting selendroid manifest\");\n-  var newServerPath = this.selendroidServerPath\n-    , newPackage = this.args.appPackage + '.selendroid'\n-    , srcManifest = path.resolve(__dirname, '..', '..', '..', 'build',\n-        'selendroid', 'AndroidManifest.xml')\n-    , dstDir = path.resolve(this.args.tmpDir, this.args.appPackage)\n-    , dstManifest = path.resolve(dstDir, 'AndroidManifest.xml');\n-\n-  try {\n-    fs.mkdirSync(dstDir);\n-  } catch (e) {\n-    if (e.message.indexOf(\"EEXIST\") === -1) {\n-      throw e;\n-    }\n-  }\n-  fs.writeFileSync(dstManifest, fs.readFileSync(srcManifest, \"utf8\"), \"utf8\");\n-  async.series([\n-    function (cb) { mkdirp(dstDir, cb); }.bind(this),\n-    function (cb) { this.adb.checkSdkBinaryPresent(\"aapt\", cb); }.bind(this),\n-    function (cb) {\n-      this.adb.compileManifest(dstManifest, newPackage,\n-      this.args.appPackage, cb);\n-    }.bind(this),\n-    function (cb) {\n-      this.adb.insertManifest(dstManifest, serverPath,\n-        newServerPath, cb);\n-    }.bind(this)\n-  ], cb);\n-};\n-\n-Selendroid.prototype.setLocation = androidController.setLocation;\n-Selendroid.prototype.removeApp = androidController.removeApp;\n-Selendroid.prototype.unpackApp = androidController.unpackApp;\n-\n-Selendroid.prototype.translatePath = function (req) {\n-  var path = req.originalUrl;\n-  if (path.indexOf(\"contexts\") !== -1) {\n-    logger.debug(\"Temporarily translating 'contexts' to 'window_handles\");\n-    path = path.replace(\"contexts\", \"window_handles\");\n-  } else if (path.indexOf(\"context\") !== -1) {\n-    logger.debug(\"Temporarily translating 'context' to 'window'\");\n-    path = path.replace(\"context\", \"window\");\n-  }\n-  req.originalUrl = path;\n-};\n-\n-Selendroid.prototype.extractStringsSelendroid = function (cb) {\n-  this.extractStrings(function () {\n-    cb();\n-  });\n-};\n-\n-Selendroid.prototype.getStrings = function (language, stringFile, cb) {\n-  if (this.language && this.language === language) {\n-    // Return last strings\n-    return cb(null, {\n-      status: status.codes.Success.code,\n-      value: this.apkStrings\n-    });\n-  }\n-\n-  // Extract and return strings\n-  return this.extractStrings(function () {\n-    cb(null, {\n-      status: status.codes.Success.code,\n-      value: this.apkStrings\n-    });\n-  }.bind(this), language);\n-};\n-\n-\n-_.extend(Selendroid.prototype, androidHybrid);\n-_.extend(Selendroid.prototype, androidContextController);\n-\n-\n-Selendroid.prototype.isChromedriverContext = function (windowName) {\n-  return windowName === this.CHROMIUM_WIN;\n-};\n-\n-Selendroid.prototype.getContexts = function (cb) {\n-  var chromiumViews = [];\n-  this.listWebviews(function (err, webviews) {\n-    if (err) return cb(err);\n-    if (_.contains(webviews, this.CHROMIUM_WIN)) {\n-      chromiumViews = [this.CHROMIUM_WIN];\n-    } else {\n-      chromiumViews = [];\n-    }\n-\n-    var selendroidViews = [];\n-    var reqUrl = this.selendroidHost + ':' + this.args.selendroidPort + '/wd/hub/session/' + this.selendroidSessionId;\n-    doRequest(reqUrl + '/window_handles', 'GET', {}, null, function (err, res) {\n-      if (err) return cb(err);\n-      selendroidViews = JSON.parse(res.body).value;\n-      this.contexts = _.union(selendroidViews, chromiumViews);\n-      logger.debug(\"Available contexts: \" + JSON.stringify(this.contexts));\n-      cb(null, {sessionId: this.selendroidSessionId, status: status.codes.Success.code, value: this.contexts});\n-    }.bind(this));\n-  }.bind(this));\n-};\n-\n-Selendroid.prototype.defaultWebviewName = function () {\n-  return this.WEBVIEW_WIN + \"_0\";\n-};\n-\n-Selendroid.prototype.setValue = function (elementId, value, cb) {\n-  logger.debug('Setting text on element \\'' + elementId + '\\': \\'' + value + '\\'');\n-  for (var i = 0; i < value.length; i++) {\n-    var c = value.charCodeAt(i);\n-    // if we're using the unicode keyboard, and this is unicode, maybe encode\n-    if (this.args.unicodeKeyboard && (c > 127 || c === 38)) {\n-      // this is not simple ascii, or it is an ampersand (`&`)\n-      if (c >= parseInt(\"E000\", 16) && c <= parseInt(\"E040\", 16)) {\n-        // Selenium uses a Unicode PUA to cover certain special characters\n-        // see https://code.google.com/p/selenium/source/browse/java/client/src/org/openqa/selenium/Keys.java\n-      } else {\n-        // encode the text\n-        value = utf7.encode(value);\n-        break;\n-      }\n-    }\n-  }\n-  var reqUrl = this.proxyHost + ':' + this.proxyPort +\n-      '/wd/hub/session/' + this.proxySessionId +\n-      '/element/' + elementId + '/value';\n-  doRequest(reqUrl, 'POST', { value: [value] }, null, function (err) {\n-    if (err) return cb(err);\n-    cb(null, {\n-      status: status.codes.Success.code,\n-      value: ''\n-    });\n-  });\n-};\n-\n-Selendroid.prototype.back = function (cb) {\n-  this.keyevent(4, null, cb);\n-};\n-\n-module.exports = Selendroid;"
    },
    {
      "sha": "0dd2330f3d1391e6045d5dcd30ef1820b6d984e9",
      "filename": "lib/devices/android/uiautomator.js",
      "status": "removed",
      "additions": 0,
      "deletions": 223,
      "changes": 223,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/uiautomator.js",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/android/uiautomator.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/android/uiautomator.js?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,223 +0,0 @@\n-\"use strict\";\n-\n-var _ = require('underscore')\n-  , net = require('net')\n-  , status = require(\"../../server/status.js\")\n-  , logger = require('../../server/logger.js').get('appium');\n-\n-var noop = function () {};\n-\n-var UiAutomator = function (adb, opts) {\n-  this.adb = adb;\n-  this.proc = null;\n-  this.cmdCb = null;\n-  this.socketClient = null;\n-  this.restartBootstrap = false;\n-  this.onSocketReady = noop;\n-  this.alreadyExited = false;\n-  this.onExit = noop;\n-  this.shuttingDown = false;\n-  this.webSocket = opts.webSocket;\n-  this.systemPort = opts.systemPort;\n-  this.resendLastCommand = function () {};\n-  this.appPackage = opts.appPackage;\n-  this.disableAndroidWatchers = !!opts.disableAndroidWatchers;\n-};\n-\n-UiAutomator.prototype.start = function (readyCb) {\n-  logger.info(\"Starting App\");\n-  this.adb.killProcessesByName('uiautomator', function (err) {\n-    if (err) return readyCb(err);\n-    logger.debug(\"Running bootstrap\");\n-    var args = [\"shell\", \"uiautomator\", \"runtest\", \"AppiumBootstrap.jar\", \"-c\",\n-        \"io.appium.android.bootstrap.Bootstrap\", \"-e\", \"pkg\", this.appPackage, \"-e\", \"disableAndroidWatchers\", this.disableAndroidWatchers];\n-\n-    this.alreadyExited = false;\n-    this.onSocketReady = readyCb;\n-\n-    this.proc = this.adb.spawn(args);\n-    this.proc.on(\"error\", function (err) {\n-      logger.error(\"Unable to spawn adb: \" + err.message);\n-      if (!this.alreadyExited) {\n-        this.alreadyExited = true;\n-        readyCb(new Error(\"Unable to start Android Debug Bridge: \" +\n-          err.message));\n-      }\n-    }.bind(this));\n-    this.proc.stdout.on('data', this.outputStreamHandler.bind(this));\n-    this.proc.stderr.on('data', this.errorStreamHandler.bind(this));\n-    this.proc.on('exit', this.exitHandler.bind(this));\n-  }.bind(this));\n-};\n-\n-UiAutomator.prototype.setExitHandler = function (onExit) {\n-  this.onExit = onExit;\n-};\n-\n-UiAutomator.prototype.exitHandler = function (code) {\n-  this.cmdCb = null;\n-  if (this.socketClient) {\n-    this.socketClient.end();\n-    this.socketClient.destroy();\n-    this.socketClient = null;\n-  }\n-\n-  if (!this.alreadyExited) {\n-    this.alreadyExited = true;\n-    if (this.shuttingDown) {\n-      logger.debug(\"UiAutomator shut down normally\");\n-    }\n-    this.onExit(code);\n-  }\n-};\n-\n-UiAutomator.prototype.checkForSocketReady = function (output) {\n-  if (/Appium Socket Server Ready/.test(output)) {\n-    this.socketClient = net.connect(this.systemPort, function () {\n-      this.debug(\"Connected!\");\n-      this.onSocketReady(null);\n-    }.bind(this));\n-    this.socketClient.setEncoding('utf8');\n-    var oldData = '';\n-    this.socketClient.on('data', function (data) {\n-      this.debug(\"Received command result from bootstrap\");\n-      try {\n-        data = JSON.parse(oldData + data);\n-        oldData = '';\n-      } catch (e) {\n-        logger.debug(\"Stream still not complete, waiting\");\n-        oldData += data;\n-        return;\n-      }\n-      if (this.cmdCb) {\n-        var next = this.cmdCb;\n-        this.cmdCb = null;\n-        next(data);\n-      } else {\n-        this.debug(\"Got data when we weren't expecting it, ignoring:\");\n-        this.debug(JSON.stringify(data));\n-      }\n-    }.bind(this));\n-  }\n-};\n-\n-UiAutomator.prototype.sendAction = function (action, params, cb) {\n-  if (typeof params === \"function\") {\n-    cb = params;\n-    params = {};\n-  }\n-  var extra = {action: action, params: params};\n-  this.sendCommand('action', extra, cb);\n-};\n-\n-UiAutomator.prototype.sendCommand = function (type, extra, cb) {\n-  if (this.cmdCb !== null) {\n-    logger.warn(\"Trying to run a command when one is already in progress. \" +\n-                \"Will spin a bit and try again\");\n-    var start = Date.now();\n-    var timeoutMs = 10000;\n-    var intMs = 200;\n-    var waitForCmdCbNull = function () {\n-      if (this.cmdCb === null) {\n-        this.sendCommand(type, extra, cb);\n-      } else if ((Date.now() - start) < timeoutMs) {\n-        setTimeout(waitForCmdCbNull, intMs);\n-      } else {\n-        cb(new Error(\"Never became able to push strings since a command \" +\n-                     \"was in process\"));\n-      }\n-    }.bind(this);\n-    waitForCmdCbNull();\n-  } else if (this.socketClient) {\n-    this.resendLastCommand = function () {\n-      this.sendCommand(type, extra, cb);\n-    }.bind(this);\n-    if (typeof extra === \"undefined\" || extra === null) {\n-      extra = {};\n-    }\n-    var cmd = {cmd: type};\n-    cmd = _.extend(cmd, extra);\n-    var cmdJson = JSON.stringify(cmd) + \"\\n\";\n-    this.cmdCb = cb;\n-    var logCmd = cmdJson.trim();\n-    if (logCmd.length > 1000) {\n-      logCmd = logCmd.substr(0, 1000) + \"...\";\n-    }\n-    this.debug(\"Sending command to android: \" + logCmd);\n-    this.socketClient.write(cmdJson);\n-  } else {\n-    cb({\n-      status: status.codes.UnknownError.code\n-    , value: \"Tried to send command to non-existent Android socket, \" +\n-               \"maybe it's shutting down?\"\n-    });\n-  }\n-};\n-\n-UiAutomator.prototype.shutdown = function (cb) {\n-  this.onExit = cb;\n-  this.shuttingDown = true;\n-  this.sendCommand('shutdown', null, function () {\n-    logger.debug(\"Sent shutdown command, waiting for UiAutomator to stop...\");\n-    setTimeout(function () {\n-      if (!this.alreadyExited) {\n-        logger.warn(\"UiAutomator did not shut down fast enough, calling it gone\");\n-        this.alreadyExited = true;\n-        cb();\n-      }\n-    }.bind(this), 7000);\n-  }.bind(this));\n-};\n-\n-UiAutomator.prototype.outputStreamHandler = function (output) {\n-  this.checkForSocketReady(output);\n-  this.handleBootstrapOutput(output);\n-};\n-\n-UiAutomator.prototype.handleBootstrapOutput = function (output) {\n-  // for now, assume all intentional logging takes place on one line\n-  // and that we don't get half-lines from the stream.\n-  // probably bad assumptions\n-  output = output.toString().trim();\n-  var lines = output.split(\"\\n\");\n-  var re = /^\\[APPIUM-UIAUTO\\] (.+)\\[\\/APPIUM-UIAUTO\\]$/;\n-  var match;\n-  _.each(lines, function (line) {\n-    line = line.trim();\n-    if (line !== '') {\n-      match = re.exec(line);\n-      if (match) {\n-        logger.debug(\"[BOOTSTRAP] \" + match[1]);\n-\n-        var alertRe = /Emitting system alert message/;\n-        if (alertRe.test(line)) {\n-          logger.debug(\"Emitting alert message...\");\n-          this.webSocket.sockets.emit('alert', {message: line});\n-        }\n-      } else {\n-        // The dump command will always disconnect UiAutomation.\n-        // Detect the crash then restart UiAutomation.\n-        if (line.indexOf(\"UiAutomationService not connected\") !== -1) {\n-          this.restartBootstrap = true;\n-        }\n-        var log = \"[UIAUTOMATOR STDOUT] \" + line;\n-        logger.debug(log.grey);\n-      }\n-    }\n-  }.bind(this));\n-};\n-\n-UiAutomator.prototype.errorStreamHandler = function (output) {\n-  var lines = output.toString().split(\"\\n\");\n-  _.each(lines, function (line) {\n-    logger.debug((\"[UIAUTOMATOR STDERR] \" + line).yellow);\n-  });\n-};\n-\n-UiAutomator.prototype.debug = function (msg) {\n-  if (this.debugMode) {\n-    logger.debug(\"[UIAUTOMATOR] \" + msg);\n-  }\n-};\n-\n-module.exports = UiAutomator;"
    },
    {
      "sha": "0de3283a1ac94e0f8f5746255829287e7c9bd686",
      "filename": "lib/devices/common.js",
      "status": "removed",
      "additions": 0,
      "deletions": 382,
      "changes": 382,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/common.js",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/common.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/common.js?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,382 +0,0 @@\n-\"use strict\";\n-\n-var errors = require('../server/errors.js')\n-  , request = require('request')\n-  , _ = require('underscore')\n-  , exec = require('child_process').exec\n-  , status = require(\"../server/status.js\")\n-  , logger = require('../server/logger.js').get('appium')\n-  , logDeprecationWarning = require('../helpers.js').logDeprecationWarning;\n-\n-var UnknownError = errors.UnknownError\n-  , ProtocolError = errors.ProtocolError;\n-\n-exports.respond = function (response, cb) {\n-  if (typeof response === 'undefined') {\n-    cb(null, '');\n-  } else {\n-    if (typeof(response) !== \"object\") {\n-      cb(new UnknownError(), response);\n-    } else if (!('status' in response)) {\n-      cb(new ProtocolError('Status missing in response from device'), response);\n-    } else {\n-      var status = parseInt(response.status, 10);\n-      if (isNaN(status)) {\n-        cb(new ProtocolError('Invalid status in response from device'), response);\n-      } else {\n-        response.status = status;\n-        cb(null, response);\n-      }\n-    }\n-  }\n-};\n-\n-exports.proxy = function (command, cb) {\n-  logger.debug('Pushing command to appium work queue: ' + JSON.stringify(command));\n-  this.push([command, cb]);\n-};\n-\n-exports.proxyWithMinTime = function (command, ms, cb) {\n-  var start = Date.now();\n-  logger.debug('Pushing command to appium work queue: ' + JSON.stringify(command));\n-  this.push([command, function () {\n-    var args = Array.prototype.slice.call(arguments, 0);\n-    var waitNeeded = ms - (Date.now() - start);\n-    if (waitNeeded > 0) {\n-      setTimeout(function () {\n-        cb.apply(null, args);\n-      }, waitNeeded);\n-    } else {\n-      cb.apply(null, args);\n-    }\n-  }]);\n-};\n-\n-exports.resetTimeout = function () {\n-  if (this.onResetTimeout) this.onResetTimeout();\n-};\n-\n-exports.waitForCondition = function (waitMs, condFn, cb, intervalMs) {\n-  if (typeof intervalMs === \"undefined\") {\n-    intervalMs = 500;\n-  }\n-  var begunAt = Date.now();\n-  var endAt = begunAt + waitMs;\n-  var spin = function () {\n-    condFn(function (condMet) {\n-      var now = Date.now();\n-      var waited = now - begunAt;\n-      var args = Array.prototype.slice.call(arguments);\n-      if (condMet) {\n-        cb.apply(this, args.slice(1));\n-      } else if (now < endAt) {\n-        logger.debug(\"Waited for \" + waited + \"ms so far\");\n-        setTimeout(spin, intervalMs);\n-      } else {\n-        logger.debug(\"Condition unmet after \" + waited + \"ms. Timing out.\");\n-        cb.apply(this, args.slice(1));\n-      }\n-    }.bind(this));\n-  }.bind(this);\n-  spin();\n-};\n-\n-exports.implicitWaitForCondition = function (condFn, cb) {\n-  logger.debug(\"Waiting up to \" + this.implicitWaitMs + \"ms for condition\");\n-  var _condFn = condFn;\n-  condFn = function () {\n-    var args = Array.prototype.slice.call(arguments, 0);\n-    this.resetTimeout();\n-    _condFn.apply(this, args);\n-  }.bind(this);\n-  this.waitForCondition(this.implicitWaitMs, condFn, cb);\n-};\n-\n-exports.doRequest = function (url, method, body, contentType, cb) {\n-  if (typeof cb === \"undefined\" && typeof contentType === \"function\") {\n-    cb = contentType;\n-    contentType = null;\n-  }\n-  if (typeof contentType === \"undefined\" || contentType === null) {\n-    contentType = \"application/json;charset=UTF-8\";\n-  }\n-  if (!(/^https?:\\/\\//.exec(url))) {\n-    url = 'http://' + url;\n-  }\n-  var opts = {\n-    url: url\n-  , method: method\n-  };\n-  if (_.contains(['put', 'post', 'patch'], method.toLowerCase())) {\n-    if (typeof body === \"object\") {\n-      opts.json = body;\n-    } else {\n-      opts.body = body || \"\";\n-    }\n-  }\n-  // explicitly set these headers with correct capitalization to work around\n-  // an issue in node/requests\n-  logger.debug(\"Making http request with opts: \" + JSON.stringify(opts));\n-  request(opts, function (err, res, body) {\n-    cb(err, res, body);\n-  });\n-};\n-\n-exports.isAppInstalled = function (isInstalledCommand, cb) {\n-  logger.debug(\"Checking app install status using: \" + isInstalledCommand);\n-  exec(isInstalledCommand, function (error, stdout) {\n-    cb(error, stdout);\n-  });\n-};\n-\n-exports.removeApp = function (removeCommand, udid, bundleId, cb) {\n-  logger.debug(\"Removing app using cmd: \" + removeCommand);\n-  exec(removeCommand, function (error) {\n-    if (error !== null) {\n-      cb(new Error('Unable to un-install [' + bundleId + '] from device with id [' + udid + ']. Error [' + error + ']'));\n-    } else {\n-      cb(error, 'Successfully un-installed [' + bundleId + '] from device with id [' + udid + ']');\n-    }\n-  });\n-};\n-\n-exports.installApp = function (installationCommand, udid, unzippedAppPath, cb) {\n-  logger.debug(\"Installing app using cmd: \" + installationCommand);\n-  exec(installationCommand, { maxBuffer: 524288 }, function (error) {\n-    if (error !== null) {\n-      cb(new Error('Unable to install [' + unzippedAppPath + '] to device with id [' + udid + ']. Error [' + error + ']'));\n-    } else {\n-      cb(error, 'Successfully unzipped and installed [' + unzippedAppPath + '] to device with id [' + udid + ']');\n-    }\n-  });\n-};\n-\n-exports.unpackApp = function (req, packageExtension, cb) {\n-  var reqAppPath = req.body.appPath;\n-  if (reqAppPath.toLowerCase().substring(0, 4) === \"http\") {\n-    req.device.downloadAndUnzipApp(reqAppPath, function (err, appPath) {\n-      cb(appPath);\n-    });\n-  } else if (reqAppPath.toLowerCase().substring(reqAppPath.length - 4) === \".zip\") {\n-    req.device.unzipLocalApp(reqAppPath, function (err, appPath) {\n-      cb(appPath);\n-    });\n-  } else if (reqAppPath.toLowerCase().substring(reqAppPath.length - 4) === packageExtension) {\n-    cb(reqAppPath.toString());\n-  } else {\n-    cb(null);\n-  }\n-};\n-\n-exports.proxyTo = function (endpoint, method, data, cb) {\n-  if (endpoint[0] !== '/') {\n-    endpoint = '/' + endpoint;\n-  }\n-  var url = 'http://' + this.proxyHost + ':' + this.proxyPort + endpoint;\n-  exports.doRequest(url, method, data ? data : '', cb);\n-};\n-\n-exports.parseExecuteResponse = function (response, cb) {\n-  if ((response.value !== null) && (typeof response.value !== \"undefined\")) {\n-    var wdElement = null;\n-    if (!_.isArray(response.value)) {\n-      if (typeof response.value.ELEMENT !== \"undefined\") {\n-        wdElement = this.parseElementResponse(response.value);\n-        if (wdElement === null) {\n-          cb(null, {\n-            status: status.codes.UnknownError.code\n-          , value: \"Error converting element ID atom for using in WD: \" + response.value.ELEMENT\n-          });\n-        }\n-        response.value = wdElement;\n-      }\n-    } else {\n-      var args = response.value;\n-      for (var i = 0; i < args.length; i++) {\n-        wdElement = args[i];\n-        if ((args[i] !== null) && (typeof args[i].ELEMENT !== \"undefined\")) {\n-          wdElement = this.parseElementResponse(args[i]);\n-          if (wdElement === null) {\n-            cb(null, {\n-              status: status.codes.UnknownError.code\n-            , value: \"Error converting element ID atom for using in WD: \" + args[i].ELEMENT\n-            });\n-            return;\n-          }\n-          args[i] = wdElement;\n-        }\n-      }\n-      response.value = args;\n-    }\n-  }\n-  return response;\n-};\n-\n-exports.checkValidLocStrat = function (strat, includeWeb, cb) {\n-  if (typeof includeWeb === \"undefined\") {\n-    includeWeb = false;\n-  }\n-  var validStrats = [\n-    'xpath',\n-    'id',\n-    'name',\n-    'class name'\n-  ];\n-  var nativeStrats = [\n-    '-ios uiautomation',\n-    'accessibility id',\n-    '-android uiautomator'\n-  ];\n-  var webStrats = [\n-    'link text',\n-    'css selector',\n-    'tag name',\n-    'partial link text'\n-  ];\n-  var nativeDeprecations = {};\n-  var webDeprecations = {};\n-  var deprecations = {name: 'accessibility id'};\n-\n-  if (includeWeb) {\n-    validStrats = validStrats.concat(webStrats);\n-    deprecations = _.extend(deprecations, webDeprecations);\n-  } else {\n-    validStrats = validStrats.concat(nativeStrats);\n-    deprecations = _.extend(deprecations, nativeDeprecations);\n-  }\n-  if (!_.contains(validStrats, strat)) {\n-    logger.debug(\"Invalid locator strategy: \" + strat);\n-    cb(null, {\n-      status: status.codes.UnknownCommand.code,\n-      value: {message: \"Invalid locator strategy: \" + strat}\n-    });\n-    return false;\n-  } else {\n-    if (_.has(deprecations, strat)) {\n-      logDeprecationWarning('locator strategy', strat, deprecations[strat]);\n-    }\n-    return true;\n-  }\n-};\n-\n-exports.parseElementResponse = function (element) {\n-  var objId = element.ELEMENT\n-    , clientId = (5000 + this.webElementIds.length).toString();\n-  this.webElementIds.push(objId);\n-  return {ELEMENT: clientId};\n-};\n-\n-exports.getAtomsElement = function (wdId) {\n-  var atomsId;\n-  try {\n-    atomsId = this.webElementIds[parseInt(wdId, 10) - 5000];\n-  } catch (e) {\n-    return null;\n-  }\n-  if (typeof atomsId === \"undefined\") {\n-    return null;\n-  }\n-  return {'ELEMENT': atomsId};\n-};\n-\n-exports.useAtomsElement = function (elementId, failCb, cb) {\n-  if (parseInt(elementId, 10) < 5000) {\n-    logger.debug(\"Element with id \" + elementId + \" passed in for use with \" +\n-                \"atoms, but it's out of our internal scope. Adding 5000\");\n-    elementId = (parseInt(elementId, 10) + 5000).toString();\n-  }\n-  var atomsElement = this.getAtomsElement(elementId);\n-  if (atomsElement === null) {\n-    failCb(null, {\n-      status: status.codes.UnknownError.code\n-    , value: \"Error converting element ID for using in WD atoms: \" + elementId\n-    });\n-  } else {\n-    cb(atomsElement);\n-  }\n-};\n-\n-exports.convertElementForAtoms = function (args, cb) {\n-  for (var i = 0; i < args.length; i++) {\n-    if (args[i] !== null && typeof args[i].ELEMENT !== \"undefined\") {\n-      var atomsElement = this.getAtomsElement(args[i].ELEMENT);\n-      if (atomsElement === null) {\n-        cb(true, {\n-          status: status.codes.UnknownError.code\n-        , value: \"Error converting element ID for using in WD atoms: \" + args[i].ELEMENT\n-        });\n-        return;\n-      }\n-      args[i] = atomsElement;\n-    }\n-  }\n-  cb(null, args);\n-};\n-\n-exports.jwpError = function (err, code, cb) {\n-  if (typeof code === \"function\") {\n-    cb = code;\n-    code = null;\n-  }\n-  if (code) {\n-    return cb(null, {\n-      status: code\n-    , value: err.message\n-    });\n-  }\n-  return cb(err);\n-};\n-\n-exports.jwpSuccess = function (val, cb) {\n-  if (typeof val === \"function\") {\n-    cb = val;\n-    val = null;\n-  }\n-  return cb(null, {\n-    status: status.codes.Success.code\n-  , value: val\n-  });\n-};\n-\n-exports.jwpResponse = function (err, val, cb) {\n-  if (typeof err === \"function\") {\n-    return exports.jwpSuccess(err);\n-  }\n-  if (typeof val === \"function\") {\n-    cb = val;\n-    val = null;\n-  }\n-  if (err) {\n-    return exports.jwpError(err, status.codes.UnknownError.code, cb);\n-  }\n-  return exports.jwpSuccess(val, cb);\n-};\n-\n-// methods for appium session Settings\n-// These should really be on a Session object instead of the Device, but Sessions don't exist yet\n-exports.getSettings = function (cb) {\n-  if (!this.settings) {\n-    return cb(new UnknownError('No settings object for session'));\n-  }\n-\n-  return cb(null, {\n-    status: status.codes.Success.code\n-  , value: this.settings._settings\n-  });\n-};\n-\n-// settings passed in update matching keys in existing settings object, create if not present.\n-exports.updateSettings = function (newSettings, cb) {\n-  if (!this.settings) {\n-    return cb(new UnknownError('No settings object for session'));\n-  }\n-  this.settings.update(newSettings, function (err) {\n-    if (err) {\n-      return cb(new UnknownError('err updating setting: ' + err));\n-    }\n-    return cb(null, {\n-      status: status.codes.Success.code\n-    , value: null\n-    });\n-  });\n-};"
    },
    {
      "sha": "f7d98f77e69eca0e93c2d9e2907b89afea02fff3",
      "filename": "lib/devices/device-settings.js",
      "status": "removed",
      "additions": 0,
      "deletions": 64,
      "changes": 64,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/device-settings.js",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/device-settings.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/device-settings.js?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,64 +0,0 @@\n-\"use strict\";\n-\n-var EventEmitter = require('events').EventEmitter\n-  , CamelBackPromise = require('camel-back-promise') // The straw that breaks the camels back. Instantiate by passing in a deferred promise and a number n. After the CamelBackPromise is called n times, the deferred promise is resolved.\n-  , _ = require('underscore')\n-  , Q = require('q')\n-  ;\n-\n-// EventEmitter which emits an 'update' event every time a setting is changed. One call to \"updateSettings\" could trigger multiple update events.\n-// The value of the event is a tuple: {key, value, oldValue, callback}.\n-// Any listeners *MUST* call the function stored in 'callback' to tell the appium server that it it can continue to take commands. This is to prevent race conditions between enabling a setting and calling the next command.\n-// `callback` is a node-style callback, so passing an argument will cause the updateSettings command to throw an error. Note that the setting still gets changed, even if the subscriber doesn't affect the change. It's up to the client to resolve this case.\n-var DeviceSettings = function () {\n-  this.init();\n-};\n-\n-_.extend(DeviceSettings.prototype, EventEmitter.prototype);\n-\n-DeviceSettings.prototype.init = function () {\n-\n-  this._settings = {};\n-\n-  // this is where default settings can be declared\n-  this._settings.ignoreUnimportantViews = false;\n-};\n-\n-DeviceSettings.prototype.update = function (newSettings, cb) {\n-  // if this code looks familiar, it's because it's modified from the underscore.js implementation of `extend`\n-  if (!_.isObject(newSettings)) {\n-    cb();\n-  }\n-  var numListeners = this.listeners(\"update\").length;\n-\n-  var prop;\n-  var pendingUpdates = [];\n-\n-  for (prop in newSettings) {\n-    if (hasOwnProperty.call(newSettings, prop)) {\n-      var deferred = Q.defer();\n-      pendingUpdates.push(deferred.promise);\n-\n-      var updatePayload = {\n-        key: prop,\n-        value: newSettings[prop],\n-        oldValue: this._settings[prop],\n-        callback: new CamelBackPromise(deferred, numListeners)\n-      };\n-\n-      this._settings[prop] = newSettings[prop];\n-      this.emit(\"update\", updatePayload);\n-    }\n-  }\n-\n-  Q.all(pendingUpdates).then(\n-    function () {\n-      return cb();\n-    },\n-    function (err) {\n-      return cb(err);\n-    }\n-  );\n-};\n-\n-module.exports = DeviceSettings;"
    },
    {
      "sha": "75c1c984e2040bed5238e223a75549b634db6896",
      "filename": "lib/devices/device.js",
      "status": "removed",
      "additions": 0,
      "deletions": 189,
      "changes": 189,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/device.js",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/device.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/device.js?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,189 +0,0 @@\n-\"use strict\";\n-\n-var fs = require('fs')\n-  , path = require('path')\n-  , _ = require('underscore')\n-  , logger = require('../server/logger.js').get('appium')\n-  , helpers = require('../helpers.js')\n-  , isWindows = require('appium-support').system.isWindows\n-  , copyLocalZip = helpers.copyLocalZip\n-  , unzipApp = helpers.unzipApp\n-  , downloadFile = helpers.downloadFile\n-  , capConversion = require('../server/capabilities.js').capabilityConversions\n-  , DeviceSettings = require('./device-settings.js')\n-  , url = require('url');\n-\n-var Device = function () {\n-  throw new Error(\"Cannot instantiate Device directly\");\n-};\n-\n-Device.prototype.init = function () {\n-  this.appExt = null;\n-  this.tempFiles = [];\n-  this.args = {};\n-  this.capabilities = {};\n-  this.settings = new DeviceSettings();\n-};\n-\n-Device.prototype.configure = function (args, caps) {\n-  _.extend(this.args, args);\n-  _.extend(this.capabilities, caps);\n-  _.each(caps, function (val, cap) {\n-    this.setArgFromCap(cap, cap);\n-  }.bind(this));\n-  if (this.args.tmpDir === null) {\n-    // use a custom tmp dir to avoid loosing data and app\n-    // when computer is restarted\n-    this.args.tmpDir = process.env.APPIUM_TMP_DIR ||\n-      (isWindows() ? process.env.TEMP : \"/tmp\");\n-  }\n-  if (this.args.traceDir === null) {\n-    this.args.traceDir = path.resolve(this.args.tmpDir , 'appium-instruments');\n-  }\n-};\n-\n-Device.prototype.setArgFromCap = function (arg, cap) {\n-  if (typeof this.capabilities[cap] !== \"undefined\") {\n-    if (_.has(capConversion, cap)) {\n-      var key = capConversion[cap];\n-      if (!_.has(this.capabilities, key)) {\n-        // if we have both 'version' and 'platformVersion' caps being sent,\n-        // make sure 'platformVersion' isn't overwritten by 'version'\n-        this.args[key] = this.capabilities[cap];\n-      }\n-    } else {\n-      this.args[arg] = this.capabilities[cap];\n-    }\n-  }\n-};\n-\n-Device.prototype.appString = function () {\n-  return this.args.app ? this.args.app.toString() : '';\n-};\n-\n-Device.prototype.configureApp = function (cb) {\n-  if (this.args.app.substring(0, 4).toLowerCase() === \"http\") {\n-    this.configureDownloadedApp(cb);\n-  } else {\n-    this.configureLocalApp(cb);\n-  }\n-};\n-\n-Device.prototype.configureLocalApp = function (cb) {\n-  this.args.app = path.resolve(this.args.app);\n-  var appPath = this.args.app;\n-  var origin = this.capabilities.app ? \"desired caps\" : \"command line\";\n-  var ext = appPath.substring(appPath.length - 4).toLowerCase();\n-  if (ext === this.appExt) {\n-    this.args.app = appPath;\n-    logger.debug(\"Using local app from \" + origin + \": \" + appPath);\n-    fs.stat(appPath, function (err) {\n-      if (err) {\n-        return cb(new Error(\"Error locating the app: \" + err.message));\n-      }\n-      cb();\n-    });\n-  } else if (ext === \".zip\" || ext === \".ipa\") {\n-    logger.debug(\"Using local \" + ext + \" from \" + origin + \": \" + appPath);\n-    this.unzipLocalApp(appPath, function (zipErr, newAppPath) {\n-      if (zipErr) return cb(zipErr);\n-      if (ext === \".ipa\") {\n-        this.args.ipa = this.args.app;\n-      }\n-      this.args.app = newAppPath;\n-      logger.debug(\"Using locally extracted app: \" + this.args.app);\n-      cb();\n-    }.bind(this));\n-  } else {\n-    var msg = \"Using local app, but didn't end in .zip, .ipa or \" + this.appExt;\n-    logger.error(msg);\n-    cb(new Error(msg));\n-  }\n-};\n-\n-Device.prototype.appIsPackageOrBundle = function (app) {\n-  return (/^([a-zA-Z0-9\\-_]+\\.[a-zA-Z0-9\\-_]+)+$/).test(app);\n-};\n-\n-Device.prototype.configureDownloadedApp = function (cb) {\n-  var origin = this.capabilities.app ? \"desired caps\" : \"command line\";\n-  var appUrl;\n-  try {\n-    appUrl = url.parse(this.args.app);\n-  } catch (err) {\n-    cb(\"Invalid App URL (\" + this.args.app + \")\");\n-  }\n-  var ext = path.extname(appUrl.pathname);\n-  if (ext === \".apk\") {\n-    try {\n-      downloadFile(url.format(appUrl), \".apk\", function (err, appPath) {\n-        if (err) return cb(err);\n-        this.tempFiles.push(appPath);\n-        this.args.app = appPath;\n-        cb();\n-      }.bind(this));\n-    } catch (e) {\n-      var err = e.toString();\n-      logger.error(\"Failed downloading app from appUrl \" + appUrl.href);\n-      cb(err);\n-    }\n-  } else if (ext === \".zip\" || ext === \".ipa\") {\n-    try {\n-      this.downloadAndUnzipApp(url.format(appUrl), function (zipErr, appPath) {\n-        if (zipErr) {\n-          cb(zipErr);\n-        } else {\n-          this.args.app = appPath;\n-          logger.debug(\"Using extracted app: \" + this.args.app);\n-          cb();\n-        }\n-      }.bind(this));\n-      logger.debug(\"Using downloadable app from \" + origin + \": \" + appUrl.href);\n-    } catch (e) {\n-      var err = e.toString();\n-      logger.error(\"Failed downloading app from appUrl \" + appUrl.href);\n-      cb(err);\n-    }\n-  } else {\n-    cb(\"App URL (\" + this.args.app + \") didn't seem to point to a .zip, \" +\n-       \".apk, or .ipa file\");\n-  }\n-};\n-\n-Device.prototype.unzipLocalApp = function (localZipPath, cb) {\n-  try {\n-    copyLocalZip(localZipPath, function (err, zipPath) {\n-      if (err) return cb(err);\n-      this.unzipApp(zipPath, cb);\n-    }.bind(this));\n-  } catch (e) {\n-    logger.error(\"Failed copying and unzipping local app: \" + localZipPath);\n-    cb(e);\n-  }\n-};\n-\n-Device.prototype.unzipApp = function (zipPath, cb) {\n-  this.tempFiles.push(zipPath);\n-  unzipApp(zipPath, this.appExt, function (err, appPath) {\n-    if (err) {\n-      cb(err, null);\n-    } else {\n-      this.tempFiles.push(appPath);\n-      cb(null, appPath);\n-    }\n-  }.bind(this));\n-};\n-\n-Device.prototype.downloadAndUnzipApp = function (appUrl, cb) {\n-  downloadFile(appUrl, \".zip\", function (err, zipPath) {\n-    if (err) return cb(err);\n-    this.unzipApp(zipPath, cb);\n-  }.bind(this));\n-};\n-\n-// get a specific setting\n-Device.prototype.getSetting = function (str) {\n-  return this.settings._settings[str];\n-};\n-\n-module.exports = Device;"
    },
    {
      "sha": "2c71cc1bf548bbc1a3206ef85e7f7661e3d9fcfd",
      "filename": "lib/devices/firefoxos/atoms/gaia_apps.js",
      "status": "removed",
      "additions": 0,
      "deletions": 239,
      "changes": 239,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/firefoxos/atoms/gaia_apps.js",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/firefoxos/atoms/gaia_apps.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/firefoxos/atoms/gaia_apps.js?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,239 +0,0 @@\n-/* This Source Code Form is subject to the terms of the Mozilla Public\n- * License, v. 2.0. If a copy of the MPL was not distributed with this file,\n- * You can obtain one at http://mozilla.org/MPL/2.0/. */\n-\n-'use strict';\n-\n-var GaiaApps = {\n-\n-  normalizeName: function(name) {\n-    return name.replace(/[- ]+/g, '').toLowerCase();\n-  },\n-\n-  getRunningApps: function() {\n-    let runningApps = window.wrappedJSObject.WindowManager.getRunningApps();\n-    // Return a simplified version of the runningApps object which can be\n-    // JSON-serialized.\n-    let apps = {};\n-    for (let app in runningApps) {\n-        let anApp = {};\n-        for (let key in runningApps[app]) {\n-            if ([\"name\", \"origin\", \"manifest\"].indexOf(key) > -1) {\n-                anApp[key] = runningApps[app][key];\n-            }\n-        }\n-        apps[app] = anApp;\n-    }\n-    return apps;\n-  },\n-\n-  getRunningAppOrigin: function(name) {\n-    let runningApps = window.wrappedJSObject.WindowManager.getRunningApps();\n-    let origin;\n-\n-    for (let property in runningApps) {\n-      if (runningApps[property].name == name) {\n-        origin = property;\n-      }\n-    }\n-\n-    return origin;\n-  },\n-\n-  getPermission: function(appName, permissionName) {\n-    GaiaApps.locateWithName(appName, function(app) {\n-      console.log(\"Getting permission '\" + permissionName + \"' for \" + appName);\n-      var mozPerms = navigator.mozPermissionSettings;\n-      var result = mozPerms.get(\n-        permissionName, app.manifestURL, app.origin, false\n-      );\n-      marionetteScriptFinished(result);\n-    });\n-  },\n-\n-  setPermission: function(appName, permissionName, value) {\n-    GaiaApps.locateWithName(appName, function(app) {\n-      console.log(\"Setting permission '\" + permissionName + \"' for \" +\n-        appName + \"to '\" + value + \"'\");\n-      var mozPerms = navigator.mozPermissionSettings;\n-      mozPerms.set(\n-        permissionName, value, app.manifestURL, app.origin, false\n-      );\n-      marionetteScriptFinished();\n-    });\n-  },\n-\n-  locateWithName: function(name, aCallback) {\n-    var callback = aCallback || marionetteScriptFinished;\n-    function sendResponse(app, appName, entryPoint) {\n-      if (callback === marionetteScriptFinished) {\n-        if (typeof(app) === 'object') {\n-          var result = {\n-            name: app.manifest.name,\n-            origin: app.origin,\n-            entryPoint: entryPoint || null,\n-            normalizedName: appName\n-          };\n-          callback(result);\n-        } else {\n-          callback(false);\n-        }\n-      } else {\n-        callback(app, appName, entryPoint);\n-      }\n-    }\n-\n-    let appsReq = navigator.mozApps.mgmt.getAll();\n-    appsReq.onsuccess = function() {\n-      let apps = appsReq.result;\n-      let normalizedSearchName = GaiaApps.normalizeName(name);\n-\n-      for (let i = 0; i < apps.length; i++) {\n-        let app = apps[i];\n-        let origin = null;\n-        let entryPoints = app.manifest.entry_points;\n-        if (entryPoints) {\n-          for (let ep in entryPoints) {\n-            let currentEntryPoint = entryPoints[ep];\n-            let appName = currentEntryPoint.name;\n-\n-            if (normalizedSearchName === GaiaApps.normalizeName(appName)) {\n-              return sendResponse(app, appName, ep);\n-            }\n-          }\n-        } else {\n-          let appName = app.manifest.name;\n-\n-          if (normalizedSearchName === GaiaApps.normalizeName(appName)) {\n-            return sendResponse(app, appName);\n-          }\n-        }\n-      }\n-      callback(false);\n-    }\n-  },\n-\n-  // Returns the number of running apps.\n-  numRunningApps: function() {\n-    let count = 0;\n-    let runningApps = window.wrappedJSObject.WindowManager.getRunningApps();\n-    for (let origin in runningApps) {\n-      count++;\n-    }\n-    return count;\n-  },\n-\n-  // Kills the specified app.\n-  kill: function(aOrigin, aCallback) {\n-    var callback = aCallback || marionetteScriptFinished;\n-    let runningApps = window.wrappedJSObject.WindowManager.getRunningApps();\n-    if (!runningApps.hasOwnProperty(aOrigin)) {\n-      callback(false);\n-    }\n-    else {\n-      window.addEventListener('appterminated', function gt_onAppTerminated() {\n-        window.removeEventListener('appterminated', gt_onAppTerminated);\n-        waitFor(\n-          function() {\n-            console.log(\"app with origin '\" + aOrigin + \"' has terminated\");\n-            callback(true);\n-          },\n-          function() {\n-            let runningApps =\n-              window.wrappedJSObject.WindowManager.getRunningApps();\n-            return !runningApps.hasOwnProperty(aOrigin);\n-          }\n-        );\n-      });\n-      console.log(\"terminating app with origin '\" + aOrigin + \"'\");\n-      window.wrappedJSObject.WindowManager.kill(aOrigin);\n-    }\n-  },\n-\n-  // Kills all running apps, except the homescreen.\n-  killAll: function() {\n-    let originsToClose = [];\n-    let that = this;\n-\n-    let runningApps = window.wrappedJSObject.WindowManager.getRunningApps();\n-    for (let origin in runningApps) {\n-      if (origin.indexOf('homescreen') == -1) {\n-        originsToClose.push(origin);\n-      }\n-    }\n-\n-    if (!originsToClose.length) {\n-      marionetteScriptFinished(true);\n-      return;\n-    }\n-\n-    originsToClose.slice(0).forEach(function(origin) {\n-      GaiaApps.kill(origin, function() {});\n-    });\n-\n-    // Even after the 'appterminated' event has been fired for an app,\n-    // it can still exist in the apps list, so wait until 1 or fewer\n-    // apps are running (since we don't close the homescreen app).\n-    waitFor(\n-      function() { marionetteScriptFinished(true); },\n-      function() { return that.numRunningApps() <= 1; }\n-    );\n-  },\n-\n-  // Launches app with the specified name (e.g., 'Calculator'); returns the\n-  // app frame's id if successful, false if the app can't be found, or times\n-  // out if the app frame can't be found after launching the app.\n-  launchWithName: function(name) {\n-    GaiaApps.locateWithName(name, function(app, appName, entryPoint) {\n-      if (app) {\n-        let windowManager = window.wrappedJSObject.WindowManager;\n-        let runningApps = windowManager.getRunningApps();\n-        let origin = GaiaApps.getRunningAppOrigin(appName);\n-\n-        let sendResponse = function() {\n-          let app = runningApps[origin];\n-          let result = {frame: app.frame.firstChild,\n-            src: app.iframe.src,\n-            name: app.name,\n-            origin: origin};\n-          marionetteScriptFinished(result);\n-        };\n-\n-        if (windowManager.getDisplayedApp() == origin) {\n-          console.log(\"app with origin '\" + origin + \"' is already running\");\n-          sendResponse();\n-        }\n-        else {\n-          window.addEventListener('apploadtime', function apploadtime() {\n-            window.removeEventListener('apploadtime', apploadtime);\n-            waitFor(\n-              function() {\n-                console.log(\"app with origin '\" + origin + \"' has launched\");\n-                sendResponse();\n-              },\n-              function() {\n-                origin = GaiaApps.getRunningAppOrigin(appName);\n-                return !!origin;\n-              }\n-            );\n-          });\n-          console.log(\"launching app with name '\" + appName + \"'\");\n-          app.launch(entryPoint || null);\n-        }\n-      } else {\n-        marionetteScriptFinished(false);\n-      }\n-    });\n-  },\n-\n-  /**\n-   * Uninstalls the app with the specified name.\n-   */\n-  uninstallWithName: function(name) {\n-    GaiaApps.locateWithName(name, function uninstall(app) {\n-      navigator.mozApps.mgmt.uninstall(app);\n-      marionetteScriptFinished(false);\n-    });\n-  }\n-\n-};"
    },
    {
      "sha": "e7b5419bce1d525e488c774c277b78c42133522d",
      "filename": "lib/devices/firefoxos/firefoxos-atoms.js",
      "status": "removed",
      "additions": 0,
      "deletions": 22,
      "changes": 22,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/firefoxos/firefoxos-atoms.js",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/firefoxos/firefoxos-atoms.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/firefoxos/firefoxos-atoms.js?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,22 +0,0 @@\n-\"use strict\";\n-\n-var fs = require(\"fs\")\n-  , path = require(\"path\")\n-  , atomsCache = {};\n-\n-exports.get = function (atomName) {\n-  var atomFileName = path.resolve(__dirname, \"atoms/\" + atomName + \".js\");\n-\n-  // Check if we have already loaded an cached this Atom\n-  if (!atomsCache.hasOwnProperty(atomName)) {\n-    try {\n-      atomsCache[atomName] = fs.readFileSync(atomFileName);\n-    } catch (e) {\n-      throw \"Unable to load Atom '\" + atomName +\n-        \"' from file '\" + atomFileName + \"'\";\n-    }\n-  }\n-\n-  return atomsCache[atomName];\n-};\n-"
    },
    {
      "sha": "03bf31d548190ac723e115e83d64ef9a29971035",
      "filename": "lib/devices/firefoxos/firefoxos.js",
      "status": "removed",
      "additions": 0,
      "deletions": 347,
      "changes": 347,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/firefoxos/firefoxos.js",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/firefoxos/firefoxos.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/firefoxos/firefoxos.js?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,347 +0,0 @@\n-\"use strict\";\n-\n-var errors = require('../../server/errors.js')\n-  , _ = require('underscore')\n-  , Device = require('../device.js')\n-  , logger = require('../../server/logger.js').get('appium')\n-  , net = require('net')\n-  , deviceCommon = require('../common.js')\n-  , status = require(\"../../server/status.js\")\n-  , getAtomSrc = require('./firefoxos-atoms.js').get\n-  , async = require('async')\n-  , NotYetImplementedError = errors.NotYetImplementedError;\n-\n-var Firefox = function () {\n-  this.init();\n-};\n-\n-_.extend(Firefox.prototype, Device.prototype);\n-Firefox.prototype._deviceInit = Device.prototype.init;\n-Firefox.prototype.init = function () {\n-  this._deviceInit();\n-  this.capabilities = {\n-    platform: 'LINUX'\n-  , browserName: 'FirefoxOS'\n-  , platformVersion: '18.0'\n-  , webStorageEnabled: false\n-  , takesScreenshot: true\n-  , javascriptEnabled: true\n-  , databaseEnabled: false\n-  };\n-  this.queue = [];\n-  this.progress = 0;\n-  this.onStop = function () {};\n-  this.implicitWaitMs = 0;\n-  this.commandTimeoutMs = 60 * 1000;\n-  this.origCommandTimeoutMs = this.commandTimeoutMs;\n-  this.commandTimeout = null;\n-  this.asyncWaitMs = 0;\n-  this.onConnect = null;\n-  this.hasConnected = false;\n-  this.fromActor = null;\n-  this.socket = null;\n-  this.receiveStream = null;\n-  this.expectedRcvBytes = null;\n-  this.lastCmd = null;\n-  this.initCommandMap();\n-};\n-\n-Firefox.prototype._deviceConfigure = Device.prototype.configure;\n-Firefox.prototype.configure = function (args, caps, cb) {\n-  this._deviceConfigure(args, caps);\n-  this.args.systemPort = 2828;\n-  cb();\n-};\n-\n-Firefox.prototype.start = function (cb, onDie) {\n-  this.socket = new net.Socket();\n-  this.socket.on('close', function () {\n-    onDie(0);\n-  });\n-  this.socket.on('data', this.receive.bind(this));\n-\n-  this.socket.connect(this.args.systemPort, 'localhost', function () { });\n-\n-\n-  this.onConnect = function () {\n-    logger.debug(\"Firefox OS socket connected\");\n-    var mainCb = cb;\n-    async.waterfall([\n-      function (cb) { this.getMarionetteId(cb); }.bind(this),\n-      function (cb) { this.createSession(cb); }.bind(this),\n-      function (cb) { this.launchAppByName(cb); }.bind(this),\n-      function (frameId, cb) { this.frame(frameId, cb); }.bind(this)\n-    ], function () { mainCb(null, this.sessionId); }.bind(this));\n-  };\n-\n-};\n-\n-Firefox.prototype.stop = function (cb) {\n-  logger.debug(\"Stopping firefoxOs connection\");\n-  this.proxy({type: 'deleteSession'}, function (err) {\n-    if (err) return cb(err);\n-    this.socket.destroy();\n-    cb(0);\n-  }.bind(this));\n-};\n-\n-Firefox.prototype.getMarionetteId = function (cb) {\n-  logger.debug(\"Getting marionette id\");\n-  this.proxy({type: 'getMarionetteID'}, function (err, res) {\n-    if (err) return cb(err);\n-    this.fromActor = res.id;\n-    cb(null);\n-  }.bind(this));\n-};\n-\n-Firefox.prototype.createSession = function (cb) {\n-  logger.debug(\"Creating firefox os session\");\n-  this.proxy({type: 'newSession'}, function (err, res) {\n-    if (err) return cb(err);\n-    this.sessionId = res.value;\n-    cb(null);\n-  }.bind(this));\n-};\n-\n-Firefox.prototype.launchAppByName = function (cb) {\n-  logger.debug(\"Launching our app by its name\");\n-  var atomSrc = getAtomSrc('gaia_apps');\n-  var wrappedScript = atomSrc +\n-    \";GaiaApps.launchWithName('\" + this.args.app + \"');\";\n-  var cmd = {\n-    type: 'executeAsyncScript'\n-  , args: []\n-  , newSandbox: true\n-  , specialPowers: false\n-  , value: wrappedScript\n-  };\n-  this.proxy(cmd, function (err, res) {\n-    if (err) return cb(err);\n-    cb(null, res.value.frame.ELEMENT);\n-  });\n-};\n-\n-Firefox.prototype.receive = function (data) {\n-  var parts, bytes, jsonData;\n-  if (this.receiveStream) {\n-    this.receiveStream += data.toString();\n-    logger.debug(data.length + \" b more data received, adding to stream (\" + this.receiveStream.length + \" b)\");\n-    try {\n-      data = JSON.parse(this.receiveStream);\n-      this.receiveStream = null;\n-    } catch (e) {\n-      logger.debug(\"Stream still not complete, waiting\");\n-      return;\n-    }\n-  } else {\n-    parts = data.toString().split(\":\");\n-    bytes = parseInt(parts[0], 10);\n-    logger.debug(\"Data received, looking for \" + bytes + \" bytes\");\n-    jsonData = parts.slice(1).join(\":\");\n-    try {\n-      data = JSON.parse(jsonData);\n-    } catch (e) {\n-      logger.debug(\"Data did not parse, waiting for more\");\n-      this.receiveStream = jsonData;\n-      return;\n-    }\n-  }\n-  logger.debug(JSON.stringify(data));\n-  if (!this.hasConnected) {\n-    this.hasConnected = true;\n-    this.fromActor = data.from;\n-    this.onConnect();\n-  } else if (this.cbForCurrentCmd) {\n-    var cb = this.cbForCurrentCmd;\n-    this.progress--;\n-    this.cbForCurrentCmd = null;\n-    if (typeof cb === 'function') {\n-      this.respond(data, cb);\n-    }\n-    this.executeNextCommand();\n-  }\n-};\n-\n-Firefox.prototype.proxy = deviceCommon.proxy;\n-Firefox.prototype.getSettings = deviceCommon.getSettings;\n-Firefox.prototype.updateSettings = deviceCommon.updateSettings;\n-\n-Firefox.prototype.push = function (elem) {\n-  this.queue.push(elem);\n-  this.executeNextCommand();\n-};\n-\n-\n-Firefox.prototype.respond = function (data, cb) {\n-  if (typeof data.error !== \"undefined\") {\n-    cb(new Error(data.error.message));\n-  } else if (typeof data.id !== \"undefined\") {\n-    cb(null, data);\n-  } else {\n-    cb(null, {\n-      status: status.codes.Success.code\n-    , value: data.value\n-    });\n-  }\n-};\n-\n-\n-Firefox.prototype.executeNextCommand = function () {\n-  if (this.queue.length <= 0 || this.progress > 0) {\n-    return;\n-  }\n-\n-  var target = this.queue.shift()\n-  , command = target[0]\n-  , cb = target[1];\n-\n-  this.cbForCurrentCmd = cb;\n-\n-  this.progress++;\n-  command.to = this.fromActor;\n-  var cmdStr = JSON.stringify(command);\n-  cmdStr = cmdStr.length + ':' + cmdStr;\n-\n-  logger.debug(\"Sending command to firefoxOs: \" + cmdStr);\n-  this.socket.write(cmdStr);\n-};\n-\n-Firefox.prototype.cmdMap = function () {\n-  var elFn = function (elId) { return {element: elId }; };\n-  return {\n-    implicitWait: ['setSearchTimeout']\n-  , getUrl: ['getUrl']\n-  , findElement: ['findElement', function (strategy, selector) {\n-      return {\n-        using: strategy,\n-        value: selector\n-      };\n-    }, function (err, res, cb) {\n-      if (err) return cb(err);\n-      res.value = {ELEMENT: res.value};\n-      cb(null, res);\n-    }]\n-  , click: ['clickElement', elFn]\n-  , setValue: ['sendKeysToElement', function (elId, val) {\n-      return {\n-        element: elId\n-      , value: val.split(\"\")\n-      };\n-    }]\n-  , getText: ['getElementText', elFn]\n-  , getPageSource: ['getPageSource']\n-  , execute: ['executeScript', function (script, params) {\n-      return {\n-        value: script\n-      , args: params\n-      };\n-    }]\n-  , frame: ['switchToFrame', elFn]\n-  };\n-};\n-\n-Firefox.prototype.notImplementedCmds = function () {\n-  return [\n-    'equalsWebElement'\n-    , 'findElements'\n-    , 'findElementFromElement'\n-    , 'findElementsFromElement'\n-    , 'complexTap'\n-    , 'flick'\n-    , 'touchLongClick'\n-    , 'touchDown'\n-    , 'touchUp'\n-    , 'touchMove'\n-    , 'swipe'\n-    , 'hideKeyboard'\n-    , 'clear'\n-    , 'getName'\n-    , 'getAttribute'\n-    , 'getCssProperty'\n-    , 'getLocation'\n-    , 'getSize'\n-    , 'getWindowSize'\n-    , 'getPageIndex'\n-    , 'pressKeyCode'\n-    , 'longPressKeyCode'\n-    , 'keyevent'\n-    , 'back'\n-    , 'forward'\n-    , 'refresh'\n-    , 'keys'\n-    , 'leaveWebView'\n-    , 'elementDisplayed'\n-    , 'elementEnabled'\n-    , 'elementSelected'\n-    , 'getAlertText'\n-    , 'setAlertText'\n-    , 'postAcceptAlert'\n-    , 'postDismissAlert'\n-    , 'asyncScriptTimeout'\n-    , 'setOrientation'\n-    , 'getOrientation'\n-    , 'moveTo'\n-    , 'clickCurrent'\n-    , 'fakeFlickElement'\n-    , 'executeAsync'\n-    , 'title'\n-    , 'submit'\n-    , 'url'\n-    , 'active'\n-    , 'getWindowHandle'\n-    , 'setWindow'\n-    , 'closeWindow'\n-    , 'getWindowHandles'\n-    , 'receiveAsyncResponse'\n-    , 'setValueImmediate'\n-    , 'getCookies'\n-    , 'setCookie'\n-    , 'deleteCookie'\n-    , 'deleteCookies'\n-    , 'getCurrentActivity'\n-  ];\n-};\n-\n-Firefox.prototype.initCommandMap = function () {\n-  var nyiCmds = this.notImplementedCmds();\n-  // create controller functions dynamically for implemented commands\n-  _.each(this.cmdMap(), function (cmdInfo, controller) {\n-    if (_.contains(nyiCmds, controller)) {\n-      throw new Error(\"Controller \" + controller + \" is listed in both \" +\n-                      \"implemented and not-yet-implemented lists. Fix this \" +\n-                      \"before moving on!\");\n-    }\n-    this[controller] = function () {\n-      var args = Array.prototype.slice.call(arguments, 0);\n-      var cb;\n-      var outerCb = args[args.length - 1];\n-      if (typeof cmdInfo[2] === 'function') {\n-        cb = function (err, res) {\n-          cmdInfo[2](err, res, outerCb);\n-        };\n-      } else {\n-        cb = outerCb;\n-      }\n-      args = args.slice(0, args.length - 1);\n-      var cmd = {\n-        type: cmdInfo[0]\n-      };\n-      if (typeof cmdInfo[1] === 'function') {\n-        cmd  = _.extend(cmd, cmdInfo[1].apply(this, args));\n-      } else if (typeof cmdInfo[1] === \"undefined\" && args.length > 0) {\n-        cmd = _.extend(cmd, {value: args[0]});\n-      }\n-      this.proxy(cmd, cb);\n-    }.bind(this);\n-  }.bind(this));\n-  // throw not yet implemented for any command in nyi list\n-  _.each(nyiCmds, function (controller) {\n-    this[controller] = function () {\n-      var args = Array.prototype.slice.call(arguments, 0);\n-      var cb = args[args.length - 1];\n-      cb(new NotYetImplementedError(), null);\n-    }.bind(this);\n-  }.bind(this));\n-};\n-\n-module.exports = Firefox;"
    },
    {
      "sha": "d01c359aa8a26dbd674fcbc3de1f2cb886c8fca5",
      "filename": "lib/devices/ios/instruments.js",
      "status": "removed",
      "additions": 0,
      "deletions": 9,
      "changes": 9,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/ios/instruments.js",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/ios/instruments.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/ios/instruments.js?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,9 +0,0 @@\n-// Gets instrument from npm package and setup logger\n-\"use strict\";\n-\n-var logger = require('appium-instruments').logger,\n-    Instruments = require('appium-instruments').Instruments;\n-\n-logger.init(require('../../server/logger.js').get('appium'));\n-\n-module.exports = Instruments;"
    },
    {
      "sha": "5d1eac0df7db3830fcc9696fb02b8383b18d2782",
      "filename": "lib/devices/ios/ios-controller.js",
      "status": "removed",
      "additions": 0,
      "deletions": 2383,
      "changes": 2383,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/ios/ios-controller.js",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/ios/ios-controller.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/ios/ios-controller.js?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,2383 +0,0 @@\n-\"use strict\";\n-var uuid = require('uuid-js')\n-  , path = require('path')\n-  , fs = require('fs')\n-  , async = require('async')\n-  , path = require('path')\n-  , _ = require('underscore')\n-  , exec = require('child_process').exec\n-  , status = require(\"../../server/status.js\")\n-  , logger = require('../../server/logger.js').get('appium')\n-  , helpers = require('../../helpers.js')\n-  , escapeSpecialChars = helpers.escapeSpecialChars\n-  , CookieMan = require('../../cookies')\n-  , rotateImage = helpers.rotateImage\n-  , request = require('request')\n-  , mkdirp = require('mkdirp')\n-  , AdmZip = require('adm-zip')\n-  , deviceCommon = require('../common.js')\n-  , js2xml = require(\"js2xmlparser2\")\n-  , xpath = require(\"xpath\")\n-  , XMLDom = require(\"xmldom\")\n-  , IOSPerfLog = require('./ios-perf-log')\n-  , errors = require('../../server/errors.js')\n-  , isWindows = require('appium-support').system.isWindows\n-  , NotImplementedError = errors.NotImplementedError\n-  , NotYetImplementedError = errors.NotYetImplementedError;\n-\n-var iOSController = {};\n-var FLICK_MS = 3000;\n-\n-var NATIVE_WIN = \"NATIVE_APP\";\n-var WEBVIEW_WIN = \"WEBVIEW\";\n-var WEBVIEW_BASE = WEBVIEW_WIN + \"_\";\n-\n-iOSController.NATIVE_WIN = NATIVE_WIN;\n-iOSController.WEBVIEW_BASE = WEBVIEW_BASE;\n-\n-var logTypesSupported = {\n-  'syslog': 'Logs for iOS applications on real devices and simulators',\n-  'crashlog': 'Crash logs for iOS applications on real devices and simulators',\n-  'performance': 'Performance Logs - Debug Timelines on real devices and simulators'\n-};\n-\n-iOSController.getStatusExtensions = function () {\n-  var ext = {};\n-  ext.isShuttingDown = this.isShuttingDown; // this is for testing purposes\n-  return ext;\n-};\n-\n-iOSController.createGetElementCommand = function (strategy, selector, ctx,\n-    many) {\n-  var ext = many ? 's' : '';\n-  var command = \"\";\n-  ctx = !ctx ? ctx : \", '\" + ctx + \"'\" ;\n-  switch (strategy) {\n-  case \"name\":\n-    command = [\"au.getElement\", ext, \"ByName('\", selector, \"'\", ctx,\n-               \")\"].join('');\n-    break;\n-  case \"accessibility id\":\n-    command = [\"au.getElement\", ext, \"ByAccessibilityId('\", selector, \"'\", ctx,\n-               \")\"].join('');\n-    break;\n-  case \"id\":\n-    command = [\"au.getElement\", ext, \"ById('\", selector, \"')\"].join('');\n-    break;\n-  case \"-ios uiautomation\":\n-    command = [\"au.getElement\", ext, \"ByUIAutomation('\", selector, \"'\", ctx,\n-               \")\"].join('');\n-    break;\n-  default:\n-    command = [\"au.getElement\", ext, \"ByType('\", selector, \"'\", ctx,\n-               \")\"].join('');\n-  }\n-\n-  return command;\n-};\n-\n-iOSController.findUIElementOrElements = function (strategy, selector, ctx, many, cb) {\n-  if (strategy !== \"xpath\") {\n-    selector = escapeSpecialChars(selector, \"'\");\n-  }\n-  if (typeof ctx === \"undefined\" || !ctx) {\n-    ctx = '';\n-  } else if (typeof ctx === \"string\") {\n-    ctx = escapeSpecialChars(ctx, \"'\");\n-  }\n-\n-  try {\n-    selector = this.getSelectorForStrategy(strategy, selector);\n-  } catch (e) {\n-    return cb(null, {\n-      status: status.codes.UnknownError.code\n-    , value: e\n-    });\n-  }\n-\n-  if (!selector) return;\n-  var doFind = function (findCb) {\n-    if (strategy === \"xpath\") {\n-      this.findUIElementsByXpath(selector, ctx, many, function (err, res) {\n-        this.handleFindCb(err, res, many, findCb);\n-      }.bind(this));\n-    } else if (strategy === \"id\") {\n-      // For the ID strategy, we first want to handle the selector as an\n-      // accessibility id. If no element is found by that strategy, we fall\n-      // back to searching for the string.\n-      var findByAxIdCmd = this.createGetElementCommand(\"accessibility id\", selector, ctx, many);\n-      this.proxy(findByAxIdCmd, function (err, res) {\n-        this.handleFindCb(err, res, many, function (found, err, res) {\n-          if (found) {\n-            this.handleFindCb(err, res, many, findCb);\n-          } else {\n-            // Since no element was found using the accessibility id, we fall\n-            // back to search by string.\n-            var findByIdCmd = this.createGetElementCommand(\"id\",\n-                                this.getLocalizedStringForSelector(selector),\n-                                ctx, many);\n-            this.proxy(findByIdCmd, function (err, res) {\n-              this.handleFindCb(err, res, many, findCb);\n-            }.bind(this));\n-          }\n-        }.bind(this));\n-      }.bind(this));\n-    } else {\n-      var command = this.createGetElementCommand(strategy, selector, ctx, many);\n-      this.proxy(command, function (err, res) {\n-        this.handleFindCb(err, res, many, findCb);\n-      }.bind(this));\n-    }\n-  }.bind(this);\n-\n-  if (_.contains(this.supportedStrategies, strategy)) {\n-    this.implicitWaitForCondition(doFind, cb);\n-  } else {\n-    cb(null, {\n-      status: status.codes.UnknownError.code\n-    , value: \"Sorry, we don't support the '\" + strategy + \"' locator \" +\n-             \"strategy for iOS.\"\n-    });\n-  }\n-};\n-\n-var _pathFromDomNode = function (node) {\n-  var path = null;\n-  _.each(node.attributes, function (attrObj) {\n-    if (attrObj.name === \"path\") {\n-      path = attrObj.value;\n-    }\n-  });\n-  return path;\n-};\n-\n-var _xmlSourceFromJson = function (jsonSource) {\n-  if (typeof jsonSource === \"string\") {\n-    jsonSource = JSON.parse(jsonSource);\n-  }\n-  return js2xml(\"AppiumAUT\", jsonSource, {\n-    wrapArray: {enabled: false, elementName: \"element\"},\n-    declaration: {include: true},\n-    prettyPrinting: {indentString: \"    \"}\n-  });\n-};\n-\n-var _performXpathQueryOnJson = function (selector, jsonSource) {\n-  var xmlSource = _xmlSourceFromJson(jsonSource);\n-  var dom = new XMLDom.DOMParser().parseFromString(xmlSource);\n-  return xpath.select(selector, dom);\n-};\n-\n-iOSController.findUIElementsByXpath = function (selector, ctx, many, curRetry,\n-    cb) {\n-  if (typeof curRetry === \"function\") {\n-    cb = curRetry;\n-    curRetry = 0;\n-  }\n-  this.getSourceForElementForXML(ctx, function (err, res) {\n-    var selectedNodes;\n-    if (err || res.status !== 0) {\n-      logger.error(\"Error getting source, can't continue finding element \" +\n-                   \"by XPath\");\n-      return cb(err, res);\n-    }\n-    try {\n-      selectedNodes = _performXpathQueryOnJson(selector, res.value);\n-    } catch (e) {\n-      return cb(e);\n-    }\n-    if (!many) selectedNodes = selectedNodes.slice(0, 1);\n-    var indexPaths = [];\n-    // filter out elements without 'path' attribute\n-    _.each(selectedNodes, function (node) {\n-      var ip = _pathFromDomNode(node);\n-      if (ip !== null) {\n-        indexPaths.push(ip);\n-      }\n-    });\n-\n-    if (!many && indexPaths.length < 1) {\n-      // if we don't have any matching nodes, and we wanted at least one, fail\n-      return cb(null, {\n-        status: status.codes.NoSuchElement.code,\n-        value: null\n-      });\n-    } else if (indexPaths.length < 1) {\n-      // and if we don't have any matching nodes, return the empty array\n-      return cb(null, {\n-        status: status.codes.Success.code,\n-        value: []\n-      });\n-    }\n-\n-    // otherwise look up the actual element by its index path\n-    var proxyCmd;\n-    if (!many) {\n-      proxyCmd = \"au.getElementByIndexPath('\" + indexPaths[0] + \"')\";\n-    } else {\n-      var ipArrString = JSON.stringify(indexPaths);\n-      proxyCmd = \"au.getElementsByIndexPaths(\" + ipArrString + \")\";\n-    }\n-    // having index paths means we think elements should be there. Sometimes\n-    // uiauto lags in enabling us to get elements, so we retry a few times if\n-    // it can't find elements we know should be there. see uiauto code\n-    // for more logic\n-    this.proxy(proxyCmd, function (err, res) {\n-      if (err) return cb(err);\n-      // we get a StaleElementReference if uiauto can't find an element\n-      // by the path we mentioned\n-      if (res.status !== status.codes.Success.code &&\n-          curRetry < 3) {\n-        logger.debug(\"Got a warning from uiauto that some index paths \" +\n-                    \"could not be resolved, trying again\");\n-        return setTimeout(function () {\n-          this.findUIElementsByXpath(selector, ctx, many, curRetry + 1, cb);\n-        }.bind(this), 300);\n-      }\n-      cb(err, res);\n-    }.bind(this));\n-  }.bind(this));\n-};\n-\n-iOSController.getSourceForElementForXML = function (ctx, cb) {\n-  var _cb = cb;\n-  cb = function (err, res) {\n-    if (err) return _cb(err);\n-\n-    // TODO: all this json/xml logic is very expensive, we need\n-    // to use a SAX parser instead.\n-    if (res) {\n-      if (res.value) res.value = JSON.stringify(res.value);\n-      _cb(err, res);\n-    } else {\n-      // this should never happen but we've received bug reports; this will help us track down\n-      // what's wrong in getTreeForXML\n-      _cb(new Error(\"Bad response from getTreeForXML. Err was \" + err + \" and res was \" + JSON.stringify(res)));\n-    }\n-  };\n-  if (!ctx) {\n-    this.proxy(\"au.mainApp().getTreeForXML()\", cb);\n-  } else {\n-    this.proxy(\"au.getElement('\" + ctx + \"').getTreeForXML()\", cb);\n-  }\n-};\n-\n-iOSController.getLocalizedStringForSelector = function (selector) {\n-  var newSelector = selector;\n-\n-  var strings = this.localizableStrings;\n-  if (strings) {\n-    var localizedSelector = strings[selector];\n-    if (localizedSelector) {\n-      newSelector = localizedSelector;\n-    } else {\n-      logger.debug(\"Id selector, '\" + selector + \"', not found in \" +\n-                  \"Localizable.strings.\");\n-    }\n-  }\n-\n-  return newSelector;\n-};\n-\n-iOSController.getSelectorForStrategy = function (strategy, selector) {\n-  var newSelector = selector;\n-  if (strategy === 'class name') {\n-    if (selector.indexOf('UIA') !== 0) {\n-      throw new TypeError(\"The class name selector must use full UIA class \" +\n-                          \"names.  Try 'UIA\" + selector + \"' instead.\");\n-    }\n-  }\n-  return newSelector;\n-};\n-\n-iOSController.handleFindCb = function (err, res, many, findCb) {\n-  if (!res) res = {};\n-  if (!res.value) {\n-    res.status = status.codes.NoSuchElement.code;\n-  }\n-  if (!err && !many && res.status === 0) {\n-    findCb(true, err, res);\n-  } else if (!err && many && res.value && res.value.length > 0) {\n-    findCb(true, err, res);\n-  } else {\n-    findCb(false, err, res);\n-  }\n-};\n-\n-iOSController.findWebElementOrElements = function (strategy, selector, ctx, many, cb) {\n-  var ext = many ? 's' : '';\n-  var atomsElement = this.getAtomsElement(ctx);\n-  var doFind = function (findCb) {\n-    this.executeAtom('find_element' + ext, [strategy, selector, atomsElement], function (err, res) {\n-      this.handleFindCb(err, res, many, findCb);\n-    }.bind(this));\n-  }.bind(this);\n-  this.implicitWaitForCondition(doFind, cb);\n-};\n-\n-iOSController.findElementOrElements = function (strategy, selector, ctx, many, cb) {\n-  if (deviceCommon.checkValidLocStrat(strategy, this.curContext, cb)) {\n-    if (this.curContext) {\n-      this.findWebElementOrElements(strategy, selector, ctx, many, cb);\n-    } else {\n-      this.findUIElementOrElements(strategy, selector, ctx, many, cb);\n-    }\n-  }\n-};\n-\n-iOSController.findElement = function (strategy, selector, cb) {\n-  this.findElementOrElements(strategy, selector, null, false, cb);\n-};\n-\n-iOSController.findElements = function (strategy, selector, cb) {\n-  this.findElementOrElements(strategy, selector, null, true, cb);\n-};\n-\n-iOSController.findElementFromElement = function (element, strategy, selector, cb) {\n-  this.findElementOrElements(strategy, selector, element, false, cb);\n-};\n-\n-iOSController.findElementsFromElement = function (element, strategy, selector, cb) {\n-  this.findElementOrElements(strategy, selector, element, true, cb);\n-};\n-\n-iOSController.setValueImmediate = function (elementId, value, cb) {\n-  value = escapeSpecialChars(value, \"'\");\n-  var command = [\"au.getElement('\", elementId, \"').setValue('\", value, \"')\"].join('');\n-  this.proxy(command, cb);\n-};\n-\n-iOSController.setValue = function (elementId, value, cb) {\n-  if (this.isWebContext()) {\n-    this.useAtomsElement(elementId, cb, function (atomsElement) {\n-      this.executeAtom('click', [atomsElement], function (err, res) {\n-        if (err) {\n-          cb(err, res);\n-        } else {\n-          this.executeAtom('type', [atomsElement, value], cb);\n-        }\n-      }.bind(this));\n-    }.bind(this));\n-  } else {\n-    value = escapeSpecialChars(value, \"'\");\n-    // de-escape \\n so it can be used specially\n-    value = value.replace(/\\\\\\\\n/g, \"\\\\n\");\n-    if (this.useRobot) {\n-      var keysUrl = this.args.robotUrl + \"/sendKeys\";\n-      request.post({url: keysUrl, form: {keys: value}}, cb);\n-    } else {\n-      var command = [\"au.getElement('\", elementId, \"').setValueByType('\", value, \"')\"].join('');\n-      this.proxy(command, cb);\n-    }\n-  }\n-};\n-\n-iOSController.replaceValue = function (elementId, value, cb) {\n-  logger.debug(\"Not implemented for iOS, please use setValue as you would normally.\");\n-  return cb(new NotYetImplementedError(), null);\n-};\n-\n-iOSController.useAtomsElement = deviceCommon.useAtomsElement;\n-\n-iOSController.click = function (elementId, cb) {\n-  if (this.isWebContext()) {\n-    this.useAtomsElement(elementId, cb, function (atomsElement) {\n-      this.executeAtom('click', [atomsElement], cb);\n-    }.bind(this));\n-  } else {\n-    if (this.useRobot) {\n-      var locCmd = \"au.getElement('\" + elementId + \"').rect()\";\n-      this.proxy(locCmd, function (err, res) {\n-        if (err) return cb(err, res);\n-        var rect = res.value;\n-        var pos = {x: rect.origin.x, y: rect.origin.y};\n-        var size = {w: rect.size.width, h: rect.size.height};\n-        var tapPoint = { x: pos.x + (size.w / 2), y: pos.y + (size.h / 2) };\n-        var tapUrl = this.args.robotUrl + \"/tap\";\n-        request.post({url:tapUrl, form: {x:tapPoint.x, y:tapPoint.y}}, cb);\n-      }.bind(this));\n-    } else {\n-      this.nativeTap(elementId, cb);\n-    }\n-  }\n-};\n-\n-iOSController.nativeTap = function (elementId, cb) {\n-  var command = [\"au.tapById('\", elementId, \"')\"].join('');\n-  this.proxy(command, cb);\n-};\n-\n-\n-iOSController.nativeWebTap = function (elementId, cb) {\n-  this.useAtomsElement(elementId, cb, function (atomsElement) {\n-    this.executeAtom('get_top_left_coordinates', [atomsElement], function (err, res) {\n-      if (err || res.status !== 0) return cb(err, res);\n-      var x = res.value.x, y = res.value.y;\n-      this.executeAtom('get_size', [atomsElement], function (err, res) {\n-        if (err || res.status !== 0) return cb(err, res);\n-        var w = res.value.width, h = res.value.height;\n-        var clickX = x + (w / 2);\n-        var clickY = y + (h / 2);\n-        this.curWebCoords = {x: clickX, y: clickY};\n-        this.clickWebCoords(function (err, res) {\n-          // make sure real tap actually has time to register\n-          setTimeout(function () {\n-            cb(err, res);\n-          }, 500);\n-        });\n-      }.bind(this));\n-    }.bind(this));\n-  }.bind(this));\n-};\n-\n-iOSController.pushFile = function (base64Data, remotePath, cb) {\n-  if (this.realDevice) {\n-    logger.debug(\"Unsupported: cannot write files to physical device\");\n-    return cb(new NotYetImplementedError(), null);\n-  }\n-\n-  logger.debug(\"Pushing \" + remotePath + \" to iOS simulator\");\n-\n-  var writeFile = function (err, fullPath) {\n-    if (err) return cb(err);\n-    logger.debug(\"Attempting to write \" + fullPath + \"...\");\n-\n-    async.series([\n-      function (cb) {\n-        try {\n-          if (fs.existsSync(fullPath)) {\n-            logger.debug(fullPath + \" already exists, deleting...\");\n-            fs.unlinkSync(fullPath);\n-          }\n-\n-          mkdirp.sync(path.dirname(fullPath));\n-\n-          var content = new Buffer(base64Data, 'base64');\n-          var fd = fs.openSync(fullPath, 'w');\n-          fs.writeSync(fd, content, 0, content.length, 0);\n-          fs.closeSync(fd);\n-          logger.debug(\"Wrote \" + content.length + \"bytes to \" + fullPath);\n-          cb(null);\n-        } catch (e) {\n-          cb(e);\n-        }\n-      }.bind(this)\n-    ], function (err) {\n-      logger.debug(\"Returning response\");\n-      if (err) return cb(err);\n-      cb(null, {\n-        status: status.codes.Success.code\n-      });\n-    });\n-  };\n-\n-  this._getFullPath(remotePath, writeFile);\n-};\n-\n-/*\n- *  Get the full path to an iOS simulator file.\n- *  Calls cb(err, fullFilePath)\n- *  /Some/Path                           fetches a file relative to the root of the device's filesystem.\n- *  /Applications/AppName.app/Some/Path  fetches a file relative to the root of that Application's .app directory, adding in the GUID.\n- *  So it looks something like: /Applications/GUID-GUID-GUID-GUID/Some/Path\n- */\n-iOSController._getFullPath = function (remotePath, cb) {\n-  var fullPath = \"\";\n-  var v = (this.args.platformVersion || this.iOSSDKVersion);\n-  var simRoots = this.sim.getDirs();\n-  if (simRoots.length < 1) {\n-    return cb(new Error(\"Could not find simulator root for SDK version \" +\n-                        v + \"; have you launched this sim before?\"));\n-  } else if (simRoots.length > 1) {\n-    logger.warn(\"There were multiple simulator roots for version \" + v + \". \" +\n-                \"We may be pulling the file from the one you're not using!\");\n-  }\n-\n-  if (simRoots.length > 1) {\n-    var filteredSimRoots = simRoots.filter(function (root) {\n-      return fs.existsSync(root + \"/Applications\") || // ios7\n-             fs.existsSync(root + \"/Containers/Data/Application\"); // ios8\n-    });\n-\n-    if (filteredSimRoots.length > 0) {\n-      simRoots = filteredSimRoots;\n-    }\n-  }\n-\n-  var basePath = simRoots[0];\n-\n-  var appName = null;\n-\n-  if (this.args.app) {\n-    var appNameRegex = new RegExp(\"\\\\\" + path.sep + \"(\\\\w+\\\\.app)\");\n-    var appNameMatches = appNameRegex.exec(this.args.app);\n-    if (appNameMatches) {\n-      appName = appNameMatches[1];\n-    }\n-  }\n-\n-  // de-absolutize the path\n-  if (isWindows()) {\n-    if (remotePath.indexof(\"://\") === 1) {\n-      remotePath = remotePath.slice(4);\n-    }\n-  } else {\n-    if (remotePath.indexOf(\"/\") === 0) {\n-      remotePath = remotePath.slice(1);\n-    }\n-  }\n-\n-  if (remotePath.indexOf(appName) === 0) {\n-    logger.debug(\"We want an app-relative file\");\n-\n-    var findPath = basePath;\n-    if (this.args.platformVersion >= 8) {\n-      // the .app file appears in /Containers/Data and /Containers/Bundle both. We only want /Bundle\n-      findPath = path.resolve(basePath, \"Containers\", \"Bundle\");\n-    }\n-    findPath =  findPath.replace(/\\s/g, '\\\\ ');\n-\n-    var findCmd = 'find ' + findPath + ' -name \"' + appName + '\"';\n-    exec(findCmd, function (err, stdout) {\n-      if (err) return cb(err);\n-      var appRoot = stdout.replace(/\\n$/, '');\n-      var subPath = remotePath.substring(appName.length + 1);\n-      fullPath = path.resolve(appRoot, subPath);\n-      cb(null, fullPath);\n-    }.bind(this));\n-  } else {\n-    logger.debug(\"We want a sim-relative file\");\n-    fullPath = path.resolve(basePath, remotePath);\n-    cb(null, fullPath);\n-  }\n-};\n-\n-\n-iOSController.pullFile = function (remotePath, cb) {\n-  logger.debug(\"Pulling \" + remotePath + \" from sim\");\n-  if (this.realDevice) {\n-    return cb(new NotYetImplementedError(), null);\n-  }\n-\n-  var readAndReturnFile = function (err, fullPath) {\n-    if (err) return cb(err);\n-    logger.debug(\"Attempting to read \" + fullPath);\n-    fs.readFile(fullPath, {encoding: 'base64'}, function (err, data) {\n-      if (err) return cb(err);\n-      cb(null, {status: status.codes.Success.code, value: data});\n-    });\n-  };\n-\n-  this._getFullPath(remotePath, readAndReturnFile);\n-};\n-\n-iOSController.pullFolder = function (remotePath, cb) {\n-  logger.debug(\"Pulling \" + remotePath + \" from sim\");\n-  if (this.realDevice) {\n-    return cb(new NotYetImplementedError(), null);\n-  }\n-\n-  var bufferOnSuccess = function (buffer) {\n-    logger.debug(\"Converting in-memory zip file to base64 encoded string\");\n-    var data = buffer.toString('base64');\n-    logger.debug(\"Returning in-memory zip file as base54 encoded string\");\n-    cb(null, {status: status.codes.Success.code, value: data});\n-  };\n-\n-  var bufferOnFail = function (err) {\n-    cb(new Error(err));\n-  };\n-\n-  var zipAndReturnFolder = function (err, fullPath) {\n-    if (err) return cb(err);\n-    logger.debug(\"Adding \" + fullPath + \" to an in-memory zip archive\");\n-    var zip = new AdmZip();\n-    zip.addLocalFolder(fullPath);\n-    zip.toBuffer(bufferOnSuccess, bufferOnFail);\n-  };\n-\n-  this._getFullPath(remotePath, zipAndReturnFolder);\n-\n-};\n-\n-iOSController.touchLongClick = function (elementId, cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-iOSController.touchDown = function (elId, x, y, cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-iOSController.touchUp = function (elementId, cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-iOSController.touchMove = function (elId, startX, startY, cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-iOSController.toggleData = function (cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-iOSController.toggleFlightMode = function (cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-iOSController.toggleWiFi = function (cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-iOSController.toggleLocationServices = function (cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-iOSController.getStrings = function (language, stringFile, cb) {\n-  this.parseLocalizableStrings(language, stringFile, function () {\n-    var strings = this.localizableStrings;\n-    if (strings && strings.length >= 1) strings = strings[0];\n-\n-    cb(null, {\n-      status: status.codes.Success.code\n-    , value: strings\n-    });\n-  }.bind(this));\n-};\n-\n-iOSController.executeAtom = function (atom, args, cb, alwaysDefaultFrame) {\n-  var counter = this.executedAtomsCounter++;\n-  var frames = alwaysDefaultFrame === true ? [] : this.curWebFrames;\n-  this.returnedFromExecuteAtom[counter] = false;\n-  this.processingRemoteCmd = true;\n-  this.remote.executeAtom(atom, args, frames, function (err, res) {\n-    this.processingRemoteCmd = false;\n-    if (!this.returnedFromExecuteAtom[counter]) {\n-      this.returnedFromExecuteAtom[counter] = true;\n-      res = this.parseExecuteResponse(res);\n-      cb(err, res);\n-    }\n-  }.bind(this));\n-  this.lookForAlert(cb, counter, 0, 5000);\n-};\n-\n-iOSController.executeAtomAsync = function (atom, args, responseUrl, cb) {\n-  var counter = this.executedAtomsCounter++;\n-  this.returnedFromExecuteAtom[counter] = false;\n-  this.processingRemoteCmd = true;\n-  this.asyncResponseCb = cb;\n-  this.remote.executeAtomAsync(atom, args, this.curWebFrames, responseUrl, function (err, res) {\n-    this.processingRemoteCmd = false;\n-    if (!this.returnedFromExecuteAtom[counter]) {\n-      this.returnedFromExecuteAtom[counter] = true;\n-      res = this.parseExecuteResponse(res);\n-      cb(err, res);\n-    }\n-  }.bind(this));\n-  this.lookForAlert(cb, counter, 0, 5000);\n-};\n-\n-iOSController.receiveAsyncResponse = function (asyncResponse) {\n-  var asyncCb = this.asyncResponseCb;\n-  //mark returned as true to stop looking for alerts; the js is done.\n-  this.returnedFromExecuteAtom = true;\n-\n-  if (asyncCb !== null) {\n-    this.parseExecuteResponse(asyncResponse, asyncCb);\n-    asyncCb(null, asyncResponse);\n-    this.asyncResponseCb = null;\n-  } else {\n-    logger.warn(\"Received async response when we weren't expecting one! \" +\n-                    \"Response was: \" + JSON.stringify(asyncResponse));\n-  }\n-};\n-\n-iOSController.parseExecuteResponse = deviceCommon.parseExecuteResponse;\n-iOSController.parseElementResponse = deviceCommon.parseElementResponse;\n-\n-iOSController.lookForAlert = function (cb, counter, looks, timeout) {\n-  setTimeout(function () {\n-    if (typeof looks === 'undefined') {\n-      looks = 0;\n-    }\n-    if (this.instruments !== null) {\n-      if (!this.returnedFromExecuteAtom[counter] && looks < 11 && !this.selectingNewPage) {\n-        logger.debug(\"atom did not return yet, checking to see if \" +\n-          \"we are blocked by an alert\");\n-        // temporarily act like we're not processing a remote command\n-        // so we can proxy the alert detection functionality\n-        this.alertCounter++;\n-        this.proxy(\"au.alertIsPresent()\", function (err, res) {\n-          if (res !== null) {\n-            if (res.value === true) {\n-              logger.debug(\"Found an alert, returning control to client\");\n-              this.returnedFromExecuteAtom[counter] = true;\n-              cb(null, {\n-                status: status.codes.Success.code\n-              , value: ''\n-              });\n-            } else {\n-              // say we're processing remote cmd again\n-              looks++;\n-              setTimeout(this.lookForAlert(cb, counter, looks), 1000);\n-            }\n-          }\n-        }.bind(this));\n-      }\n-    }\n-  }.bind(this), timeout);\n-};\n-\n-iOSController.clickCurrent = function (button, cb) {\n-  var noMoveToErr = {\n-    status: status.codes.UnknownError.code\n-  , value: \"Cannot call click() before calling moveTo() to set coords\"\n-  };\n-\n-  if (this.isWebContext()) {\n-    if (this.curWebCoords === null) {\n-      return cb(null, noMoveToErr);\n-    }\n-    this.clickWebCoords(cb);\n-  } else {\n-    if (this.curCoords === null) {\n-      return cb(null, noMoveToErr);\n-    }\n-    this.clickCoords(this.curCoords, cb);\n-  }\n-};\n-\n-iOSController.clickCoords = function (coords, cb) {\n-  if (this.useRobot) {\n-    var tapUrl = this.args.robotUrl + \"/tap\";\n-    request.post({url:tapUrl, form: {x:coords.x, y:coords.y}}, cb);\n-  } else {\n-    var opts = coords;\n-    opts.tapCount = 1;\n-    opts.duration = 0.3;\n-    opts.touchCount = 1;\n-    var command = [\"au.complexTap(\" + JSON.stringify(opts) + \")\"].join('');\n-    this.proxy(command, cb);\n-  }\n-};\n-\n-iOSController.translateWebCoords = function (coords, cb) {\n-  var wvCmd = \"au.getElementsByType('webview')\"\n-    , webviewIndex = this.webContextIndex();\n-\n-  // add static offset for safari in landscape mode\n-  var yOffset = this.curOrientation === \"LANDSCAPE\" ?\n-     this.landscapeWebCoordsOffset :\n-     0;\n-\n-  // absolutize web coords\n-  this.proxy(wvCmd, function (err, res) {\n-    if (err) return cb(err, res);\n-    if (res.value.length < 1) {\n-      return cb(null, {\n-        status: status.codes.UnknownError.code\n-      , value: \"Could not find any webviews to click inside!\"\n-      });\n-    }\n-    if (typeof res.value[webviewIndex] === \"undefined\") {\n-      logger.warn(\"Could not find webview at index \" + webviewIndex + \", \" +\n-                  \"taking last available one for clicking purposes\");\n-      webviewIndex = res.value.length - 1;\n-    }\n-    var realDims, wvDims, wvPos;\n-    var step1 = function () {\n-      var wvId = res.value[webviewIndex].ELEMENT;\n-      var locCmd = \"au.getElement('\" + wvId + \"').rect()\";\n-      this.proxy(locCmd, function (err, res) {\n-        if (err) return cb(err, res);\n-        var rect = res.value;\n-        wvPos = {x: rect.origin.x, y: rect.origin.y};\n-        realDims = {w: rect.size.width, h: rect.size.height};\n-        next();\n-      });\n-    }.bind(this);\n-    var step2 = function () {\n-      var cmd = \"(function () { return {w: document.width, h: document.height}; })()\";\n-      this.remote.execute(cmd, function (err, res) {\n-        wvDims = {w: res.result.value.w, h: res.result.value.h};\n-        next();\n-      });\n-    }.bind(this);\n-    var next = function () {\n-      if (wvDims && realDims && wvPos) {\n-        var xRatio = realDims.w / wvDims.w;\n-        var yRatio = realDims.h / wvDims.h;\n-        var serviceBarHeight = 20;\n-        if (parseFloat(this.args.platformVersion) >= 8) {\n-          // ios8 includes the service bar height in the app\n-          serviceBarHeight = 0;\n-        }\n-        var newCoords = {\n-          x: wvPos.x + Math.round(xRatio * coords.x)\n-        , y: wvPos.y + yOffset + Math.round(yRatio * coords.y) - serviceBarHeight\n-        };\n-        logger.debug(\"Converted web coords \" + JSON.stringify(coords) +\n-                    \"into real coords \" + JSON.stringify(newCoords));\n-        cb(newCoords);\n-      }\n-    }.bind(this);\n-    step1();\n-    step2();\n-  }.bind(this));\n-};\n-\n-iOSController.clickWebCoords = function (cb) {\n-  this.translateWebCoords(this.curWebCoords, function (coords) {\n-    this.clickCoords(coords, cb);\n-  }.bind(this));\n-};\n-\n-iOSController.submit = function (elementId, cb) {\n-  if (this.isWebContext()) {\n-    this.useAtomsElement(elementId, cb, function (atomsElement) {\n-      this.executeAtom('submit', [atomsElement], cb);\n-    }.bind(this));\n-  } else {\n-    cb(new NotImplementedError(), null);\n-  }\n-};\n-\n-iOSController.pressKeyCode = function (keycode, metastate, cb) {\n-  cb(new NotImplementedError(), null);\n-};\n-\n-iOSController.longPressKeyCode = function (keycode, metastate, cb) {\n-  cb(new NotImplementedError(), null);\n-};\n-\n-iOSController.keyevent = function (keycode, metastate, cb) {\n-  cb(new NotImplementedError(), null);\n-};\n-\n-iOSController.complexTap = function (tapCount, touchCount, duration, x, y, elementId, cb) {\n-  var command;\n-  var  options = {\n-    tapCount: tapCount\n-  , touchCount: touchCount\n-  , duration: duration\n-  , x: x\n-  , y: y\n-  };\n-  var JSONOpts = JSON.stringify(options);\n-  if (elementId !== null) {\n-    command = [\"au.getElement('\", elementId, \"').complexTap(\", JSONOpts, ')'].join('');\n-  } else {\n-    command = [\"au.complexTap(\", JSONOpts, \")\"].join('');\n-  }\n-  this.proxy(command, cb);\n-};\n-\n-iOSController.clear = function (elementId, cb) {\n-  if (this.isWebContext()) {\n-    this.useAtomsElement(elementId, cb, function (atomsElement) {\n-      this.executeAtom('clear', [atomsElement], cb);\n-    }.bind(this));\n-  } else {\n-    var command = [\"au.getElement('\", elementId, \"').setValue('')\"].join('');\n-    this.proxy(command, cb);\n-  }\n-};\n-\n-iOSController.getText = function (elementId, cb) {\n-  if (this.isWebContext()) {\n-    this.useAtomsElement(elementId, cb, function (atomsElement) {\n-      this.executeAtom('get_text', [atomsElement], cb);\n-    }.bind(this));\n-  } else {\n-    var command = [\"au.getElement('\", elementId, \"').text()\"].join('');\n-    this.proxy(command, function (err, res) {\n-      // in some cases instruments returns in integer. we only want a string\n-      res.value = res.value ? res.value.toString() : '';\n-      cb(err, res);\n-    });\n-  }\n-};\n-\n-iOSController.getName = function (elementId, cb) {\n-  if (this.isWebContext()) {\n-    this.useAtomsElement(elementId, cb, function (atomsElement) {\n-      var script = \"return arguments[0].tagName.toLowerCase()\";\n-      this.executeAtom('execute_script', [script, [atomsElement]], cb);\n-    }.bind(this));\n-  } else {\n-    var command = [\"au.getElement('\", elementId, \"').type()\"].join('');\n-    this.proxy(command, cb);\n-  }\n-};\n-\n-iOSController.getAttribute = function (elementId, attributeName, cb) {\n-  if (this.isWebContext()) {\n-    var atomsElement = this.getAtomsElement(elementId);\n-    if (atomsElement === null) {\n-      cb(null, {\n-        status: status.codes.UnknownError.code\n-      , value: \"Error converting element ID for using in WD atoms: \" + elementId\n-      });\n-    } else {\n-      this.executeAtom('get_attribute_value', [atomsElement, attributeName], cb);\n-    }\n-  } else {\n-    if (_.contains(['label', 'name', 'value', 'values', 'hint'], attributeName)) {\n-      var command = [\"au.getElement('\", elementId, \"').\", attributeName, \"()\"].join('');\n-      this.proxy(command, cb);\n-    } else {\n-      cb(null, {\n-        status: status.codes.UnknownCommand.code\n-      , value: \"UIAElements don't have the attribute '\" + attributeName + \"'\"\n-      });\n-    }\n-  }\n-};\n-\n-iOSController.getLocation = function (elementId, cb) {\n-  if (this.isWebContext()) {\n-    this.useAtomsElement(elementId, cb, function (atomsElement) {\n-      this.executeAtom('get_top_left_coordinates', [atomsElement], cb);\n-    }.bind(this));\n-  } else {\n-    var command = [\"au.getElement('\", elementId,\n-      \"').getElementLocation()\"].join('');\n-    this.proxy(command, cb);\n-  }\n-};\n-\n-iOSController.getSize = function (elementId, cb) {\n-  if (this.isWebContext()) {\n-    var atomsElement = this.getAtomsElement(elementId);\n-    if (atomsElement === null) {\n-      cb(null, {\n-        status: status.codes.UnknownError.code\n-      , value: \"Error converting element ID for using in WD atoms: \" + elementId\n-      });\n-    } else {\n-      this.executeAtom('get_size', [atomsElement], cb);\n-    }\n-  } else {\n-    var command = [\"au.getElement('\", elementId, \"').getElementSize()\"].join('');\n-    this.proxy(command, cb);\n-  }\n-};\n-\n-iOSController.getWindowSize = function (windowHandle, cb) {\n-  if (windowHandle !== \"current\") {\n-    cb(null, {\n-      status: status.codes.NoSuchWindow.code\n-    , value: \"Currently only getting current window size is supported.\"\n-    });\n-  }\n-\n-  if (this.isWebContext()) {\n-    this.executeAtom('get_window_size', [], function (err, res) {\n-      cb(null, {\n-        status: status.codes.Success.code\n-      , value: res\n-      });\n-    });\n-  } else {\n-    this.proxy(\"au.getWindowSize()\", cb);\n-  }\n-};\n-\n-iOSController.mobileWebNav = function (navType, cb) {\n-  this.remote.willNavigateWithoutReload = true;\n-  this.executeAtom('execute_script', ['history.' + navType + '();', null], cb);\n-};\n-\n-iOSController.back = function (cb) {\n-  if (this.isWebContext()) {\n-    this.mobileWebNav(\"back\", cb);\n-  } else {\n-    var command = \"au.back();\";\n-    this.proxy(command, cb);\n-  }\n-};\n-\n-iOSController.forward = function (cb) {\n-  if (this.isWebContext()) {\n-    this.mobileWebNav(\"forward\", cb);\n-  } else {\n-    cb(new NotImplementedError(), null);\n-  }\n-};\n-\n-iOSController.refresh = function (cb) {\n-  if (this.isWebContext()) {\n-    this.executeAtom('refresh', [], cb);\n-  } else {\n-    cb(new NotImplementedError(), null);\n-  }\n-};\n-\n-iOSController.getPageIndex = function (elementId, cb) {\n-  if (this.isWebContext()) {\n-    cb(new NotImplementedError(), null);\n-  } else {\n-    var command = [\"au.getElement('\", elementId, \"').pageIndex()\"].join('');\n-    this.proxy(command, cb);\n-  }\n-};\n-\n-iOSController.keys = function (keys, cb) {\n-  keys = escapeSpecialChars(keys, \"'\");\n-  if (this.isWebContext()) {\n-    this.active(function (err, res) {\n-      if (err || typeof res.value.ELEMENT === \"undefined\") {\n-        return cb(err, res);\n-      }\n-      this.setValue(res.value.ELEMENT, keys, cb);\n-    }.bind(this));\n-  } else {\n-    var command = [\"au.sendKeysToActiveElement('\", keys, \"')\"].join('');\n-    this.proxy(command, cb);\n-  }\n-};\n-\n-iOSController.frame = function (frame, cb) {\n-  if (this.isWebContext()) {\n-    var atom;\n-    if (frame === null) {\n-      this.curWebFrames = [];\n-      logger.debug(\"Leaving web frame and going back to default content\");\n-      cb(null, {\n-        status: status.codes.Success.code\n-      , value: ''\n-      });\n-    } else {\n-      if (typeof frame.ELEMENT !== \"undefined\") {\n-        this.useAtomsElement(frame.ELEMENT, cb, function (atomsElement) {\n-          this.executeAtom('get_frame_window', [atomsElement], function (err, res) {\n-            if (this.checkSuccess(err, res, cb)) {\n-              logger.debug(\"Entering new web frame: \" + res.value.WINDOW);\n-              this.curWebFrames.unshift(res.value.WINDOW);\n-              cb(err, res);\n-            }\n-          }.bind(this));\n-        }.bind(this));\n-      } else {\n-        atom = \"frame_by_id_or_name\";\n-        if (typeof frame === \"number\") {\n-          atom = \"frame_by_index\";\n-        }\n-        this.executeAtom(atom, [frame], function (err, res) {\n-          if (this.checkSuccess(err, res, cb)) {\n-            if (res.value === null || typeof res.value.WINDOW === \"undefined\") {\n-              cb(null, {\n-                status: status.codes.NoSuchFrame.code\n-              , value: ''\n-              });\n-            } else {\n-              logger.debug(\"Entering new web frame: \" + res.value.WINDOW);\n-              this.curWebFrames.unshift(res.value.WINDOW);\n-              cb(err, res);\n-            }\n-          }\n-        }.bind(this));\n-      }\n-    }\n-  } else {\n-    frame = frame ? frame : 'target.frontMostApp()';\n-    var command = [\"wd_frame = \", frame].join('');\n-    this.proxy(command, cb);\n-  }\n-};\n-\n-iOSController.implicitWait = function (ms, cb) {\n-  this.implicitWaitMs = parseInt(ms, 10);\n-  logger.debug(\"Set iOS implicit wait to \" + ms + \"ms\");\n-  cb(null, {\n-    status: status.codes.Success.code\n-  , value: null\n-  });\n-};\n-\n-iOSController.asyncScriptTimeout = function (ms, cb) {\n-  this.asyncWaitMs = parseInt(ms, 10);\n-  logger.debug(\"Set iOS async script timeout to \" + ms + \"ms\");\n-  cb(null, {\n-    status: status.codes.Success.code\n-  , value: null\n-  });\n-};\n-\n-iOSController.pageLoadTimeout = function (ms, cb) {\n-  this.pageLoadMs = parseInt(ms, 10);\n-  if (this.remote) this.remote.pageLoadMs = this.pageLoadMs;\n-  logger.debug(\"Set iOS page load timeout to \" + ms + \"ms\");\n-  cb(null, {\n-    status: status.codes.Success.code\n-  , value: null\n-  });\n-};\n-\n-\n-iOSController.elementDisplayed = function (elementId, cb) {\n-  if (this.isWebContext()) {\n-    this.useAtomsElement(elementId, cb, function (atomsElement) {\n-      this.executeAtom('is_displayed', [atomsElement], cb);\n-    }.bind(this));\n-  } else {\n-    var command = [\"au.getElement('\", elementId, \"').isDisplayed()\"].join('');\n-    this.proxy(command, cb);\n-  }\n-};\n-\n-iOSController.elementEnabled = function (elementId, cb) {\n-  if (this.isWebContext()) {\n-    this.useAtomsElement(elementId, cb, function (atomsElement) {\n-      this.executeAtom('is_enabled', [atomsElement], cb);\n-    }.bind(this));\n-  } else {\n-    var command = [\"au.getElement('\", elementId, \"').isEnabled() === 1\"].join('');\n-    this.proxy(command, cb);\n-  }\n-};\n-\n-iOSController.elementSelected = function (elementId, cb) {\n-  if (this.isWebContext()) {\n-    this.useAtomsElement(elementId, cb, function (atomsElement) {\n-      this.executeAtom('is_selected', [atomsElement], cb);\n-    }.bind(this));\n-  } else {\n-    var command = [\"au.getElement('\", elementId, \"').isSelected()\"].join('');\n-    this.proxy(command, cb);\n-  }\n-};\n-\n-iOSController.getCssProperty = function (elementId, propertyName, cb) {\n-  if (this.isWebContext()) {\n-    this.useAtomsElement(elementId, cb, function (atomsElement) {\n-      this.executeAtom('get_value_of_css_property', [atomsElement,\n-        propertyName], cb);\n-    }.bind(this));\n-  } else {\n-    cb(new NotImplementedError(), null);\n-  }\n-};\n-\n-iOSController.getPageSource = function (cb) {\n-  if (this.isWebContext()) {\n-    this.processingRemoteCmd = true;\n-    var cmd = 'document.getElementsByTagName(\"html\")[0].outerHTML';\n-    this.remote.execute(cmd, function (err, res) {\n-      if (err) {\n-        cb(\"Remote debugger error\", {\n-          status: status.codes.UnknownError.code\n-        , value: res\n-        });\n-      } else {\n-        cb(null, {\n-          status: status.codes.Success.code\n-        , value: res.result.value\n-        });\n-      }\n-      this.processingRemoteCmd = false;\n-    }.bind(this));\n-  } else {\n-    this.getSourceForElementForXML(null, function (err, res) {\n-      var xmlSource;\n-      if (err || res.status !== 0) return cb(err, res);\n-      try {\n-        xmlSource = _xmlSourceFromJson(res.value);\n-      } catch (e) {\n-        return cb(e);\n-      }\n-      return cb(null, {\n-        status: status.codes.Success.code\n-      , value: xmlSource\n-      });\n-    }.bind(this));\n-  }\n-};\n-\n-iOSController.getAlertText = function (cb) {\n-  this.proxy(\"au.getAlertText()\", cb);\n-};\n-\n-iOSController.setAlertText = function (text, cb) {\n-  text = escapeSpecialChars(text, \"'\");\n-  this.proxy(\"au.setAlertText('\" + text + \"')\", cb);\n-};\n-\n-iOSController.postAcceptAlert = function (cb) {\n-  this.proxy(\"au.acceptAlert()\", cb);\n-};\n-\n-iOSController.postDismissAlert = function (cb) {\n-  this.proxy(\"au.dismissAlert()\", cb);\n-};\n-\n-iOSController.lock = function (secs, cb) {\n-  this.proxy([\"au.lock(\", secs, \")\"].join(''), cb);\n-};\n-\n-iOSController.isLocked = function (cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-iOSController.background = function (secs, cb) {\n-  this.proxy([\"au.background(\", secs, \")\"].join(''), cb);\n-};\n-\n-iOSController.getOrientation = function (cb) {\n-  this.proxy(\"au.getScreenOrientation()\", function (err, res) {\n-    if (res && res.status === status.codes.Success.code) {\n-      // keep track of orientation for our own purposes\n-      logger.debug(\"Setting internal orientation to \" + res.value);\n-      this.curOrientation = res.value;\n-    }\n-    cb(err, res);\n-  });\n-};\n-\n-iOSController.setOrientation = function (orientation, cb) {\n-  var command = [\"au.setScreenOrientation('\", orientation, \"')\"].join('');\n-  this.proxy(command, function (err, res) {\n-    if (res && res.status === 0) {\n-      this.curOrientation = orientation;\n-    }\n-    cb(err, res);\n-  }.bind(this));\n-};\n-\n-iOSController.getScreenshot = function (cb) {\n-  var guid = uuid.create();\n-  var command = [\"au.capture('screenshot\", guid, \"')\"].join('');\n-\n-  var shotFolder = path.resolve(this.args.tmpDir,\n-                                \"appium-instruments/Run 1/\");\n-  if (!fs.existsSync(shotFolder)) {\n-    mkdirp.sync(shotFolder);\n-  }\n-\n-  var shotPath = path.resolve(shotFolder, 'screenshot' + guid + '.png');\n-  // Retrying the whole screenshot process for three times.\n-  async.retry(3,\n-    function (cb) {\n-      async.waterfall([\n-        function (cb) { this.getOrientation(function () { cb(); }); }.bind(this),\n-        function (cb) { this.proxy(command, cb); }.bind(this),\n-        function (response, cb) {\n-          var data;\n-          var screenshotWaitTimeout = (this.args.screenshotWaitTimeout || 10) * 1000;\n-          logger.debug('Waiting ' + screenshotWaitTimeout + ' ms for screenshot to ge generated.');\n-          var startMs = Date.now();\n-          var lastErr;\n-          async.until(\n-            function () { return data || Date.now() - startMs > screenshotWaitTimeout; },\n-            function (cb) {\n-              setTimeout(function () {\n-                fs.readFile(shotPath, function (err, _data) {\n-                  lastErr = err;\n-                  if (!err) { data = _data; }\n-                  cb();\n-                });\n-              }, 300);\n-            },\n-            function (err) {\n-              if (!data) {\n-                return cb(new Error(\"Timed out waiting for screenshot file. \" + (lastErr || '').toString()));\n-              }\n-              cb(err, response, data);\n-            }\n-          );\n-        }.bind(this),\n-        function (response, data, cb) {\n-          // rotate if necessary\n-          if (this.curOrientation === \"LANDSCAPE\") {\n-            // need to rotate 90 deg CC\n-            logger.debug(\"Rotating landscape screenshot\");\n-            rotateImage(shotPath, -90, function (err) {\n-              if (err) return cb(new Error(\"Could not rotate screenshot appropriately\"), null);\n-              fs.readFile(shotPath, function read(err, _data) {\n-                if (err) return cb(new Error(\"Could not retrieve screenshot file following rotate. \" + err.toString()));\n-                cb(null, response, _data);\n-              });\n-            });\n-          } else cb(null, response, data);\n-        }.bind(this),\n-        function (response, data, cb) {\n-          var b64data = new Buffer(data).toString('base64');\n-          response.value = b64data;\n-          cb(null, response);\n-        }\n-      ], cb);\n-    }.bind(this), cb);\n-};\n-\n-iOSController.fakeFlick = function (xSpeed, ySpeed, swipe, cb) {\n-  var command = \"\";\n-  if (swipe) {\n-    command = [\"au.touchSwipeFromSpeed(\", xSpeed, \",\", ySpeed, \")\"].join('');\n-    this.proxy(command, cb);\n-  } else {\n-    command = [\"au.touchFlickFromSpeed(\", xSpeed, \",\", ySpeed, \")\"].join('');\n-    this.proxyWithMinTime(command, FLICK_MS, cb);\n-  }\n-\n-};\n-\n-iOSController.fakeFlickElement = function (elementId, xoffset, yoffset, speed, cb) {\n-  var command = \"\";\n-  if (this.isWebContext()) {\n-    this.useAtomsElement(elementId, cb, function (atomsElement) {\n-      this.executeAtom('get_top_left_coordinates', [atomsElement], function (err, res) {\n-        if (err || res.status !== 0) return cb(err, res);\n-        var x = res.value.x, y = res.value.y;\n-        this.executeAtom('get_size', [atomsElement], function (err, res) {\n-          if (err || res.status !== 0) return cb(err, res);\n-          var w = res.value.width, h = res.value.height;\n-          var clickX = x + (w / 2);\n-          var clickY = y + (h / 2);\n-\n-          this.translateWebCoords({x: clickX, y: clickY}, function (from) {\n-            this.translateWebCoords({x: clickX + xoffset, y: clickY + yoffset}, function (to) {\n-              // speed is not used because underlying UIATarget.flickFromTo doesn't support it\n-              command = [\"au.flick(\", JSON.stringify({from: from, to: to}), \")\"].join('');\n-              this.proxy(command, cb);\n-            }.bind(this));\n-          }.bind(this));\n-        }.bind(this));\n-      }.bind(this));\n-    }.bind(this));\n-  } else {\n-    command = [\"au.getElement('\", elementId, \"').touchFlick(\", xoffset, \",\",\n-      yoffset, \",\", speed, \")\"].join('');\n-    this.proxyWithMinTime(command, FLICK_MS, cb);\n-  }\n-};\n-\n-iOSController.drag = function (startX, startY, endX, endY, duration, touchCount, elId, destElId, cb) {\n-  var command;\n-  if (elId) {\n-    if (this.isWebContext()) {\n-      return cb(new NotYetImplementedError(), null);\n-    }\n-    command = [\"au.getElement('\", elId, \"').drag(\", startX, ',', startY, ',',\n-      endX, ',', endY, ',', duration, ',', touchCount, \")\"].join('');\n-  } else {\n-    command = [\"au.dragApp(\", startX, ',', startY, ',', endX, ',', endY, ',',\n-      duration, \")\"].join('');\n-  }\n-  // wait for device to complete swipe\n-  this.proxy(command, function (err, res) {\n-    setTimeout(function () {\n-      cb(err, res);\n-    }, duration * 1000);\n-  });\n-};\n-\n-iOSController.swipe = function (startX, startY, endX, endY, duration, touchCount, elId, cb) {\n-  this.drag(startX, startY, endX, endY, duration, touchCount, elId, null, cb);\n-};\n-\n-iOSController.rotate = function (x, y, radius, rotation, duration, touchCount, elId, cb) {\n-  var command;\n-  var location = {'x' : x, 'y' : y};\n-  var options = {'duration' : duration, 'radius' : radius, 'rotation' : rotation, 'touchCount' : touchCount};\n-  if (elId) {\n-    if (this.isWebContext()) {\n-      return cb(new NotYetImplementedError(), null);\n-    }\n-    command = \"au.getElement('\" + elId + \"').rotateWithOptions(\" + JSON.stringify(location) +\n-              \",\" + JSON.stringify(options) + \")\";\n-    this.proxy(command, cb);\n-  } else {\n-    this.proxy(\"target.rotateWithOptions(\" + JSON.stringify(location) + \",\" + JSON.stringify(options) + \")\", cb);\n-  }\n-};\n-\n-iOSController.pinchClose = function (startX, startY, endX, endY, duration,\n-    percent, steps, elId, cb) {\n-  var command;\n-  var fromPointObject = {'x' : startX, 'y' : startY};\n-  var toPointObject = {'x' : endX, 'y' : endY};\n-  if (elId) {\n-    command = [\"au.getElement('\", elId, \"').pinchCloseFromToForDuration(\",\n-      JSON.stringify(fromPointObject),  \",\",  JSON.stringify(toPointObject),\n-        \",\", duration, \")\"].join('');\n-    this.proxy(command, cb);\n-  } else {\n-    this.proxy(\"target.pinchCloseFromToForDuration(\" + JSON.stringify(fromPointObject) +\n-      \",\" + JSON.stringify(toPointObject) + \",\" + duration + \")\", cb);\n-  }\n-};\n-\n-iOSController.pinchOpen = function (startX, startY, endX, endY, duration,\n-    percent, steps, elId, cb) {\n-  var command;\n-  var fromPointObject = {'x' : startX, 'y' : startY};\n-  var toPointObject = {'x' : endX, 'y' : endY};\n-  if (elId) {\n-    if (this.isWebContext()) {\n-      return cb(new NotYetImplementedError(), null);\n-    }\n-    command = [\"au.getElement('\", elId, \"').pinchOpenFromToForDuration(\",\n-      JSON.stringify(fromPointObject), \",\", JSON.stringify(toPointObject), \",\",\n-      duration + \")\"].join('');\n-    this.proxy(command, cb);\n-  } else {\n-    this.proxy(\"target.pinchOpenFromToForDuration(\" + JSON.stringify(fromPointObject) +\n-      \",\" + JSON.stringify(toPointObject) + \",\" + duration + \")\", cb);\n-  }\n-};\n-\n-iOSController.flick = function (startX, startY, endX, endY, touchCount, elId,\n-    cb) {\n-  var command;\n-  if (elId) {\n-    if (this.isWebContext()) {\n-      return cb(new NotYetImplementedError(), null);\n-    }\n-    command = [\"au.getElement('\", elId, \"').flick(\", startX, ',', startY, ',',\n-      endX, ',', endY, ',', touchCount, \")\"].join('');\n-  } else {\n-    command = [\"au.flickApp(\", startX, ',', startY, ',', endX, ',', endY,\n-      \")\"].join('');\n-  }\n-  this.proxyWithMinTime(command, FLICK_MS, cb);\n-};\n-\n-iOSController.scrollTo = function (elementId, text, direction, cb) {\n-  if (this.isWebContext()) {\n-    return cb(new NotYetImplementedError(), null);\n-  }\n-  // we ignore text for iOS, as the element is the one being scrolled too\n-  var command = [\"au.getElement('\", elementId, \"').scrollToVisible()\"].join('');\n-  this.proxy(command, cb);\n-};\n-\n-iOSController.scroll = function (elementId, direction, cb) {\n-  direction = direction.charAt(0).toUpperCase() + direction.slice(1);\n-  // By default, scroll the first scrollview.\n-  var command = \"au.scrollFirstView('\" + direction + \"')\";\n-  if (elementId) {\n-    if (this.isWebContext()) {\n-      return cb(new NotYetImplementedError(), null);\n-    }\n-    // if elementId is defined, call scrollLeft, scrollRight, scrollUp, and scrollDown on the element.\n-    command = [\"au.getElement('\", elementId, \"').scroll\", direction, \"()\"].join('');\n-  }\n-  this.proxy(command, cb);\n-};\n-\n-iOSController.shake = function (cb) {\n-  this.proxy(\"au.shake()\", cb);\n-};\n-\n-iOSController.setLocation = function (latitude, longitude, altitude, horizontalAccuracy, verticalAccuracy, course, speed, cb) {\n-  var coordinates = {'latitude' : latitude, 'longitude' : longitude};\n-  var hasOptions = altitude !== null || horizontalAccuracy !== null || verticalAccuracy !== null || course !== null || speed !== null;\n-  if (hasOptions) {\n-    var options = {};\n-    if (altitude !== null) {\n-      options.altitude = altitude;\n-    }\n-    if (horizontalAccuracy !== null) {\n-      options.horizontalAccuracy = horizontalAccuracy;\n-    }\n-    if (verticalAccuracy !== null) {\n-      options.verticalAccuracy = verticalAccuracy;\n-    }\n-    if (course !== null) {\n-      options.course = course;\n-    }\n-    if (speed !== null) {\n-      options.speed = speed;\n-    }\n-    this.proxy(\"target.setLocationWithOptions(\" + JSON.stringify(coordinates) + \",\" +\n-      JSON.stringify(options) + \")\", cb);\n-  } else {\n-    this.proxy(\"target.setLocation(\" + JSON.stringify(coordinates) + \")\", cb);\n-  }\n-};\n-\n-iOSController.hideKeyboard = function (strategy, key, cb) {\n-  this.proxy(\"au.hideKeyboard(\" +\n-    \"'\" + strategy + \"'\" +\n-    (key ? \",'\" + key + \"'\" : \"\") +\n-    \")\",\n-  cb);\n-};\n-\n-iOSController.url = function (url, cb) {\n-  if (this.isWebContext()) {\n-    // make sure to clear out any leftover web frames\n-    this.curWebFrames = [];\n-    this.processingRemoteCmd = true;\n-    this.remote.navToUrl(url, function () {\n-      cb(null, {\n-        status: status.codes.Success.code\n-      , value: ''\n-      });\n-      this.processingRemoteCmd = false;\n-    }.bind(this));\n-  } else {\n-    // in the future, detect whether we have a UIWebView that we can use to\n-    // make sense of this command. For now, and otherwise, it's a no-op\n-    cb(null, {status: status.codes.Success.code, value: ''});\n-  }\n-};\n-\n-iOSController.getUrl = function (cb) {\n-  if (this.isWebContext()) {\n-    this.processingRemoteCmd = true;\n-    this.remote.execute('window.location.href', function (err, res) {\n-      if (err) {\n-        cb(\"Remote debugger error\", {\n-          status: status.codes.JavaScriptError.code\n-        , value: res\n-        });\n-      } else {\n-        cb(null, {\n-          status: status.codes.Success.code\n-        , value: res.result.value\n-        });\n-      }\n-      this.processingRemoteCmd = false;\n-    }.bind(this));\n-  } else {\n-    cb(new NotImplementedError(), null);\n-  }\n-};\n-\n-iOSController.active = function (cb) {\n-  if (this.isWebContext()) {\n-    this.executeAtom('active_element', [], function (err, res) {\n-      cb(err, res);\n-    });\n-  } else {\n-    this.proxy(\"au.getActiveElement()\", cb);\n-  }\n-};\n-\n-iOSController.isWebContext = function () {\n-  return this.curContext !== null && this.curContext !== NATIVE_WIN;\n-};\n-\n-iOSController.webContextIndex = function () {\n-  return this.curContext.replace(WEBVIEW_BASE, \"\") - 1;\n-};\n-\n-iOSController.getCurrentContext = function (cb) {\n-  var err = null, response = null;\n-  if (this.curContext) {\n-    response = {\n-      status: status.codes.Success.code\n-    , value: WEBVIEW_BASE + this.curContext\n-    };\n-  } else {\n-    response = {\n-      status: status.codes.Success.code\n-    , value: 'NATIVE_APP'\n-    };\n-  }\n-  cb(err, response);\n-};\n-\n-iOSController.getContexts = function (cb) {\n-  this.getContextsAndViews(function (err, richCtxs) {\n-    if (err) return cb(err);\n-    var ctxs = _(richCtxs).map(function (richCtx) {\n-      return richCtx.id;\n-    });\n-    cb(null, {\n-      status: status.codes.Success.code\n-    , value: ctxs\n-    });\n-  });\n-};\n-\n-iOSController.setContext = function (name, callback, skipReadyCheck) {\n-  var cb = function (err, res) {\n-    if (!err && res.status === status.codes.Success.code && this.perfLogEnabled) {\n-      logger.debug('Starting performance log on ' + this.curContext);\n-      this.logs.performance = new IOSPerfLog(this.remote);\n-      this.logs.performance.startCapture(function () {\n-        callback(err, res);\n-      });\n-    } else {\n-      callback(err, res);\n-    }\n-  }.bind(this);\n-\n-  logger.debug(\"Attempting to set context to '\" + name + \"'\");\n-  if (name === this.curContext) {\n-    cb(null, {\n-      status: status.codes.Success.code\n-    , value: \"\"\n-    });\n-  } else if (name === NATIVE_WIN || name === null) {\n-    if (this.curContext === null || this.curContext === NATIVE_WIN) {\n-      cb(null, {\n-        status: status.codes.Success.code\n-      , value: \"\"\n-      });\n-    } else {\n-      this.curContext = null;\n-      //TODO: this condition should be changed to check if the webkit protocol is being used.\n-      if (this.args.udid) {\n-        this.remote.disconnect();\n-        this.remote = null;\n-      }\n-      cb(null, {\n-        status: status.codes.Success.code\n-      , value: ''\n-      });\n-    }\n-  } else {\n-    var idx = name.replace(WEBVIEW_BASE, '');\n-    if (idx === WEBVIEW_WIN) {\n-      // allow user to pass in \"WEBVIEW\" without an index\n-      idx = '1';\n-    }\n-    var pickContext = function () {\n-      if (_.contains(this.contexts, idx)) {\n-        var pageIdKey = parseInt(idx, 10);\n-        var next = function () {\n-          this.processingRemoteCmd = true;\n-          if (this.args.udid === null) {\n-            this.remote.selectPage(pageIdKey, function () {\n-              this.curContext = idx;\n-              this.processingRemoteCmd = false;\n-              cb(null, {\n-                status: status.codes.Success.code\n-              , value: ''\n-              });\n-            }.bind(this), skipReadyCheck);\n-          } else {\n-            if (name === this.curContext) {\n-              logger.debug(\"Remote debugger is already connected to window [\" + name + \"]\");\n-              this.processingRemoteCmd = false;\n-              cb(null, {\n-                status: status.codes.Success.code\n-              , value: name\n-              });\n-            } else {\n-              this.remote.disconnect(function () {\n-                this.curContext = idx;\n-                this.remote.connect(idx, function () {\n-                  this.processingRemoteCmd = false;\n-                  cb(null, {\n-                    status: status.codes.Success.code\n-                  , value: name\n-                  });\n-                }.bind(this));\n-              }.bind(this));\n-            }\n-          }\n-        }.bind(this);\n-        next();\n-      } else {\n-        cb(null, {\n-          status: status.codes.NoSuchContext.code\n-        , value: \"Context '\" + name + \"' does not exist\"\n-        });\n-      }\n-    }.bind(this);\n-\n-    // only get contexts if they haven't already been gotten\n-    if (typeof this.contexts === 'undefined') {\n-      this.getContexts(function () {\n-        pickContext();\n-      }.bind(this));\n-    } else {\n-      pickContext();\n-    }\n-  }\n-};\n-\n-iOSController.getWindowHandle = function (cb) {\n-  if (this.isWebContext()) {\n-    var windowHandle = this.curContext;\n-    var response = {\n-      status: status.codes.Success.code\n-    , value: windowHandle\n-    };\n-    cb(null, response);\n-  } else {\n-    cb(new NotImplementedError(), null);\n-  }\n-};\n-\n-iOSController.massagePage = function (page) {\n-  page.id = page.id.toString();\n-  return page;\n-};\n-\n-iOSController.getWindowHandles = function (cb) {\n-  if (!this.isWebContext()) {\n-    return cb(new NotImplementedError(), null);\n-  }\n-\n-  this.listWebFrames(function (err, pageArray) {\n-    if (err) {\n-      return cb(err);\n-    }\n-    this.windowHandleCache = _.map(pageArray, this.massagePage);\n-    var idArray = _.pluck(this.windowHandleCache, 'id');\n-    // since we use this.contexts to manage selecting debugger pages, make\n-    // sure it gets populated even if someone did not use the\n-    // getContexts method\n-    if (!this.contexts) {\n-      this.contexts = idArray;\n-    }\n-    cb(null, {\n-      status: status.codes.Success.code\n-    , value: idArray\n-    });\n-  }.bind(this));\n-};\n-\n-iOSController.setWindow = function (name, cb, skipReadyCheck) {\n-  if (!this.isWebContext()) {\n-    return cb(new NotImplementedError(), null);\n-  }\n-\n-  if (_.contains(_.pluck(this.windowHandleCache, 'id'), name)) {\n-    var pageIdKey = parseInt(name, 10);\n-    var next = function () {\n-      this.processingRemoteCmd = true;\n-      if (this.args.udid === null) {\n-        this.remote.selectPage(pageIdKey, function () {\n-          this.curContext = pageIdKey.toString();\n-          this.curWindowHandle = pageIdKey.toString();\n-          cb(null, {\n-            status: status.codes.Success.code\n-          , value: ''\n-          });\n-          this.processingRemoteCmd = false;\n-        }.bind(this), skipReadyCheck);\n-      } else {\n-        if (name === this.curWindowHandle) {\n-          logger.debug(\"Remote debugger is already connected to window [\" + name + \"]\");\n-          cb(null, {\n-            status: status.codes.Success.code\n-          , value: name\n-          });\n-        } else if (_.contains(_.pluck(this.windowHandleCache, 'id'), name)) {\n-          this.remote.disconnect(function () {\n-            this.curContext = name;\n-            this.curWindowHandle = name;\n-            this.remote.connect(name, function () {\n-              cb(null, {\n-                status: status.codes.Success.code\n-              , value: name\n-              });\n-            });\n-          }.bind(this));\n-        } else {\n-          cb(null, {\n-            status: status.codes.NoSuchWindow.code\n-          , value: null\n-          });\n-        }\n-      }\n-    }.bind(this);\n-    next();\n-  } else {\n-    cb(null, {\n-      status: status.codes.NoSuchWindow.code\n-    , value: null\n-    });\n-  }\n-};\n-\n-iOSController.closeWindow = function (cb) {\n-  if (this.isWebContext()) {\n-    var script = \"return window.open('','_self').close();\";\n-    this.executeAtom('execute_script', [script, []], function (err, res) {\n-      setTimeout(function () {\n-        cb(err, res);\n-      }, 500);\n-    }, true);\n-  } else {\n-    cb(new NotImplementedError(), null);\n-  }\n-};\n-\n-iOSController.setSafariWindow = function (windowId, cb) {\n-  var checkPages = function (_cb) {\n-    this.findElement('name', 'Pages', function (err, res) {\n-      if (this.checkSuccess(err, res, _cb)) {\n-        this.getAttribute(res.value.ELEMENT, 'value', function (err, res) {\n-          if (this.checkSuccess(err, res, _cb)) {\n-            if (res.value === \"\") {\n-              _cb(err, res);\n-            } else {\n-              _cb();\n-            }\n-          }\n-        }.bind(this));\n-      }\n-    }.bind(this));\n-  }.bind(this);\n-\n-  var tapPages = function (_cb) {\n-    this.findElement('name', 'Pages', function (err, res) {\n-      if (this.checkSuccess(err, res, _cb)) {\n-        this.nativeTap(res.value.ELEMENT, function (err, res) {\n-          if (this.checkSuccess(err, res, _cb)) {\n-            _cb();\n-          }\n-        }.bind(this));\n-      }\n-    }.bind(this));\n-  }.bind(this);\n-\n-  var selectPage = function (_cb) {\n-    this.findElement('class name', 'UIAPageIndicator', function (err, res) {\n-      if (this.checkSuccess(err, res, _cb)) {\n-        this.setValue(res.value.ELEMENT, windowId, function (err, res) {\n-          if (this.checkSuccess(err, res, _cb)) {\n-            _cb();\n-          }\n-        }.bind(this));\n-      }\n-    }.bind(this));\n-  }.bind(this);\n-\n-  var doneWithPages = function (_cb) {\n-    this.findElement('name', 'Done', function (err, res) {\n-      if (this.checkSuccess(err, res, _cb)) {\n-        this.nativeTap(res.value.ELEMENT, function (err, res) {\n-          if (this.checkSuccess(err, res, _cb)) {\n-            _cb();\n-          }\n-        }.bind(this));\n-      }\n-    }.bind(this));\n-  }.bind(this);\n-\n-  async.series([checkPages, tapPages, selectPage, doneWithPages],\n-      function (err) { cb(err); });\n-};\n-\n-iOSController.checkSuccess = function (err, res, cb) {\n-  if (typeof res === \"undefined\") {\n-    cb(err, {\n-      status: status.codes.UnknownError.code\n-    , value: \"Did not get valid response from execution. Expected res to \" +\n-               \"be an object and was \" + JSON.stringify(res)\n-    });\n-    return false;\n-  } else if (err || res.status !== status.codes.Success.code) {\n-    cb(err, res);\n-    return false;\n-  }\n-  return true;\n-};\n-\n-iOSController.execute = function (script, args, cb) {\n-  if (this.isWebContext()) {\n-    this.convertElementForAtoms(args, function (err, res) {\n-      if (err) {\n-        cb(null, res);\n-      } else {\n-        this.executeAtom('execute_script', [script, res], cb);\n-      }\n-    }.bind(this));\n-  } else {\n-    this.proxy(script, cb);\n-  }\n-};\n-\n-iOSController.executeAsync = function (script, args, responseUrl, cb) {\n-  if (this.isWebContext()) {\n-    logger.debug(\"Response url for executeAsync is \" + responseUrl);\n-    this.convertElementForAtoms(args, function (err, res) {\n-      if (err) {\n-        cb(null, res);\n-      } else {\n-        this.executeAtomAsync('execute_async_script', [script, args, this.asyncWaitMs], responseUrl, cb);\n-      }\n-    }.bind(this));\n-  } else {\n-    this.proxy(script, cb);\n-  }\n-};\n-\n-iOSController.convertElementForAtoms = deviceCommon.convertElementForAtoms;\n-\n-iOSController.title = function (cb) {\n-  if (this.isWebContext()) {\n-    this.executeAtom('title', [], cb, true);\n-  } else {\n-    cb(new NotImplementedError(), null);\n-  }\n-};\n-\n-iOSController.moveTo = function (element, xoffset, yoffset, cb) {\n-  this.getLocation(element, function (err, res) {\n-    if (err) return cb(err, res);\n-    var coords = {\n-      x: res.value.x + xoffset\n-    , y: res.value.y + yoffset\n-    };\n-    if (this.isWebContext()) {\n-      this.curWebCoords = coords;\n-      this.useAtomsElement(element, cb, function (atomsElement) {\n-        var relCoords = {x: xoffset, y: yoffset};\n-        this.executeAtom('move_mouse', [atomsElement, relCoords], cb);\n-      }.bind(this));\n-    } else {\n-      this.curCoords = coords;\n-      cb(null, {\n-        status: status.codes.Success.code\n-      , value: null\n-      });\n-    }\n-  }.bind(this));\n-};\n-\n-iOSController.equalsWebElement = function (element, other, cb) {\n-  var ctxElem = this.getAtomsElement(element);\n-  var otherElem = this.getAtomsElement(other);\n-  var retStatus = status.codes.Success.code\n-    , retValue = false;\n-\n-  // We assume if it's referencing the same element id, then it's equal\n-  if (ctxElem.ELEMENT === otherElem.ELEMENT) {\n-    retValue = true;\n-    cb(null, {\n-      status: retStatus\n-    , value: retValue\n-    });\n-  } else {\n-    // ...otherwise let the browser tell us.\n-    this.executeAtom('element_equals_element', [ctxElem.ELEMENT, otherElem.ELEMENT], cb);\n-  }\n-};\n-\n-iOSController.getCookies = function (cb) {\n-  if (!this.isWebContext()) {\n-    return cb(new NotImplementedError(), null);\n-  }\n-  var script = \"return document.cookie\";\n-  this.executeAtom('execute_script', [script, []], function (err, res) {\n-    if (this.checkSuccess(err, res, cb)) {\n-      var cookieMan = new CookieMan(res.value);\n-      var cookies = [];\n-      try {\n-        cookies = _(cookieMan.cookies()).map(function (v,k) {\n-          return {name: k, value: v};\n-        });\n-      } catch (e) {\n-        return cb(null, {\n-          status: status.codes.UnknownError.code\n-        , value: \"Error parsing cookies from result, which was \" + res.value\n-        });\n-      }\n-      cb(null, {\n-        status: status.codes.Success.code\n-      , value: cookies\n-      });\n-    }\n-  }.bind(this), true);\n-};\n-\n-iOSController.setCookie = function (cookie, cb) {\n-  if (!this.isWebContext()) {\n-    return cb(new NotImplementedError(), null);\n-  }\n-\n-  cookie = _.clone(cookie);\n-  // if 'Path' field is not specified, Safari will not update cookies as expected; eg issue #1708\n-  if (!cookie.path) {\n-    cookie.path = \"/\";\n-  }\n-  var webCookie = (new CookieMan()).cookie(cookie.name, cookie.value, {\n-    expires: _.isNumber(cookie.expiry) ? (new Date(cookie.expiry * 1000)).toUTCString() :\n-      cookie.expiry, path: cookie.path, domain: cookie.domain,\n-      httpOnly: cookie.httpOnly, secure: cookie.secure});\n-  var script = \"document.cookie = \" + JSON.stringify(webCookie);\n-  this.executeAtom('execute_script', [script, []], function (err, res) {\n-    if (this.checkSuccess(err, res, cb)) {\n-      cb(null, {\n-        status: status.codes.Success.code\n-      , value: true\n-      });\n-    }\n-  }.bind(this), true);\n-};\n-\n-iOSController._deleteCookie = function (cookieName, cb) {\n-  var webCookie = (new CookieMan()).removeCookie(cookieName , {path: \"/\"});\n-  var script = \"document.cookie = \" + JSON.stringify(webCookie);\n-  this.executeAtom('execute_script', [script, []], function (err, res) {\n-    if (this.checkSuccess(err, res, cb)) {\n-      cb(null, {\n-        status: status.codes.Success.code\n-      , value: true\n-      });\n-    }\n-  }.bind(this), true);\n-};\n-\n-\n-iOSController.deleteCookie = function (cookieName, cb) {\n-  if (!this.isWebContext()) {\n-    return cb(new NotImplementedError(), null);\n-  }\n-  // check cookie existence\n-  var script = \"return document.cookie\";\n-  this.executeAtom('execute_script', [script, []], function (err, res) {\n-    if (this.checkSuccess(err, res, cb)) {\n-      var cookieMan = new CookieMan(res.value);\n-      if (_.isUndefined(cookieMan.cookie(cookieName))) {\n-        // nothing to delete\n-        return cb(null, {\n-          status: status.codes.Success.code\n-        , value: true\n-        });\n-      }\n-      // delete cookie\n-      this._deleteCookie(cookieName, cb);\n-    }\n-  }.bind(this), true);\n-};\n-\n-iOSController.deleteCookies = function (cb) {\n-  if (!this.isWebContext()) {\n-    return cb(new NotImplementedError(), null);\n-  }\n-  this.getCookies(function (err, res) {\n-    if (this.checkSuccess(err, res, cb)) {\n-      var numCookies = res.value.length;\n-      var cookies = res.value;\n-      if (numCookies) {\n-        var returned = false;\n-        var deleteNextCookie = function (cookieIndex) {\n-          if (!returned) {\n-            var cookie = cookies[cookieIndex];\n-            this._deleteCookie(cookie.name, function (err, res) {\n-              if (err || res.status !== status.codes.Success.code) {\n-                returned = true;\n-                cb(err, res);\n-              } else if (cookieIndex < cookies.length - 1) {\n-                deleteNextCookie(cookieIndex + 1);\n-              } else {\n-                returned = true;\n-                cb(null, {\n-                  status: status.codes.Success.code\n-                  , value: true\n-                });\n-              }\n-            });\n-          }\n-        }.bind(this);\n-        deleteNextCookie(0);\n-      } else {\n-        cb(null, {\n-          status: status.codes.Success.code\n-          , value: false\n-        });\n-      }\n-    }\n-  }.bind(this));\n-};\n-\n-iOSController.endCoverage = function (intentToBroadcast, ecOnDevicePath, cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-iOSController.getCurrentActivity = function (cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-iOSController.getLogTypes = function (cb) {\n-  return cb(null, {\n-    status: status.codes.Success.code\n-  , value: _.keys(logTypesSupported)\n-  });\n-};\n-\n-iOSController.getLog = function (logType, cb) {\n-  // Check if passed logType is supported\n-  if (!_.has(logTypesSupported, logType)) {\n-    return cb(null, {\n-      status: status.codes.UnknownError.code\n-    , value: \"Unsupported log type '\" + logType + \"' for this device, supported types : \" + JSON.stringify(logTypesSupported)\n-    });\n-  }\n-  var logs;\n-  try {\n-    logs = this.logs[logType].getLogs();\n-  } catch (e) {\n-    return cb(e);\n-  }\n-  // If logs captured successfully send response with data, else send error\n-  if (logs) {\n-    return cb(null, {\n-      status: status.codes.Success.code\n-    , value: logs\n-    });\n-  } else {\n-    return cb(null, {\n-      status: status.codes.UnknownError.code\n-    , value: \"Unknown error while getting logs\"\n-    });\n-  }\n-};\n-\n-iOSController.handleTap = function (gesture, cb) {\n-  var options = gesture.options;\n-  var cmdBase;\n-  if (options.element) {\n-    cmdBase = ['au.getElement(\\'', options.element, '\\')'];\n-  } else {\n-    cmdBase = ['UIATarget.localTarget().frontMostApp()'];\n-  }\n-\n-  // start by getting the size and position of the element we are tapping\n-  var cmd = cmdBase.concat('.rect()').join('');\n-  this.proxy(cmd, function (err, res) {\n-    if (err) return cb(err);\n-\n-    // default to center\n-    var offsetX = 0.5;\n-    var offsetY = 0.5;\n-\n-    // there are times when there is no error but no value is returned\n-    if (res.value) {\n-      var rect = res.value;\n-      var size = {w: rect.size.width, h: rect.size.height};\n-\n-      // default options x/y to center, no matter the container\n-      options.x = (options.x || (size.w / 2));\n-      options.y = (options.y || (size.h / 2));\n-\n-      offsetX = options.x / size.w;\n-      offsetY = options.y / size.h;\n-    }\n-\n-    var opts = {\n-      tapOffset: {\n-        x: offsetX,\n-        y: offsetY\n-      },\n-      tapCount: options.count || 1,\n-      touchCount: 1\n-    };\n-    cmd = cmdBase.concat(['.tapWithOptions(', JSON.stringify(opts), ')']).join('');\n-    return this.proxy(cmd, cb);\n-  }.bind(this));\n-};\n-\n-iOSController.performTouch = function (gestures, cb) {\n-  if (gestures.length === 1 && gestures[0].action === 'tap') {\n-    return this.handleTap(gestures[0], cb);\n-  }\n-  this.parseTouch(gestures, function (err, touchStateObjects) {\n-    if (err !== null) return cb(err);\n-    this.proxy(\"target.touch(\" + JSON.stringify(touchStateObjects) + \")\", cb);\n-  }.bind(this));\n-};\n-\n-iOSController.parseTouch = function (gestures, cb) {\n-  // `release` is automatic in iOS\n-  if (_.last(gestures).action === 'release') {\n-    gestures.pop();\n-  }\n-\n-  var touchStateObjects = [];\n-  var finishParsing = function () {\n-    var prevPos = null;\n-\n-    // we need to change the time (which is now an offset)\n-    // and the position (which may be an offset)\n-    var time = 0;\n-    _.each(touchStateObjects, function (state) {\n-      if (state.touch[0] === false) {\n-        // if we have no position (this happens with `wait`) we need the previous one\n-        state.touch[0] = prevPos;\n-      } else if (state.touch[0].offset && prevPos) {\n-        // the current position is an offset\n-        state.touch[0].x += prevPos.x;\n-        state.touch[0].y += prevPos.y;\n-      }\n-      // prevent wait => press => moveto crash\n-      if (state.touch[0]) {\n-        delete state.touch[0].offset;\n-        prevPos = state.touch[0];\n-      }\n-\n-\n-      var timeOffset = state.timeOffset;\n-      time += timeOffset;\n-      state.time = time;\n-\n-      delete state.timeOffset;\n-    });\n-\n-    cb(null, touchStateObjects);\n-  }.bind(this);\n-\n-  var needsPoint = function (action) {\n-    return _.contains(['press', 'moveTo', 'tap', 'longPress'], action);\n-  };\n-\n-  var cycleThroughGestures = function () {\n-    var gesture = gestures.shift();\n-    if (typeof gesture === \"undefined\") {\n-      return finishParsing();\n-    }\n-    var tapPoint = false;\n-\n-    if (needsPoint(gesture.action)) { // press, longPress, moveTo and tap all need a position\n-      var elementId = gesture.options.element;\n-      if (elementId) {\n-        var command = [\"au.getElement('\", elementId, \"').rect()\"].join('');\n-        this.proxy(command, function (err, res) {\n-          if (err) return cb(err); // short circuit and quit\n-\n-          var rect = res.value;\n-          var pos = {x: rect.origin.x, y: rect.origin.y};\n-          var size = {w: rect.size.width, h: rect.size.height};\n-\n-          if (gesture.options.x || gesture.options.y) {\n-            tapPoint = {\n-              offset: false,\n-              x: pos.x + (gesture.options.x || 0),\n-              y: pos.y + (gesture.options.y || 0)\n-            };\n-          } else {\n-            tapPoint = {\n-              offset: false,\n-              x: pos.x + (size.w / 2),\n-              y: pos.y + (size.h / 2)\n-            };\n-          }\n-\n-          var touchStateObject = {\n-            timeOffset: 0.2,\n-            touch: [\n-              tapPoint\n-            ]\n-          };\n-          touchStateObjects.push(touchStateObject);\n-          cycleThroughGestures();\n-        }.bind(this));\n-      } else {\n-        // iOS expects absolute coordinates, so we need to save these as offsets\n-        // and then translate when everything is done\n-        tapPoint = {\n-          offset: true,\n-          x: (gesture.options.x || 0),\n-          y: (gesture.options.y || 0)\n-        };\n-        touchStateObject = {\n-          timeOffset: 0.2,\n-          touch: [\n-            tapPoint\n-          ]\n-        };\n-        touchStateObjects.push(touchStateObject);\n-        cycleThroughGestures();\n-      }\n-    } else {\n-      // in this case we need the previous entry's tap point\n-      tapPoint = false; // temporary marker\n-      var offset = 0.2;\n-      if (gesture.action === 'wait') {\n-        if (typeof gesture.options.ms !== 'undefined' || gesture.options.ms !== null) {\n-          offset = (parseInt(gesture.options.ms) / 1000);\n-        }\n-      }\n-      var touchStateObject = {\n-        timeOffset: offset,\n-        touch: [\n-          tapPoint\n-        ]\n-      };\n-      touchStateObjects.push(touchStateObject);\n-      cycleThroughGestures();\n-    }\n-  }.bind(this);\n-\n-  cycleThroughGestures();\n-};\n-\n-var mergeStates = function (states) {\n-  var getSlice = function (states, index) {\n-    var array = [];\n-    for (var i = 0; i < states.length; i++) {\n-      array.push(states[i][index]);\n-    }\n-\n-    return array;\n-  };\n-\n-  var timeSequence = function (states) {\n-    var seq = [];\n-    _.each(states, function (state) {\n-      var times = _.pluck(state, \"time\");\n-      seq = _.union(seq, times);\n-    });\n-\n-    return seq.sort();\n-  };\n-\n-  // for now we will just assume that the times line up\n-  var merged = [];\n-  _.each(timeSequence(states), function (time, index) {\n-    var slice = getSlice(states, index);\n-    var obj = {\n-      time: time,\n-      touch: []\n-    };\n-    _.each(slice, function (action) {\n-      obj.touch.push(action.touch[0]);\n-    });\n-    merged.push(obj);\n-  });\n-  return merged;\n-};\n-\n-iOSController.performMultiAction = function (elementId, actions, cb) {\n-  var states = [];\n-  var cycleThroughActions = function () {\n-    var action = actions.shift();\n-    if (typeof action === \"undefined\") {\n-      var mergedStates = mergeStates(states);\n-      return this.proxy(\"target.touch(\" + JSON.stringify(mergedStates) + \")\", cb);\n-    }\n-\n-    this.parseTouch(action, function (err, val) {\n-      if (err) return cb(err); // short-circuit the loop and send the error up\n-      states.push(val);\n-\n-      cycleThroughActions();\n-    }.bind(this));\n-  }.bind(this);\n-  cycleThroughActions();\n-};\n-\n-iOSController.openNotifications = function (cb) {\n-  cb(new NotImplementedError(), null);\n-};\n-\n-iOSController.isIMEActivated = function (cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-iOSController.availableIMEEngines = function (cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-iOSController.getActiveIMEEngine = function (cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-iOSController.activateIMEEngine = function (imeId, cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-iOSController.deactivateIMEEngine = function (cb) {\n-  cb(new NotYetImplementedError(), null);\n-};\n-\n-module.exports = iOSController;"
    },
    {
      "sha": "3408a4c937c58dd16fddd6db00f1ca82b707f15c",
      "filename": "lib/devices/ios/ios-crash-log.js",
      "status": "removed",
      "additions": 0,
      "deletions": 72,
      "changes": 72,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/ios/ios-crash-log.js",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/ios/ios-crash-log.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/ios/ios-crash-log.js?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,72 +0,0 @@\n-\"use strict\";\n-\n-var path = require('path')\n-  , fs = require('fs')\n-  , _ = require('underscore')\n-  , glob = require('glob')\n-  , logger = require('../../server/logger.js').get('appium');\n-\n-// Date-Utils: Polyfills for the Date object\n-require('date-utils');\n-\n-var IosCrashLog = function () {\n-  this.prevLogs = [];\n-\n-  this.logsSinceLastRequest = [];\n-  this.crashDir = path.resolve(process.env.HOME, \"Library\", \"Logs\", \"DiagnosticReports\");\n-};\n-\n-IosCrashLog.prototype.getCrashes = function (cb) {\n-  glob(this.crashDir + \"/*.crash\", function (err, crashFiles) {\n-    if (err) {\n-      var msg = \"There was a problem getting the crash list\";\n-      logger.error(msg);\n-      cb(new Error(msg));\n-    }\n-\n-    cb(null, crashFiles);\n-\n-  }.bind(this));\n-};\n-\n-IosCrashLog.prototype.filesToJSON = function (arr) {\n-  var logs = [];\n-  for (var i = 0; i < arr.length; i++) {\n-    var filename = path.resolve(this.crashDir, arr[i]);\n-    var stat = fs.statSync(filename);\n-    var logObj = {\n-      timestamp: stat.ctime,\n-      level: 'ALL',\n-      message: fs.readFileSync(filename, 'utf8')\n-    };\n-    logs.push(logObj);\n-  }\n-  return logs;\n-};\n-\n-IosCrashLog.prototype.startCapture = function (cb) {\n-  this.getCrashes(function (err, fileList) {\n-    if (err) cb(err);\n-\n-    this.prevLogs = fileList;\n-    cb(null);\n-  }.bind(this));\n-};\n-\n-IosCrashLog.prototype.getLogs = function () {\n-  var crashFiles = glob.sync(this.crashDir + \"/*.crash\");\n-  var diff = _.difference(crashFiles, this.prevLogs, this.logsSinceLastRequest);\n-  this.logsSinceLastRequest = _.union(this.logsSinceLastRequest, diff);\n-\n-  return this.filesToJSON(diff);\n-};\n-\n-IosCrashLog.prototype.getAllLogs = function () {\n-  var crashFiles = glob.sync(this.crashDir + \"/*.crash\");\n-  var logFiles = _.difference(crashFiles, this.prevLogs);\n-  return this.filesToJSON(logFiles);\n-};\n-\n-module.exports = function () {\n-  return new IosCrashLog();\n-};"
    },
    {
      "sha": "3617d06a789bacabdb77e1b17c502adc4511544d",
      "filename": "lib/devices/ios/ios-hybrid.js",
      "status": "removed",
      "additions": 0,
      "deletions": 237,
      "changes": 237,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/ios/ios-hybrid.js",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/ios/ios-hybrid.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/ios/ios-hybrid.js?ref=7ae8f99c7ea75a5af84960f63819580726892b75",
      "patch": "@@ -1,237 +0,0 @@\n-\"use strict\";\n-\n-var logger = require('../../server/logger.js').get('appium')\n-  , _ = require('underscore')\n-  , deviceCommon = require('../common.js')\n-  , rd = require('./remote-debugger.js')\n-  , wkrd = require('./webkit-remote-debugger.js');\n-\n-var iOSHybrid = {};\n-\n-iOSHybrid.closeAlertBeforeTest = function (cb) {\n-  this.proxy(\"au.alertIsPresent()\", function (err, res) {\n-    if (!err && res !== null && typeof res !== \"undefined\" && res.value === true) {\n-      logger.debug(\"Alert present before starting test, let's banish it\");\n-      this.proxy(\"au.dismissAlert()\", function () {\n-        logger.debug(\"Alert banished!\");\n-        cb(null, true);\n-      });\n-    } else {\n-      cb(null, false);\n-    }\n-  }.bind(this));\n-};\n-\n-iOSHybrid.getDebuggerAppKey = function (appDict, bundleId) {\n-  var appKey = null;\n-  if (parseFloat(this.args.platformVersion) >= 8) {\n-    _.each(appDict, function (data, key) {\n-      if (data.bundleId === bundleId) {\n-        appKey = key;\n-      }\n-    });\n-    // now we need to determine if we should pick a proxy for this instead\n-    if (appKey) {\n-      _.each(appDict, function (data, key) {\n-        if (data.isProxy && data.hostId === appKey) {\n-          logger.debug(\"Found separate bundleId \" + data.bundleId + \" \" +\n-            \"acting as proxy for \" + bundleId + \". Going to use its \" +\n-            \"app ID key of \" + key + \" instead\");\n-          appKey = key;\n-        }\n-      });\n-    }\n-  } else {\n-    if (_.has(appDict, bundleId)) {\n-      appKey = bundleId;\n-    }\n-  }\n-  if (appKey === null) {\n-    throw new Error(\"Couldn't get app key from app dict\");\n-  }\n-  return appKey;\n-};\n-\n-iOSHybrid.listWebFrames = function (cb, exitCb) {\n-  var isDone = false;\n-  if (!this.args.bundleId) {\n-    logger.error(\"Can't enter web frame without a bundle ID\");\n-    return cb(new Error(\"Tried to enter web frame without a bundle ID\"));\n-  }\n-  var onDone = function (err, res) {\n-    if (err) return cb(err);\n-    this.processingRemoteCmd = false;\n-    isDone = true;\n-    if (Array.isArray(res) && res.length === 0) {\n-      // we have no web frames, so disconnect from the remote debugger\n-      this.stopRemote();\n-    }\n-    cb(null, res);\n-  }.bind(this);\n-\n-  this.processingRemoteCmd = true;\n-  if (this.remote !== null && this.args.bundleId !== null) {\n-    if (this.args.udid !== null) {\n-      this.remote.pageArrayFromJson(onDone);\n-    } else {\n-      if (this.remoteAppKey === null) {\n-        return cb(new Error(\"remote debug app key must be set\"));\n-      }\n-      this.remote.selectApp(this.remoteAppKey, function (res) {\n-        onDone(null, res);\n-      });\n-    }\n-  } else {\n-    if (this.args.udid !== null) {\n-      this.remote = wkrd.init(exitCb);\n-      this.remote.pageArrayFromJson(onDone);\n-    } else {\n-      this.remote = rd.init(exitCb);\n-      this.remote.configureExtraOpts({\n-        useNewSafari: this.useNewSafari(),\n-        pageLoadMs: this.pageLoadMs\n-      });\n-      this.remote.connect(function (appDict) {\n-        var appKey;\n-        try {\n-          appKey = this.getDebuggerAppKey(appDict, this.args.bundleId);\n-        } catch (e) {\n-          logger.warn(\"Remote debugger did not list \" + this.args.bundleId +\n-                      \" among its available apps\");\n-          try {\n-            appKey = this.getDebuggerAppKey(appDict, \"com.apple.mobilesafari\");\n-            logger.debug(\"Using mobile safari instead\");\n-          } catch (e) {\n-            return onDone(null, []);\n-          }\n-        }\n-        logger.debug(\"Using remote debugger app key: \" + appKey);\n-        this.remoteAppKey = appKey;\n-        this.remote.selectApp(appKey, function (res) {\n-          onDone(null, res);\n-        });\n-      }.bind(this), this.onPageChange.bind(this));\n-      var loopCloseRuns = 0;\n-      var loopClose = function () {\n-        loopCloseRuns++;\n-        if (!isDone && loopCloseRuns < 3) {\n-          this.closeAlertBeforeTest(function (err, didDismiss) {\n-            if (!didDismiss) {\n-              setTimeout(loopClose, 1000);\n-            }\n-          });\n-        }\n-      }.bind(this);\n-      setTimeout(loopClose, 4000);\n-    }\n-  }\n-};\n-\n-iOSHybrid.onPageChange = function (pageArray) {\n-  logger.debug(\"Remote debugger notified us of a new page listing\");\n-  if (this.selectingNewPage) {\n-    logger.debug(\"We're in the middle of selecting a page, ignoring\");\n-    return;\n-  }\n-  var newIds = []\n-    , keyId = null;\n-  _.each(pageArray, function (page) {\n-    newIds.push(page.id.toString());\n-    if (page.isKey) {\n-      keyId = page.id.toString();\n-    }\n-  });\n-  var newPages = [];\n-  _.each(newIds, function (id) {\n-    if (!_.contains(this.contexts, id)) {\n-      newPages.push(id);\n-      this.contexts.push(id);\n-    }\n-  }.bind(this));\n-  var newPage = null;\n-  if (this.curContext === null) {\n-    logger.debug(\"We don't appear to have window set yet, ignoring\");\n-  } else if (newPages.length) {\n-    logger.debug(\"We have new pages, going to select page \" + newPages[0]);\n-    newPage = newPages[0];\n-  } else if (!_.contains(newIds, this.curContext.toString())) {\n-    logger.debug(\"New page listing from remote debugger doesn't contain \" +\n-                 \"current window, let's assume it's closed\");\n-    if (keyId !== null) {\n-      logger.debug(\"Debugger already selected page \" + keyId + \", \" +\n-                  \"confirming that choice.\");\n-    } else {\n-      logger.error(\"Don't have our current window anymore, and there \" +\n-                   \"aren't any more to load! Doing nothing...\");\n-    }\n-    this.curContext = keyId;\n-    this.remote.pageIdKey = parseInt(keyId, 10);\n-  } else {\n-    var dirty = function () {\n-      var item = function (arr) {\n-        return _.filter(arr, function (obj) {\n-          return obj.id === this.curContext;\n-        }, this)[0];\n-      }.bind(this);\n-\n-      return !_.isEqual(item(this.contexts), item(pageArray));\n-    }.bind(this);\n-\n-    // If a window gets navigated to an anchor it doesn't always fire a page callback event\n-    // Let's check if we wound up in such a situation.\n-    if (dirty()) {\n-      this.remote.pageLoad();\n-    }\n-\n-    logger.debug(\"New page listing is same as old, doing nothing\");\n-  }\n-\n-  if (newPage !== null) {\n-    this.selectingNewPage = true;\n-    this.remote.selectPage(parseInt(newPage, 10), function () {\n-      this.selectingNewPage = false;\n-      this.curContext = newPage;\n-      if (this.onPageChangeCb !== null) {\n-        this.onPageChangeCb();\n-        this.onPageChangeCb = null;\n-      }\n-    }.bind(this));\n-  } else if (this.onPageChangeCb !== null) {\n-    this.onPageChangeCb();\n-    this.onPageChangeCb = null;\n-  }\n-  this.windowHandleCache = _.map(pageArray, this.massagePage);\n-};\n-\n-iOSHybrid.getAtomsElement = deviceCommon.getAtomsElement;\n-\n-iOSHybrid.stopRemote = function (closeWindowBeforeDisconnecting) {\n-  if (typeof closeWindowBeforeDisconnecting === \"undefined\") {\n-    closeWindowBeforeDisconnecting = false;\n-  }\n-  if (!this.remote) {\n-    logger.error(\"We don't appear to be in a web frame\");\n-    throw new Error(\"Tried to leave a web frame but weren't in one\");\n-  } else {\n-    var disconnect = function () {\n-      if (this.args.udid) {\n-        this.remote.disconnect(function () {});\n-      } else {\n-        this.remote.disconnect();\n-      }\n-      this.curContext = null;\n-      this.remoteAppKey = null;\n-      this.curWebFrames = [];\n-      this.curWebCoords = null;\n-      this.remote = null;\n-    }.bind(this);\n-\n-    if (closeWindowBeforeDisconnecting) {\n-      this.closeWindow(disconnect);\n-    } else {\n-      disconnect();\n-    }\n-  }\n-};\n-\n-module.exports = iOSHybrid;"
    },
    {
      "sha": "9c6c765764277d269a2430bad7c6e7509fc82601",
      "filename": "lib/devices/ios/ios-log.js",
      "status": "removed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/ios/ios-log.js",
      "raw_url": "https://github.com/appium/appium/raw/7ae8f99c7ea75a5af84960f63819580726892b75/lib/devices/ios/ios-log.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/ios/ios-log.js?ref=7ae8f99c7ea75a5af84960f63819580726892b75"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "lib/devices/ios/ios-perf-log.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/devices/ios/ios-perf-log.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/devices/ios/ios-perf-log.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/ios/ios-perf-log.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "lib/devices/ios/ios.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/devices/ios/ios.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/devices/ios/ios.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/ios/ios.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "lib/devices/ios/remote-debugger.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/devices/ios/remote-debugger.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/devices/ios/remote-debugger.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/ios/remote-debugger.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "lib/devices/ios/remote-messages.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/devices/ios/remote-messages.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/devices/ios/remote-messages.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/ios/remote-messages.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "lib/devices/ios/safari.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/devices/ios/safari.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/devices/ios/safari.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/ios/safari.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "lib/devices/ios/settings.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/devices/ios/settings.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/devices/ios/settings.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/ios/settings.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "lib/devices/ios/simulator.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/devices/ios/simulator.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/devices/ios/simulator.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/ios/simulator.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "lib/devices/ios/uiauto.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/devices/ios/uiauto.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/devices/ios/uiauto.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/ios/uiauto.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "lib/devices/ios/webkit-remote-debugger.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/devices/ios/webkit-remote-debugger.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/devices/ios/webkit-remote-debugger.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/devices/ios/webkit-remote-debugger.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "lib/doctor/android.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/doctor/android.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/doctor/android.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/doctor/android.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "lib/doctor/common.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/doctor/common.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/doctor/common.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/doctor/common.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "lib/doctor/dev.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/doctor/dev.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/doctor/dev.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/doctor/dev.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "lib/doctor/ios.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/doctor/ios.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/doctor/ios.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/doctor/ios.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "lib/future.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/future.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/future.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/future.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "275b5f19a67e7d7591e09f4323c7c15c34653a01",
      "filename": "lib/grid-register.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/grid-register.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/grid-register.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/grid-register.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "9015cf4b59717e9563b64bebb2337e5f4de5b27f",
      "filename": "lib/helpers.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/helpers.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/helpers.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/helpers.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0cada23ca404a9b9947b1b94b8bca94128397ed3",
      "filename": "lib/logger.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/logger.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/logger.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/logger.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "eafc89c2347dcb02c40134366eb81fbb095cbc08",
      "filename": "lib/logsink.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/logsink.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/logsink.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/logsink.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "e38e680397151137a55d669f5eb0c378bed810f3",
      "filename": "lib/main.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/main.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/main.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/main.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "26e3b9573cc88336fed363d68c54ca442e6d1e73",
      "filename": "lib/parser.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/parser.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/parser.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/parser.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "lib/server/capabilities.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/capabilities.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/capabilities.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/server/capabilities.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "lib/server/controller.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/controller.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/controller.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/server/controller.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "lib/server/errors.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/errors.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/errors.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/server/errors.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "lib/server/grid-register.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/grid-register.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/grid-register.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/server/grid-register.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "lib/server/helpers.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/helpers.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/helpers.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/server/helpers.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "lib/server/logger.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/logger.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/logger.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/server/logger.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "lib/server/main.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/main.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/main.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/server/main.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "lib/server/middleware.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/middleware.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/middleware.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/server/middleware.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "lib/server/parser.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/parser.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/parser.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/server/parser.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "lib/server/proxy.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/proxy.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/proxy.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/server/proxy.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "lib/server/responses.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/responses.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/responses.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/server/responses.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "lib/server/routing.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/routing.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/routing.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/server/routing.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "lib/server/static/favicon.ico",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/static/favicon.ico",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/static/favicon.ico",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/server/static/favicon.ico?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "lib/server/static/js/jquery.min.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/static/js/jquery.min.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/static/js/jquery.min.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/server/static/js/jquery.min.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "lib/server/static/test.jpeg",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/static/test.jpeg",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/static/test.jpeg",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/server/static/test.jpeg?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "lib/server/static/test/frameset.html",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/static/test/frameset.html",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/static/test/frameset.html",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/server/static/test/frameset.html?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "lib/server/static/test/guinea-pig2.html",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/static/test/guinea-pig2.html",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/static/test/guinea-pig2.html",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/server/static/test/guinea-pig2.html?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "lib/server/static/test/iframes.html",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/static/test/iframes.html",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/static/test/iframes.html",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/server/static/test/iframes.html?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "lib/server/static/test/subframe1.html",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/static/test/subframe1.html",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/static/test/subframe1.html",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/server/static/test/subframe1.html?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "lib/server/static/test/subframe2.html",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/static/test/subframe2.html",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/static/test/subframe2.html",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/server/static/test/subframe2.html?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "lib/server/static/test/subframe3.html",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/static/test/subframe3.html",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/static/test/subframe3.html",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/server/static/test/subframe3.html?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "lib/server/static/test/touch.html",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/static/test/touch.html",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/static/test/touch.html",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/server/static/test/touch.html?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "lib/server/status.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/status.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/status.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/server/status.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "lib/server/templates/guinea-pig.html",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/templates/guinea-pig.html",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/templates/guinea-pig.html",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/server/templates/guinea-pig.html?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "lib/server/templates/welcome.html",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/templates/welcome.html",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/server/templates/welcome.html",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/server/templates/welcome.html?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "lib/xpath.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/lib/xpath.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/lib/xpath.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/lib/xpath.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "405f5fd05d7024b1cfbaa5adb26cfce7a8a42443",
      "filename": "npm-shrinkwrap.json",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/npm-shrinkwrap.json",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/npm-shrinkwrap.json",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/npm-shrinkwrap.json?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "82eeaceab44d32e0679293d4f74fefcf9f7fe043",
      "filename": "package.json",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/package.json",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/package.json",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/package.json?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "21471e3bab268a07139a00d6a8eb08ef41ef20f3",
      "filename": "packweb.json",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/packweb.json",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/packweb.json",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/packweb.json?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "reset.bat",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/reset.bat",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/reset.bat",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/reset.bat?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "reset.sh",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/reset.sh",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/reset.sh",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/reset.sh?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "submodules/ApiDemos",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": null,
      "raw_url": null,
      "contents_url": "https://api.github.com/repos/appium/appium/contents/submodules/ApiDemos?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "submodules/SafariLauncher",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": null,
      "raw_url": null,
      "contents_url": "https://api.github.com/repos/appium/appium/contents/submodules/SafariLauncher?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "submodules/appium-adb",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": null,
      "raw_url": null,
      "contents_url": "https://api.github.com/repos/appium/appium/contents/submodules/appium-adb?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "submodules/appium-atoms",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": null,
      "raw_url": null,
      "contents_url": "https://api.github.com/repos/appium/appium/contents/submodules/appium-atoms?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "submodules/appium-ci-gulper",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": null,
      "raw_url": null,
      "contents_url": "https://api.github.com/repos/appium/appium/contents/submodules/appium-ci-gulper?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "submodules/appium-instruments",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": null,
      "raw_url": null,
      "contents_url": "https://api.github.com/repos/appium/appium/contents/submodules/appium-instruments?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "submodules/appium-uiauto",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": null,
      "raw_url": null,
      "contents_url": "https://api.github.com/repos/appium/appium/contents/submodules/appium-uiauto?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "submodules/appium.io",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": null,
      "raw_url": null,
      "contents_url": "https://api.github.com/repos/appium/appium/contents/submodules/appium.io?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "submodules/deviceconsole",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": null,
      "raw_url": null,
      "contents_url": "https://api.github.com/repos/appium/appium/contents/submodules/deviceconsole?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "submodules/instruments-without-delay",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": null,
      "raw_url": null,
      "contents_url": "https://api.github.com/repos/appium/appium/contents/submodules/instruments-without-delay?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "submodules/io.appium.android.ime",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": null,
      "raw_url": null,
      "contents_url": "https://api.github.com/repos/appium/appium/contents/submodules/io.appium.android.ime?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "submodules/io.appium.gappium.sampleapp",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": null,
      "raw_url": null,
      "contents_url": "https://api.github.com/repos/appium/appium/contents/submodules/io.appium.gappium.sampleapp?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "submodules/io.appium.settings",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": null,
      "raw_url": null,
      "contents_url": "https://api.github.com/repos/appium/appium/contents/submodules/io.appium.settings?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "submodules/libimobiledevice-macosx",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": null,
      "raw_url": null,
      "contents_url": "https://api.github.com/repos/appium/appium/contents/submodules/libimobiledevice-macosx?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "submodules/sample-code",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": null,
      "raw_url": null,
      "contents_url": "https://api.github.com/repos/appium/appium/contents/submodules/sample-code?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "submodules/selendroid",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": null,
      "raw_url": null,
      "contents_url": "https://api.github.com/repos/appium/appium/contents/submodules/selendroid?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "submodules/unlock_apk",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": null,
      "raw_url": null,
      "contents_url": "https://api.github.com/repos/appium/appium/contents/submodules/unlock_apk?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "5602f17dab0a46415011c28cd07e3336ebf306f6",
      "filename": "test/.jshintrc",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/.jshintrc",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/.jshintrc",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/.jshintrc?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "test/README.md",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/README.md",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/README.md",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/README.md?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "25c096760df8122366c793ef861ce70b8630dedc",
      "filename": "test/config-specs.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/config-specs.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/config-specs.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/config-specs.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0b94fc6b11ca772a7e5fbf65a2946c9978d46cf4",
      "filename": "test/driver-e2e-specs.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/driver-e2e-specs.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/driver-e2e-specs.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/driver-e2e-specs.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "d4810dba38b94386338712813d0f255c4383d25d",
      "filename": "test/driver-specs.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/driver-specs.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/driver-specs.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/driver-specs.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "test/fixtures/localization_tests/StubApp.app/en.lproj/InfoPlist.strings",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/fixtures/localization_tests/StubApp.app/en.lproj/InfoPlist.strings",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/fixtures/localization_tests/StubApp.app/en.lproj/InfoPlist.strings",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/fixtures/localization_tests/StubApp.app/en.lproj/InfoPlist.strings?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "test/fixtures/localization_tests/StubApp.app/en.lproj/Localizable.strings",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/fixtures/localization_tests/StubApp.app/en.lproj/Localizable.strings",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/fixtures/localization_tests/StubApp.app/en.lproj/Localizable.strings",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/fixtures/localization_tests/StubApp.app/en.lproj/Localizable.strings?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "test/fixtures/localization_tests/StubApp.app/en.lproj/custom.strings",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/fixtures/localization_tests/StubApp.app/en.lproj/custom.strings",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/fixtures/localization_tests/StubApp.app/en.lproj/custom.strings",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/fixtures/localization_tests/StubApp.app/en.lproj/custom.strings?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "test/functional/android/actual-capabilities-specs.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/actual-capabilities-specs.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/actual-capabilities-specs.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/functional/android/actual-capabilities-specs.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "test/functional/android/apidemos/alerts-specs.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/alerts-specs.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/alerts-specs.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/functional/android/apidemos/alerts-specs.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "test/functional/android/apidemos/attributes-specs.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/attributes-specs.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/attributes-specs.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/functional/android/apidemos/attributes-specs.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "test/functional/android/apidemos/basic-specs.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/basic-specs.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/basic-specs.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/functional/android/apidemos/basic-specs.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "test/functional/android/apidemos/clear-specs.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/clear-specs.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/clear-specs.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/functional/android/apidemos/clear-specs.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "test/functional/android/apidemos/desired.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/desired.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/desired.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/functional/android/apidemos/desired.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "test/functional/android/apidemos/file-movement-specs.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/file-movement-specs.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/file-movement-specs.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/functional/android/apidemos/file-movement-specs.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "test/functional/android/apidemos/find/basics-specs.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/find/basics-specs.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/find/basics-specs.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/functional/android/apidemos/find/basics-specs.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "test/functional/android/apidemos/find/by-accessibility-id-specs.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/find/by-accessibility-id-specs.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/find/by-accessibility-id-specs.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/functional/android/apidemos/find/by-accessibility-id-specs.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "test/functional/android/apidemos/find/by-uiautomator-specs.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/find/by-uiautomator-specs.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/find/by-uiautomator-specs.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/functional/android/apidemos/find/by-uiautomator-specs.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "test/functional/android/apidemos/find/by-xpath-specs.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/find/by-xpath-specs.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/find/by-xpath-specs.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/functional/android/apidemos/find/by-xpath-specs.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "test/functional/android/apidemos/find/from-el-specs.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/find/from-el-specs.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/find/from-el-specs.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/functional/android/apidemos/find/from-el-specs.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "test/functional/android/apidemos/find/invalid-strategy-specs.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/find/invalid-strategy-specs.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/find/invalid-strategy-specs.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/functional/android/apidemos/find/invalid-strategy-specs.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "test/functional/android/apidemos/gestures/click-specs.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/gestures/click-specs.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/gestures/click-specs.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/functional/android/apidemos/gestures/click-specs.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "test/functional/android/apidemos/gestures/drag-specs.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/gestures/drag-specs.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/gestures/drag-specs.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/functional/android/apidemos/gestures/drag-specs.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "test/functional/android/apidemos/gestures/execute-specs.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/gestures/execute-specs.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/gestures/execute-specs.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/functional/android/apidemos/gestures/execute-specs.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "test/functional/android/apidemos/gestures/flick-specs.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/gestures/flick-specs.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/gestures/flick-specs.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/functional/android/apidemos/gestures/flick-specs.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "test/functional/android/apidemos/gestures/long-click-specs.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/gestures/long-click-specs.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/gestures/long-click-specs.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/functional/android/apidemos/gestures/long-click-specs.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "test/functional/android/apidemos/gestures/pinch-specs.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/gestures/pinch-specs.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/gestures/pinch-specs.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/functional/android/apidemos/gestures/pinch-specs.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "test/functional/android/apidemos/gestures/scroll-specs.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/gestures/scroll-specs.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/gestures/scroll-specs.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/functional/android/apidemos/gestures/scroll-specs.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "test/functional/android/apidemos/ime-specs.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/ime-specs.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/ime-specs.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/functional/android/apidemos/ime-specs.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "test/functional/android/apidemos/keyboard-specs.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/keyboard-specs.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/keyboard-specs.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/functional/android/apidemos/keyboard-specs.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "test/functional/android/apidemos/localization/language-specs.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/localization/language-specs.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/localization/language-specs.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/functional/android/apidemos/localization/language-specs.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "test/functional/android/apidemos/localization/locale-specs.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/localization/locale-specs.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/localization/locale-specs.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/functional/android/apidemos/localization/locale-specs.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "test/functional/android/apidemos/lock-specs.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/lock-specs.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/lock-specs.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/functional/android/apidemos/lock-specs.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "test/functional/android/apidemos/notifications-specs.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/notifications-specs.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/notifications-specs.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/functional/android/apidemos/notifications-specs.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "test/functional/android/apidemos/orientation-specs.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/orientation-specs.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/orientation-specs.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/functional/android/apidemos/orientation-specs.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "test/functional/android/apidemos/reset.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/reset.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/reset.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/functional/android/apidemos/reset.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "test/functional/android/apidemos/screenshot-specs.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/screenshot-specs.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/screenshot-specs.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/functional/android/apidemos/screenshot-specs.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "test/functional/android/apidemos/source-specs.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/source-specs.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/source-specs.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/functional/android/apidemos/source-specs.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "test/functional/android/apidemos/touch/drag-specs.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/touch/drag-specs.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/touch/drag-specs.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/functional/android/apidemos/touch/drag-specs.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "test/functional/android/apidemos/touch/multi-actions-specs.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/touch/multi-actions-specs.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/touch/multi-actions-specs.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/functional/android/apidemos/touch/multi-actions-specs.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "test/functional/android/apidemos/touch/multi-actions-with-wait-specs.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/touch/multi-actions-with-wait-specs.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/touch/multi-actions-with-wait-specs.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/functional/android/apidemos/touch/multi-actions-with-wait-specs.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "test/functional/android/apidemos/touch/press-specs.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/touch/press-specs.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/touch/press-specs.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/functional/android/apidemos/touch/press-specs.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "test/functional/android/apidemos/touch/swipe-specs.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/touch/swipe-specs.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/touch/swipe-specs.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/functional/android/apidemos/touch/swipe-specs.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "test/functional/android/apidemos/touch/tap-specs.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/touch/tap-specs.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/apidemos/touch/tap-specs.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/functional/android/apidemos/touch/tap-specs.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "test/functional/android/app-path-base.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/app-path-base.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/app-path-base.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/functional/android/app-path-base.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "test/functional/android/chrome/chrome-specs.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/chrome/chrome-specs.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/chrome/chrome-specs.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/functional/android/chrome/chrome-specs.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "test/functional/android/chrome/desired.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/chrome/desired.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/chrome/desired.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/functional/android/chrome/desired.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    },
    {
      "sha": "0000000000000000000000000000000000000000",
      "filename": "test/functional/android/chrome/session-override-specs.js",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/appium/appium/blob/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/chrome/session-override-specs.js",
      "raw_url": "https://github.com/appium/appium/raw/93004e134878b75c03ff78a6b7041a1f846d0429/test/functional/android/chrome/session-override-specs.js",
      "contents_url": "https://api.github.com/repos/appium/appium/contents/test/functional/android/chrome/session-override-specs.js?ref=93004e134878b75c03ff78a6b7041a1f846d0429"
    }
  ]
}
